ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyFlash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysFlashWriteRow,"ax",%progbits
  18              		.align	2
  19              		.global	CySysFlashWriteRow
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysFlashWriteRow, %function
  23              	CySysFlashWriteRow:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\CyFlash.c"
   1:Generated_Source\PSoC4/CyFlash.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyFlash.c **** * \file CyFlash.c
   3:Generated_Source\PSoC4/CyFlash.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyFlash.c **** *
   5:Generated_Source\PSoC4/CyFlash.c **** * \brief Provides an API for the FLASH.
   6:Generated_Source\PSoC4/CyFlash.c **** *
   7:Generated_Source\PSoC4/CyFlash.c **** * \note This code is endian agnostic.
   8:Generated_Source\PSoC4/CyFlash.c **** *
   9:Generated_Source\PSoC4/CyFlash.c **** * \note Documentation of the API's in this file is located in the System
  10:Generated_Source\PSoC4/CyFlash.c **** * Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/CyFlash.c **** *
  12:Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CyFlash.c **** * \copyright
  14:Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyFlash.c **** 
  20:Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/CyFlash.c **** 
  22:Generated_Source\PSoC4/CyFlash.c **** 
  23:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/CyFlash.c **** * Cypress identified a defect with the Flash write functionality of the
  25:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4000, PSoC 4100, and PSoC 4200 devices. The CySysFlashWriteRow() function
  26:Generated_Source\PSoC4/CyFlash.c **** * now checks the data to be written and, if necessary, modifies it to have a
  27:Generated_Source\PSoC4/CyFlash.c **** * non-zero checksum. After writing to Flash, the modified data is replaced
  28:Generated_Source\PSoC4/CyFlash.c **** * (Flash program) with the correct (original) data.
  29:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  30:Generated_Source\PSoC4/CyFlash.c **** #define CY_FLASH_CHECKSUM_WORKAROUND    (CY_PSOC4_4000 || CY_PSOC4_4100 || CY_PSOC4_4200)
  31:Generated_Source\PSoC4/CyFlash.c **** 
  32:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_4000)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 2


  33:Generated_Source\PSoC4/CyFlash.c ****     static CY_SYS_FLASH_CLOCK_BACKUP_STRUCT cySysFlashBackup;
  34:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_400
  35:Generated_Source\PSoC4/CyFlash.c **** 
  36:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void);
  37:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void);
  38:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
  39:Generated_Source\PSoC4/CyFlash.c ****     static cystatus CySysFlashClockConfig(void);
  40:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
  41:Generated_Source\PSoC4/CyFlash.c **** 
  42:Generated_Source\PSoC4/CyFlash.c **** 
  43:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  44:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  45:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
  46:Generated_Source\PSoC4/CyFlash.c **** *
  47:Generated_Source\PSoC4/CyFlash.c **** * Erases a row of Flash and programs it with the new data.
  48:Generated_Source\PSoC4/CyFlash.c **** *
  49:Generated_Source\PSoC4/CyFlash.c **** * The IMO must be enabled before calling this function. The operation of the
  50:Generated_Source\PSoC4/CyFlash.c **** * flash writing hardware is dependent on the IMO.
  51:Generated_Source\PSoC4/CyFlash.c **** *
  52:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000, PSoC 4100 BLE and PSoC 4200 BLE devices (PSoC 4100 BLE and
  53:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200 BLE devices with 256K of Flash memory are not affected), this API
  54:Generated_Source\PSoC4/CyFlash.c **** * will automatically modify the clock settings for the device. Writing to
  55:Generated_Source\PSoC4/CyFlash.c **** * flash requires that changes be made to the IMO and HFCLK settings. The
  56:Generated_Source\PSoC4/CyFlash.c **** * configuration is restored before returning. This will impact the operation
  57:Generated_Source\PSoC4/CyFlash.c **** * of most of the hardware in the device.
  58:Generated_Source\PSoC4/CyFlash.c **** *
  59:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000 devices this API will automatically modify the clock settings
  60:Generated_Source\PSoC4/CyFlash.c **** * for the device. Writing to flash requires that changes be made to the IMO
  61:Generated_Source\PSoC4/CyFlash.c **** * and HFCLK settings. The configuration is restored before returning. HFCLK
  62:Generated_Source\PSoC4/CyFlash.c **** * will have several frequency changes during the operation of this API between
  63:Generated_Source\PSoC4/CyFlash.c **** * a minimum frequency of the current IMO frequency divided by 8 and a maximum
  64:Generated_Source\PSoC4/CyFlash.c **** * frequency of 12 MHz. This will impact the operation of most of the hardware
  65:Generated_Source\PSoC4/CyFlash.c **** * in the device.
  66:Generated_Source\PSoC4/CyFlash.c **** *
  67:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
  68:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
  69:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
  70:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
  71:Generated_Source\PSoC4/CyFlash.c **** *
  72:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
  73:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
  74:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
  75:Generated_Source\PSoC4/CyFlash.c **** * details.
  76:Generated_Source\PSoC4/CyFlash.c **** *
  77:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
  78:Generated_Source\PSoC4/CyFlash.c **** *
  79:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  80:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  81:Generated_Source\PSoC4/CyFlash.c **** {
  26              		.loc 1 81 0
  27              		.cfi_startproc
  28              	.LVL0:
  82:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  29              		.loc 1 82 0
  30 0000 0023     		mov	r3, #0
  81:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  31              		.loc 1 81 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 3


  32 0002 30B5     		push	{r4, r5, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0004 A5B0     		sub	sp, sp, #148
  38              		.cfi_def_cfa_offset 160
  39              		.loc 1 82 0
  40 0006 0093     		str	r3, [sp]
  83:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
  41              		.loc 1 83 0
  42 0008 0193     		str	r3, [sp, #4]
  84:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
  85:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  86:Generated_Source\PSoC4/CyFlash.c **** 
  87:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_FLASH_CHECKSUM_WORKAROUND)
  88:Generated_Source\PSoC4/CyFlash.c ****         uint32 needChecksumWorkaround = 0u;
  89:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedIndex = 0u;
  90:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedValue = 0u;
  91:Generated_Source\PSoC4/CyFlash.c ****         uint32 checksum = 0u;
  92:Generated_Source\PSoC4/CyFlash.c ****         uint32 bits = 0u;
  93:Generated_Source\PSoC4/CyFlash.c ****         uint32 i;
  94:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
  95:Generated_Source\PSoC4/CyFlash.c **** 
  96:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  43              		.loc 1 96 0
  44 000a 2F4B     		ldr	r3, .L20
  45 000c 9842     		cmp	r0, r3
  46 000e 45D8     		bhi	.L2
  47              		.loc 1 96 0 is_stmt 0 discriminator 1
  48 0010 0029     		cmp	r1, #0
  49 0012 43D0     		beq	.L2
  50 0014 041C     		mov	r4, r0
  97:Generated_Source\PSoC4/CyFlash.c ****     {
  98:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
  99:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
  51              		.loc 1 99 0 is_stmt 1
  52 0016 8022     		mov	r2, #128
  53 0018 04A8     		add	r0, sp, #16
  54              	.LVL1:
  55 001a FFF7FEFF 		bl	memcpy
  56              	.LVL2:
 100:Generated_Source\PSoC4/CyFlash.c **** 
 101:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_FLASH_CHECKSUM_WORKAROUND)
 102:Generated_Source\PSoC4/CyFlash.c **** 
 103:Generated_Source\PSoC4/CyFlash.c ****             for (i = 2u; i < ((CY_FLASH_SIZEOF_ROW / sizeof(uint32)) + 2u); i++)
 104:Generated_Source\PSoC4/CyFlash.c ****             {
 105:Generated_Source\PSoC4/CyFlash.c ****                 uint32 tmp = parameters[i];
 106:Generated_Source\PSoC4/CyFlash.c ****                 if (tmp != 0u)
 107:Generated_Source\PSoC4/CyFlash.c ****                 {
 108:Generated_Source\PSoC4/CyFlash.c ****                     checksum += tmp;
 109:Generated_Source\PSoC4/CyFlash.c ****                     bits |= tmp;
 110:Generated_Source\PSoC4/CyFlash.c ****                     savedIndex = i;
 111:Generated_Source\PSoC4/CyFlash.c ****                 }
 112:Generated_Source\PSoC4/CyFlash.c ****             }
 113:Generated_Source\PSoC4/CyFlash.c **** 
 114:Generated_Source\PSoC4/CyFlash.c ****             needChecksumWorkaround = ((checksum == 0u) && (bits != 0u)) ? 1u : 0u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 4


 115:Generated_Source\PSoC4/CyFlash.c ****             if (needChecksumWorkaround != 0u)
 116:Generated_Source\PSoC4/CyFlash.c ****             {
 117:Generated_Source\PSoC4/CyFlash.c ****                 savedValue = parameters[savedIndex];
 118:Generated_Source\PSoC4/CyFlash.c ****                 parameters[savedIndex] = 0u;
 119:Generated_Source\PSoC4/CyFlash.c ****             }
 120:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 121:Generated_Source\PSoC4/CyFlash.c **** 
 122:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 123:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 124:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 125:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
  57              		.loc 1 125 0
  58 001e 2B4B     		ldr	r3, .L20+4
  59 0020 9C42     		cmp	r4, r3
  60 0022 40D8     		bhi	.L11
  61 0024 2A4B     		ldr	r3, .L20+8
  62              	.L3:
 123:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
  63              		.loc 1 123 0
  64 0026 0293     		str	r3, [sp, #8]
 126:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 127:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
  65              		.loc 1 127 0
  66 0028 7F23     		mov	r3, #127
  67 002a 0393     		str	r3, [sp, #12]
 128:Generated_Source\PSoC4/CyFlash.c **** 
 129:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
  68              		.loc 1 129 0
  69 002c 294B     		ldr	r3, .L20+12
  70 002e 02AA     		add	r2, sp, #8
  71 0030 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
  72              		.loc 1 130 0
  73 0032 2949     		ldr	r1, .L20+16
  74 0034 294A     		ldr	r2, .L20+20
  75 0036 1160     		str	r1, [r2]
 131:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
  76              		.loc 1 131 0
  77              	@ 131 "Generated_Source\PSoC4\CyFlash.c" 1
  78 0038 C046     		NOP
  79              	
  80              	@ 0 "" 2
 132:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
  81              		.loc 1 132 0
  82              		.code	16
  83 003a 1A68     		ldr	r2, [r3]
  84 003c 120F     		lsr	r2, r2, #28
  85 003e 0F2A     		cmp	r2, #15
  86 0040 33D0     		beq	.L18
  87              		.loc 1 132 0 is_stmt 0 discriminator 2
  88 0042 1A68     		ldr	r2, [r3]
  89 0044 120F     		lsr	r2, r2, #28
  90 0046 0A2A     		cmp	r2, #10
  91 0048 33D0     		beq	.L12
  92              		.loc 1 132 0 discriminator 4
  93 004a 1B68     		ldr	r3, [r3]
  94              	.L5:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 5


  95              		.loc 1 132 0 discriminator 8
  96 004c 0093     		str	r3, [sp]
 133:Generated_Source\PSoC4/CyFlash.c **** 
 134:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
  97              		.loc 1 134 0 is_stmt 1 discriminator 8
  98 004e 009D     		ldr	r5, [sp]
  99 0050 002D     		cmp	r5, #0
 100 0052 25D1     		bne	.L6
 135:Generated_Source\PSoC4/CyFlash.c ****         {
 136:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 137:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 138:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 139:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 140:Generated_Source\PSoC4/CyFlash.c ****             * context.
 141:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 142:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 101              		.loc 1 142 0
 102 0054 FFF7FEFF 		bl	CyEnterCriticalSection
 103              	.LVL3:
 143:Generated_Source\PSoC4/CyFlash.c **** 
 144:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 104              		.loc 1 144 0
 105 0058 0195     		str	r5, [sp, #4]
 145:Generated_Source\PSoC4/CyFlash.c **** 
 146:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 147:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 148:Generated_Source\PSoC4/CyFlash.c ****             {
 149:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 150:Generated_Source\PSoC4/CyFlash.c ****             }
 151:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 152:Generated_Source\PSoC4/CyFlash.c **** 
 153:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 106              		.loc 1 153 0
 107 005a 009B     		ldr	r3, [sp]
 108 005c 002B     		cmp	r3, #0
 109 005e 16D1     		bne	.L7
 154:Generated_Source\PSoC4/CyFlash.c ****             {
 155:Generated_Source\PSoC4/CyFlash.c ****                 /* Write Row */
 156:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_RO
 110              		.loc 1 156 0
 111 0060 1F4B     		ldr	r3, .L20+24
 157:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 112              		.loc 1 157 0
 113 0062 2404     		lsl	r4, r4, #16
 114              	.LVL4:
 156:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 115              		.loc 1 156 0
 116 0064 0293     		str	r3, [sp, #8]
 117              		.loc 1 157 0
 118 0066 029B     		ldr	r3, [sp, #8]
 158:Generated_Source\PSoC4/CyFlash.c **** 
 159:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 119              		.loc 1 159 0
 120 0068 02AA     		add	r2, sp, #8
 157:Generated_Source\PSoC4/CyFlash.c **** 
 121              		.loc 1 157 0
 122 006a 1C43     		orr	r4, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 6


 123              		.loc 1 159 0
 124 006c 194B     		ldr	r3, .L20+12
 157:Generated_Source\PSoC4/CyFlash.c **** 
 125              		.loc 1 157 0
 126 006e 0294     		str	r4, [sp, #8]
 160:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 127              		.loc 1 160 0
 128 0070 1C49     		ldr	r1, .L20+28
 159:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 129              		.loc 1 159 0
 130 0072 1A60     		str	r2, [r3]
 131              		.loc 1 160 0
 132 0074 194A     		ldr	r2, .L20+20
 133 0076 1160     		str	r1, [r2]
 161:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 134              		.loc 1 161 0
 135              	@ 161 "Generated_Source\PSoC4\CyFlash.c" 1
 136 0078 C046     		NOP
 137              	
 138              	@ 0 "" 2
 162:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 139              		.loc 1 162 0
 140              		.code	16
 141 007a 1A68     		ldr	r2, [r3]
 142 007c 120F     		lsr	r2, r2, #28
 143 007e 0F2A     		cmp	r2, #15
 144 0080 19D0     		beq	.L19
 145              		.loc 1 162 0 is_stmt 0 discriminator 2
 146 0082 1A68     		ldr	r2, [r3]
 147 0084 120F     		lsr	r2, r2, #28
 148 0086 0A2A     		cmp	r2, #10
 149 0088 1AD0     		beq	.L13
 150              		.loc 1 162 0 discriminator 4
 151 008a 1B68     		ldr	r3, [r3]
 152 008c 0093     		str	r3, [sp]
 153              	.L7:
 163:Generated_Source\PSoC4/CyFlash.c ****             }
 164:Generated_Source\PSoC4/CyFlash.c **** 
 165:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_FLASH_CHECKSUM_WORKAROUND)
 166:Generated_Source\PSoC4/CyFlash.c **** 
 167:Generated_Source\PSoC4/CyFlash.c ****                 if ((retValue == CYRET_SUCCESS) && (needChecksumWorkaround != 0u))
 168:Generated_Source\PSoC4/CyFlash.c ****                 {
 169:Generated_Source\PSoC4/CyFlash.c ****                     (void)memset((void *)&parameters[2u], 0, CY_FLASH_SIZEOF_ROW);
 170:Generated_Source\PSoC4/CyFlash.c ****                     parameters[savedIndex] = savedValue;
 171:Generated_Source\PSoC4/CyFlash.c **** 
 172:Generated_Source\PSoC4/CyFlash.c ****                     /* Load Flash Bytes */
 173:Generated_Source\PSoC4/CyFlash.c ****                     parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLA
 174:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLA
 175:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLA
 176:Generated_Source\PSoC4/CyFlash.c ****                                      CY_FLASH_KEY_ONE;
 177:Generated_Source\PSoC4/CyFlash.c ****                     parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 178:Generated_Source\PSoC4/CyFlash.c **** 
 179:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 180:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD
 181:Generated_Source\PSoC4/CyFlash.c ****                     CY_NOP;
 182:Generated_Source\PSoC4/CyFlash.c ****                     retValue = CY_FLASH_API_RETURN;
 183:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 7


 184:Generated_Source\PSoC4/CyFlash.c **** 
 185:Generated_Source\PSoC4/CyFlash.c ****                     if(retValue == CY_SYS_FLASH_SUCCESS)
 186:Generated_Source\PSoC4/CyFlash.c ****                     {
 187:Generated_Source\PSoC4/CyFlash.c ****                         /* Program Row */
 188:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u]  =
 189:Generated_Source\PSoC4/CyFlash.c ****                             (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_PROGRAM_ROW) <
 190:Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_O
 191:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u] |= (uint32)(rowNum << 16u);
 192:Generated_Source\PSoC4/CyFlash.c **** 
 193:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 194:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_
 195:Generated_Source\PSoC4/CyFlash.c ****                         CY_NOP;
 196:Generated_Source\PSoC4/CyFlash.c ****                         retValue = CY_FLASH_API_RETURN;
 197:Generated_Source\PSoC4/CyFlash.c ****                     }
 198:Generated_Source\PSoC4/CyFlash.c ****                 }
 199:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 200:Generated_Source\PSoC4/CyFlash.c **** 
 201:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 154              		.loc 1 201 0 is_stmt 1
 155 008e 019B     		ldr	r3, [sp, #4]
 156 0090 002B     		cmp	r3, #0
 157 0092 00D1     		bne	.L10
 158              	.LVL5:
 202:Generated_Source\PSoC4/CyFlash.c ****             {
 203:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 159              		.loc 1 203 0
 160 0094 0193     		str	r3, [sp, #4]
 161              	.LVL6:
 162              	.L10:
 204:Generated_Source\PSoC4/CyFlash.c ****             }
 205:Generated_Source\PSoC4/CyFlash.c **** 
 206:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 163              		.loc 1 206 0
 164 0096 FFF7FEFF 		bl	CyExitCriticalSection
 165              	.LVL7:
 166 009a 01E0     		b	.L6
 167              	.LVL8:
 168              	.L2:
 207:Generated_Source\PSoC4/CyFlash.c ****         }
 208:Generated_Source\PSoC4/CyFlash.c ****     }
 209:Generated_Source\PSoC4/CyFlash.c ****     else
 210:Generated_Source\PSoC4/CyFlash.c ****     {
 211:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 169              		.loc 1 211 0
 170 009c 0423     		mov	r3, #4
 171 009e 0093     		str	r3, [sp]
 172              	.LVL9:
 173              	.L6:
 212:Generated_Source\PSoC4/CyFlash.c ****     }
 213:Generated_Source\PSoC4/CyFlash.c **** 
 214:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 174              		.loc 1 214 0
 175 00a0 0098     		ldr	r0, [sp]
 215:Generated_Source\PSoC4/CyFlash.c **** }
 176              		.loc 1 215 0
 177 00a2 25B0     		add	sp, sp, #148
 178              		@ sp needed
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 8


 179 00a4 30BD     		pop	{r4, r5, pc}
 180              	.LVL10:
 181              	.L11:
 125:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 182              		.loc 1 125 0
 183 00a6 104B     		ldr	r3, .L20+32
 184 00a8 BDE7     		b	.L3
 185              	.L18:
 132:Generated_Source\PSoC4/CyFlash.c **** 
 186              		.loc 1 132 0 discriminator 1
 187 00aa 1B68     		ldr	r3, [r3]
 188 00ac F032     		add	r2, r2, #240
 189 00ae 1340     		and	r3, r2
 190 00b0 CCE7     		b	.L5
 191              	.L12:
 132:Generated_Source\PSoC4/CyFlash.c **** 
 192              		.loc 1 132 0 is_stmt 0
 193 00b2 0023     		mov	r3, #0
 194 00b4 CAE7     		b	.L5
 195              	.LVL11:
 196              	.L19:
 162:Generated_Source\PSoC4/CyFlash.c ****             }
 197              		.loc 1 162 0 is_stmt 1 discriminator 1
 198 00b6 1B68     		ldr	r3, [r3]
 199 00b8 F032     		add	r2, r2, #240
 200 00ba 1340     		and	r3, r2
 201 00bc 0093     		str	r3, [sp]
 202 00be E6E7     		b	.L7
 203              	.L13:
 162:Generated_Source\PSoC4/CyFlash.c ****             }
 204              		.loc 1 162 0 is_stmt 0
 205 00c0 0023     		mov	r3, #0
 206 00c2 0093     		str	r3, [sp]
 207 00c4 E3E7     		b	.L7
 208              	.L21:
 209 00c6 C046     		.align	2
 210              	.L20:
 211 00c8 FF030000 		.word	1023
 212 00cc FF010000 		.word	511
 213 00d0 B6D70000 		.word	55222
 214 00d4 08001040 		.word	1074790408
 215 00d8 04000080 		.word	-2147483644
 216 00dc 04001040 		.word	1074790404
 217 00e0 B6D80000 		.word	55478
 218 00e4 05000080 		.word	-2147483643
 219 00e8 B6D70001 		.word	16832438
 220              		.cfi_endproc
 221              	.LFE1:
 222              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 223              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 224              		.align	2
 225              		.global	CySysFlashSetWaitCycles
 226              		.code	16
 227              		.thumb_func
 228              		.type	CySysFlashSetWaitCycles, %function
 229              	CySysFlashSetWaitCycles:
 230              	.LFB2:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 9


 216:Generated_Source\PSoC4/CyFlash.c **** 
 217:Generated_Source\PSoC4/CyFlash.c **** 
 218:Generated_Source\PSoC4/CyFlash.c **** 
 219:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u))
 220:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 221:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashStartWriteRow
 222:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 223:Generated_Source\PSoC4/CyFlash.c **** *
 224:Generated_Source\PSoC4/CyFlash.c **** * Initiates a write to a row of Flash. A call to this API is non-blocking. 
 225:Generated_Source\PSoC4/CyFlash.c **** * Use CySysFlashResumeWriteRow() to resume flash writes and 
 226:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashGetWriteRowStatus() to ascertain status of the write operation.
 227:Generated_Source\PSoC4/CyFlash.c **** *
 228:Generated_Source\PSoC4/CyFlash.c **** * The devices require HFCLK to be sourced by 48 MHz IMO during flash write.
 229:Generated_Source\PSoC4/CyFlash.c **** * This API will modify IMO configuration; it can be later restored to original
 230:Generated_Source\PSoC4/CyFlash.c **** * configuration by calling \ref CySysFlashGetWriteRowStatus().
 231:Generated_Source\PSoC4/CyFlash.c **** *
 232:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 233:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 234:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 235:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 236:Generated_Source\PSoC4/CyFlash.c **** *    
 237:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
 238:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
 239:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
 240:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
 241:Generated_Source\PSoC4/CyFlash.c **** *
 242:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 243:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 244:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
 245:Generated_Source\PSoC4/CyFlash.c **** * details.
 246:Generated_Source\PSoC4/CyFlash.c **** *
 247:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 248:Generated_Source\PSoC4/CyFlash.c **** *
 249:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 250:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashStartWriteRow(uint32 rowNum, const uint8 rowData[])
 251:Generated_Source\PSoC4/CyFlash.c **** {
 252:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 253:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
 254:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 255:Generated_Source\PSoC4/CyFlash.c **** 
 256:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 257:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 258:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */    
 259:Generated_Source\PSoC4/CyFlash.c **** 
 260:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
 261:Generated_Source\PSoC4/CyFlash.c ****     {
 262:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 263:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 264:Generated_Source\PSoC4/CyFlash.c **** 
 265:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 266:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 267:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 268:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 269:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 270:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 271:Generated_Source\PSoC4/CyFlash.c **** 
 272:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 10


 273:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 274:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 275:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 276:Generated_Source\PSoC4/CyFlash.c **** 
 277:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 278:Generated_Source\PSoC4/CyFlash.c ****         {
 279:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 280:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 281:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 282:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 283:Generated_Source\PSoC4/CyFlash.c ****             * context.
 284:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 285:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 286:Generated_Source\PSoC4/CyFlash.c **** 
 287:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 288:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 289:Generated_Source\PSoC4/CyFlash.c ****             
 290:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 291:Generated_Source\PSoC4/CyFlash.c ****             {
 292:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 293:Generated_Source\PSoC4/CyFlash.c ****             }
 294:Generated_Source\PSoC4/CyFlash.c ****         #else
 295:Generated_Source\PSoC4/CyFlash.c ****             (void)CySysFlashClockBackup();
 296:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 297:Generated_Source\PSoC4/CyFlash.c **** 
 298:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 299:Generated_Source\PSoC4/CyFlash.c ****             {
 300:Generated_Source\PSoC4/CyFlash.c ****                 /* Non-blocking Write Row */
 301:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_NON_BLOC
 302:Generated_Source\PSoC4/CyFlash.c ****                                                         CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_K
 303:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 304:Generated_Source\PSoC4/CyFlash.c **** 
 305:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 306:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_NON_BLOC
 307:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 308:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 309:Generated_Source\PSoC4/CyFlash.c ****             }
 310:Generated_Source\PSoC4/CyFlash.c **** 
 311:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 312:Generated_Source\PSoC4/CyFlash.c ****         }
 313:Generated_Source\PSoC4/CyFlash.c ****     }
 314:Generated_Source\PSoC4/CyFlash.c ****     else
 315:Generated_Source\PSoC4/CyFlash.c ****     {
 316:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 317:Generated_Source\PSoC4/CyFlash.c ****     }
 318:Generated_Source\PSoC4/CyFlash.c **** 
 319:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 320:Generated_Source\PSoC4/CyFlash.c **** }
 321:Generated_Source\PSoC4/CyFlash.c **** 
 322:Generated_Source\PSoC4/CyFlash.c **** 
 323:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 324:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashGetWriteRowStatus
 325:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 326:Generated_Source\PSoC4/CyFlash.c **** *
 327:Generated_Source\PSoC4/CyFlash.c **** * Returns the current status of the flash write operation.
 328:Generated_Source\PSoC4/CyFlash.c **** *
 329:Generated_Source\PSoC4/CyFlash.c **** ** \note The non-blocking operation does not return success status 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 11


 330:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 331:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 332:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 333:Generated_Source\PSoC4/CyFlash.c **** * Calling this API before starting a non-blocking write row operation 
 334:Generated_Source\PSoC4/CyFlash.c **** * using the \ref CySysFlashStartWriteRow() API will cause improper operation.
 335:Generated_Source\PSoC4/CyFlash.c **** *
 336:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 337:Generated_Source\PSoC4/CyFlash.c **** *
 338:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 339:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashGetWriteRowStatus(void)
 340:Generated_Source\PSoC4/CyFlash.c **** {
 341:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 342:Generated_Source\PSoC4/CyFlash.c **** 
 343:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 344:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 345:Generated_Source\PSoC4/CyFlash.c **** 
 346:Generated_Source\PSoC4/CyFlash.c ****     (void) CySysFlashClockRestore();
 347:Generated_Source\PSoC4/CyFlash.c **** 
 348:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 349:Generated_Source\PSoC4/CyFlash.c **** }
 350:Generated_Source\PSoC4/CyFlash.c **** 
 351:Generated_Source\PSoC4/CyFlash.c **** 
 352:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 353:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashResumeWriteRow
 354:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 355:Generated_Source\PSoC4/CyFlash.c **** *
 356:Generated_Source\PSoC4/CyFlash.c **** * This API must be called, once the SPC interrupt is triggered to complete the
 357:Generated_Source\PSoC4/CyFlash.c **** * non-blocking operation. It is advised not to prolong calling this API for
 358:Generated_Source\PSoC4/CyFlash.c **** * more than 25 ms.
 359:Generated_Source\PSoC4/CyFlash.c **** *
 360:Generated_Source\PSoC4/CyFlash.c **** * The non-blocking write row API \ref CySysFlashStartWriteRow() requires that
 361:Generated_Source\PSoC4/CyFlash.c **** * this API be called 3 times to complete the write. This can be done by
 362:Generated_Source\PSoC4/CyFlash.c **** * configuring SPCIF interrupt and placing a call to this API.
 363:Generated_Source\PSoC4/CyFlash.c **** *
 364:Generated_Source\PSoC4/CyFlash.c **** * For CM0 based device, a non-blocking call to program a row of macro 0
 365:Generated_Source\PSoC4/CyFlash.c **** * requires the user to set the CPUSS_CONFIG.VECS_IN_RAM bit so that the
 366:Generated_Source\PSoC4/CyFlash.c **** * interrupt vector for the SPC is fetched from the SRAM rather than the FLASH.
 367:Generated_Source\PSoC4/CyFlash.c **** *
 368:Generated_Source\PSoC4/CyFlash.c **** * For CM0+ based device, if the user wants to keep the vector table in flash
 369:Generated_Source\PSoC4/CyFlash.c **** * when performing non-blocking flash write then they need to make sure the
 370:Generated_Source\PSoC4/CyFlash.c **** * vector table is placed in the flash macro which is not getting programmed by
 371:Generated_Source\PSoC4/CyFlash.c **** * configuring the VTOR register.
 372:Generated_Source\PSoC4/CyFlash.c **** *
 373:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 374:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last Resume API is complete. 
 375:Generated_Source\PSoC4/CyFlash.c **** * The CPUSS_SYSARG register will be reflecting the SRAM address during an 
 376:Generated_Source\PSoC4/CyFlash.c **** * ongoing non-blocking operation.
 377:Generated_Source\PSoC4/CyFlash.c **** *
 378:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 379:Generated_Source\PSoC4/CyFlash.c **** *
 380:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashResumeWriteRow(void)
 382:Generated_Source\PSoC4/CyFlash.c **** {
 383:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 384:Generated_Source\PSoC4/CyFlash.c ****     static volatile uint32 parameters[1u];
 385:Generated_Source\PSoC4/CyFlash.c **** 
 386:Generated_Source\PSoC4/CyFlash.c ****     /* Resume */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 12


 387:Generated_Source\PSoC4/CyFlash.c ****     parameters[0u] = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING) 
 388:Generated_Source\PSoC4/CyFlash.c ****                                          CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_ONE);
 389:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 390:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING;
 391:Generated_Source\PSoC4/CyFlash.c ****     
 392:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 393:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 394:Generated_Source\PSoC4/CyFlash.c ****     
 395:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 396:Generated_Source\PSoC4/CyFlash.c **** }
 397:Generated_Source\PSoC4/CyFlash.c **** 
 398:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u)) */
 399:Generated_Source\PSoC4/CyFlash.c **** 
 400:Generated_Source\PSoC4/CyFlash.c **** 
 401:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 402:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashSetWaitCycles
 403:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 404:Generated_Source\PSoC4/CyFlash.c **** *
 405:Generated_Source\PSoC4/CyFlash.c **** * Sets the number of clock cycles the cache will wait before it samples data
 406:Generated_Source\PSoC4/CyFlash.c **** * coming back from Flash. This function must be called before increasing the
 407:Generated_Source\PSoC4/CyFlash.c **** * SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 408:Generated_Source\PSoC4/CyFlash.c **** * clock frequency in order to improve the CPU performance.
 409:Generated_Source\PSoC4/CyFlash.c **** *
 410:Generated_Source\PSoC4/CyFlash.c **** * \param freq The System clock frequency in MHz.
 411:Generated_Source\PSoC4/CyFlash.c **** *
 412:Generated_Source\PSoC4/CyFlash.c **** * \note Invalid frequency will be ignored in Release mode and the CPU will be
 413:Generated_Source\PSoC4/CyFlash.c **** * halted if project is compiled in Debug mode.
 414:Generated_Source\PSoC4/CyFlash.c **** *
 415:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/CyFlash.c **** void CySysFlashSetWaitCycles(uint32 freq)
 417:Generated_Source\PSoC4/CyFlash.c **** {
 231              		.loc 1 417 0 is_stmt 1
 232              		.cfi_startproc
 233              	.LVL12:
 234 0000 38B5     		push	{r3, r4, r5, lr}
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 3, -16
 237              		.cfi_offset 4, -12
 238              		.cfi_offset 5, -8
 239              		.cfi_offset 14, -4
 240              		.loc 1 417 0
 241 0002 041C     		mov	r4, r0
 418:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 419:Generated_Source\PSoC4/CyFlash.c **** 
 420:Generated_Source\PSoC4/CyFlash.c ****     interruptState = CyEnterCriticalSection();
 242              		.loc 1 420 0
 243 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 244              	.LVL13:
 245 0008 051C     		mov	r5, r0
 246              	.LVL14:
 421:Generated_Source\PSoC4/CyFlash.c **** 
 422:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_CPUSS)
 423:Generated_Source\PSoC4/CyFlash.c **** 
 424:Generated_Source\PSoC4/CyFlash.c ****         if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
 425:Generated_Source\PSoC4/CyFlash.c ****         {
 426:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 427:Generated_Source\PSoC4/CyFlash.c ****         }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 13


 428:Generated_Source\PSoC4/CyFlash.c ****         else
 429:Generated_Source\PSoC4/CyFlash.c ****         {
 430:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 431:Generated_Source\PSoC4/CyFlash.c ****         }
 432:Generated_Source\PSoC4/CyFlash.c ****     #else
 433:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_CPUSS_FLASHC_PRESENT)
 434:Generated_Source\PSoC4/CyFlash.c ****             /* CY_IP_FM and CY_IP_FS */
 435:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_0_FREQ_MAX)
 247              		.loc 1 435 0
 248 000a 102C     		cmp	r4, #16
 249 000c 16D9     		bls	.L27
 436:Generated_Source\PSoC4/CyFlash.c ****             {
 437:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_0_V
 438:Generated_Source\PSoC4/CyFlash.c ****             } else
 439:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_1_FREQ_MAX)
 250              		.loc 1 439 0
 251 000e 202C     		cmp	r4, #32
 252 0010 0CD9     		bls	.L28
 440:Generated_Source\PSoC4/CyFlash.c ****             {
 441:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_1_V
 442:Generated_Source\PSoC4/CyFlash.c ****             } else
 443:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_IP_FMLT || CY_IP_FSLT)
 444:Generated_Source\PSoC4/CyFlash.c ****                 if (freq <= CY_FLASH_CTL_WS_2_FREQ_MAX)
 253              		.loc 1 444 0
 254 0012 302C     		cmp	r4, #48
 255 0014 18D8     		bhi	.L26
 445:Generated_Source\PSoC4/CyFlash.c ****                 {
 446:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS
 256              		.loc 1 446 0
 257 0016 0322     		mov	r2, #3
 258 0018 0D49     		ldr	r1, .L29
 259 001a 0B68     		ldr	r3, [r1]
 260 001c 9343     		bic	r3, r2
 261 001e 013A     		sub	r2, r2, #1
 262 0020 1343     		orr	r3, r2
 263 0022 0B60     		str	r3, [r1]
 264              	.L24:
 447:Generated_Source\PSoC4/CyFlash.c ****                 }
 448:Generated_Source\PSoC4/CyFlash.c ****                 else
 449:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_IP_FMLT || CY_IP_FSLT) */
 450:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_CPUSS_FLASHC_PRESENT) */
 451:Generated_Source\PSoC4/CyFlash.c ****         {
 452:Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 453:Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 454:Generated_Source\PSoC4/CyFlash.c ****         }
 455:Generated_Source\PSoC4/CyFlash.c **** 
 456:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_CPUSS) */
 457:Generated_Source\PSoC4/CyFlash.c **** 
 458:Generated_Source\PSoC4/CyFlash.c ****     CyExitCriticalSection(interruptState);
 265              		.loc 1 458 0
 266 0024 281C     		mov	r0, r5
 267 0026 FFF7FEFF 		bl	CyExitCriticalSection
 268              	.LVL15:
 459:Generated_Source\PSoC4/CyFlash.c **** }
 269              		.loc 1 459 0
 270              		@ sp needed
 271              	.LVL16:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 14


 272              	.LVL17:
 273 002a 38BD     		pop	{r3, r4, r5, pc}
 274              	.LVL18:
 275              	.L28:
 441:Generated_Source\PSoC4/CyFlash.c ****             } else
 276              		.loc 1 441 0
 277 002c 0322     		mov	r2, #3
 278 002e 0849     		ldr	r1, .L29
 279 0030 0B68     		ldr	r3, [r1]
 280 0032 9343     		bic	r3, r2
 281 0034 023A     		sub	r2, r2, #2
 282 0036 1343     		orr	r3, r2
 283 0038 0B60     		str	r3, [r1]
 284 003a F3E7     		b	.L24
 285              	.L27:
 437:Generated_Source\PSoC4/CyFlash.c ****             } else
 286              		.loc 1 437 0
 287 003c 0321     		mov	r1, #3
 288 003e 044A     		ldr	r2, .L29
 289 0040 1368     		ldr	r3, [r2]
 290 0042 8B43     		bic	r3, r1
 291 0044 1360     		str	r3, [r2]
 292 0046 EDE7     		b	.L24
 293              	.L26:
 453:Generated_Source\PSoC4/CyFlash.c ****         }
 294              		.loc 1 453 0 discriminator 1
 295 0048 0020     		mov	r0, #0
 296 004a FFF7FEFF 		bl	CyHalt
 297              	.LVL19:
 298 004e E9E7     		b	.L24
 299              	.L30:
 300              		.align	2
 301              	.L29:
 302 0050 30001040 		.word	1074790448
 303              		.cfi_endproc
 304              	.LFE2:
 305              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 306              		.section	.text.CySysSFlashWriteUserRow,"ax",%progbits
 307              		.align	2
 308              		.global	CySysSFlashWriteUserRow
 309              		.code	16
 310              		.thumb_func
 311              		.type	CySysSFlashWriteUserRow, %function
 312              	CySysSFlashWriteUserRow:
 313              	.LFB3:
 460:Generated_Source\PSoC4/CyFlash.c **** 
 461:Generated_Source\PSoC4/CyFlash.c **** 
 462:Generated_Source\PSoC4/CyFlash.c **** #if (CY_SFLASH_XTRA_ROWS)
 463:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 464:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysSFlashWriteUserRow
 465:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 466:Generated_Source\PSoC4/CyFlash.c **** *
 467:Generated_Source\PSoC4/CyFlash.c **** * Writes data to a row of SFlash user configurable area.
 468:Generated_Source\PSoC4/CyFlash.c **** *
 469:Generated_Source\PSoC4/CyFlash.c **** * This API is applicable for PSoC 4100 BLE, PSoC 4200 BLE, PSoC 4100M,
 470:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200M, and PSoC 4200L family of devices.
 471:Generated_Source\PSoC4/CyFlash.c **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 15


 472:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The flash row number. The number of the
 473:Generated_Source\PSoC4/CyFlash.c **** * flash rows is defined by the CY_SFLASH_NUMBER_USERROWS macro for the selected
 474:Generated_Source\PSoC4/CyFlash.c **** * device. Valid range is 0-3. Refer to the device TRM for details.
 475:Generated_Source\PSoC4/CyFlash.c **** *
 476:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 477:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 478:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_SFLASH_SIZEOF_USERROW macro. Refer to the device TRM for the
 479:Generated_Source\PSoC4/CyFlash.c **** * details.
 480:Generated_Source\PSoC4/CyFlash.c **** *
 481:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 482:Generated_Source\PSoC4/CyFlash.c **** *
 483:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 484:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysSFlashWriteUserRow(uint32 rowNum, const uint8 rowData[])
 485:Generated_Source\PSoC4/CyFlash.c **** {
 314              		.loc 1 485 0
 315              		.cfi_startproc
 316              	.LVL20:
 486:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 317              		.loc 1 486 0
 318 0000 0023     		mov	r3, #0
 485:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 319              		.loc 1 485 0
 320 0002 30B5     		push	{r4, r5, lr}
 321              		.cfi_def_cfa_offset 12
 322              		.cfi_offset 4, -12
 323              		.cfi_offset 5, -8
 324              		.cfi_offset 14, -4
 325 0004 A5B0     		sub	sp, sp, #148
 326              		.cfi_def_cfa_offset 160
 327              		.loc 1 486 0
 328 0006 0093     		str	r3, [sp]
 487:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 329              		.loc 1 487 0
 330 0008 0193     		str	r3, [sp, #4]
 488:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
 489:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 490:Generated_Source\PSoC4/CyFlash.c **** 
 491:Generated_Source\PSoC4/CyFlash.c **** 
 492:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_SFLASH_NUMBER_USERROWS) && (rowData != 0u))
 331              		.loc 1 492 0
 332 000a 0328     		cmp	r0, #3
 333 000c 3FD8     		bhi	.L32
 334              		.loc 1 492 0 is_stmt 0 discriminator 1
 335 000e 0029     		cmp	r1, #0
 336 0010 3DD0     		beq	.L32
 493:Generated_Source\PSoC4/CyFlash.c ****     {
 494:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 495:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 337              		.loc 1 495 0 is_stmt 1
 338 0012 284B     		ldr	r3, .L47
 339 0014 041C     		mov	r4, r0
 340 0016 0293     		str	r3, [sp, #8]
 496:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 497:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 498:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 499:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 341              		.loc 1 499 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 16


 342 0018 7F23     		mov	r3, #127
 500:Generated_Source\PSoC4/CyFlash.c **** 
 501:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 343              		.loc 1 501 0
 344 001a 04A8     		add	r0, sp, #16
 345              	.LVL21:
 346 001c 8022     		mov	r2, #128
 499:Generated_Source\PSoC4/CyFlash.c **** 
 347              		.loc 1 499 0
 348 001e 0393     		str	r3, [sp, #12]
 349              		.loc 1 501 0
 350 0020 FFF7FEFF 		bl	memcpy
 351              	.LVL22:
 502:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 352              		.loc 1 502 0
 353 0024 244B     		ldr	r3, .L47+4
 354 0026 02AA     		add	r2, sp, #8
 355 0028 1A60     		str	r2, [r3]
 503:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 356              		.loc 1 503 0
 357 002a 2449     		ldr	r1, .L47+8
 358 002c 244A     		ldr	r2, .L47+12
 359 002e 1160     		str	r1, [r2]
 504:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 360              		.loc 1 504 0
 361              	@ 504 "Generated_Source\PSoC4\CyFlash.c" 1
 362 0030 C046     		NOP
 363              	
 364              	@ 0 "" 2
 505:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 365              		.loc 1 505 0
 366              		.code	16
 367 0032 1A68     		ldr	r2, [r3]
 368 0034 120F     		lsr	r2, r2, #28
 369 0036 0F2A     		cmp	r2, #15
 370 0038 2ED0     		beq	.L45
 371              		.loc 1 505 0 is_stmt 0 discriminator 2
 372 003a 1A68     		ldr	r2, [r3]
 373 003c 120F     		lsr	r2, r2, #28
 374 003e 0A2A     		cmp	r2, #10
 375 0040 2ED0     		beq	.L40
 376              		.loc 1 505 0 discriminator 4
 377 0042 1B68     		ldr	r3, [r3]
 378              	.L34:
 379              		.loc 1 505 0 discriminator 8
 380 0044 0093     		str	r3, [sp]
 506:Generated_Source\PSoC4/CyFlash.c **** 
 507:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 381              		.loc 1 507 0 is_stmt 1 discriminator 8
 382 0046 009D     		ldr	r5, [sp]
 383 0048 002D     		cmp	r5, #0
 384 004a 22D1     		bne	.L35
 508:Generated_Source\PSoC4/CyFlash.c ****         {
 509:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 510:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 511:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 512:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 17


 513:Generated_Source\PSoC4/CyFlash.c ****             * context.
 514:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 515:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 385              		.loc 1 515 0
 386 004c FFF7FEFF 		bl	CyEnterCriticalSection
 387              	.LVL23:
 516:Generated_Source\PSoC4/CyFlash.c **** 
 517:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 388              		.loc 1 517 0
 389 0050 0195     		str	r5, [sp, #4]
 518:Generated_Source\PSoC4/CyFlash.c **** 
 519:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 520:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 521:Generated_Source\PSoC4/CyFlash.c ****             {
 522:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 523:Generated_Source\PSoC4/CyFlash.c ****             }
 524:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 525:Generated_Source\PSoC4/CyFlash.c **** 
 526:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 390              		.loc 1 526 0
 391 0052 009B     		ldr	r3, [sp]
 392 0054 002B     		cmp	r3, #0
 393 0056 13D1     		bne	.L36
 527:Generated_Source\PSoC4/CyFlash.c ****             {
 528:Generated_Source\PSoC4/CyFlash.c ****                 /* Write User Sflash Row */
 529:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_SF
 394              		.loc 1 529 0
 395 0058 1A4B     		ldr	r3, .L47+16
 530:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
 531:Generated_Source\PSoC4/CyFlash.c **** 
 532:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 396              		.loc 1 532 0
 397 005a 02AA     		add	r2, sp, #8
 529:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
 398              		.loc 1 529 0
 399 005c 0293     		str	r3, [sp, #8]
 400              		.loc 1 532 0
 401 005e 164B     		ldr	r3, .L47+4
 530:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
 402              		.loc 1 530 0
 403 0060 0394     		str	r4, [sp, #12]
 533:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_SF
 404              		.loc 1 533 0
 405 0062 1949     		ldr	r1, .L47+20
 532:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_SF
 406              		.loc 1 532 0
 407 0064 1A60     		str	r2, [r3]
 408              		.loc 1 533 0
 409 0066 164A     		ldr	r2, .L47+12
 410 0068 1160     		str	r1, [r2]
 534:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 411              		.loc 1 534 0
 412              	@ 534 "Generated_Source\PSoC4\CyFlash.c" 1
 413 006a C046     		NOP
 414              	
 415              	@ 0 "" 2
 535:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 18


 416              		.loc 1 535 0
 417              		.code	16
 418 006c 1A68     		ldr	r2, [r3]
 419 006e 120F     		lsr	r2, r2, #28
 420 0070 0F2A     		cmp	r2, #15
 421 0072 1AD0     		beq	.L46
 422              		.loc 1 535 0 is_stmt 0 discriminator 2
 423 0074 1A68     		ldr	r2, [r3]
 424 0076 120F     		lsr	r2, r2, #28
 425 0078 0A2A     		cmp	r2, #10
 426 007a 13D0     		beq	.L41
 427              		.loc 1 535 0 discriminator 4
 428 007c 1B68     		ldr	r3, [r3]
 429 007e 0093     		str	r3, [sp]
 430              	.L36:
 536:Generated_Source\PSoC4/CyFlash.c ****             }
 537:Generated_Source\PSoC4/CyFlash.c **** 
 538:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 431              		.loc 1 538 0 is_stmt 1
 432 0080 019B     		ldr	r3, [sp, #4]
 433 0082 002B     		cmp	r3, #0
 434 0084 00D1     		bne	.L39
 435              	.LVL24:
 539:Generated_Source\PSoC4/CyFlash.c ****             {
 540:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 436              		.loc 1 540 0
 437 0086 0193     		str	r3, [sp, #4]
 438              	.LVL25:
 439              	.L39:
 541:Generated_Source\PSoC4/CyFlash.c ****             }
 542:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 440              		.loc 1 542 0
 441 0088 FFF7FEFF 		bl	CyExitCriticalSection
 442              	.LVL26:
 443 008c 01E0     		b	.L35
 444              	.LVL27:
 445              	.L32:
 543:Generated_Source\PSoC4/CyFlash.c ****         }
 544:Generated_Source\PSoC4/CyFlash.c ****     }
 545:Generated_Source\PSoC4/CyFlash.c ****     else
 546:Generated_Source\PSoC4/CyFlash.c ****     {
 547:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 446              		.loc 1 547 0
 447 008e 0423     		mov	r3, #4
 448 0090 0093     		str	r3, [sp]
 449              	.LVL28:
 450              	.L35:
 548:Generated_Source\PSoC4/CyFlash.c ****     }
 549:Generated_Source\PSoC4/CyFlash.c **** 
 550:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 451              		.loc 1 550 0
 452 0092 0098     		ldr	r0, [sp]
 551:Generated_Source\PSoC4/CyFlash.c **** }
 453              		.loc 1 551 0
 454 0094 25B0     		add	sp, sp, #148
 455              		@ sp needed
 456 0096 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 19


 457              	.LVL29:
 458              	.L45:
 505:Generated_Source\PSoC4/CyFlash.c **** 
 459              		.loc 1 505 0 discriminator 1
 460 0098 1B68     		ldr	r3, [r3]
 461 009a F032     		add	r2, r2, #240
 462 009c 1340     		and	r3, r2
 463 009e D1E7     		b	.L34
 464              	.L40:
 505:Generated_Source\PSoC4/CyFlash.c **** 
 465              		.loc 1 505 0 is_stmt 0
 466 00a0 0023     		mov	r3, #0
 467 00a2 CFE7     		b	.L34
 468              	.LVL30:
 469              	.L41:
 535:Generated_Source\PSoC4/CyFlash.c ****             }
 470              		.loc 1 535 0 is_stmt 1
 471 00a4 0023     		mov	r3, #0
 472 00a6 0093     		str	r3, [sp]
 473 00a8 EAE7     		b	.L36
 474              	.L46:
 535:Generated_Source\PSoC4/CyFlash.c ****             }
 475              		.loc 1 535 0 is_stmt 0 discriminator 1
 476 00aa 1B68     		ldr	r3, [r3]
 477 00ac F032     		add	r2, r2, #240
 478 00ae 1340     		and	r3, r2
 479 00b0 0093     		str	r3, [sp]
 480 00b2 E5E7     		b	.L36
 481              	.L48:
 482              		.align	2
 483              	.L47:
 484 00b4 B6D70000 		.word	55222
 485 00b8 08001040 		.word	1074790408
 486 00bc 04000080 		.word	-2147483644
 487 00c0 04001040 		.word	1074790404
 488 00c4 B6EB0000 		.word	60342
 489 00c8 18000080 		.word	-2147483624
 490              		.cfi_endproc
 491              	.LFE3:
 492              		.size	CySysSFlashWriteUserRow, .-CySysSFlashWriteUserRow
 493              		.text
 494              	.Letext0:
 495              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 496              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 497              		.section	.debug_info,"",%progbits
 498              	.Ldebug_info0:
 499 0000 2F030000 		.4byte	0x32f
 500 0004 0400     		.2byte	0x4
 501 0006 00000000 		.4byte	.Ldebug_abbrev0
 502 000a 04       		.byte	0x4
 503 000b 01       		.uleb128 0x1
 504 000c 74000000 		.4byte	.LASF31
 505 0010 01       		.byte	0x1
 506 0011 84010000 		.4byte	.LASF32
 507 0015 3E020000 		.4byte	.LASF33
 508 0019 00000000 		.4byte	.Ldebug_ranges0+0
 509 001d 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 20


 510 0021 00000000 		.4byte	.Ldebug_line0
 511 0025 02       		.uleb128 0x2
 512 0026 01       		.byte	0x1
 513 0027 06       		.byte	0x6
 514 0028 94020000 		.4byte	.LASF0
 515 002c 02       		.uleb128 0x2
 516 002d 01       		.byte	0x1
 517 002e 08       		.byte	0x8
 518 002f 15010000 		.4byte	.LASF1
 519 0033 02       		.uleb128 0x2
 520 0034 02       		.byte	0x2
 521 0035 05       		.byte	0x5
 522 0036 55010000 		.4byte	.LASF2
 523 003a 02       		.uleb128 0x2
 524 003b 02       		.byte	0x2
 525 003c 07       		.byte	0x7
 526 003d 37000000 		.4byte	.LASF3
 527 0041 02       		.uleb128 0x2
 528 0042 04       		.byte	0x4
 529 0043 05       		.byte	0x5
 530 0044 30020000 		.4byte	.LASF4
 531 0048 02       		.uleb128 0x2
 532 0049 04       		.byte	0x4
 533 004a 07       		.byte	0x7
 534 004b 36010000 		.4byte	.LASF5
 535 004f 02       		.uleb128 0x2
 536 0050 08       		.byte	0x8
 537 0051 05       		.byte	0x5
 538 0052 DA010000 		.4byte	.LASF6
 539 0056 02       		.uleb128 0x2
 540 0057 08       		.byte	0x8
 541 0058 07       		.byte	0x7
 542 0059 5D000000 		.4byte	.LASF7
 543 005d 03       		.uleb128 0x3
 544 005e 04       		.byte	0x4
 545 005f 05       		.byte	0x5
 546 0060 696E7400 		.ascii	"int\000"
 547 0064 02       		.uleb128 0x2
 548 0065 04       		.byte	0x4
 549 0066 07       		.byte	0x7
 550 0067 4A000000 		.4byte	.LASF8
 551 006b 04       		.uleb128 0x4
 552 006c 48010000 		.4byte	.LASF9
 553 0070 02       		.byte	0x2
 554 0071 B901     		.2byte	0x1b9
 555 0073 2C000000 		.4byte	0x2c
 556 0077 04       		.uleb128 0x4
 557 0078 5F010000 		.4byte	.LASF10
 558 007c 02       		.byte	0x2
 559 007d BA01     		.2byte	0x1ba
 560 007f 3A000000 		.4byte	0x3a
 561 0083 04       		.uleb128 0x4
 562 0084 66010000 		.4byte	.LASF11
 563 0088 02       		.byte	0x2
 564 0089 BB01     		.2byte	0x1bb
 565 008b 48000000 		.4byte	0x48
 566 008f 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 21


 567 0090 04       		.byte	0x4
 568 0091 04       		.byte	0x4
 569 0092 57000000 		.4byte	.LASF12
 570 0096 02       		.uleb128 0x2
 571 0097 08       		.byte	0x8
 572 0098 04       		.byte	0x4
 573 0099 4E010000 		.4byte	.LASF13
 574 009d 02       		.uleb128 0x2
 575 009e 01       		.byte	0x1
 576 009f 08       		.byte	0x8
 577 00a0 39020000 		.4byte	.LASF14
 578 00a4 04       		.uleb128 0x4
 579 00a5 00000000 		.4byte	.LASF15
 580 00a9 02       		.byte	0x2
 581 00aa 5B02     		.2byte	0x25b
 582 00ac 48000000 		.4byte	0x48
 583 00b0 04       		.uleb128 0x4
 584 00b1 09000000 		.4byte	.LASF16
 585 00b5 02       		.byte	0x2
 586 00b6 6502     		.2byte	0x265
 587 00b8 BC000000 		.4byte	0xbc
 588 00bc 05       		.uleb128 0x5
 589 00bd 83000000 		.4byte	0x83
 590 00c1 02       		.uleb128 0x2
 591 00c2 04       		.byte	0x4
 592 00c3 07       		.byte	0x7
 593 00c4 D1010000 		.4byte	.LASF17
 594 00c8 06       		.uleb128 0x6
 595 00c9 04       		.byte	0x4
 596 00ca 07       		.uleb128 0x7
 597 00cb 1A020000 		.4byte	.LASF18
 598 00cf 01       		.byte	0x1
 599 00d0 3402     		.2byte	0x234
 600 00d2 A4000000 		.4byte	0xa4
 601 00d6 01       		.byte	0x1
 602 00d7 E8000000 		.4byte	0xe8
 603 00db 08       		.uleb128 0x8
 604 00dc 0F000000 		.4byte	.LASF20
 605 00e0 01       		.byte	0x1
 606 00e1 3602     		.2byte	0x236
 607 00e3 A4000000 		.4byte	0xa4
 608 00e7 00       		.byte	0
 609 00e8 07       		.uleb128 0x7
 610 00e9 03020000 		.4byte	.LASF19
 611 00ed 01       		.byte	0x1
 612 00ee D202     		.2byte	0x2d2
 613 00f0 A4000000 		.4byte	0xa4
 614 00f4 01       		.byte	0x1
 615 00f5 06010000 		.4byte	0x106
 616 00f9 08       		.uleb128 0x8
 617 00fa 0F000000 		.4byte	.LASF20
 618 00fe 01       		.byte	0x1
 619 00ff D402     		.2byte	0x2d4
 620 0101 A4000000 		.4byte	0xa4
 621 0105 00       		.byte	0
 622 0106 09       		.uleb128 0x9
 623 0107 A0020000 		.4byte	.LASF27
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 22


 624 010b 01       		.byte	0x1
 625 010c 50       		.byte	0x50
 626 010d 83000000 		.4byte	0x83
 627 0111 00000000 		.4byte	.LFB1
 628 0115 EC000000 		.4byte	.LFE1-.LFB1
 629 0119 01       		.uleb128 0x1
 630 011a 9C       		.byte	0x9c
 631 011b AE010000 		.4byte	0x1ae
 632 011f 0A       		.uleb128 0xa
 633 0120 18000000 		.4byte	.LASF21
 634 0124 01       		.byte	0x1
 635 0125 50       		.byte	0x50
 636 0126 83000000 		.4byte	0x83
 637 012a 00000000 		.4byte	.LLST0
 638 012e 0A       		.uleb128 0xa
 639 012f 23010000 		.4byte	.LASF22
 640 0133 01       		.byte	0x1
 641 0134 50       		.byte	0x50
 642 0135 AE010000 		.4byte	0x1ae
 643 0139 5E000000 		.4byte	.LLST1
 644 013d 0B       		.uleb128 0xb
 645 013e 0F000000 		.4byte	.LASF20
 646 0142 01       		.byte	0x1
 647 0143 52       		.byte	0x52
 648 0144 BC000000 		.4byte	0xbc
 649 0148 03       		.uleb128 0x3
 650 0149 91       		.byte	0x91
 651 014a E07E     		.sleb128 -160
 652 014c 0B       		.uleb128 0xb
 653 014d F4010000 		.4byte	.LASF23
 654 0151 01       		.byte	0x1
 655 0152 53       		.byte	0x53
 656 0153 BC000000 		.4byte	0xbc
 657 0157 03       		.uleb128 0x3
 658 0158 91       		.byte	0x91
 659 0159 E47E     		.sleb128 -156
 660 015b 0B       		.uleb128 0xb
 661 015c 2B010000 		.4byte	.LASF24
 662 0160 01       		.byte	0x1
 663 0161 54       		.byte	0x54
 664 0162 C9010000 		.4byte	0x1c9
 665 0166 03       		.uleb128 0x3
 666 0167 91       		.byte	0x91
 667 0168 E87E     		.sleb128 -152
 668 016a 0C       		.uleb128 0xc
 669 016b BB010000 		.4byte	.LASF25
 670 016f 01       		.byte	0x1
 671 0170 55       		.byte	0x55
 672 0171 6B000000 		.4byte	0x6b
 673 0175 98000000 		.4byte	.LLST2
 674 0179 0D       		.uleb128 0xd
 675 017a 1E000000 		.4byte	.LVL2
 676 017e E5020000 		.4byte	0x2e5
 677 0182 9B010000 		.4byte	0x19b
 678 0186 0E       		.uleb128 0xe
 679 0187 01       		.uleb128 0x1
 680 0188 52       		.byte	0x52
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 23


 681 0189 02       		.uleb128 0x2
 682 018a 08       		.byte	0x8
 683 018b 80       		.byte	0x80
 684 018c 0E       		.uleb128 0xe
 685 018d 01       		.uleb128 0x1
 686 018e 51       		.byte	0x51
 687 018f 03       		.uleb128 0x3
 688 0190 F3       		.byte	0xf3
 689 0191 01       		.uleb128 0x1
 690 0192 51       		.byte	0x51
 691 0193 0E       		.uleb128 0xe
 692 0194 01       		.uleb128 0x1
 693 0195 50       		.byte	0x50
 694 0196 03       		.uleb128 0x3
 695 0197 91       		.byte	0x91
 696 0198 F07E     		.sleb128 -144
 697 019a 00       		.byte	0
 698 019b 0F       		.uleb128 0xf
 699 019c 58000000 		.4byte	.LVL3
 700 01a0 09030000 		.4byte	0x309
 701 01a4 0F       		.uleb128 0xf
 702 01a5 9A000000 		.4byte	.LVL7
 703 01a9 14030000 		.4byte	0x314
 704 01ad 00       		.byte	0
 705 01ae 10       		.uleb128 0x10
 706 01af 04       		.byte	0x4
 707 01b0 B4010000 		.4byte	0x1b4
 708 01b4 11       		.uleb128 0x11
 709 01b5 6B000000 		.4byte	0x6b
 710 01b9 12       		.uleb128 0x12
 711 01ba 83000000 		.4byte	0x83
 712 01be C9010000 		.4byte	0x1c9
 713 01c2 13       		.uleb128 0x13
 714 01c3 C1000000 		.4byte	0xc1
 715 01c7 21       		.byte	0x21
 716 01c8 00       		.byte	0
 717 01c9 05       		.uleb128 0x5
 718 01ca B9010000 		.4byte	0x1b9
 719 01ce 14       		.uleb128 0x14
 720 01cf B3020000 		.4byte	.LASF34
 721 01d3 01       		.byte	0x1
 722 01d4 A001     		.2byte	0x1a0
 723 01d6 00000000 		.4byte	.LFB2
 724 01da 54000000 		.4byte	.LFE2-.LFB2
 725 01de 01       		.uleb128 0x1
 726 01df 9C       		.byte	0x9c
 727 01e0 31020000 		.4byte	0x231
 728 01e4 15       		.uleb128 0x15
 729 01e5 EF010000 		.4byte	.LASF26
 730 01e9 01       		.byte	0x1
 731 01ea A001     		.2byte	0x1a0
 732 01ec 83000000 		.4byte	0x83
 733 01f0 B6000000 		.4byte	.LLST3
 734 01f4 16       		.uleb128 0x16
 735 01f5 BB010000 		.4byte	.LASF25
 736 01f9 01       		.byte	0x1
 737 01fa A201     		.2byte	0x1a2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 24


 738 01fc 6B000000 		.4byte	0x6b
 739 0200 ED000000 		.4byte	.LLST4
 740 0204 0F       		.uleb128 0xf
 741 0205 08000000 		.4byte	.LVL13
 742 0209 09030000 		.4byte	0x309
 743 020d 0D       		.uleb128 0xd
 744 020e 2A000000 		.4byte	.LVL15
 745 0212 14030000 		.4byte	0x314
 746 0216 21020000 		.4byte	0x221
 747 021a 0E       		.uleb128 0xe
 748 021b 01       		.uleb128 0x1
 749 021c 50       		.byte	0x50
 750 021d 02       		.uleb128 0x2
 751 021e 75       		.byte	0x75
 752 021f 00       		.sleb128 0
 753 0220 00       		.byte	0
 754 0221 17       		.uleb128 0x17
 755 0222 4E000000 		.4byte	.LVL19
 756 0226 25030000 		.4byte	0x325
 757 022a 0E       		.uleb128 0xe
 758 022b 01       		.uleb128 0x1
 759 022c 50       		.byte	0x50
 760 022d 01       		.uleb128 0x1
 761 022e 30       		.byte	0x30
 762 022f 00       		.byte	0
 763 0230 00       		.byte	0
 764 0231 18       		.uleb128 0x18
 765 0232 1F000000 		.4byte	.LASF28
 766 0236 01       		.byte	0x1
 767 0237 E401     		.2byte	0x1e4
 768 0239 83000000 		.4byte	0x83
 769 023d 00000000 		.4byte	.LFB3
 770 0241 CC000000 		.4byte	.LFE3-.LFB3
 771 0245 01       		.uleb128 0x1
 772 0246 9C       		.byte	0x9c
 773 0247 E0020000 		.4byte	0x2e0
 774 024b 15       		.uleb128 0x15
 775 024c 18000000 		.4byte	.LASF21
 776 0250 01       		.byte	0x1
 777 0251 E401     		.2byte	0x1e4
 778 0253 83000000 		.4byte	0x83
 779 0257 0B010000 		.4byte	.LLST5
 780 025b 15       		.uleb128 0x15
 781 025c 23010000 		.4byte	.LASF22
 782 0260 01       		.byte	0x1
 783 0261 E401     		.2byte	0x1e4
 784 0263 AE010000 		.4byte	0x1ae
 785 0267 4D010000 		.4byte	.LLST6
 786 026b 19       		.uleb128 0x19
 787 026c 0F000000 		.4byte	.LASF20
 788 0270 01       		.byte	0x1
 789 0271 E601     		.2byte	0x1e6
 790 0273 BC000000 		.4byte	0xbc
 791 0277 03       		.uleb128 0x3
 792 0278 91       		.byte	0x91
 793 0279 E07E     		.sleb128 -160
 794 027b 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 25


 795 027c F4010000 		.4byte	.LASF23
 796 0280 01       		.byte	0x1
 797 0281 E701     		.2byte	0x1e7
 798 0283 BC000000 		.4byte	0xbc
 799 0287 03       		.uleb128 0x3
 800 0288 91       		.byte	0x91
 801 0289 E47E     		.sleb128 -156
 802 028b 19       		.uleb128 0x19
 803 028c 2B010000 		.4byte	.LASF24
 804 0290 01       		.byte	0x1
 805 0291 E801     		.2byte	0x1e8
 806 0293 E0020000 		.4byte	0x2e0
 807 0297 03       		.uleb128 0x3
 808 0298 91       		.byte	0x91
 809 0299 E87E     		.sleb128 -152
 810 029b 16       		.uleb128 0x16
 811 029c BB010000 		.4byte	.LASF25
 812 02a0 01       		.byte	0x1
 813 02a1 E901     		.2byte	0x1e9
 814 02a3 6B000000 		.4byte	0x6b
 815 02a7 87010000 		.4byte	.LLST7
 816 02ab 0D       		.uleb128 0xd
 817 02ac 24000000 		.4byte	.LVL22
 818 02b0 E5020000 		.4byte	0x2e5
 819 02b4 CD020000 		.4byte	0x2cd
 820 02b8 0E       		.uleb128 0xe
 821 02b9 01       		.uleb128 0x1
 822 02ba 52       		.byte	0x52
 823 02bb 02       		.uleb128 0x2
 824 02bc 08       		.byte	0x8
 825 02bd 80       		.byte	0x80
 826 02be 0E       		.uleb128 0xe
 827 02bf 01       		.uleb128 0x1
 828 02c0 51       		.byte	0x51
 829 02c1 03       		.uleb128 0x3
 830 02c2 F3       		.byte	0xf3
 831 02c3 01       		.uleb128 0x1
 832 02c4 51       		.byte	0x51
 833 02c5 0E       		.uleb128 0xe
 834 02c6 01       		.uleb128 0x1
 835 02c7 50       		.byte	0x50
 836 02c8 03       		.uleb128 0x3
 837 02c9 91       		.byte	0x91
 838 02ca F07E     		.sleb128 -144
 839 02cc 00       		.byte	0
 840 02cd 0F       		.uleb128 0xf
 841 02ce 50000000 		.4byte	.LVL23
 842 02d2 09030000 		.4byte	0x309
 843 02d6 0F       		.uleb128 0xf
 844 02d7 8C000000 		.4byte	.LVL26
 845 02db 14030000 		.4byte	0x314
 846 02df 00       		.byte	0
 847 02e0 05       		.uleb128 0x5
 848 02e1 B9010000 		.4byte	0x1b9
 849 02e5 1A       		.uleb128 0x1a
 850 02e6 E8010000 		.4byte	.LASF29
 851 02ea C8000000 		.4byte	0xc8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 26


 852 02ee 02030000 		.4byte	0x302
 853 02f2 1B       		.uleb128 0x1b
 854 02f3 C8000000 		.4byte	0xc8
 855 02f7 1B       		.uleb128 0x1b
 856 02f8 02030000 		.4byte	0x302
 857 02fc 1B       		.uleb128 0x1b
 858 02fd C1000000 		.4byte	0xc1
 859 0301 00       		.byte	0
 860 0302 10       		.uleb128 0x10
 861 0303 04       		.byte	0x4
 862 0304 08030000 		.4byte	0x308
 863 0308 1C       		.uleb128 0x1c
 864 0309 1D       		.uleb128 0x1d
 865 030a 6D010000 		.4byte	.LASF35
 866 030e 03       		.byte	0x3
 867 030f E5       		.byte	0xe5
 868 0310 6B000000 		.4byte	0x6b
 869 0314 1E       		.uleb128 0x1e
 870 0315 A5010000 		.4byte	.LASF30
 871 0319 03       		.byte	0x3
 872 031a E6       		.byte	0xe6
 873 031b 25030000 		.4byte	0x325
 874 031f 1B       		.uleb128 0x1b
 875 0320 6B000000 		.4byte	0x6b
 876 0324 00       		.byte	0
 877 0325 1F       		.uleb128 0x1f
 878 0326 CA010000 		.4byte	.LASF36
 879 032a 03       		.byte	0x3
 880 032b E7       		.byte	0xe7
 881 032c 1B       		.uleb128 0x1b
 882 032d 6B000000 		.4byte	0x6b
 883 0331 00       		.byte	0
 884 0332 00       		.byte	0
 885              		.section	.debug_abbrev,"",%progbits
 886              	.Ldebug_abbrev0:
 887 0000 01       		.uleb128 0x1
 888 0001 11       		.uleb128 0x11
 889 0002 01       		.byte	0x1
 890 0003 25       		.uleb128 0x25
 891 0004 0E       		.uleb128 0xe
 892 0005 13       		.uleb128 0x13
 893 0006 0B       		.uleb128 0xb
 894 0007 03       		.uleb128 0x3
 895 0008 0E       		.uleb128 0xe
 896 0009 1B       		.uleb128 0x1b
 897 000a 0E       		.uleb128 0xe
 898 000b 55       		.uleb128 0x55
 899 000c 17       		.uleb128 0x17
 900 000d 11       		.uleb128 0x11
 901 000e 01       		.uleb128 0x1
 902 000f 10       		.uleb128 0x10
 903 0010 17       		.uleb128 0x17
 904 0011 00       		.byte	0
 905 0012 00       		.byte	0
 906 0013 02       		.uleb128 0x2
 907 0014 24       		.uleb128 0x24
 908 0015 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 27


 909 0016 0B       		.uleb128 0xb
 910 0017 0B       		.uleb128 0xb
 911 0018 3E       		.uleb128 0x3e
 912 0019 0B       		.uleb128 0xb
 913 001a 03       		.uleb128 0x3
 914 001b 0E       		.uleb128 0xe
 915 001c 00       		.byte	0
 916 001d 00       		.byte	0
 917 001e 03       		.uleb128 0x3
 918 001f 24       		.uleb128 0x24
 919 0020 00       		.byte	0
 920 0021 0B       		.uleb128 0xb
 921 0022 0B       		.uleb128 0xb
 922 0023 3E       		.uleb128 0x3e
 923 0024 0B       		.uleb128 0xb
 924 0025 03       		.uleb128 0x3
 925 0026 08       		.uleb128 0x8
 926 0027 00       		.byte	0
 927 0028 00       		.byte	0
 928 0029 04       		.uleb128 0x4
 929 002a 16       		.uleb128 0x16
 930 002b 00       		.byte	0
 931 002c 03       		.uleb128 0x3
 932 002d 0E       		.uleb128 0xe
 933 002e 3A       		.uleb128 0x3a
 934 002f 0B       		.uleb128 0xb
 935 0030 3B       		.uleb128 0x3b
 936 0031 05       		.uleb128 0x5
 937 0032 49       		.uleb128 0x49
 938 0033 13       		.uleb128 0x13
 939 0034 00       		.byte	0
 940 0035 00       		.byte	0
 941 0036 05       		.uleb128 0x5
 942 0037 35       		.uleb128 0x35
 943 0038 00       		.byte	0
 944 0039 49       		.uleb128 0x49
 945 003a 13       		.uleb128 0x13
 946 003b 00       		.byte	0
 947 003c 00       		.byte	0
 948 003d 06       		.uleb128 0x6
 949 003e 0F       		.uleb128 0xf
 950 003f 00       		.byte	0
 951 0040 0B       		.uleb128 0xb
 952 0041 0B       		.uleb128 0xb
 953 0042 00       		.byte	0
 954 0043 00       		.byte	0
 955 0044 07       		.uleb128 0x7
 956 0045 2E       		.uleb128 0x2e
 957 0046 01       		.byte	0x1
 958 0047 03       		.uleb128 0x3
 959 0048 0E       		.uleb128 0xe
 960 0049 3A       		.uleb128 0x3a
 961 004a 0B       		.uleb128 0xb
 962 004b 3B       		.uleb128 0x3b
 963 004c 05       		.uleb128 0x5
 964 004d 27       		.uleb128 0x27
 965 004e 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 28


 966 004f 49       		.uleb128 0x49
 967 0050 13       		.uleb128 0x13
 968 0051 20       		.uleb128 0x20
 969 0052 0B       		.uleb128 0xb
 970 0053 01       		.uleb128 0x1
 971 0054 13       		.uleb128 0x13
 972 0055 00       		.byte	0
 973 0056 00       		.byte	0
 974 0057 08       		.uleb128 0x8
 975 0058 34       		.uleb128 0x34
 976 0059 00       		.byte	0
 977 005a 03       		.uleb128 0x3
 978 005b 0E       		.uleb128 0xe
 979 005c 3A       		.uleb128 0x3a
 980 005d 0B       		.uleb128 0xb
 981 005e 3B       		.uleb128 0x3b
 982 005f 05       		.uleb128 0x5
 983 0060 49       		.uleb128 0x49
 984 0061 13       		.uleb128 0x13
 985 0062 00       		.byte	0
 986 0063 00       		.byte	0
 987 0064 09       		.uleb128 0x9
 988 0065 2E       		.uleb128 0x2e
 989 0066 01       		.byte	0x1
 990 0067 3F       		.uleb128 0x3f
 991 0068 19       		.uleb128 0x19
 992 0069 03       		.uleb128 0x3
 993 006a 0E       		.uleb128 0xe
 994 006b 3A       		.uleb128 0x3a
 995 006c 0B       		.uleb128 0xb
 996 006d 3B       		.uleb128 0x3b
 997 006e 0B       		.uleb128 0xb
 998 006f 27       		.uleb128 0x27
 999 0070 19       		.uleb128 0x19
 1000 0071 49       		.uleb128 0x49
 1001 0072 13       		.uleb128 0x13
 1002 0073 11       		.uleb128 0x11
 1003 0074 01       		.uleb128 0x1
 1004 0075 12       		.uleb128 0x12
 1005 0076 06       		.uleb128 0x6
 1006 0077 40       		.uleb128 0x40
 1007 0078 18       		.uleb128 0x18
 1008 0079 9742     		.uleb128 0x2117
 1009 007b 19       		.uleb128 0x19
 1010 007c 01       		.uleb128 0x1
 1011 007d 13       		.uleb128 0x13
 1012 007e 00       		.byte	0
 1013 007f 00       		.byte	0
 1014 0080 0A       		.uleb128 0xa
 1015 0081 05       		.uleb128 0x5
 1016 0082 00       		.byte	0
 1017 0083 03       		.uleb128 0x3
 1018 0084 0E       		.uleb128 0xe
 1019 0085 3A       		.uleb128 0x3a
 1020 0086 0B       		.uleb128 0xb
 1021 0087 3B       		.uleb128 0x3b
 1022 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 29


 1023 0089 49       		.uleb128 0x49
 1024 008a 13       		.uleb128 0x13
 1025 008b 02       		.uleb128 0x2
 1026 008c 17       		.uleb128 0x17
 1027 008d 00       		.byte	0
 1028 008e 00       		.byte	0
 1029 008f 0B       		.uleb128 0xb
 1030 0090 34       		.uleb128 0x34
 1031 0091 00       		.byte	0
 1032 0092 03       		.uleb128 0x3
 1033 0093 0E       		.uleb128 0xe
 1034 0094 3A       		.uleb128 0x3a
 1035 0095 0B       		.uleb128 0xb
 1036 0096 3B       		.uleb128 0x3b
 1037 0097 0B       		.uleb128 0xb
 1038 0098 49       		.uleb128 0x49
 1039 0099 13       		.uleb128 0x13
 1040 009a 02       		.uleb128 0x2
 1041 009b 18       		.uleb128 0x18
 1042 009c 00       		.byte	0
 1043 009d 00       		.byte	0
 1044 009e 0C       		.uleb128 0xc
 1045 009f 34       		.uleb128 0x34
 1046 00a0 00       		.byte	0
 1047 00a1 03       		.uleb128 0x3
 1048 00a2 0E       		.uleb128 0xe
 1049 00a3 3A       		.uleb128 0x3a
 1050 00a4 0B       		.uleb128 0xb
 1051 00a5 3B       		.uleb128 0x3b
 1052 00a6 0B       		.uleb128 0xb
 1053 00a7 49       		.uleb128 0x49
 1054 00a8 13       		.uleb128 0x13
 1055 00a9 02       		.uleb128 0x2
 1056 00aa 17       		.uleb128 0x17
 1057 00ab 00       		.byte	0
 1058 00ac 00       		.byte	0
 1059 00ad 0D       		.uleb128 0xd
 1060 00ae 898201   		.uleb128 0x4109
 1061 00b1 01       		.byte	0x1
 1062 00b2 11       		.uleb128 0x11
 1063 00b3 01       		.uleb128 0x1
 1064 00b4 31       		.uleb128 0x31
 1065 00b5 13       		.uleb128 0x13
 1066 00b6 01       		.uleb128 0x1
 1067 00b7 13       		.uleb128 0x13
 1068 00b8 00       		.byte	0
 1069 00b9 00       		.byte	0
 1070 00ba 0E       		.uleb128 0xe
 1071 00bb 8A8201   		.uleb128 0x410a
 1072 00be 00       		.byte	0
 1073 00bf 02       		.uleb128 0x2
 1074 00c0 18       		.uleb128 0x18
 1075 00c1 9142     		.uleb128 0x2111
 1076 00c3 18       		.uleb128 0x18
 1077 00c4 00       		.byte	0
 1078 00c5 00       		.byte	0
 1079 00c6 0F       		.uleb128 0xf
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 30


 1080 00c7 898201   		.uleb128 0x4109
 1081 00ca 00       		.byte	0
 1082 00cb 11       		.uleb128 0x11
 1083 00cc 01       		.uleb128 0x1
 1084 00cd 31       		.uleb128 0x31
 1085 00ce 13       		.uleb128 0x13
 1086 00cf 00       		.byte	0
 1087 00d0 00       		.byte	0
 1088 00d1 10       		.uleb128 0x10
 1089 00d2 0F       		.uleb128 0xf
 1090 00d3 00       		.byte	0
 1091 00d4 0B       		.uleb128 0xb
 1092 00d5 0B       		.uleb128 0xb
 1093 00d6 49       		.uleb128 0x49
 1094 00d7 13       		.uleb128 0x13
 1095 00d8 00       		.byte	0
 1096 00d9 00       		.byte	0
 1097 00da 11       		.uleb128 0x11
 1098 00db 26       		.uleb128 0x26
 1099 00dc 00       		.byte	0
 1100 00dd 49       		.uleb128 0x49
 1101 00de 13       		.uleb128 0x13
 1102 00df 00       		.byte	0
 1103 00e0 00       		.byte	0
 1104 00e1 12       		.uleb128 0x12
 1105 00e2 01       		.uleb128 0x1
 1106 00e3 01       		.byte	0x1
 1107 00e4 49       		.uleb128 0x49
 1108 00e5 13       		.uleb128 0x13
 1109 00e6 01       		.uleb128 0x1
 1110 00e7 13       		.uleb128 0x13
 1111 00e8 00       		.byte	0
 1112 00e9 00       		.byte	0
 1113 00ea 13       		.uleb128 0x13
 1114 00eb 21       		.uleb128 0x21
 1115 00ec 00       		.byte	0
 1116 00ed 49       		.uleb128 0x49
 1117 00ee 13       		.uleb128 0x13
 1118 00ef 2F       		.uleb128 0x2f
 1119 00f0 0B       		.uleb128 0xb
 1120 00f1 00       		.byte	0
 1121 00f2 00       		.byte	0
 1122 00f3 14       		.uleb128 0x14
 1123 00f4 2E       		.uleb128 0x2e
 1124 00f5 01       		.byte	0x1
 1125 00f6 3F       		.uleb128 0x3f
 1126 00f7 19       		.uleb128 0x19
 1127 00f8 03       		.uleb128 0x3
 1128 00f9 0E       		.uleb128 0xe
 1129 00fa 3A       		.uleb128 0x3a
 1130 00fb 0B       		.uleb128 0xb
 1131 00fc 3B       		.uleb128 0x3b
 1132 00fd 05       		.uleb128 0x5
 1133 00fe 27       		.uleb128 0x27
 1134 00ff 19       		.uleb128 0x19
 1135 0100 11       		.uleb128 0x11
 1136 0101 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 31


 1137 0102 12       		.uleb128 0x12
 1138 0103 06       		.uleb128 0x6
 1139 0104 40       		.uleb128 0x40
 1140 0105 18       		.uleb128 0x18
 1141 0106 9742     		.uleb128 0x2117
 1142 0108 19       		.uleb128 0x19
 1143 0109 01       		.uleb128 0x1
 1144 010a 13       		.uleb128 0x13
 1145 010b 00       		.byte	0
 1146 010c 00       		.byte	0
 1147 010d 15       		.uleb128 0x15
 1148 010e 05       		.uleb128 0x5
 1149 010f 00       		.byte	0
 1150 0110 03       		.uleb128 0x3
 1151 0111 0E       		.uleb128 0xe
 1152 0112 3A       		.uleb128 0x3a
 1153 0113 0B       		.uleb128 0xb
 1154 0114 3B       		.uleb128 0x3b
 1155 0115 05       		.uleb128 0x5
 1156 0116 49       		.uleb128 0x49
 1157 0117 13       		.uleb128 0x13
 1158 0118 02       		.uleb128 0x2
 1159 0119 17       		.uleb128 0x17
 1160 011a 00       		.byte	0
 1161 011b 00       		.byte	0
 1162 011c 16       		.uleb128 0x16
 1163 011d 34       		.uleb128 0x34
 1164 011e 00       		.byte	0
 1165 011f 03       		.uleb128 0x3
 1166 0120 0E       		.uleb128 0xe
 1167 0121 3A       		.uleb128 0x3a
 1168 0122 0B       		.uleb128 0xb
 1169 0123 3B       		.uleb128 0x3b
 1170 0124 05       		.uleb128 0x5
 1171 0125 49       		.uleb128 0x49
 1172 0126 13       		.uleb128 0x13
 1173 0127 02       		.uleb128 0x2
 1174 0128 17       		.uleb128 0x17
 1175 0129 00       		.byte	0
 1176 012a 00       		.byte	0
 1177 012b 17       		.uleb128 0x17
 1178 012c 898201   		.uleb128 0x4109
 1179 012f 01       		.byte	0x1
 1180 0130 11       		.uleb128 0x11
 1181 0131 01       		.uleb128 0x1
 1182 0132 31       		.uleb128 0x31
 1183 0133 13       		.uleb128 0x13
 1184 0134 00       		.byte	0
 1185 0135 00       		.byte	0
 1186 0136 18       		.uleb128 0x18
 1187 0137 2E       		.uleb128 0x2e
 1188 0138 01       		.byte	0x1
 1189 0139 3F       		.uleb128 0x3f
 1190 013a 19       		.uleb128 0x19
 1191 013b 03       		.uleb128 0x3
 1192 013c 0E       		.uleb128 0xe
 1193 013d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 32


 1194 013e 0B       		.uleb128 0xb
 1195 013f 3B       		.uleb128 0x3b
 1196 0140 05       		.uleb128 0x5
 1197 0141 27       		.uleb128 0x27
 1198 0142 19       		.uleb128 0x19
 1199 0143 49       		.uleb128 0x49
 1200 0144 13       		.uleb128 0x13
 1201 0145 11       		.uleb128 0x11
 1202 0146 01       		.uleb128 0x1
 1203 0147 12       		.uleb128 0x12
 1204 0148 06       		.uleb128 0x6
 1205 0149 40       		.uleb128 0x40
 1206 014a 18       		.uleb128 0x18
 1207 014b 9742     		.uleb128 0x2117
 1208 014d 19       		.uleb128 0x19
 1209 014e 01       		.uleb128 0x1
 1210 014f 13       		.uleb128 0x13
 1211 0150 00       		.byte	0
 1212 0151 00       		.byte	0
 1213 0152 19       		.uleb128 0x19
 1214 0153 34       		.uleb128 0x34
 1215 0154 00       		.byte	0
 1216 0155 03       		.uleb128 0x3
 1217 0156 0E       		.uleb128 0xe
 1218 0157 3A       		.uleb128 0x3a
 1219 0158 0B       		.uleb128 0xb
 1220 0159 3B       		.uleb128 0x3b
 1221 015a 05       		.uleb128 0x5
 1222 015b 49       		.uleb128 0x49
 1223 015c 13       		.uleb128 0x13
 1224 015d 02       		.uleb128 0x2
 1225 015e 18       		.uleb128 0x18
 1226 015f 00       		.byte	0
 1227 0160 00       		.byte	0
 1228 0161 1A       		.uleb128 0x1a
 1229 0162 2E       		.uleb128 0x2e
 1230 0163 01       		.byte	0x1
 1231 0164 3F       		.uleb128 0x3f
 1232 0165 19       		.uleb128 0x19
 1233 0166 03       		.uleb128 0x3
 1234 0167 0E       		.uleb128 0xe
 1235 0168 27       		.uleb128 0x27
 1236 0169 19       		.uleb128 0x19
 1237 016a 49       		.uleb128 0x49
 1238 016b 13       		.uleb128 0x13
 1239 016c 34       		.uleb128 0x34
 1240 016d 19       		.uleb128 0x19
 1241 016e 3C       		.uleb128 0x3c
 1242 016f 19       		.uleb128 0x19
 1243 0170 01       		.uleb128 0x1
 1244 0171 13       		.uleb128 0x13
 1245 0172 00       		.byte	0
 1246 0173 00       		.byte	0
 1247 0174 1B       		.uleb128 0x1b
 1248 0175 05       		.uleb128 0x5
 1249 0176 00       		.byte	0
 1250 0177 49       		.uleb128 0x49
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 33


 1251 0178 13       		.uleb128 0x13
 1252 0179 00       		.byte	0
 1253 017a 00       		.byte	0
 1254 017b 1C       		.uleb128 0x1c
 1255 017c 26       		.uleb128 0x26
 1256 017d 00       		.byte	0
 1257 017e 00       		.byte	0
 1258 017f 00       		.byte	0
 1259 0180 1D       		.uleb128 0x1d
 1260 0181 2E       		.uleb128 0x2e
 1261 0182 00       		.byte	0
 1262 0183 3F       		.uleb128 0x3f
 1263 0184 19       		.uleb128 0x19
 1264 0185 03       		.uleb128 0x3
 1265 0186 0E       		.uleb128 0xe
 1266 0187 3A       		.uleb128 0x3a
 1267 0188 0B       		.uleb128 0xb
 1268 0189 3B       		.uleb128 0x3b
 1269 018a 0B       		.uleb128 0xb
 1270 018b 27       		.uleb128 0x27
 1271 018c 19       		.uleb128 0x19
 1272 018d 49       		.uleb128 0x49
 1273 018e 13       		.uleb128 0x13
 1274 018f 3C       		.uleb128 0x3c
 1275 0190 19       		.uleb128 0x19
 1276 0191 00       		.byte	0
 1277 0192 00       		.byte	0
 1278 0193 1E       		.uleb128 0x1e
 1279 0194 2E       		.uleb128 0x2e
 1280 0195 01       		.byte	0x1
 1281 0196 3F       		.uleb128 0x3f
 1282 0197 19       		.uleb128 0x19
 1283 0198 03       		.uleb128 0x3
 1284 0199 0E       		.uleb128 0xe
 1285 019a 3A       		.uleb128 0x3a
 1286 019b 0B       		.uleb128 0xb
 1287 019c 3B       		.uleb128 0x3b
 1288 019d 0B       		.uleb128 0xb
 1289 019e 27       		.uleb128 0x27
 1290 019f 19       		.uleb128 0x19
 1291 01a0 3C       		.uleb128 0x3c
 1292 01a1 19       		.uleb128 0x19
 1293 01a2 01       		.uleb128 0x1
 1294 01a3 13       		.uleb128 0x13
 1295 01a4 00       		.byte	0
 1296 01a5 00       		.byte	0
 1297 01a6 1F       		.uleb128 0x1f
 1298 01a7 2E       		.uleb128 0x2e
 1299 01a8 01       		.byte	0x1
 1300 01a9 3F       		.uleb128 0x3f
 1301 01aa 19       		.uleb128 0x19
 1302 01ab 03       		.uleb128 0x3
 1303 01ac 0E       		.uleb128 0xe
 1304 01ad 3A       		.uleb128 0x3a
 1305 01ae 0B       		.uleb128 0xb
 1306 01af 3B       		.uleb128 0x3b
 1307 01b0 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 34


 1308 01b1 27       		.uleb128 0x27
 1309 01b2 19       		.uleb128 0x19
 1310 01b3 3C       		.uleb128 0x3c
 1311 01b4 19       		.uleb128 0x19
 1312 01b5 00       		.byte	0
 1313 01b6 00       		.byte	0
 1314 01b7 00       		.byte	0
 1315              		.section	.debug_loc,"",%progbits
 1316              	.Ldebug_loc0:
 1317              	.LLST0:
 1318 0000 00000000 		.4byte	.LVL0
 1319 0004 1A000000 		.4byte	.LVL1
 1320 0008 0100     		.2byte	0x1
 1321 000a 50       		.byte	0x50
 1322 000b 1A000000 		.4byte	.LVL1
 1323 000f 64000000 		.4byte	.LVL4
 1324 0013 0100     		.2byte	0x1
 1325 0015 54       		.byte	0x54
 1326 0016 64000000 		.4byte	.LVL4
 1327 001a 9C000000 		.4byte	.LVL8
 1328 001e 0400     		.2byte	0x4
 1329 0020 F3       		.byte	0xf3
 1330 0021 01       		.uleb128 0x1
 1331 0022 50       		.byte	0x50
 1332 0023 9F       		.byte	0x9f
 1333 0024 9C000000 		.4byte	.LVL8
 1334 0028 A0000000 		.4byte	.LVL9
 1335 002c 0100     		.2byte	0x1
 1336 002e 50       		.byte	0x50
 1337 002f A0000000 		.4byte	.LVL9
 1338 0033 A6000000 		.4byte	.LVL10
 1339 0037 0400     		.2byte	0x4
 1340 0039 F3       		.byte	0xf3
 1341 003a 01       		.uleb128 0x1
 1342 003b 50       		.byte	0x50
 1343 003c 9F       		.byte	0x9f
 1344 003d A6000000 		.4byte	.LVL10
 1345 0041 B6000000 		.4byte	.LVL11
 1346 0045 0100     		.2byte	0x1
 1347 0047 54       		.byte	0x54
 1348 0048 B6000000 		.4byte	.LVL11
 1349 004c EC000000 		.4byte	.LFE1
 1350 0050 0400     		.2byte	0x4
 1351 0052 F3       		.byte	0xf3
 1352 0053 01       		.uleb128 0x1
 1353 0054 50       		.byte	0x50
 1354 0055 9F       		.byte	0x9f
 1355 0056 00000000 		.4byte	0
 1356 005a 00000000 		.4byte	0
 1357              	.LLST1:
 1358 005e 00000000 		.4byte	.LVL0
 1359 0062 1D000000 		.4byte	.LVL2-1
 1360 0066 0100     		.2byte	0x1
 1361 0068 51       		.byte	0x51
 1362 0069 1D000000 		.4byte	.LVL2-1
 1363 006d 9C000000 		.4byte	.LVL8
 1364 0071 0400     		.2byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 35


 1365 0073 F3       		.byte	0xf3
 1366 0074 01       		.uleb128 0x1
 1367 0075 51       		.byte	0x51
 1368 0076 9F       		.byte	0x9f
 1369 0077 9C000000 		.4byte	.LVL8
 1370 007b A0000000 		.4byte	.LVL9
 1371 007f 0100     		.2byte	0x1
 1372 0081 51       		.byte	0x51
 1373 0082 A0000000 		.4byte	.LVL9
 1374 0086 EC000000 		.4byte	.LFE1
 1375 008a 0400     		.2byte	0x4
 1376 008c F3       		.byte	0xf3
 1377 008d 01       		.uleb128 0x1
 1378 008e 51       		.byte	0x51
 1379 008f 9F       		.byte	0x9f
 1380 0090 00000000 		.4byte	0
 1381 0094 00000000 		.4byte	0
 1382              	.LLST2:
 1383 0098 58000000 		.4byte	.LVL3
 1384 009c 99000000 		.4byte	.LVL7-1
 1385 00a0 0100     		.2byte	0x1
 1386 00a2 50       		.byte	0x50
 1387 00a3 B6000000 		.4byte	.LVL11
 1388 00a7 EC000000 		.4byte	.LFE1
 1389 00ab 0100     		.2byte	0x1
 1390 00ad 50       		.byte	0x50
 1391 00ae 00000000 		.4byte	0
 1392 00b2 00000000 		.4byte	0
 1393              	.LLST3:
 1394 00b6 00000000 		.4byte	.LVL12
 1395 00ba 07000000 		.4byte	.LVL13-1
 1396 00be 0100     		.2byte	0x1
 1397 00c0 50       		.byte	0x50
 1398 00c1 07000000 		.4byte	.LVL13-1
 1399 00c5 2A000000 		.4byte	.LVL16
 1400 00c9 0100     		.2byte	0x1
 1401 00cb 54       		.byte	0x54
 1402 00cc 2A000000 		.4byte	.LVL16
 1403 00d0 2C000000 		.4byte	.LVL18
 1404 00d4 0400     		.2byte	0x4
 1405 00d6 F3       		.byte	0xf3
 1406 00d7 01       		.uleb128 0x1
 1407 00d8 50       		.byte	0x50
 1408 00d9 9F       		.byte	0x9f
 1409 00da 2C000000 		.4byte	.LVL18
 1410 00de 54000000 		.4byte	.LFE2
 1411 00e2 0100     		.2byte	0x1
 1412 00e4 54       		.byte	0x54
 1413 00e5 00000000 		.4byte	0
 1414 00e9 00000000 		.4byte	0
 1415              	.LLST4:
 1416 00ed 0A000000 		.4byte	.LVL14
 1417 00f1 2A000000 		.4byte	.LVL17
 1418 00f5 0100     		.2byte	0x1
 1419 00f7 55       		.byte	0x55
 1420 00f8 2C000000 		.4byte	.LVL18
 1421 00fc 54000000 		.4byte	.LFE2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 36


 1422 0100 0100     		.2byte	0x1
 1423 0102 55       		.byte	0x55
 1424 0103 00000000 		.4byte	0
 1425 0107 00000000 		.4byte	0
 1426              	.LLST5:
 1427 010b 00000000 		.4byte	.LVL20
 1428 010f 1C000000 		.4byte	.LVL21
 1429 0113 0100     		.2byte	0x1
 1430 0115 50       		.byte	0x50
 1431 0116 1C000000 		.4byte	.LVL21
 1432 011a 8E000000 		.4byte	.LVL27
 1433 011e 0100     		.2byte	0x1
 1434 0120 54       		.byte	0x54
 1435 0121 8E000000 		.4byte	.LVL27
 1436 0125 92000000 		.4byte	.LVL28
 1437 0129 0100     		.2byte	0x1
 1438 012b 50       		.byte	0x50
 1439 012c 92000000 		.4byte	.LVL28
 1440 0130 98000000 		.4byte	.LVL29
 1441 0134 0400     		.2byte	0x4
 1442 0136 F3       		.byte	0xf3
 1443 0137 01       		.uleb128 0x1
 1444 0138 50       		.byte	0x50
 1445 0139 9F       		.byte	0x9f
 1446 013a 98000000 		.4byte	.LVL29
 1447 013e CC000000 		.4byte	.LFE3
 1448 0142 0100     		.2byte	0x1
 1449 0144 54       		.byte	0x54
 1450 0145 00000000 		.4byte	0
 1451 0149 00000000 		.4byte	0
 1452              	.LLST6:
 1453 014d 00000000 		.4byte	.LVL20
 1454 0151 23000000 		.4byte	.LVL22-1
 1455 0155 0100     		.2byte	0x1
 1456 0157 51       		.byte	0x51
 1457 0158 23000000 		.4byte	.LVL22-1
 1458 015c 8E000000 		.4byte	.LVL27
 1459 0160 0400     		.2byte	0x4
 1460 0162 F3       		.byte	0xf3
 1461 0163 01       		.uleb128 0x1
 1462 0164 51       		.byte	0x51
 1463 0165 9F       		.byte	0x9f
 1464 0166 8E000000 		.4byte	.LVL27
 1465 016a 92000000 		.4byte	.LVL28
 1466 016e 0100     		.2byte	0x1
 1467 0170 51       		.byte	0x51
 1468 0171 92000000 		.4byte	.LVL28
 1469 0175 CC000000 		.4byte	.LFE3
 1470 0179 0400     		.2byte	0x4
 1471 017b F3       		.byte	0xf3
 1472 017c 01       		.uleb128 0x1
 1473 017d 51       		.byte	0x51
 1474 017e 9F       		.byte	0x9f
 1475 017f 00000000 		.4byte	0
 1476 0183 00000000 		.4byte	0
 1477              	.LLST7:
 1478 0187 50000000 		.4byte	.LVL23
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 37


 1479 018b 8B000000 		.4byte	.LVL26-1
 1480 018f 0100     		.2byte	0x1
 1481 0191 50       		.byte	0x50
 1482 0192 A4000000 		.4byte	.LVL30
 1483 0196 CC000000 		.4byte	.LFE3
 1484 019a 0100     		.2byte	0x1
 1485 019c 50       		.byte	0x50
 1486 019d 00000000 		.4byte	0
 1487 01a1 00000000 		.4byte	0
 1488              		.section	.debug_aranges,"",%progbits
 1489 0000 2C000000 		.4byte	0x2c
 1490 0004 0200     		.2byte	0x2
 1491 0006 00000000 		.4byte	.Ldebug_info0
 1492 000a 04       		.byte	0x4
 1493 000b 00       		.byte	0
 1494 000c 0000     		.2byte	0
 1495 000e 0000     		.2byte	0
 1496 0010 00000000 		.4byte	.LFB1
 1497 0014 EC000000 		.4byte	.LFE1-.LFB1
 1498 0018 00000000 		.4byte	.LFB2
 1499 001c 54000000 		.4byte	.LFE2-.LFB2
 1500 0020 00000000 		.4byte	.LFB3
 1501 0024 CC000000 		.4byte	.LFE3-.LFB3
 1502 0028 00000000 		.4byte	0
 1503 002c 00000000 		.4byte	0
 1504              		.section	.debug_ranges,"",%progbits
 1505              	.Ldebug_ranges0:
 1506 0000 00000000 		.4byte	.LFB1
 1507 0004 EC000000 		.4byte	.LFE1
 1508 0008 00000000 		.4byte	.LFB2
 1509 000c 54000000 		.4byte	.LFE2
 1510 0010 00000000 		.4byte	.LFB3
 1511 0014 CC000000 		.4byte	.LFE3
 1512 0018 00000000 		.4byte	0
 1513 001c 00000000 		.4byte	0
 1514              		.section	.debug_line,"",%progbits
 1515              	.Ldebug_line0:
 1516 0000 63010000 		.section	.debug_str,"MS",%progbits,1
 1516      02004F00 
 1516      00000201 
 1516      FB0E0D00 
 1516      01010101 
 1517              	.LASF15:
 1518 0000 63797374 		.ascii	"cystatus\000"
 1518      61747573 
 1518      00
 1519              	.LASF16:
 1520 0009 72656733 		.ascii	"reg32\000"
 1520      3200
 1521              	.LASF20:
 1522 000f 72657456 		.ascii	"retValue\000"
 1522      616C7565 
 1522      00
 1523              	.LASF21:
 1524 0018 726F774E 		.ascii	"rowNum\000"
 1524      756D00
 1525              	.LASF28:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 38


 1526 001f 43795379 		.ascii	"CySysSFlashWriteUserRow\000"
 1526      7353466C 
 1526      61736857 
 1526      72697465 
 1526      55736572 
 1527              	.LASF3:
 1528 0037 73686F72 		.ascii	"short unsigned int\000"
 1528      7420756E 
 1528      7369676E 
 1528      65642069 
 1528      6E7400
 1529              	.LASF8:
 1530 004a 756E7369 		.ascii	"unsigned int\000"
 1530      676E6564 
 1530      20696E74 
 1530      00
 1531              	.LASF12:
 1532 0057 666C6F61 		.ascii	"float\000"
 1532      7400
 1533              	.LASF7:
 1534 005d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1534      206C6F6E 
 1534      6720756E 
 1534      7369676E 
 1534      65642069 
 1535              	.LASF31:
 1536 0074 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1536      4320342E 
 1536      392E3320 
 1536      32303135 
 1536      30333033 
 1537 00a7 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1537      20726576 
 1537      6973696F 
 1537      6E203232 
 1537      31323230 
 1538 00da 32202D66 		.ascii	"2 -ffunction-sections -finline-functions -ffat-lto-"
 1538      66756E63 
 1538      74696F6E 
 1538      2D736563 
 1538      74696F6E 
 1539 010d 6F626A65 		.ascii	"objects\000"
 1539      63747300 
 1540              	.LASF1:
 1541 0115 756E7369 		.ascii	"unsigned char\000"
 1541      676E6564 
 1541      20636861 
 1541      7200
 1542              	.LASF22:
 1543 0123 726F7744 		.ascii	"rowData\000"
 1543      61746100 
 1544              	.LASF24:
 1545 012b 70617261 		.ascii	"parameters\000"
 1545      6D657465 
 1545      727300
 1546              	.LASF5:
 1547 0136 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 39


 1547      20756E73 
 1547      69676E65 
 1547      6420696E 
 1547      7400
 1548              	.LASF9:
 1549 0148 75696E74 		.ascii	"uint8\000"
 1549      3800
 1550              	.LASF13:
 1551 014e 646F7562 		.ascii	"double\000"
 1551      6C6500
 1552              	.LASF2:
 1553 0155 73686F72 		.ascii	"short int\000"
 1553      7420696E 
 1553      7400
 1554              	.LASF10:
 1555 015f 75696E74 		.ascii	"uint16\000"
 1555      313600
 1556              	.LASF11:
 1557 0166 75696E74 		.ascii	"uint32\000"
 1557      333200
 1558              	.LASF35:
 1559 016d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1559      74657243 
 1559      72697469 
 1559      63616C53 
 1559      65637469 
 1560              	.LASF32:
 1561 0184 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyFlash.c\000"
 1561      72617465 
 1561      645F536F 
 1561      75726365 
 1561      5C50536F 
 1562              	.LASF30:
 1563 01a5 43794578 		.ascii	"CyExitCriticalSection\000"
 1563      69744372 
 1563      69746963 
 1563      616C5365 
 1563      6374696F 
 1564              	.LASF25:
 1565 01bb 696E7465 		.ascii	"interruptState\000"
 1565      72727570 
 1565      74537461 
 1565      746500
 1566              	.LASF36:
 1567 01ca 43794861 		.ascii	"CyHalt\000"
 1567      6C7400
 1568              	.LASF17:
 1569 01d1 73697A65 		.ascii	"sizetype\000"
 1569      74797065 
 1569      00
 1570              	.LASF6:
 1571 01da 6C6F6E67 		.ascii	"long long int\000"
 1571      206C6F6E 
 1571      6720696E 
 1571      7400
 1572              	.LASF29:
 1573 01e8 6D656D63 		.ascii	"memcpy\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccpJMVdn.s 			page 40


 1573      707900
 1574              	.LASF26:
 1575 01ef 66726571 		.ascii	"freq\000"
 1575      00
 1576              	.LASF23:
 1577 01f4 636C6B43 		.ascii	"clkCnfRetValue\000"
 1577      6E665265 
 1577      7456616C 
 1577      756500
 1578              	.LASF19:
 1579 0203 43795379 		.ascii	"CySysFlashClockRestore\000"
 1579      73466C61 
 1579      7368436C 
 1579      6F636B52 
 1579      6573746F 
 1580              	.LASF18:
 1581 021a 43795379 		.ascii	"CySysFlashClockBackup\000"
 1581      73466C61 
 1581      7368436C 
 1581      6F636B42 
 1581      61636B75 
 1582              	.LASF4:
 1583 0230 6C6F6E67 		.ascii	"long int\000"
 1583      20696E74 
 1583      00
 1584              	.LASF14:
 1585 0239 63686172 		.ascii	"char\000"
 1585      00
 1586              	.LASF33:
 1587 023e 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 1587      73657273 
 1587      5C676C65 
 1587      6E6E5C4F 
 1587      6E654472 
 1588 026c 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 1588      69737475 
 1588      72655F53 
 1588      656E736F 
 1588      725C4D6F 
 1589              	.LASF0:
 1590 0294 7369676E 		.ascii	"signed char\000"
 1590      65642063 
 1590      68617200 
 1591              	.LASF27:
 1592 02a0 43795379 		.ascii	"CySysFlashWriteRow\000"
 1592      73466C61 
 1592      73685772 
 1592      69746552 
 1592      6F7700
 1593              	.LASF34:
 1594 02b3 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 1594      73466C61 
 1594      73685365 
 1594      74576169 
 1594      74437963 
 1595              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
