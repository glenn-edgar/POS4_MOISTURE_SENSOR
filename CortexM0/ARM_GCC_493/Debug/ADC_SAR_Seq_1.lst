ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Start, %function
  23              	ADC_SAR_Seq_1_Start:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 2


  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 64 0
  27              		.cfi_startproc
  28 0000 38B5     		push	{r3, r4, r5, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 3, -16
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  34              		.loc 1 66 0
  35 0002 2A4C     		ldr	r4, .L11
  36 0004 2378     		ldrb	r3, [r4]
  37 0006 002B     		cmp	r3, #0
  38 0008 11D0     		beq	.L10
  39              	.L2:
  40              	.LBB10:
  41              	.LBB11:
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 3


  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 4


 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 5


 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 6


 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 7


 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
  42              		.loc 1 332 0
  43 000a 294B     		ldr	r3, .L11+4
  44 000c 1B68     		ldr	r3, [r3]
  45 000e 002B     		cmp	r3, #0
  46 0010 0CDB     		blt	.L1
  47              	.LBB12:
  48              	.LBB13:
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
  49              		.loc 1 336 0
  50 0012 284A     		ldr	r2, .L11+8
  51              	.L7:
  52 0014 1368     		ldr	r3, [r2]
  53 0016 002B     		cmp	r3, #0
  54 0018 FCDB     		blt	.L7
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
  55              		.loc 1 342 0
  56 001a 8021     		mov	r1, #128
  57 001c 244A     		ldr	r2, .L11+4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 8


  58 001e 0906     		lsl	r1, r1, #24
  59 0020 1368     		ldr	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
  60              		.loc 1 345 0
  61 0022 0A20     		mov	r0, #10
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
  62              		.loc 1 342 0
  63 0024 0B43     		orr	r3, r1
  64 0026 1360     		str	r3, [r2]
  65              		.loc 1 345 0
  66 0028 FFF7FEFF 		bl	CyDelayUs
  67              	.LVL0:
  68              	.L1:
  69              	.LBE13:
  70              	.LBE12:
  71              	.LBE11:
  72              	.LBE10:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  73              		.loc 1 72 0
  74              		@ sp needed
  75 002c 38BD     		pop	{r3, r4, r5, pc}
  76              	.L10:
  77              	.LBB14:
  78              	.LBB15:
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  79              		.loc 1 172 0
  80 002e 1020     		mov	r0, #16
  81 0030 0321     		mov	r1, #3
  82 0032 FFF7FEFF 		bl	CyIntSetPriority
  83              	.LVL1:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
  84              		.loc 1 173 0
  85 0036 1020     		mov	r0, #16
  86 0038 1F49     		ldr	r1, .L11+12
  87 003a FFF7FEFF 		bl	CyIntSetVector
  88              	.LVL2:
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  89              		.loc 1 177 0
  90 003e 0122     		mov	r2, #1
  91 0040 1E4B     		ldr	r3, .L11+16
  92 0042 1A60     		str	r2, [r3]
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
  93              		.loc 1 180 0
  94 0044 1E4B     		ldr	r3, .L11+20
  95 0046 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
  96              		.loc 1 178 0
  97 0048 002B     		cmp	r3, #0
  98 004a 2CDB     		blt	.L6
  99 004c 1D49     		ldr	r1, .L11+24
 100              	.L3:
 101 004e 184A     		ldr	r2, .L11+4
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 102              		.loc 1 206 0
 103 0050 1D48     		ldr	r0, .L11+28
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 9


 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 104              		.loc 1 178 0
 105 0052 1368     		ldr	r3, [r2]
 106 0054 0B43     		orr	r3, r1
 107 0056 1360     		str	r3, [r2]
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 108              		.loc 1 182 0
 109 0058 1C4A     		ldr	r2, .L11+32
 110 005a 1D4B     		ldr	r3, .L11+36
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 111              		.loc 1 185 0
 112 005c 1D49     		ldr	r1, .L11+40
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 113              		.loc 1 182 0
 114 005e 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
 115              		.loc 1 183 0
 116 0060 1D4A     		ldr	r2, .L11+44
 117 0062 1E4B     		ldr	r3, .L11+48
 118 0064 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 119              		.loc 1 184 0
 120 0066 0022     		mov	r2, #0
 121 0068 1D4B     		ldr	r3, .L11+52
 122 006a 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 123              		.loc 1 185 0
 124 006c 1D4B     		ldr	r3, .L11+56
 125 006e 0B60     		str	r3, [r1]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 126              		.loc 1 186 0
 127 0070 1D49     		ldr	r1, .L11+60
 128 0072 0B60     		str	r3, [r1]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 129              		.loc 1 199 0
 130 0074 0121     		mov	r1, #1
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 131              		.loc 1 197 0
 132 0076 1D4B     		ldr	r3, .L11+64
 133 0078 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 134              		.loc 1 198 0
 135 007a 1D4B     		ldr	r3, .L11+68
 136 007c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 137              		.loc 1 199 0
 138 007e 1D4B     		ldr	r3, .L11+72
 139 0080 1960     		str	r1, [r3]
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 140              		.loc 1 206 0
 141 0082 0568     		ldr	r5, [r0]
 142              	.LVL3:
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 143              		.loc 1 221 0
 144 0084 1C4B     		ldr	r3, .L11+76
 145 0086 2B40     		and	r3, r5
 146 0088 8025     		mov	r5, #128
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 10


 147              	.LVL4:
 148 008a AD05     		lsl	r5, r5, #22
 149 008c 2B43     		orr	r3, r5
 150              	.LVL5:
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 151              		.loc 1 226 0
 152 008e 0360     		str	r3, [r0]
 153              	.LVL6:
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 154              		.loc 1 253 0
 155 0090 1A4B     		ldr	r3, .L11+80
 156 0092 1A60     		str	r2, [r3]
 157              	.LVL7:
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 158              		.loc 1 296 0
 159 0094 1A4A     		ldr	r2, .L11+84
 160 0096 1B4B     		ldr	r3, .L11+88
 161              	.LBE15:
 162              	.LBE14:
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 163              		.loc 1 69 0
 164 0098 2170     		strb	r1, [r4]
 165              	.LBB17:
 166              	.LBB16:
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 167              		.loc 1 296 0
 168 009a 1A80     		strh	r2, [r3]
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 169              		.loc 1 311 0
 170 009c 8022     		mov	r2, #128
 171 009e 1A4B     		ldr	r3, .L11+92
 172 00a0 9201     		lsl	r2, r2, #6
 173 00a2 1A60     		str	r2, [r3]
 174              	.LVL8:
 175 00a4 B1E7     		b	.L2
 176              	.LVL9:
 177              	.L6:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 178              		.loc 1 178 0
 179 00a6 1949     		ldr	r1, .L11+96
 180 00a8 D1E7     		b	.L3
 181              	.L12:
 182 00aa C046     		.align	2
 183              	.L11:
 184 00ac 00000000 		.word	.LANCHOR0
 185 00b0 00003A40 		.word	1077542912
 186 00b4 08023A40 		.word	1077543432
 187 00b8 00000000 		.word	ADC_SAR_Seq_1_ISR
 188 00bc 20003A40 		.word	1077542944
 189 00c0 80033A40 		.word	1077543808
 190 00c4 600E0053 		.word	1392512608
 191 00c8 30003A40 		.word	1077542960
 192 00cc BC000080 		.word	-2147483460
 193 00d0 04003A40 		.word	1077542916
 194 00d4 10003A40 		.word	1077542928
 195 00d8 0000FF07 		.word	134152192
 196 00dc 18003A40 		.word	1077542936
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 11


 197 00e0 1C003A40 		.word	1077542940
 198 00e4 02000200 		.word	131074
 199 00e8 14003A40 		.word	1077542932
 200 00ec 28023A40 		.word	1077543464
 201 00f0 38023A40 		.word	1077543480
 202 00f4 18023A40 		.word	1077543448
 203 00f8 FEFFFFDF 		.word	-536870914
 204 00fc 80003A40 		.word	1077543040
 205 0100 00F8FFFF 		.word	-2048
 206 0104 00000000 		.word	ADC_SAR_Seq_1_offset
 207 0108 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 208 010c 600E1053 		.word	1393561184
 209              	.LBE16:
 210              	.LBE17:
 211              		.cfi_endproc
 212              	.LFE1:
 213              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 214              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
 215              		.align	2
 216              		.global	ADC_SAR_Seq_1_Init
 217              		.code	16
 218              		.thumb_func
 219              		.type	ADC_SAR_Seq_1_Init, %function
 220              	ADC_SAR_Seq_1_Init:
 221              	.LFB2:
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
 222              		.loc 1 95 0
 223              		.cfi_startproc
 224 0000 08B5     		push	{r3, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
 228              		.loc 1 172 0
 229 0002 1020     		mov	r0, #16
 230 0004 0321     		mov	r1, #3
 231 0006 FFF7FEFF 		bl	CyIntSetPriority
 232              	.LVL10:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 233              		.loc 1 173 0
 234 000a 1020     		mov	r0, #16
 235 000c 1B49     		ldr	r1, .L16
 236 000e FFF7FEFF 		bl	CyIntSetVector
 237              	.LVL11:
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 238              		.loc 1 177 0
 239 0012 0122     		mov	r2, #1
 240 0014 1A4B     		ldr	r3, .L16+4
 241 0016 1A60     		str	r2, [r3]
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 242              		.loc 1 180 0
 243 0018 1A4B     		ldr	r3, .L16+8
 244 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 245              		.loc 1 178 0
 246 001c 002B     		cmp	r3, #0
 247 001e 2BDB     		blt	.L15
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 12


 248 0020 1949     		ldr	r1, .L16+12
 249              	.L14:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 250              		.loc 1 178 0 is_stmt 0 discriminator 4
 251 0022 1A4A     		ldr	r2, .L16+16
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 252              		.loc 1 314 0 is_stmt 1 discriminator 4
 253              		@ sp needed
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 254              		.loc 1 178 0 discriminator 4
 255 0024 1368     		ldr	r3, [r2]
 256 0026 0B43     		orr	r3, r1
 257 0028 1360     		str	r3, [r2]
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 258              		.loc 1 182 0 discriminator 4
 259 002a 194A     		ldr	r2, .L16+20
 260 002c 194B     		ldr	r3, .L16+24
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 261              		.loc 1 185 0 discriminator 4
 262 002e 1A49     		ldr	r1, .L16+28
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 263              		.loc 1 182 0 discriminator 4
 264 0030 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
 265              		.loc 1 183 0 discriminator 4
 266 0032 1A4A     		ldr	r2, .L16+32
 267 0034 1A4B     		ldr	r3, .L16+36
 268 0036 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 269              		.loc 1 184 0 discriminator 4
 270 0038 0022     		mov	r2, #0
 271 003a 1A4B     		ldr	r3, .L16+40
 272 003c 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 273              		.loc 1 185 0 discriminator 4
 274 003e 1A4B     		ldr	r3, .L16+44
 275 0040 0B60     		str	r3, [r1]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 276              		.loc 1 186 0 discriminator 4
 277 0042 1A49     		ldr	r1, .L16+48
 278 0044 0B60     		str	r3, [r1]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 279              		.loc 1 199 0 discriminator 4
 280 0046 0121     		mov	r1, #1
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 281              		.loc 1 197 0 discriminator 4
 282 0048 194B     		ldr	r3, .L16+52
 283 004a 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 284              		.loc 1 198 0 discriminator 4
 285 004c 194B     		ldr	r3, .L16+56
 286 004e 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 287              		.loc 1 199 0 discriminator 4
 288 0050 194B     		ldr	r3, .L16+60
 289 0052 1960     		str	r1, [r3]
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 13


 290              		.loc 1 206 0 discriminator 4
 291 0054 1949     		ldr	r1, .L16+64
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 292              		.loc 1 221 0 discriminator 4
 293 0056 1A4B     		ldr	r3, .L16+68
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 294              		.loc 1 206 0 discriminator 4
 295 0058 0868     		ldr	r0, [r1]
 296              	.LVL12:
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 297              		.loc 1 221 0 discriminator 4
 298 005a 0340     		and	r3, r0
 299 005c 8020     		mov	r0, #128
 300              	.LVL13:
 301 005e 8005     		lsl	r0, r0, #22
 302 0060 0343     		orr	r3, r0
 303              	.LVL14:
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 304              		.loc 1 226 0 discriminator 4
 305 0062 0B60     		str	r3, [r1]
 306              	.LVL15:
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 307              		.loc 1 253 0 discriminator 4
 308 0064 174B     		ldr	r3, .L16+72
 309 0066 1A60     		str	r2, [r3]
 310              	.LVL16:
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 311              		.loc 1 296 0 discriminator 4
 312 0068 174A     		ldr	r2, .L16+76
 313 006a 184B     		ldr	r3, .L16+80
 314 006c 1A80     		strh	r2, [r3]
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 315              		.loc 1 311 0 discriminator 4
 316 006e 8022     		mov	r2, #128
 317 0070 174B     		ldr	r3, .L16+84
 318 0072 9201     		lsl	r2, r2, #6
 319 0074 1A60     		str	r2, [r3]
 320              	.LVL17:
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 321              		.loc 1 314 0 discriminator 4
 322 0076 08BD     		pop	{r3, pc}
 323              	.LVL18:
 324              	.L15:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 325              		.loc 1 178 0
 326 0078 1649     		ldr	r1, .L16+88
 327 007a D2E7     		b	.L14
 328              	.L17:
 329              		.align	2
 330              	.L16:
 331 007c 00000000 		.word	ADC_SAR_Seq_1_ISR
 332 0080 20003A40 		.word	1077542944
 333 0084 80033A40 		.word	1077543808
 334 0088 600E0053 		.word	1392512608
 335 008c 00003A40 		.word	1077542912
 336 0090 BC000080 		.word	-2147483460
 337 0094 04003A40 		.word	1077542916
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 14


 338 0098 10003A40 		.word	1077542928
 339 009c 0000FF07 		.word	134152192
 340 00a0 18003A40 		.word	1077542936
 341 00a4 1C003A40 		.word	1077542940
 342 00a8 02000200 		.word	131074
 343 00ac 14003A40 		.word	1077542932
 344 00b0 28023A40 		.word	1077543464
 345 00b4 38023A40 		.word	1077543480
 346 00b8 18023A40 		.word	1077543448
 347 00bc 30003A40 		.word	1077542960
 348 00c0 FEFFFFDF 		.word	-536870914
 349 00c4 80003A40 		.word	1077543040
 350 00c8 00F8FFFF 		.word	-2048
 351 00cc 00000000 		.word	ADC_SAR_Seq_1_offset
 352 00d0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 353 00d4 600E1053 		.word	1393561184
 354              		.cfi_endproc
 355              	.LFE2:
 356              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 357              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 358              		.align	2
 359              		.global	ADC_SAR_Seq_1_Enable
 360              		.code	16
 361              		.thumb_func
 362              		.type	ADC_SAR_Seq_1_Enable, %function
 363              	ADC_SAR_Seq_1_Enable:
 364              	.LFB3:
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 365              		.loc 1 331 0
 366              		.cfi_startproc
 367 0000 08B5     		push	{r3, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 371              		.loc 1 332 0
 372 0002 094B     		ldr	r3, .L23
 373 0004 1B68     		ldr	r3, [r3]
 374 0006 002B     		cmp	r3, #0
 375 0008 0CDB     		blt	.L18
 376              	.LBB20:
 377              	.LBB21:
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 378              		.loc 1 336 0
 379 000a 084A     		ldr	r2, .L23+4
 380              	.L21:
 381 000c 1368     		ldr	r3, [r2]
 382 000e 002B     		cmp	r3, #0
 383 0010 FCDB     		blt	.L21
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 384              		.loc 1 342 0
 385 0012 8021     		mov	r1, #128
 386 0014 044A     		ldr	r2, .L23
 387 0016 0906     		lsl	r1, r1, #24
 388 0018 1368     		ldr	r3, [r2]
 389              		.loc 1 345 0
 390 001a 0A20     		mov	r0, #10
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 15


 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 391              		.loc 1 342 0
 392 001c 0B43     		orr	r3, r1
 393 001e 1360     		str	r3, [r2]
 394              		.loc 1 345 0
 395 0020 FFF7FEFF 		bl	CyDelayUs
 396              	.LVL19:
 397              	.L18:
 398              	.LBE21:
 399              	.LBE20:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 400              		.loc 1 347 0
 401              		@ sp needed
 402 0024 08BD     		pop	{r3, pc}
 403              	.L24:
 404 0026 C046     		.align	2
 405              	.L23:
 406 0028 00003A40 		.word	1077542912
 407 002c 08023A40 		.word	1077543432
 408              		.cfi_endproc
 409              	.LFE3:
 410              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 411              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 412              		.align	2
 413              		.global	ADC_SAR_Seq_1_Stop
 414              		.code	16
 415              		.thumb_func
 416              		.type	ADC_SAR_Seq_1_Stop, %function
 417              	ADC_SAR_Seq_1_Stop:
 418              	.LFB4:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 419              		.loc 1 366 0
 420              		.cfi_startproc
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 421              		.loc 1 367 0
 422 0000 024A     		ldr	r2, .L26
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 423              		.loc 1 368 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 16


 424              		@ sp needed
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 425              		.loc 1 367 0
 426 0002 1368     		ldr	r3, [r2]
 427 0004 5B00     		lsl	r3, r3, #1
 428 0006 5B08     		lsr	r3, r3, #1
 429 0008 1360     		str	r3, [r2]
 430              		.loc 1 368 0
 431 000a 7047     		bx	lr
 432              	.L27:
 433              		.align	2
 434              	.L26:
 435 000c 00003A40 		.word	1077542912
 436              		.cfi_endproc
 437              	.LFE4:
 438              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 439              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 440              		.align	2
 441              		.global	ADC_SAR_Seq_1_StartConvert
 442              		.code	16
 443              		.thumb_func
 444              		.type	ADC_SAR_Seq_1_StartConvert, %function
 445              	ADC_SAR_Seq_1_StartConvert:
 446              	.LFB5:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 447              		.loc 1 392 0
 448              		.cfi_startproc
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 449              		.loc 1 394 0
 450 0000 8021     		mov	r1, #128
 451 0002 034A     		ldr	r2, .L29
 452 0004 4902     		lsl	r1, r1, #9
 453 0006 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 17


 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 454              		.loc 1 399 0
 455              		@ sp needed
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 456              		.loc 1 394 0
 457 0008 0B43     		orr	r3, r1
 458 000a 1360     		str	r3, [r2]
 459              		.loc 1 399 0
 460 000c 7047     		bx	lr
 461              	.L30:
 462 000e C046     		.align	2
 463              	.L29:
 464 0010 04003A40 		.word	1077542916
 465              		.cfi_endproc
 466              	.LFE5:
 467              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 468              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 469              		.align	2
 470              		.global	ADC_SAR_Seq_1_StopConvert
 471              		.code	16
 472              		.thumb_func
 473              		.type	ADC_SAR_Seq_1_StopConvert, %function
 474              	ADC_SAR_Seq_1_StopConvert:
 475              	.LFB6:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 476              		.loc 1 417 0
 477              		.cfi_startproc
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 478              		.loc 1 419 0
 479 0000 024A     		ldr	r2, .L32
 480 0002 034B     		ldr	r3, .L32+4
 481 0004 1168     		ldr	r1, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 482              		.loc 1 421 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 18


 483              		@ sp needed
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 484              		.loc 1 419 0
 485 0006 0B40     		and	r3, r1
 486 0008 1360     		str	r3, [r2]
 487              		.loc 1 421 0
 488 000a 7047     		bx	lr
 489              	.L33:
 490              		.align	2
 491              	.L32:
 492 000c 04003A40 		.word	1077542916
 493 0010 FFFFFEFF 		.word	-65537
 494              		.cfi_endproc
 495              	.LFE6:
 496              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 497              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 498              		.align	2
 499              		.global	ADC_SAR_Seq_1_IsEndConversion
 500              		.code	16
 501              		.thumb_func
 502              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 503              	ADC_SAR_Seq_1_IsEndConversion:
 504              	.LFB7:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 505              		.loc 1 451 0
 506              		.cfi_startproc
 507              	.LVL20:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 19


 508              		.loc 1 452 0
 509 0000 0023     		mov	r3, #0
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 510              		.loc 1 454 0
 511 0002 8207     		lsl	r2, r0, #30
 512 0004 0DD0     		beq	.L39
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 513              		.loc 1 459 0 discriminator 2
 514 0006 0233     		add	r3, r3, #2
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 515              		.loc 1 458 0 discriminator 2
 516 0008 0749     		ldr	r1, .L44
 517 000a 0122     		mov	r2, #1
 518              		.loc 1 459 0 discriminator 2
 519 000c 1840     		and	r0, r3
 520              	.LVL21:
 521 000e 01E0     		b	.L40
 522              	.LVL22:
 523              	.L43:
 524              		.loc 1 459 0 is_stmt 0 discriminator 1
 525 0010 0028     		cmp	r0, #0
 526 0012 06D0     		beq	.L39
 527              	.LVL23:
 528              	.L40:
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 529              		.loc 1 458 0 is_stmt 1 discriminator 2
 530 0014 0B68     		ldr	r3, [r1]
 531 0016 1340     		and	r3, r2
 532              	.LVL24:
 533              		.loc 1 459 0 discriminator 2
 534 0018 FAD0     		beq	.L43
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 535              		.loc 1 464 0
 536 001a 0122     		mov	r2, #1
 537 001c 024B     		ldr	r3, .L44
 538              	.LVL25:
 539 001e 1A60     		str	r2, [r3]
 540 0020 0123     		mov	r3, #1
 541              	.LVL26:
 542              	.L39:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 20


 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 543              		.loc 1 486 0
 544 0022 181C     		mov	r0, r3
 545              		@ sp needed
 546 0024 7047     		bx	lr
 547              	.L45:
 548 0026 C046     		.align	2
 549              	.L44:
 550 0028 10023A40 		.word	1077543440
 551              		.cfi_endproc
 552              	.LFE7:
 553              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 554              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 555              		.align	2
 556              		.global	ADC_SAR_Seq_1_GetResult16
 557              		.code	16
 558              		.thumb_func
 559              		.type	ADC_SAR_Seq_1_GetResult16, %function
 560              	ADC_SAR_Seq_1_GetResult16:
 561              	.LFB8:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 562              		.loc 1 505 0
 563              		.cfi_startproc
 564              	.LVL27:
 565 0000 08B5     		push	{r3, lr}
 566              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 21


 567              		.cfi_offset 3, -8
 568              		.cfi_offset 14, -4
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 569              		.loc 1 509 0
 570 0002 0028     		cmp	r0, #0
 571 0004 04D1     		bne	.L50
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 572              		.loc 1 513 0
 573 0006 054B     		ldr	r3, .L51
 574 0008 1868     		ldr	r0, [r3]
 575              	.LVL28:
 576 000a 80B2     		uxth	r0, r0
 577              	.LVL29:
 578              	.L48:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 579              		.loc 1 525 0
 580 000c 00B2     		sxth	r0, r0
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 581              		.loc 1 526 0
 582              		@ sp needed
 583 000e 08BD     		pop	{r3, pc}
 584              	.LVL30:
 585              	.L50:
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 586              		.loc 1 509 0 discriminator 1
 587 0010 0020     		mov	r0, #0
 588              	.LVL31:
 589 0012 FFF7FEFF 		bl	CyHalt
 590              	.LVL32:
 591 0016 0020     		mov	r0, #0
 592 0018 F8E7     		b	.L48
 593              	.L52:
 594 001a C046     		.align	2
 595              	.L51:
 596 001c 80013A40 		.word	1077543296
 597              		.cfi_endproc
 598              	.LFE8:
 599              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 600              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 601              		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 22


 602              		.global	ADC_SAR_Seq_1_SetChanMask
 603              		.code	16
 604              		.thumb_func
 605              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 606              	ADC_SAR_Seq_1_SetChanMask:
 607              	.LFB9:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 608              		.loc 1 550 0
 609              		.cfi_startproc
 610              	.LVL33:
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 611              		.loc 1 551 0
 612 0000 0123     		mov	r3, #1
 613 0002 1840     		and	r0, r3
 614              	.LVL34:
 615 0004 014B     		ldr	r3, .L54
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 616              		.loc 1 552 0
 617              		@ sp needed
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 618              		.loc 1 551 0
 619 0006 1860     		str	r0, [r3]
 620              		.loc 1 552 0
 621 0008 7047     		bx	lr
 622              	.L55:
 623 000a C046     		.align	2
 624              	.L54:
 625 000c 20003A40 		.word	1077542944
 626              		.cfi_endproc
 627              	.LFE9:
 628              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 629              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 630              		.align	2
 631              		.global	ADC_SAR_Seq_1_SetLowLimit
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 23


 632              		.code	16
 633              		.thumb_func
 634              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 635              	ADC_SAR_Seq_1_SetLowLimit:
 636              	.LFB10:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 637              		.loc 1 594 0
 638              		.cfi_startproc
 639              	.LVL35:
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 640              		.loc 1 595 0
 641 0000 054A     		ldr	r2, .L57
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 642              		.loc 1 596 0
 643 0002 0004     		lsl	r0, r0, #16
 644              	.LVL36:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 24


 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 645              		.loc 1 595 0
 646 0004 1368     		ldr	r3, [r2]
 647              		.loc 1 596 0
 648 0006 000C     		lsr	r0, r0, #16
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 649              		.loc 1 595 0
 650 0008 1B0C     		lsr	r3, r3, #16
 651 000a 1B04     		lsl	r3, r3, #16
 652 000c 1360     		str	r3, [r2]
 653              		.loc 1 596 0
 654 000e 1368     		ldr	r3, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 655              		.loc 1 597 0
 656              		@ sp needed
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 657              		.loc 1 596 0
 658 0010 1843     		orr	r0, r3
 659 0012 1060     		str	r0, [r2]
 660              		.loc 1 597 0
 661 0014 7047     		bx	lr
 662              	.L58:
 663 0016 C046     		.align	2
 664              	.L57:
 665 0018 18003A40 		.word	1077542936
 666              		.cfi_endproc
 667              	.LFE10:
 668              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 669              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 670              		.align	2
 671              		.global	ADC_SAR_Seq_1_SetHighLimit
 672              		.code	16
 673              		.thumb_func
 674              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 675              	ADC_SAR_Seq_1_SetHighLimit:
 676              	.LFB11:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 677              		.loc 1 615 0
 678              		.cfi_startproc
 679              	.LVL37:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 25


 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 680              		.loc 1 616 0
 681 0000 044A     		ldr	r2, .L60
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 682              		.loc 1 617 0
 683 0002 0004     		lsl	r0, r0, #16
 684              	.LVL38:
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 685              		.loc 1 616 0
 686 0004 1368     		ldr	r3, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 687              		.loc 1 618 0
 688              		@ sp needed
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 689              		.loc 1 616 0
 690 0006 1B04     		lsl	r3, r3, #16
 691 0008 1B0C     		lsr	r3, r3, #16
 692 000a 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 693              		.loc 1 617 0
 694 000c 1368     		ldr	r3, [r2]
 695 000e 1843     		orr	r0, r3
 696 0010 1060     		str	r0, [r2]
 697              		.loc 1 618 0
 698 0012 7047     		bx	lr
 699              	.L61:
 700              		.align	2
 701              	.L60:
 702 0014 18003A40 		.word	1077542936
 703              		.cfi_endproc
 704              	.LFE11:
 705              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 706              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 707              		.align	2
 708              		.global	ADC_SAR_Seq_1_SetLimitMask
 709              		.code	16
 710              		.thumb_func
 711              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 712              	ADC_SAR_Seq_1_SetLimitMask:
 713              	.LFB12:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 26


 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 714              		.loc 1 639 0
 715              		.cfi_startproc
 716              	.LVL39:
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 717              		.loc 1 640 0
 718 0000 0123     		mov	r3, #1
 719 0002 1840     		and	r0, r3
 720              	.LVL40:
 721 0004 014B     		ldr	r3, .L63
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 722              		.loc 1 641 0
 723              		@ sp needed
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 724              		.loc 1 640 0
 725 0006 1860     		str	r0, [r3]
 726              		.loc 1 641 0
 727 0008 7047     		bx	lr
 728              	.L64:
 729 000a C046     		.align	2
 730              	.L63:
 731 000c 38023A40 		.word	1077543480
 732              		.cfi_endproc
 733              	.LFE12:
 734              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 735              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 736              		.align	2
 737              		.global	ADC_SAR_Seq_1_SetSatMask
 738              		.code	16
 739              		.thumb_func
 740              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 741              	ADC_SAR_Seq_1_SetSatMask:
 742              	.LFB13:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 27


 743              		.loc 1 662 0
 744              		.cfi_startproc
 745              	.LVL41:
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 746              		.loc 1 663 0
 747 0000 0123     		mov	r3, #1
 748 0002 1840     		and	r0, r3
 749              	.LVL42:
 750 0004 014B     		ldr	r3, .L66
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 751              		.loc 1 664 0
 752              		@ sp needed
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 753              		.loc 1 663 0
 754 0006 1860     		str	r0, [r3]
 755              		.loc 1 664 0
 756 0008 7047     		bx	lr
 757              	.L67:
 758 000a C046     		.align	2
 759              	.L66:
 760 000c 28023A40 		.word	1077543464
 761              		.cfi_endproc
 762              	.LFE13:
 763              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 764              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 765              		.align	2
 766              		.global	ADC_SAR_Seq_1_SetOffset
 767              		.code	16
 768              		.thumb_func
 769              		.type	ADC_SAR_Seq_1_SetOffset, %function
 770              	ADC_SAR_Seq_1_SetOffset:
 771              	.LFB14:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 28


 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 772              		.loc 1 690 0
 773              		.cfi_startproc
 774              	.LVL43:
 775 0000 38B5     		push	{r3, r4, r5, lr}
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 3, -16
 778              		.cfi_offset 4, -12
 779              		.cfi_offset 5, -8
 780              		.cfi_offset 14, -4
 781              		.loc 1 690 0
 782 0002 041C     		mov	r4, r0
 783 0004 0D1C     		mov	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 784              		.loc 1 692 0
 785 0006 0028     		cmp	r0, #0
 786 0008 02D0     		beq	.L69
 787              		.loc 1 692 0 is_stmt 0 discriminator 1
 788 000a 0020     		mov	r0, #0
 789              	.LVL44:
 790 000c FFF7FEFF 		bl	CyHalt
 791              	.LVL45:
 792              	.L69:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 793              		.loc 1 694 0 is_stmt 1
 794 0010 014B     		ldr	r3, .L73
 795 0012 6400     		lsl	r4, r4, #1
 796              	.LVL46:
 797 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 798              		.loc 1 695 0
 799              		@ sp needed
 800 0016 38BD     		pop	{r3, r4, r5, pc}
 801              	.L74:
 802              		.align	2
 803              	.L73:
 804 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 805              		.cfi_endproc
 806              	.LFE14:
 807              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 808              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 809              		.align	2
 810              		.global	ADC_SAR_Seq_1_SetGain
 811              		.code	16
 812              		.thumb_func
 813              		.type	ADC_SAR_Seq_1_SetGain, %function
 814              	ADC_SAR_Seq_1_SetGain:
 815              	.LFB15:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 29


 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 816              		.loc 1 724 0
 817              		.cfi_startproc
 818              	.LVL47:
 819 0000 38B5     		push	{r3, r4, r5, lr}
 820              		.cfi_def_cfa_offset 16
 821              		.cfi_offset 3, -16
 822              		.cfi_offset 4, -12
 823              		.cfi_offset 5, -8
 824              		.cfi_offset 14, -4
 825              		.loc 1 724 0
 826 0002 041C     		mov	r4, r0
 827 0004 0D1C     		mov	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 828              		.loc 1 726 0
 829 0006 0028     		cmp	r0, #0
 830 0008 02D0     		beq	.L76
 831              		.loc 1 726 0 is_stmt 0 discriminator 1
 832 000a 0020     		mov	r0, #0
 833              	.LVL48:
 834 000c FFF7FEFF 		bl	CyHalt
 835              	.LVL49:
 836              	.L76:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 837              		.loc 1 728 0 is_stmt 1
 838 0010 014B     		ldr	r3, .L80
 839 0012 A400     		lsl	r4, r4, #2
 840              	.LVL50:
 841 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 842              		.loc 1 729 0
 843              		@ sp needed
 844              	.LVL51:
 845 0016 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 30


 846              	.L81:
 847              		.align	2
 848              	.L80:
 849 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 850              		.cfi_endproc
 851              	.LFE15:
 852              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 853              		.global	__aeabi_idiv
 854              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 855              		.align	2
 856              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 857              		.code	16
 858              		.thumb_func
 859              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 860              	ADC_SAR_Seq_1_CountsTo_mVolts:
 861              	.LFB16:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 862              		.loc 1 757 0
 863              		.cfi_startproc
 864              	.LVL52:
 865 0000 38B5     		push	{r3, r4, r5, lr}
 866              		.cfi_def_cfa_offset 16
 867              		.cfi_offset 3, -16
 868              		.cfi_offset 4, -12
 869              		.cfi_offset 5, -8
 870              		.cfi_offset 14, -4
 871              		.loc 1 757 0
 872 0002 051C     		mov	r5, r0
 873 0004 0C1C     		mov	r4, r1
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 31


 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 874              		.loc 1 761 0
 875 0006 0028     		cmp	r0, #0
 876 0008 19D1     		bne	.L89
 877              	.LVL53:
 878              	.L83:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 879              		.loc 1 772 0
 880 000a 0F4B     		ldr	r3, .L90
 881 000c 6A00     		lsl	r2, r5, #1
 882 000e D15A     		ldrh	r1, [r2, r3]
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 883              		.loc 1 774 0
 884 0010 0E48     		ldr	r0, .L90+4
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 885              		.loc 1 772 0
 886 0012 611A     		sub	r1, r4, r1
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 887              		.loc 1 775 0
 888 0014 0E4A     		ldr	r2, .L90+8
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 889              		.loc 1 772 0
 890 0016 09B2     		sxth	r1, r1
 891              	.LVL54:
 892              		.loc 1 775 0
 893 0018 AD00     		lsl	r5, r5, #2
 894              	.LVL55:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 895              		.loc 1 774 0
 896 001a 4843     		mul	r0, r1
 897              		.loc 1 775 0
 898 001c 5359     		ldr	r3, [r2, r5]
 899 001e 0029     		cmp	r1, #0
 900 0020 08DD     		ble	.L84
 901              		.loc 1 775 0 is_stmt 0 discriminator 1
 902 0022 D90F     		lsr	r1, r3, #31
 903              	.LVL56:
 904 0024 CB18     		add	r3, r1, r3
 905 0026 5B10     		asr	r3, r3, #1
 906              	.L85:
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 907              		.loc 1 776 0 is_stmt 1
 908 0028 5159     		ldr	r1, [r2, r5]
 909              	.LVL57:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 32


 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 910              		.loc 1 774 0
 911 002a C018     		add	r0, r0, r3
 912              	.LVL58:
 913              		.loc 1 776 0
 914 002c FFF7FEFF 		bl	__aeabi_idiv
 915              	.LVL59:
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 916              		.loc 1 779 0
 917              		@ sp needed
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 918              		.loc 1 778 0
 919 0030 00B2     		sxth	r0, r0
 920              		.loc 1 779 0
 921 0032 38BD     		pop	{r3, r4, r5, pc}
 922              	.LVL60:
 923              	.L84:
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 924              		.loc 1 775 0 discriminator 2
 925 0034 D90F     		lsr	r1, r3, #31
 926              	.LVL61:
 927 0036 CB18     		add	r3, r1, r3
 928 0038 5B10     		asr	r3, r3, #1
 929 003a 5B42     		neg	r3, r3
 930 003c F4E7     		b	.L85
 931              	.LVL62:
 932              	.L89:
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 933              		.loc 1 761 0 discriminator 1
 934 003e 0020     		mov	r0, #0
 935              	.LVL63:
 936 0040 FFF7FEFF 		bl	CyHalt
 937              	.LVL64:
 938 0044 E1E7     		b	.L83
 939              	.L91:
 940 0046 C046     		.align	2
 941              	.L90:
 942 0048 00000000 		.word	ADC_SAR_Seq_1_offset
 943 004c 10270000 		.word	10000
 944 0050 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 945              		.cfi_endproc
 946              	.LFE16:
 947              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 948              		.global	__aeabi_lmul
 949              		.global	__aeabi_ldivmod
 950              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 951              		.align	2
 952              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 953              		.code	16
 954              		.thumb_func
 955              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 956              	ADC_SAR_Seq_1_CountsTo_uVolts:
 957              	.LFB17:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 33


 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 958              		.loc 1 811 0
 959              		.cfi_startproc
 960              	.LVL65:
 961 0000 38B5     		push	{r3, r4, r5, lr}
 962              		.cfi_def_cfa_offset 16
 963              		.cfi_offset 3, -16
 964              		.cfi_offset 4, -12
 965              		.cfi_offset 5, -8
 966              		.cfi_offset 14, -4
 967              		.loc 1 811 0
 968 0002 051C     		mov	r5, r0
 969 0004 0C1C     		mov	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 970              		.loc 1 815 0
 971 0006 0028     		cmp	r0, #0
 972 0008 02D0     		beq	.L93
 973              		.loc 1 815 0 is_stmt 0 discriminator 1
 974 000a 0020     		mov	r0, #0
 975              	.LVL66:
 976 000c FFF7FEFF 		bl	CyHalt
 977              	.LVL67:
 978              	.L93:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 34


 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 979              		.loc 1 826 0 is_stmt 1
 980 0010 084B     		ldr	r3, .L97
 981 0012 6A00     		lsl	r2, r5, #1
 982 0014 D05A     		ldrh	r0, [r2, r3]
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 983              		.loc 1 828 0
 984 0016 084B     		ldr	r3, .L97+4
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 985              		.loc 1 826 0
 986 0018 241A     		sub	r4, r4, r0
 987              	.LVL68:
 988              		.loc 1 828 0
 989 001a AD00     		lsl	r5, r5, #2
 990              	.LVL69:
 991 001c ED58     		ldr	r5, [r5, r3]
 992              	.LVL70:
 993 001e 20B2     		sxth	r0, r4
 994 0020 064A     		ldr	r2, .L97+8
 995 0022 0023     		mov	r3, #0
 996 0024 C117     		asr	r1, r0, #31
 997 0026 FFF7FEFF 		bl	__aeabi_lmul
 998              	.LVL71:
 999 002a EB17     		asr	r3, r5, #31
 1000 002c 2A1C     		mov	r2, r5
 1001 002e FFF7FEFF 		bl	__aeabi_ldivmod
 1002              	.LVL72:
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1003              		.loc 1 831 0
 1004              		@ sp needed
 1005              	.LVL73:
 1006 0032 38BD     		pop	{r3, r4, r5, pc}
 1007              	.L98:
 1008              		.align	2
 1009              	.L97:
 1010 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 1011 0038 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1012 003c 80969800 		.word	10000000
 1013              		.cfi_endproc
 1014              	.LFE17:
 1015              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 1016              		.global	__aeabi_i2f
 1017              		.global	__aeabi_fmul
 1018              		.global	__aeabi_fdiv
 1019              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 1020              		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 35


 1021              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 1022              		.code	16
 1023              		.thumb_func
 1024              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 1025              	ADC_SAR_Seq_1_CountsTo_Volts:
 1026              	.LFB18:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1027              		.loc 1 856 0
 1028              		.cfi_startproc
 1029              	.LVL74:
 1030 0000 38B5     		push	{r3, r4, r5, lr}
 1031              		.cfi_def_cfa_offset 16
 1032              		.cfi_offset 3, -16
 1033              		.cfi_offset 4, -12
 1034              		.cfi_offset 5, -8
 1035              		.cfi_offset 14, -4
 1036              		.loc 1 856 0
 1037 0002 051C     		mov	r5, r0
 1038 0004 0C1C     		mov	r4, r1
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1039              		.loc 1 860 0
 1040 0006 0028     		cmp	r0, #0
 1041 0008 02D0     		beq	.L100
 1042              		.loc 1 860 0 is_stmt 0 discriminator 1
 1043 000a 0020     		mov	r0, #0
 1044              	.LVL75:
 1045 000c FFF7FEFF 		bl	CyHalt
 1046              	.LVL76:
 1047              	.L100:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 36


 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1048              		.loc 1 871 0 is_stmt 1
 1049 0010 0A4B     		ldr	r3, .L104
 1050 0012 6A00     		lsl	r2, r5, #1
 1051 0014 D05A     		ldrh	r0, [r2, r3]
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 1052              		.loc 1 873 0
 1053 0016 0A4B     		ldr	r3, .L104+4
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 1054              		.loc 1 871 0
 1055 0018 241A     		sub	r4, r4, r0
 1056              	.LVL77:
 1057              		.loc 1 873 0
 1058 001a 20B2     		sxth	r0, r4
 1059 001c AD00     		lsl	r5, r5, #2
 1060              	.LVL78:
 1061 001e ED58     		ldr	r5, [r5, r3]
 1062              	.LVL79:
 1063 0020 FFF7FEFF 		bl	__aeabi_i2f
 1064              	.LVL80:
 1065 0024 0749     		ldr	r1, .L104+8
 1066 0026 FFF7FEFF 		bl	__aeabi_fmul
 1067              	.LVL81:
 1068 002a 041C     		add	r4, r0, #0
 1069              	.LVL82:
 1070 002c 281C     		mov	r0, r5
 1071 002e FFF7FEFF 		bl	__aeabi_i2f
 1072              	.LVL83:
 1073 0032 011C     		add	r1, r0, #0
 1074 0034 201C     		add	r0, r4, #0
 1075 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1076              	.LVL84:
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1077              		.loc 1 876 0
 1078              		@ sp needed
 1079 003a 38BD     		pop	{r3, r4, r5, pc}
 1080              	.L105:
 1081              		.align	2
 1082              	.L104:
 1083 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 1084 0040 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1085 0044 00002041 		.word	1092616192
 1086              		.cfi_endproc
 1087              	.LFE18:
 1088              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 37


 1089              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 1090              		.comm	ADC_SAR_Seq_1_offset,2,4
 1091              		.global	ADC_SAR_Seq_1_initVar
 1092              		.bss
 1093              		.set	.LANCHOR0,. + 0
 1094              		.type	ADC_SAR_Seq_1_initVar, %object
 1095              		.size	ADC_SAR_Seq_1_initVar, 1
 1096              	ADC_SAR_Seq_1_initVar:
 1097 0000 00       		.space	1
 1098              		.text
 1099              	.Letext0:
 1100              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1101              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1102              		.section	.debug_info,"",%progbits
 1103              	.Ldebug_info0:
 1104 0000 25060000 		.4byte	0x625
 1105 0004 0400     		.2byte	0x4
 1106 0006 00000000 		.4byte	.Ldebug_abbrev0
 1107 000a 04       		.byte	0x4
 1108 000b 01       		.uleb128 0x1
 1109 000c 3E000000 		.4byte	.LASF61
 1110 0010 01       		.byte	0x1
 1111 0011 19030000 		.4byte	.LASF62
 1112 0015 B5030000 		.4byte	.LASF63
 1113 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1114 001d 00000000 		.4byte	0
 1115 0021 00000000 		.4byte	.Ldebug_line0
 1116 0025 02       		.uleb128 0x2
 1117 0026 08       		.byte	0x8
 1118 0027 07       		.byte	0x7
 1119 0028 27010000 		.4byte	.LASF0
 1120 002c 02       		.uleb128 0x2
 1121 002d 04       		.byte	0x4
 1122 002e 04       		.byte	0x4
 1123 002f 40030000 		.4byte	.LASF1
 1124 0033 02       		.uleb128 0x2
 1125 0034 08       		.byte	0x8
 1126 0035 05       		.byte	0x5
 1127 0036 6D010000 		.4byte	.LASF2
 1128 003a 03       		.uleb128 0x3
 1129 003b 04       		.byte	0x4
 1130 003c 05       		.byte	0x5
 1131 003d 696E7400 		.ascii	"int\000"
 1132 0041 02       		.uleb128 0x2
 1133 0042 02       		.byte	0x2
 1134 0043 05       		.byte	0x5
 1135 0044 8E030000 		.4byte	.LASF3
 1136 0048 02       		.uleb128 0x2
 1137 0049 01       		.byte	0x1
 1138 004a 06       		.byte	0x6
 1139 004b 7B010000 		.4byte	.LASF4
 1140 004f 02       		.uleb128 0x2
 1141 0050 01       		.byte	0x1
 1142 0051 08       		.byte	0x8
 1143 0052 80030000 		.4byte	.LASF5
 1144 0056 02       		.uleb128 0x2
 1145 0057 02       		.byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 38


 1146 0058 07       		.byte	0x7
 1147 0059 64020000 		.4byte	.LASF6
 1148 005d 02       		.uleb128 0x2
 1149 005e 04       		.byte	0x4
 1150 005f 05       		.byte	0x5
 1151 0060 C6010000 		.4byte	.LASF7
 1152 0064 02       		.uleb128 0x2
 1153 0065 04       		.byte	0x4
 1154 0066 07       		.byte	0x7
 1155 0067 42020000 		.4byte	.LASF8
 1156 006b 02       		.uleb128 0x2
 1157 006c 04       		.byte	0x4
 1158 006d 07       		.byte	0x7
 1159 006e 2E020000 		.4byte	.LASF9
 1160 0072 04       		.uleb128 0x4
 1161 0073 CF010000 		.4byte	.LASF10
 1162 0077 02       		.byte	0x2
 1163 0078 9801     		.2byte	0x198
 1164 007a 4F000000 		.4byte	0x4f
 1165 007e 04       		.uleb128 0x4
 1166 007f 15000000 		.4byte	.LASF11
 1167 0083 02       		.byte	0x2
 1168 0084 9901     		.2byte	0x199
 1169 0086 56000000 		.4byte	0x56
 1170 008a 04       		.uleb128 0x4
 1171 008b E6010000 		.4byte	.LASF12
 1172 008f 02       		.byte	0x2
 1173 0090 9A01     		.2byte	0x19a
 1174 0092 64000000 		.4byte	0x64
 1175 0096 04       		.uleb128 0x4
 1176 0097 AA040000 		.4byte	.LASF13
 1177 009b 02       		.byte	0x2
 1178 009c 9C01     		.2byte	0x19c
 1179 009e 41000000 		.4byte	0x41
 1180 00a2 04       		.uleb128 0x4
 1181 00a3 A2010000 		.4byte	.LASF14
 1182 00a7 02       		.byte	0x2
 1183 00a8 9D01     		.2byte	0x19d
 1184 00aa 5D000000 		.4byte	0x5d
 1185 00ae 04       		.uleb128 0x4
 1186 00af B0020000 		.4byte	.LASF15
 1187 00b3 02       		.byte	0x2
 1188 00b4 9E01     		.2byte	0x19e
 1189 00b6 2C000000 		.4byte	0x2c
 1190 00ba 02       		.uleb128 0x2
 1191 00bb 08       		.byte	0x8
 1192 00bc 04       		.byte	0x4
 1193 00bd DF010000 		.4byte	.LASF16
 1194 00c1 04       		.uleb128 0x4
 1195 00c2 02030000 		.4byte	.LASF17
 1196 00c6 02       		.byte	0x2
 1197 00c7 A301     		.2byte	0x1a3
 1198 00c9 33000000 		.4byte	0x33
 1199 00cd 02       		.uleb128 0x2
 1200 00ce 01       		.byte	0x1
 1201 00cf 08       		.byte	0x8
 1202 00d0 30040000 		.4byte	.LASF18
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 39


 1203 00d4 04       		.uleb128 0x4
 1204 00d5 AA020000 		.4byte	.LASF19
 1205 00d9 02       		.byte	0x2
 1206 00da 4402     		.2byte	0x244
 1207 00dc E0000000 		.4byte	0xe0
 1208 00e0 05       		.uleb128 0x5
 1209 00e1 8A000000 		.4byte	0x8a
 1210 00e5 04       		.uleb128 0x4
 1211 00e6 35040000 		.4byte	.LASF20
 1212 00ea 02       		.byte	0x2
 1213 00eb 5402     		.2byte	0x254
 1214 00ed F1000000 		.4byte	0xf1
 1215 00f1 06       		.uleb128 0x6
 1216 00f2 04       		.byte	0x4
 1217 00f3 F7000000 		.4byte	0xf7
 1218 00f7 07       		.uleb128 0x7
 1219 00f8 02       		.uleb128 0x2
 1220 00f9 04       		.byte	0x4
 1221 00fa 07       		.byte	0x7
 1222 00fb B8020000 		.4byte	.LASF21
 1223 00ff 08       		.uleb128 0x8
 1224 0100 3E010000 		.4byte	.LASF64
 1225 0104 01       		.byte	0x1
 1226 0105 4A01     		.2byte	0x14a
 1227 0107 01       		.byte	0x1
 1228 0108 09       		.uleb128 0x9
 1229 0109 1C000000 		.4byte	.LASF58
 1230 010d 01       		.byte	0x1
 1231 010e 5E       		.byte	0x5e
 1232 010f 01       		.byte	0x1
 1233 0110 36010000 		.4byte	0x136
 1234 0114 0A       		.uleb128 0xa
 1235 0115 25040000 		.4byte	.LASF22
 1236 0119 01       		.byte	0x1
 1237 011a 60       		.byte	0x60
 1238 011b 8A000000 		.4byte	0x8a
 1239 011f 0A       		.uleb128 0xa
 1240 0120 5A020000 		.4byte	.LASF23
 1241 0124 01       		.byte	0x1
 1242 0125 61       		.byte	0x61
 1243 0126 8A000000 		.4byte	0x8a
 1244 012a 0A       		.uleb128 0xa
 1245 012b 37000000 		.4byte	.LASF24
 1246 012f 01       		.byte	0x1
 1247 0130 62       		.byte	0x62
 1248 0131 A2000000 		.4byte	0xa2
 1249 0135 00       		.byte	0
 1250 0136 0B       		.uleb128 0xb
 1251 0137 13010000 		.4byte	.LASF34
 1252 013b 01       		.byte	0x1
 1253 013c 3F       		.byte	0x3f
 1254 013d 00000000 		.4byte	.LFB1
 1255 0141 10010000 		.4byte	.LFE1-.LFB1
 1256 0145 01       		.uleb128 0x1
 1257 0146 9C       		.byte	0x9c
 1258 0147 C7010000 		.4byte	0x1c7
 1259 014b 0C       		.uleb128 0xc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 40


 1260 014c FF000000 		.4byte	0xff
 1261 0150 0A000000 		.4byte	.LBB10
 1262 0154 22000000 		.4byte	.LBE10-.LBB10
 1263 0158 01       		.byte	0x1
 1264 0159 47       		.byte	0x47
 1265 015a 6E010000 		.4byte	0x16e
 1266 015e 0D       		.uleb128 0xd
 1267 015f 2C000000 		.4byte	.LVL0
 1268 0163 DA050000 		.4byte	0x5da
 1269 0167 0E       		.uleb128 0xe
 1270 0168 01       		.uleb128 0x1
 1271 0169 50       		.byte	0x50
 1272 016a 01       		.uleb128 0x1
 1273 016b 3A       		.byte	0x3a
 1274 016c 00       		.byte	0
 1275 016d 00       		.byte	0
 1276 016e 0F       		.uleb128 0xf
 1277 016f 08010000 		.4byte	0x108
 1278 0173 2E000000 		.4byte	.LBB14
 1279 0177 00000000 		.4byte	.Ldebug_ranges0+0
 1280 017b 01       		.byte	0x1
 1281 017c 44       		.byte	0x44
 1282 017d 10       		.uleb128 0x10
 1283 017e 00000000 		.4byte	.Ldebug_ranges0+0
 1284 0182 11       		.uleb128 0x11
 1285 0183 14010000 		.4byte	0x114
 1286 0187 00000000 		.4byte	.LLST0
 1287 018b 11       		.uleb128 0x11
 1288 018c 1F010000 		.4byte	0x11f
 1289 0190 20000000 		.4byte	.LLST1
 1290 0194 11       		.uleb128 0x11
 1291 0195 2A010000 		.4byte	0x12a
 1292 0199 50000000 		.4byte	.LLST2
 1293 019d 12       		.uleb128 0x12
 1294 019e 36000000 		.4byte	.LVL1
 1295 01a2 EB050000 		.4byte	0x5eb
 1296 01a6 B5010000 		.4byte	0x1b5
 1297 01aa 0E       		.uleb128 0xe
 1298 01ab 01       		.uleb128 0x1
 1299 01ac 51       		.byte	0x51
 1300 01ad 01       		.uleb128 0x1
 1301 01ae 33       		.byte	0x33
 1302 01af 0E       		.uleb128 0xe
 1303 01b0 01       		.uleb128 0x1
 1304 01b1 50       		.byte	0x50
 1305 01b2 01       		.uleb128 0x1
 1306 01b3 40       		.byte	0x40
 1307 01b4 00       		.byte	0
 1308 01b5 0D       		.uleb128 0xd
 1309 01b6 3E000000 		.4byte	.LVL2
 1310 01ba 01060000 		.4byte	0x601
 1311 01be 0E       		.uleb128 0xe
 1312 01bf 01       		.uleb128 0x1
 1313 01c0 50       		.byte	0x50
 1314 01c1 01       		.uleb128 0x1
 1315 01c2 40       		.byte	0x40
 1316 01c3 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 41


 1317 01c4 00       		.byte	0
 1318 01c5 00       		.byte	0
 1319 01c6 00       		.byte	0
 1320 01c7 13       		.uleb128 0x13
 1321 01c8 08010000 		.4byte	0x108
 1322 01cc 00000000 		.4byte	.LFB2
 1323 01d0 D8000000 		.4byte	.LFE2-.LFB2
 1324 01d4 01       		.uleb128 0x1
 1325 01d5 9C       		.byte	0x9c
 1326 01d6 1D020000 		.4byte	0x21d
 1327 01da 11       		.uleb128 0x11
 1328 01db 14010000 		.4byte	0x114
 1329 01df 66000000 		.4byte	.LLST3
 1330 01e3 11       		.uleb128 0x11
 1331 01e4 1F010000 		.4byte	0x11f
 1332 01e8 86000000 		.4byte	.LLST4
 1333 01ec 11       		.uleb128 0x11
 1334 01ed 2A010000 		.4byte	0x12a
 1335 01f1 B6000000 		.4byte	.LLST5
 1336 01f5 12       		.uleb128 0x12
 1337 01f6 0A000000 		.4byte	.LVL10
 1338 01fa EB050000 		.4byte	0x5eb
 1339 01fe 0D020000 		.4byte	0x20d
 1340 0202 0E       		.uleb128 0xe
 1341 0203 01       		.uleb128 0x1
 1342 0204 51       		.byte	0x51
 1343 0205 01       		.uleb128 0x1
 1344 0206 33       		.byte	0x33
 1345 0207 0E       		.uleb128 0xe
 1346 0208 01       		.uleb128 0x1
 1347 0209 50       		.byte	0x50
 1348 020a 01       		.uleb128 0x1
 1349 020b 40       		.byte	0x40
 1350 020c 00       		.byte	0
 1351 020d 0D       		.uleb128 0xd
 1352 020e 12000000 		.4byte	.LVL11
 1353 0212 01060000 		.4byte	0x601
 1354 0216 0E       		.uleb128 0xe
 1355 0217 01       		.uleb128 0x1
 1356 0218 50       		.byte	0x50
 1357 0219 01       		.uleb128 0x1
 1358 021a 40       		.byte	0x40
 1359 021b 00       		.byte	0
 1360 021c 00       		.byte	0
 1361 021d 13       		.uleb128 0x13
 1362 021e FF000000 		.4byte	0xff
 1363 0222 00000000 		.4byte	.LFB3
 1364 0226 30000000 		.4byte	.LFE3-.LFB3
 1365 022a 01       		.uleb128 0x1
 1366 022b 9C       		.byte	0x9c
 1367 022c 40020000 		.4byte	0x240
 1368 0230 0D       		.uleb128 0xd
 1369 0231 24000000 		.4byte	.LVL19
 1370 0235 DA050000 		.4byte	0x5da
 1371 0239 0E       		.uleb128 0xe
 1372 023a 01       		.uleb128 0x1
 1373 023b 50       		.byte	0x50
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 42


 1374 023c 01       		.uleb128 0x1
 1375 023d 3A       		.byte	0x3a
 1376 023e 00       		.byte	0
 1377 023f 00       		.byte	0
 1378 0240 14       		.uleb128 0x14
 1379 0241 5C030000 		.4byte	.LASF25
 1380 0245 01       		.byte	0x1
 1381 0246 6D01     		.2byte	0x16d
 1382 0248 00000000 		.4byte	.LFB4
 1383 024c 10000000 		.4byte	.LFE4-.LFB4
 1384 0250 01       		.uleb128 0x1
 1385 0251 9C       		.byte	0x9c
 1386 0252 14       		.uleb128 0x14
 1387 0253 DF000000 		.4byte	.LASF26
 1388 0257 01       		.byte	0x1
 1389 0258 8701     		.2byte	0x187
 1390 025a 00000000 		.4byte	.LFB5
 1391 025e 14000000 		.4byte	.LFE5-.LFB5
 1392 0262 01       		.uleb128 0x1
 1393 0263 9C       		.byte	0x9c
 1394 0264 14       		.uleb128 0x14
 1395 0265 E8020000 		.4byte	.LASF27
 1396 0269 01       		.byte	0x1
 1397 026a A001     		.2byte	0x1a0
 1398 026c 00000000 		.4byte	.LFB6
 1399 0270 14000000 		.4byte	.LFE6-.LFB6
 1400 0274 01       		.uleb128 0x1
 1401 0275 9C       		.byte	0x9c
 1402 0276 15       		.uleb128 0x15
 1403 0277 CA020000 		.4byte	.LASF28
 1404 027b 01       		.byte	0x1
 1405 027c C201     		.2byte	0x1c2
 1406 027e 8A000000 		.4byte	0x8a
 1407 0282 00000000 		.4byte	.LFB7
 1408 0286 2C000000 		.4byte	.LFE7-.LFB7
 1409 028a 01       		.uleb128 0x1
 1410 028b 9C       		.byte	0x9c
 1411 028c B1020000 		.4byte	0x2b1
 1412 0290 16       		.uleb128 0x16
 1413 0291 10020000 		.4byte	.LASF30
 1414 0295 01       		.byte	0x1
 1415 0296 C201     		.2byte	0x1c2
 1416 0298 8A000000 		.4byte	0x8a
 1417 029c CC000000 		.4byte	.LLST6
 1418 02a0 17       		.uleb128 0x17
 1419 02a1 8B040000 		.4byte	.LASF32
 1420 02a5 01       		.byte	0x1
 1421 02a6 C401     		.2byte	0x1c4
 1422 02a8 8A000000 		.4byte	0x8a
 1423 02ac ED000000 		.4byte	.LLST7
 1424 02b0 00       		.byte	0
 1425 02b1 15       		.uleb128 0x15
 1426 02b2 53010000 		.4byte	.LASF29
 1427 02b6 01       		.byte	0x1
 1428 02b7 F801     		.2byte	0x1f8
 1429 02b9 96000000 		.4byte	0x96
 1430 02bd 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 43


 1431 02c1 20000000 		.4byte	.LFE8-.LFB8
 1432 02c5 01       		.uleb128 0x1
 1433 02c6 9C       		.byte	0x9c
 1434 02c7 FB020000 		.4byte	0x2fb
 1435 02cb 16       		.uleb128 0x16
 1436 02cc 2B040000 		.4byte	.LASF31
 1437 02d0 01       		.byte	0x1
 1438 02d1 F801     		.2byte	0x1f8
 1439 02d3 8A000000 		.4byte	0x8a
 1440 02d7 17010000 		.4byte	.LLST8
 1441 02db 17       		.uleb128 0x17
 1442 02dc CB040000 		.4byte	.LASF33
 1443 02e0 01       		.byte	0x1
 1444 02e1 FA01     		.2byte	0x1fa
 1445 02e3 8A000000 		.4byte	0x8a
 1446 02e7 51010000 		.4byte	.LLST9
 1447 02eb 0D       		.uleb128 0xd
 1448 02ec 16000000 		.4byte	.LVL32
 1449 02f0 1B060000 		.4byte	0x61b
 1450 02f4 0E       		.uleb128 0xe
 1451 02f5 01       		.uleb128 0x1
 1452 02f6 50       		.byte	0x50
 1453 02f7 01       		.uleb128 0x1
 1454 02f8 30       		.byte	0x30
 1455 02f9 00       		.byte	0
 1456 02fa 00       		.byte	0
 1457 02fb 18       		.uleb128 0x18
 1458 02fc 0B040000 		.4byte	.LASF35
 1459 0300 01       		.byte	0x1
 1460 0301 2502     		.2byte	0x225
 1461 0303 00000000 		.4byte	.LFB9
 1462 0307 10000000 		.4byte	.LFE9-.LFB9
 1463 030b 01       		.uleb128 0x1
 1464 030c 9C       		.byte	0x9c
 1465 030d 22030000 		.4byte	0x322
 1466 0311 16       		.uleb128 0x16
 1467 0312 ED010000 		.4byte	.LASF36
 1468 0316 01       		.byte	0x1
 1469 0317 2502     		.2byte	0x225
 1470 0319 8A000000 		.4byte	0x8a
 1471 031d 6A010000 		.4byte	.LLST10
 1472 0321 00       		.byte	0
 1473 0322 18       		.uleb128 0x18
 1474 0323 42040000 		.4byte	.LASF37
 1475 0327 01       		.byte	0x1
 1476 0328 5102     		.2byte	0x251
 1477 032a 00000000 		.4byte	.LFB10
 1478 032e 1C000000 		.4byte	.LFE10-.LFB10
 1479 0332 01       		.uleb128 0x1
 1480 0333 9C       		.byte	0x9c
 1481 0334 49030000 		.4byte	0x349
 1482 0338 16       		.uleb128 0x16
 1483 0339 C1020000 		.4byte	.LASF38
 1484 033d 01       		.byte	0x1
 1485 033e 5102     		.2byte	0x251
 1486 0340 8A000000 		.4byte	0x8a
 1487 0344 8B010000 		.4byte	.LLST11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 44


 1488 0348 00       		.byte	0
 1489 0349 18       		.uleb128 0x18
 1490 034a 87010000 		.4byte	.LASF39
 1491 034e 01       		.byte	0x1
 1492 034f 6602     		.2byte	0x266
 1493 0351 00000000 		.4byte	.LFB11
 1494 0355 18000000 		.4byte	.LFE11-.LFB11
 1495 0359 01       		.uleb128 0x1
 1496 035a 9C       		.byte	0x9c
 1497 035b 70030000 		.4byte	0x370
 1498 035f 16       		.uleb128 0x16
 1499 0360 6F030000 		.4byte	.LASF40
 1500 0364 01       		.byte	0x1
 1501 0365 6602     		.2byte	0x266
 1502 0367 8A000000 		.4byte	0x8a
 1503 036b AC010000 		.4byte	.LLST12
 1504 036f 00       		.byte	0
 1505 0370 18       		.uleb128 0x18
 1506 0371 B0040000 		.4byte	.LASF41
 1507 0375 01       		.byte	0x1
 1508 0376 7E02     		.2byte	0x27e
 1509 0378 00000000 		.4byte	.LFB12
 1510 037c 10000000 		.4byte	.LFE12-.LFB12
 1511 0380 01       		.uleb128 0x1
 1512 0381 9C       		.byte	0x9c
 1513 0382 97030000 		.4byte	0x397
 1514 0386 16       		.uleb128 0x16
 1515 0387 ED010000 		.4byte	.LASF36
 1516 038b 01       		.byte	0x1
 1517 038c 7E02     		.2byte	0x27e
 1518 038e 8A000000 		.4byte	0x8a
 1519 0392 CD010000 		.4byte	.LLST13
 1520 0396 00       		.byte	0
 1521 0397 18       		.uleb128 0x18
 1522 0398 FA000000 		.4byte	.LASF42
 1523 039c 01       		.byte	0x1
 1524 039d 9502     		.2byte	0x295
 1525 039f 00000000 		.4byte	.LFB13
 1526 03a3 10000000 		.4byte	.LFE13-.LFB13
 1527 03a7 01       		.uleb128 0x1
 1528 03a8 9C       		.byte	0x9c
 1529 03a9 BE030000 		.4byte	0x3be
 1530 03ad 16       		.uleb128 0x16
 1531 03ae ED010000 		.4byte	.LASF36
 1532 03b2 01       		.byte	0x1
 1533 03b3 9502     		.2byte	0x295
 1534 03b5 8A000000 		.4byte	0x8a
 1535 03b9 EE010000 		.4byte	.LLST14
 1536 03bd 00       		.byte	0
 1537 03be 18       		.uleb128 0x18
 1538 03bf 92040000 		.4byte	.LASF43
 1539 03c3 01       		.byte	0x1
 1540 03c4 B102     		.2byte	0x2b1
 1541 03c6 00000000 		.4byte	.LFB14
 1542 03ca 1C000000 		.4byte	.LFE14-.LFB14
 1543 03ce 01       		.uleb128 0x1
 1544 03cf 9C       		.byte	0x9c
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 45


 1545 03d0 04040000 		.4byte	0x404
 1546 03d4 16       		.uleb128 0x16
 1547 03d5 2B040000 		.4byte	.LASF31
 1548 03d9 01       		.byte	0x1
 1549 03da B102     		.2byte	0x2b1
 1550 03dc 8A000000 		.4byte	0x8a
 1551 03e0 0F020000 		.4byte	.LLST15
 1552 03e4 16       		.uleb128 0x16
 1553 03e5 5C040000 		.4byte	.LASF44
 1554 03e9 01       		.byte	0x1
 1555 03ea B102     		.2byte	0x2b1
 1556 03ec 96000000 		.4byte	0x96
 1557 03f0 3B020000 		.4byte	.LLST16
 1558 03f4 0D       		.uleb128 0xd
 1559 03f5 10000000 		.4byte	.LVL45
 1560 03f9 1B060000 		.4byte	0x61b
 1561 03fd 0E       		.uleb128 0xe
 1562 03fe 01       		.uleb128 0x1
 1563 03ff 50       		.byte	0x50
 1564 0400 01       		.uleb128 0x1
 1565 0401 30       		.byte	0x30
 1566 0402 00       		.byte	0
 1567 0403 00       		.byte	0
 1568 0404 18       		.uleb128 0x18
 1569 0405 46030000 		.4byte	.LASF45
 1570 0409 01       		.byte	0x1
 1571 040a D302     		.2byte	0x2d3
 1572 040c 00000000 		.4byte	.LFB15
 1573 0410 1C000000 		.4byte	.LFE15-.LFB15
 1574 0414 01       		.uleb128 0x1
 1575 0415 9C       		.byte	0x9c
 1576 0416 4A040000 		.4byte	0x44a
 1577 041a 16       		.uleb128 0x16
 1578 041b 2B040000 		.4byte	.LASF31
 1579 041f 01       		.byte	0x1
 1580 0420 D302     		.2byte	0x2d3
 1581 0422 8A000000 		.4byte	0x8a
 1582 0426 5C020000 		.4byte	.LLST17
 1583 042a 16       		.uleb128 0x16
 1584 042b 2F000000 		.4byte	.LASF46
 1585 042f 01       		.byte	0x1
 1586 0430 D302     		.2byte	0x2d3
 1587 0432 A2000000 		.4byte	0xa2
 1588 0436 88020000 		.4byte	.LLST18
 1589 043a 0D       		.uleb128 0xd
 1590 043b 10000000 		.4byte	.LVL49
 1591 043f 1B060000 		.4byte	0x61b
 1592 0443 0E       		.uleb128 0xe
 1593 0444 01       		.uleb128 0x1
 1594 0445 50       		.byte	0x50
 1595 0446 01       		.uleb128 0x1
 1596 0447 30       		.byte	0x30
 1597 0448 00       		.byte	0
 1598 0449 00       		.byte	0
 1599 044a 19       		.uleb128 0x19
 1600 044b F2010000 		.4byte	.LASF47
 1601 044f 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 46


 1602 0450 F402     		.2byte	0x2f4
 1603 0452 96000000 		.4byte	0x96
 1604 0456 00000000 		.4byte	.LFB16
 1605 045a 54000000 		.4byte	.LFE16-.LFB16
 1606 045e 01       		.uleb128 0x1
 1607 045f 9C       		.byte	0x9c
 1608 0460 A4040000 		.4byte	0x4a4
 1609 0464 16       		.uleb128 0x16
 1610 0465 2B040000 		.4byte	.LASF31
 1611 0469 01       		.byte	0x1
 1612 046a F402     		.2byte	0x2f4
 1613 046c 8A000000 		.4byte	0x8a
 1614 0470 B8020000 		.4byte	.LLST19
 1615 0474 16       		.uleb128 0x16
 1616 0475 63040000 		.4byte	.LASF48
 1617 0479 01       		.byte	0x1
 1618 047a F402     		.2byte	0x2f4
 1619 047c 96000000 		.4byte	0x96
 1620 0480 FA020000 		.4byte	.LLST20
 1621 0484 17       		.uleb128 0x17
 1622 0485 A3020000 		.4byte	.LASF49
 1623 0489 01       		.byte	0x1
 1624 048a F602     		.2byte	0x2f6
 1625 048c 96000000 		.4byte	0x96
 1626 0490 4A030000 		.4byte	.LLST21
 1627 0494 0D       		.uleb128 0xd
 1628 0495 44000000 		.4byte	.LVL64
 1629 0499 1B060000 		.4byte	0x61b
 1630 049d 0E       		.uleb128 0xe
 1631 049e 01       		.uleb128 0x1
 1632 049f 50       		.byte	0x50
 1633 04a0 01       		.uleb128 0x1
 1634 04a1 30       		.byte	0x30
 1635 04a2 00       		.byte	0
 1636 04a3 00       		.byte	0
 1637 04a4 19       		.uleb128 0x19
 1638 04a5 A8010000 		.4byte	.LASF50
 1639 04a9 01       		.byte	0x1
 1640 04aa 2A03     		.2byte	0x32a
 1641 04ac A2000000 		.4byte	0xa2
 1642 04b0 00000000 		.4byte	.LFB17
 1643 04b4 40000000 		.4byte	.LFE17-.LFB17
 1644 04b8 01       		.uleb128 0x1
 1645 04b9 9C       		.byte	0x9c
 1646 04ba FE040000 		.4byte	0x4fe
 1647 04be 16       		.uleb128 0x16
 1648 04bf 2B040000 		.4byte	.LASF31
 1649 04c3 01       		.byte	0x1
 1650 04c4 2A03     		.2byte	0x32a
 1651 04c6 8A000000 		.4byte	0x8a
 1652 04ca 65030000 		.4byte	.LLST22
 1653 04ce 16       		.uleb128 0x16
 1654 04cf 63040000 		.4byte	.LASF48
 1655 04d3 01       		.byte	0x1
 1656 04d4 2A03     		.2byte	0x32a
 1657 04d6 96000000 		.4byte	0x96
 1658 04da 91030000 		.4byte	.LLST23
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 47


 1659 04de 17       		.uleb128 0x17
 1660 04df 3B020000 		.4byte	.LASF51
 1661 04e3 01       		.byte	0x1
 1662 04e4 2C03     		.2byte	0x32c
 1663 04e6 C1000000 		.4byte	0xc1
 1664 04ea BD030000 		.4byte	.LLST24
 1665 04ee 0D       		.uleb128 0xd
 1666 04ef 10000000 		.4byte	.LVL67
 1667 04f3 1B060000 		.4byte	0x61b
 1668 04f7 0E       		.uleb128 0xe
 1669 04f8 01       		.uleb128 0x1
 1670 04f9 50       		.byte	0x50
 1671 04fa 01       		.uleb128 0x1
 1672 04fb 30       		.byte	0x30
 1673 04fc 00       		.byte	0
 1674 04fd 00       		.byte	0
 1675 04fe 19       		.uleb128 0x19
 1676 04ff 98030000 		.4byte	.LASF52
 1677 0503 01       		.byte	0x1
 1678 0504 5703     		.2byte	0x357
 1679 0506 AE000000 		.4byte	0xae
 1680 050a 00000000 		.4byte	.LFB18
 1681 050e 48000000 		.4byte	.LFE18-.LFB18
 1682 0512 01       		.uleb128 0x1
 1683 0513 9C       		.byte	0x9c
 1684 0514 58050000 		.4byte	0x558
 1685 0518 16       		.uleb128 0x16
 1686 0519 2B040000 		.4byte	.LASF31
 1687 051d 01       		.byte	0x1
 1688 051e 5703     		.2byte	0x357
 1689 0520 8A000000 		.4byte	0x8a
 1690 0524 E9030000 		.4byte	.LLST25
 1691 0528 16       		.uleb128 0x16
 1692 0529 63040000 		.4byte	.LASF48
 1693 052d 01       		.byte	0x1
 1694 052e 5703     		.2byte	0x357
 1695 0530 96000000 		.4byte	0x96
 1696 0534 15040000 		.4byte	.LLST26
 1697 0538 17       		.uleb128 0x17
 1698 0539 54020000 		.4byte	.LASF53
 1699 053d 01       		.byte	0x1
 1700 053e 5903     		.2byte	0x359
 1701 0540 AE000000 		.4byte	0xae
 1702 0544 41040000 		.4byte	.LLST27
 1703 0548 0D       		.uleb128 0xd
 1704 0549 10000000 		.4byte	.LVL76
 1705 054d 1B060000 		.4byte	0x61b
 1706 0551 0E       		.uleb128 0xe
 1707 0552 01       		.uleb128 0x1
 1708 0553 50       		.byte	0x50
 1709 0554 01       		.uleb128 0x1
 1710 0555 30       		.byte	0x30
 1711 0556 00       		.byte	0
 1712 0557 00       		.byte	0
 1713 0558 1A       		.uleb128 0x1a
 1714 0559 8A000000 		.4byte	0x8a
 1715 055d 68050000 		.4byte	0x568
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 48


 1716 0561 1B       		.uleb128 0x1b
 1717 0562 F8000000 		.4byte	0xf8
 1718 0566 00       		.byte	0
 1719 0567 00       		.byte	0
 1720 0568 1C       		.uleb128 0x1c
 1721 0569 86020000 		.4byte	.LASF54
 1722 056d 01       		.byte	0x1
 1723 056e 21       		.byte	0x21
 1724 056f 78050000 		.4byte	0x578
 1725 0573 04       		.byte	0x4
 1726 0574 00       		.byte	0
 1727 0575 00       		.byte	0
 1728 0576 00       		.byte	0
 1729 0577 00       		.byte	0
 1730 0578 1D       		.uleb128 0x1d
 1731 0579 58050000 		.4byte	0x558
 1732 057d 1E       		.uleb128 0x1e
 1733 057e 18020000 		.4byte	.LASF55
 1734 0582 01       		.byte	0x1
 1735 0583 18       		.byte	0x18
 1736 0584 72000000 		.4byte	0x72
 1737 0588 05       		.uleb128 0x5
 1738 0589 03       		.byte	0x3
 1739 058a 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1740 058e 1A       		.uleb128 0x1a
 1741 058f 96000000 		.4byte	0x96
 1742 0593 9E050000 		.4byte	0x59e
 1743 0597 1B       		.uleb128 0x1b
 1744 0598 F8000000 		.4byte	0xf8
 1745 059c 00       		.byte	0
 1746 059d 00       		.byte	0
 1747 059e 1E       		.uleb128 0x1e
 1748 059f 00000000 		.4byte	.LASF56
 1749 05a3 01       		.byte	0x1
 1750 05a4 19       		.byte	0x19
 1751 05a5 AF050000 		.4byte	0x5af
 1752 05a9 05       		.uleb128 0x5
 1753 05aa 03       		.byte	0x3
 1754 05ab 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1755 05af 05       		.uleb128 0x5
 1756 05b0 8E050000 		.4byte	0x58e
 1757 05b4 1A       		.uleb128 0x1a
 1758 05b5 A2000000 		.4byte	0xa2
 1759 05b9 C4050000 		.4byte	0x5c4
 1760 05bd 1B       		.uleb128 0x1b
 1761 05be F8000000 		.4byte	0xf8
 1762 05c2 00       		.byte	0
 1763 05c3 00       		.byte	0
 1764 05c4 1E       		.uleb128 0x1e
 1765 05c5 6D040000 		.4byte	.LASF57
 1766 05c9 01       		.byte	0x1
 1767 05ca 1A       		.byte	0x1a
 1768 05cb D5050000 		.4byte	0x5d5
 1769 05cf 05       		.uleb128 0x5
 1770 05d0 03       		.byte	0x3
 1771 05d1 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1772 05d5 05       		.uleb128 0x5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 49


 1773 05d6 B4050000 		.4byte	0x5b4
 1774 05da 1F       		.uleb128 0x1f
 1775 05db D5010000 		.4byte	.LASF59
 1776 05df 03       		.byte	0x3
 1777 05e0 D8       		.byte	0xd8
 1778 05e1 EB050000 		.4byte	0x5eb
 1779 05e5 20       		.uleb128 0x20
 1780 05e6 7E000000 		.4byte	0x7e
 1781 05ea 00       		.byte	0
 1782 05eb 1F       		.uleb128 0x1f
 1783 05ec 08030000 		.4byte	.LASF60
 1784 05f0 03       		.byte	0x3
 1785 05f1 BE       		.byte	0xbe
 1786 05f2 01060000 		.4byte	0x601
 1787 05f6 20       		.uleb128 0x20
 1788 05f7 72000000 		.4byte	0x72
 1789 05fb 20       		.uleb128 0x20
 1790 05fc 72000000 		.4byte	0x72
 1791 0600 00       		.byte	0
 1792 0601 21       		.uleb128 0x21
 1793 0602 77020000 		.4byte	.LASF65
 1794 0606 03       		.byte	0x3
 1795 0607 BB       		.byte	0xbb
 1796 0608 E5000000 		.4byte	0xe5
 1797 060c 1B060000 		.4byte	0x61b
 1798 0610 20       		.uleb128 0x20
 1799 0611 72000000 		.4byte	0x72
 1800 0615 20       		.uleb128 0x20
 1801 0616 E5000000 		.4byte	0xe5
 1802 061a 00       		.byte	0
 1803 061b 22       		.uleb128 0x22
 1804 061c 79030000 		.4byte	.LASF66
 1805 0620 03       		.byte	0x3
 1806 0621 E5       		.byte	0xe5
 1807 0622 20       		.uleb128 0x20
 1808 0623 72000000 		.4byte	0x72
 1809 0627 00       		.byte	0
 1810 0628 00       		.byte	0
 1811              		.section	.debug_abbrev,"",%progbits
 1812              	.Ldebug_abbrev0:
 1813 0000 01       		.uleb128 0x1
 1814 0001 11       		.uleb128 0x11
 1815 0002 01       		.byte	0x1
 1816 0003 25       		.uleb128 0x25
 1817 0004 0E       		.uleb128 0xe
 1818 0005 13       		.uleb128 0x13
 1819 0006 0B       		.uleb128 0xb
 1820 0007 03       		.uleb128 0x3
 1821 0008 0E       		.uleb128 0xe
 1822 0009 1B       		.uleb128 0x1b
 1823 000a 0E       		.uleb128 0xe
 1824 000b 55       		.uleb128 0x55
 1825 000c 17       		.uleb128 0x17
 1826 000d 11       		.uleb128 0x11
 1827 000e 01       		.uleb128 0x1
 1828 000f 10       		.uleb128 0x10
 1829 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 50


 1830 0011 00       		.byte	0
 1831 0012 00       		.byte	0
 1832 0013 02       		.uleb128 0x2
 1833 0014 24       		.uleb128 0x24
 1834 0015 00       		.byte	0
 1835 0016 0B       		.uleb128 0xb
 1836 0017 0B       		.uleb128 0xb
 1837 0018 3E       		.uleb128 0x3e
 1838 0019 0B       		.uleb128 0xb
 1839 001a 03       		.uleb128 0x3
 1840 001b 0E       		.uleb128 0xe
 1841 001c 00       		.byte	0
 1842 001d 00       		.byte	0
 1843 001e 03       		.uleb128 0x3
 1844 001f 24       		.uleb128 0x24
 1845 0020 00       		.byte	0
 1846 0021 0B       		.uleb128 0xb
 1847 0022 0B       		.uleb128 0xb
 1848 0023 3E       		.uleb128 0x3e
 1849 0024 0B       		.uleb128 0xb
 1850 0025 03       		.uleb128 0x3
 1851 0026 08       		.uleb128 0x8
 1852 0027 00       		.byte	0
 1853 0028 00       		.byte	0
 1854 0029 04       		.uleb128 0x4
 1855 002a 16       		.uleb128 0x16
 1856 002b 00       		.byte	0
 1857 002c 03       		.uleb128 0x3
 1858 002d 0E       		.uleb128 0xe
 1859 002e 3A       		.uleb128 0x3a
 1860 002f 0B       		.uleb128 0xb
 1861 0030 3B       		.uleb128 0x3b
 1862 0031 05       		.uleb128 0x5
 1863 0032 49       		.uleb128 0x49
 1864 0033 13       		.uleb128 0x13
 1865 0034 00       		.byte	0
 1866 0035 00       		.byte	0
 1867 0036 05       		.uleb128 0x5
 1868 0037 35       		.uleb128 0x35
 1869 0038 00       		.byte	0
 1870 0039 49       		.uleb128 0x49
 1871 003a 13       		.uleb128 0x13
 1872 003b 00       		.byte	0
 1873 003c 00       		.byte	0
 1874 003d 06       		.uleb128 0x6
 1875 003e 0F       		.uleb128 0xf
 1876 003f 00       		.byte	0
 1877 0040 0B       		.uleb128 0xb
 1878 0041 0B       		.uleb128 0xb
 1879 0042 49       		.uleb128 0x49
 1880 0043 13       		.uleb128 0x13
 1881 0044 00       		.byte	0
 1882 0045 00       		.byte	0
 1883 0046 07       		.uleb128 0x7
 1884 0047 15       		.uleb128 0x15
 1885 0048 00       		.byte	0
 1886 0049 27       		.uleb128 0x27
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 51


 1887 004a 19       		.uleb128 0x19
 1888 004b 00       		.byte	0
 1889 004c 00       		.byte	0
 1890 004d 08       		.uleb128 0x8
 1891 004e 2E       		.uleb128 0x2e
 1892 004f 00       		.byte	0
 1893 0050 3F       		.uleb128 0x3f
 1894 0051 19       		.uleb128 0x19
 1895 0052 03       		.uleb128 0x3
 1896 0053 0E       		.uleb128 0xe
 1897 0054 3A       		.uleb128 0x3a
 1898 0055 0B       		.uleb128 0xb
 1899 0056 3B       		.uleb128 0x3b
 1900 0057 05       		.uleb128 0x5
 1901 0058 27       		.uleb128 0x27
 1902 0059 19       		.uleb128 0x19
 1903 005a 20       		.uleb128 0x20
 1904 005b 0B       		.uleb128 0xb
 1905 005c 00       		.byte	0
 1906 005d 00       		.byte	0
 1907 005e 09       		.uleb128 0x9
 1908 005f 2E       		.uleb128 0x2e
 1909 0060 01       		.byte	0x1
 1910 0061 3F       		.uleb128 0x3f
 1911 0062 19       		.uleb128 0x19
 1912 0063 03       		.uleb128 0x3
 1913 0064 0E       		.uleb128 0xe
 1914 0065 3A       		.uleb128 0x3a
 1915 0066 0B       		.uleb128 0xb
 1916 0067 3B       		.uleb128 0x3b
 1917 0068 0B       		.uleb128 0xb
 1918 0069 27       		.uleb128 0x27
 1919 006a 19       		.uleb128 0x19
 1920 006b 20       		.uleb128 0x20
 1921 006c 0B       		.uleb128 0xb
 1922 006d 01       		.uleb128 0x1
 1923 006e 13       		.uleb128 0x13
 1924 006f 00       		.byte	0
 1925 0070 00       		.byte	0
 1926 0071 0A       		.uleb128 0xa
 1927 0072 34       		.uleb128 0x34
 1928 0073 00       		.byte	0
 1929 0074 03       		.uleb128 0x3
 1930 0075 0E       		.uleb128 0xe
 1931 0076 3A       		.uleb128 0x3a
 1932 0077 0B       		.uleb128 0xb
 1933 0078 3B       		.uleb128 0x3b
 1934 0079 0B       		.uleb128 0xb
 1935 007a 49       		.uleb128 0x49
 1936 007b 13       		.uleb128 0x13
 1937 007c 00       		.byte	0
 1938 007d 00       		.byte	0
 1939 007e 0B       		.uleb128 0xb
 1940 007f 2E       		.uleb128 0x2e
 1941 0080 01       		.byte	0x1
 1942 0081 3F       		.uleb128 0x3f
 1943 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 52


 1944 0083 03       		.uleb128 0x3
 1945 0084 0E       		.uleb128 0xe
 1946 0085 3A       		.uleb128 0x3a
 1947 0086 0B       		.uleb128 0xb
 1948 0087 3B       		.uleb128 0x3b
 1949 0088 0B       		.uleb128 0xb
 1950 0089 27       		.uleb128 0x27
 1951 008a 19       		.uleb128 0x19
 1952 008b 11       		.uleb128 0x11
 1953 008c 01       		.uleb128 0x1
 1954 008d 12       		.uleb128 0x12
 1955 008e 06       		.uleb128 0x6
 1956 008f 40       		.uleb128 0x40
 1957 0090 18       		.uleb128 0x18
 1958 0091 9742     		.uleb128 0x2117
 1959 0093 19       		.uleb128 0x19
 1960 0094 01       		.uleb128 0x1
 1961 0095 13       		.uleb128 0x13
 1962 0096 00       		.byte	0
 1963 0097 00       		.byte	0
 1964 0098 0C       		.uleb128 0xc
 1965 0099 1D       		.uleb128 0x1d
 1966 009a 01       		.byte	0x1
 1967 009b 31       		.uleb128 0x31
 1968 009c 13       		.uleb128 0x13
 1969 009d 11       		.uleb128 0x11
 1970 009e 01       		.uleb128 0x1
 1971 009f 12       		.uleb128 0x12
 1972 00a0 06       		.uleb128 0x6
 1973 00a1 58       		.uleb128 0x58
 1974 00a2 0B       		.uleb128 0xb
 1975 00a3 59       		.uleb128 0x59
 1976 00a4 0B       		.uleb128 0xb
 1977 00a5 01       		.uleb128 0x1
 1978 00a6 13       		.uleb128 0x13
 1979 00a7 00       		.byte	0
 1980 00a8 00       		.byte	0
 1981 00a9 0D       		.uleb128 0xd
 1982 00aa 898201   		.uleb128 0x4109
 1983 00ad 01       		.byte	0x1
 1984 00ae 11       		.uleb128 0x11
 1985 00af 01       		.uleb128 0x1
 1986 00b0 31       		.uleb128 0x31
 1987 00b1 13       		.uleb128 0x13
 1988 00b2 00       		.byte	0
 1989 00b3 00       		.byte	0
 1990 00b4 0E       		.uleb128 0xe
 1991 00b5 8A8201   		.uleb128 0x410a
 1992 00b8 00       		.byte	0
 1993 00b9 02       		.uleb128 0x2
 1994 00ba 18       		.uleb128 0x18
 1995 00bb 9142     		.uleb128 0x2111
 1996 00bd 18       		.uleb128 0x18
 1997 00be 00       		.byte	0
 1998 00bf 00       		.byte	0
 1999 00c0 0F       		.uleb128 0xf
 2000 00c1 1D       		.uleb128 0x1d
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 53


 2001 00c2 01       		.byte	0x1
 2002 00c3 31       		.uleb128 0x31
 2003 00c4 13       		.uleb128 0x13
 2004 00c5 52       		.uleb128 0x52
 2005 00c6 01       		.uleb128 0x1
 2006 00c7 55       		.uleb128 0x55
 2007 00c8 17       		.uleb128 0x17
 2008 00c9 58       		.uleb128 0x58
 2009 00ca 0B       		.uleb128 0xb
 2010 00cb 59       		.uleb128 0x59
 2011 00cc 0B       		.uleb128 0xb
 2012 00cd 00       		.byte	0
 2013 00ce 00       		.byte	0
 2014 00cf 10       		.uleb128 0x10
 2015 00d0 0B       		.uleb128 0xb
 2016 00d1 01       		.byte	0x1
 2017 00d2 55       		.uleb128 0x55
 2018 00d3 17       		.uleb128 0x17
 2019 00d4 00       		.byte	0
 2020 00d5 00       		.byte	0
 2021 00d6 11       		.uleb128 0x11
 2022 00d7 34       		.uleb128 0x34
 2023 00d8 00       		.byte	0
 2024 00d9 31       		.uleb128 0x31
 2025 00da 13       		.uleb128 0x13
 2026 00db 02       		.uleb128 0x2
 2027 00dc 17       		.uleb128 0x17
 2028 00dd 00       		.byte	0
 2029 00de 00       		.byte	0
 2030 00df 12       		.uleb128 0x12
 2031 00e0 898201   		.uleb128 0x4109
 2032 00e3 01       		.byte	0x1
 2033 00e4 11       		.uleb128 0x11
 2034 00e5 01       		.uleb128 0x1
 2035 00e6 31       		.uleb128 0x31
 2036 00e7 13       		.uleb128 0x13
 2037 00e8 01       		.uleb128 0x1
 2038 00e9 13       		.uleb128 0x13
 2039 00ea 00       		.byte	0
 2040 00eb 00       		.byte	0
 2041 00ec 13       		.uleb128 0x13
 2042 00ed 2E       		.uleb128 0x2e
 2043 00ee 01       		.byte	0x1
 2044 00ef 31       		.uleb128 0x31
 2045 00f0 13       		.uleb128 0x13
 2046 00f1 11       		.uleb128 0x11
 2047 00f2 01       		.uleb128 0x1
 2048 00f3 12       		.uleb128 0x12
 2049 00f4 06       		.uleb128 0x6
 2050 00f5 40       		.uleb128 0x40
 2051 00f6 18       		.uleb128 0x18
 2052 00f7 9742     		.uleb128 0x2117
 2053 00f9 19       		.uleb128 0x19
 2054 00fa 01       		.uleb128 0x1
 2055 00fb 13       		.uleb128 0x13
 2056 00fc 00       		.byte	0
 2057 00fd 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 54


 2058 00fe 14       		.uleb128 0x14
 2059 00ff 2E       		.uleb128 0x2e
 2060 0100 00       		.byte	0
 2061 0101 3F       		.uleb128 0x3f
 2062 0102 19       		.uleb128 0x19
 2063 0103 03       		.uleb128 0x3
 2064 0104 0E       		.uleb128 0xe
 2065 0105 3A       		.uleb128 0x3a
 2066 0106 0B       		.uleb128 0xb
 2067 0107 3B       		.uleb128 0x3b
 2068 0108 05       		.uleb128 0x5
 2069 0109 27       		.uleb128 0x27
 2070 010a 19       		.uleb128 0x19
 2071 010b 11       		.uleb128 0x11
 2072 010c 01       		.uleb128 0x1
 2073 010d 12       		.uleb128 0x12
 2074 010e 06       		.uleb128 0x6
 2075 010f 40       		.uleb128 0x40
 2076 0110 18       		.uleb128 0x18
 2077 0111 9742     		.uleb128 0x2117
 2078 0113 19       		.uleb128 0x19
 2079 0114 00       		.byte	0
 2080 0115 00       		.byte	0
 2081 0116 15       		.uleb128 0x15
 2082 0117 2E       		.uleb128 0x2e
 2083 0118 01       		.byte	0x1
 2084 0119 3F       		.uleb128 0x3f
 2085 011a 19       		.uleb128 0x19
 2086 011b 03       		.uleb128 0x3
 2087 011c 0E       		.uleb128 0xe
 2088 011d 3A       		.uleb128 0x3a
 2089 011e 0B       		.uleb128 0xb
 2090 011f 3B       		.uleb128 0x3b
 2091 0120 05       		.uleb128 0x5
 2092 0121 27       		.uleb128 0x27
 2093 0122 19       		.uleb128 0x19
 2094 0123 49       		.uleb128 0x49
 2095 0124 13       		.uleb128 0x13
 2096 0125 11       		.uleb128 0x11
 2097 0126 01       		.uleb128 0x1
 2098 0127 12       		.uleb128 0x12
 2099 0128 06       		.uleb128 0x6
 2100 0129 40       		.uleb128 0x40
 2101 012a 18       		.uleb128 0x18
 2102 012b 9742     		.uleb128 0x2117
 2103 012d 19       		.uleb128 0x19
 2104 012e 01       		.uleb128 0x1
 2105 012f 13       		.uleb128 0x13
 2106 0130 00       		.byte	0
 2107 0131 00       		.byte	0
 2108 0132 16       		.uleb128 0x16
 2109 0133 05       		.uleb128 0x5
 2110 0134 00       		.byte	0
 2111 0135 03       		.uleb128 0x3
 2112 0136 0E       		.uleb128 0xe
 2113 0137 3A       		.uleb128 0x3a
 2114 0138 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 55


 2115 0139 3B       		.uleb128 0x3b
 2116 013a 05       		.uleb128 0x5
 2117 013b 49       		.uleb128 0x49
 2118 013c 13       		.uleb128 0x13
 2119 013d 02       		.uleb128 0x2
 2120 013e 17       		.uleb128 0x17
 2121 013f 00       		.byte	0
 2122 0140 00       		.byte	0
 2123 0141 17       		.uleb128 0x17
 2124 0142 34       		.uleb128 0x34
 2125 0143 00       		.byte	0
 2126 0144 03       		.uleb128 0x3
 2127 0145 0E       		.uleb128 0xe
 2128 0146 3A       		.uleb128 0x3a
 2129 0147 0B       		.uleb128 0xb
 2130 0148 3B       		.uleb128 0x3b
 2131 0149 05       		.uleb128 0x5
 2132 014a 49       		.uleb128 0x49
 2133 014b 13       		.uleb128 0x13
 2134 014c 02       		.uleb128 0x2
 2135 014d 17       		.uleb128 0x17
 2136 014e 00       		.byte	0
 2137 014f 00       		.byte	0
 2138 0150 18       		.uleb128 0x18
 2139 0151 2E       		.uleb128 0x2e
 2140 0152 01       		.byte	0x1
 2141 0153 3F       		.uleb128 0x3f
 2142 0154 19       		.uleb128 0x19
 2143 0155 03       		.uleb128 0x3
 2144 0156 0E       		.uleb128 0xe
 2145 0157 3A       		.uleb128 0x3a
 2146 0158 0B       		.uleb128 0xb
 2147 0159 3B       		.uleb128 0x3b
 2148 015a 05       		.uleb128 0x5
 2149 015b 27       		.uleb128 0x27
 2150 015c 19       		.uleb128 0x19
 2151 015d 11       		.uleb128 0x11
 2152 015e 01       		.uleb128 0x1
 2153 015f 12       		.uleb128 0x12
 2154 0160 06       		.uleb128 0x6
 2155 0161 40       		.uleb128 0x40
 2156 0162 18       		.uleb128 0x18
 2157 0163 9742     		.uleb128 0x2117
 2158 0165 19       		.uleb128 0x19
 2159 0166 01       		.uleb128 0x1
 2160 0167 13       		.uleb128 0x13
 2161 0168 00       		.byte	0
 2162 0169 00       		.byte	0
 2163 016a 19       		.uleb128 0x19
 2164 016b 2E       		.uleb128 0x2e
 2165 016c 01       		.byte	0x1
 2166 016d 3F       		.uleb128 0x3f
 2167 016e 19       		.uleb128 0x19
 2168 016f 03       		.uleb128 0x3
 2169 0170 0E       		.uleb128 0xe
 2170 0171 3A       		.uleb128 0x3a
 2171 0172 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 56


 2172 0173 3B       		.uleb128 0x3b
 2173 0174 05       		.uleb128 0x5
 2174 0175 27       		.uleb128 0x27
 2175 0176 19       		.uleb128 0x19
 2176 0177 49       		.uleb128 0x49
 2177 0178 13       		.uleb128 0x13
 2178 0179 11       		.uleb128 0x11
 2179 017a 01       		.uleb128 0x1
 2180 017b 12       		.uleb128 0x12
 2181 017c 06       		.uleb128 0x6
 2182 017d 40       		.uleb128 0x40
 2183 017e 18       		.uleb128 0x18
 2184 017f 9642     		.uleb128 0x2116
 2185 0181 19       		.uleb128 0x19
 2186 0182 01       		.uleb128 0x1
 2187 0183 13       		.uleb128 0x13
 2188 0184 00       		.byte	0
 2189 0185 00       		.byte	0
 2190 0186 1A       		.uleb128 0x1a
 2191 0187 01       		.uleb128 0x1
 2192 0188 01       		.byte	0x1
 2193 0189 49       		.uleb128 0x49
 2194 018a 13       		.uleb128 0x13
 2195 018b 01       		.uleb128 0x1
 2196 018c 13       		.uleb128 0x13
 2197 018d 00       		.byte	0
 2198 018e 00       		.byte	0
 2199 018f 1B       		.uleb128 0x1b
 2200 0190 21       		.uleb128 0x21
 2201 0191 00       		.byte	0
 2202 0192 49       		.uleb128 0x49
 2203 0193 13       		.uleb128 0x13
 2204 0194 2F       		.uleb128 0x2f
 2205 0195 0B       		.uleb128 0xb
 2206 0196 00       		.byte	0
 2207 0197 00       		.byte	0
 2208 0198 1C       		.uleb128 0x1c
 2209 0199 34       		.uleb128 0x34
 2210 019a 00       		.byte	0
 2211 019b 03       		.uleb128 0x3
 2212 019c 0E       		.uleb128 0xe
 2213 019d 3A       		.uleb128 0x3a
 2214 019e 0B       		.uleb128 0xb
 2215 019f 3B       		.uleb128 0x3b
 2216 01a0 0B       		.uleb128 0xb
 2217 01a1 49       		.uleb128 0x49
 2218 01a2 13       		.uleb128 0x13
 2219 01a3 1C       		.uleb128 0x1c
 2220 01a4 0A       		.uleb128 0xa
 2221 01a5 00       		.byte	0
 2222 01a6 00       		.byte	0
 2223 01a7 1D       		.uleb128 0x1d
 2224 01a8 26       		.uleb128 0x26
 2225 01a9 00       		.byte	0
 2226 01aa 49       		.uleb128 0x49
 2227 01ab 13       		.uleb128 0x13
 2228 01ac 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 57


 2229 01ad 00       		.byte	0
 2230 01ae 1E       		.uleb128 0x1e
 2231 01af 34       		.uleb128 0x34
 2232 01b0 00       		.byte	0
 2233 01b1 03       		.uleb128 0x3
 2234 01b2 0E       		.uleb128 0xe
 2235 01b3 3A       		.uleb128 0x3a
 2236 01b4 0B       		.uleb128 0xb
 2237 01b5 3B       		.uleb128 0x3b
 2238 01b6 0B       		.uleb128 0xb
 2239 01b7 49       		.uleb128 0x49
 2240 01b8 13       		.uleb128 0x13
 2241 01b9 3F       		.uleb128 0x3f
 2242 01ba 19       		.uleb128 0x19
 2243 01bb 02       		.uleb128 0x2
 2244 01bc 18       		.uleb128 0x18
 2245 01bd 00       		.byte	0
 2246 01be 00       		.byte	0
 2247 01bf 1F       		.uleb128 0x1f
 2248 01c0 2E       		.uleb128 0x2e
 2249 01c1 01       		.byte	0x1
 2250 01c2 3F       		.uleb128 0x3f
 2251 01c3 19       		.uleb128 0x19
 2252 01c4 03       		.uleb128 0x3
 2253 01c5 0E       		.uleb128 0xe
 2254 01c6 3A       		.uleb128 0x3a
 2255 01c7 0B       		.uleb128 0xb
 2256 01c8 3B       		.uleb128 0x3b
 2257 01c9 0B       		.uleb128 0xb
 2258 01ca 27       		.uleb128 0x27
 2259 01cb 19       		.uleb128 0x19
 2260 01cc 3C       		.uleb128 0x3c
 2261 01cd 19       		.uleb128 0x19
 2262 01ce 01       		.uleb128 0x1
 2263 01cf 13       		.uleb128 0x13
 2264 01d0 00       		.byte	0
 2265 01d1 00       		.byte	0
 2266 01d2 20       		.uleb128 0x20
 2267 01d3 05       		.uleb128 0x5
 2268 01d4 00       		.byte	0
 2269 01d5 49       		.uleb128 0x49
 2270 01d6 13       		.uleb128 0x13
 2271 01d7 00       		.byte	0
 2272 01d8 00       		.byte	0
 2273 01d9 21       		.uleb128 0x21
 2274 01da 2E       		.uleb128 0x2e
 2275 01db 01       		.byte	0x1
 2276 01dc 3F       		.uleb128 0x3f
 2277 01dd 19       		.uleb128 0x19
 2278 01de 03       		.uleb128 0x3
 2279 01df 0E       		.uleb128 0xe
 2280 01e0 3A       		.uleb128 0x3a
 2281 01e1 0B       		.uleb128 0xb
 2282 01e2 3B       		.uleb128 0x3b
 2283 01e3 0B       		.uleb128 0xb
 2284 01e4 27       		.uleb128 0x27
 2285 01e5 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 58


 2286 01e6 49       		.uleb128 0x49
 2287 01e7 13       		.uleb128 0x13
 2288 01e8 3C       		.uleb128 0x3c
 2289 01e9 19       		.uleb128 0x19
 2290 01ea 01       		.uleb128 0x1
 2291 01eb 13       		.uleb128 0x13
 2292 01ec 00       		.byte	0
 2293 01ed 00       		.byte	0
 2294 01ee 22       		.uleb128 0x22
 2295 01ef 2E       		.uleb128 0x2e
 2296 01f0 01       		.byte	0x1
 2297 01f1 3F       		.uleb128 0x3f
 2298 01f2 19       		.uleb128 0x19
 2299 01f3 03       		.uleb128 0x3
 2300 01f4 0E       		.uleb128 0xe
 2301 01f5 3A       		.uleb128 0x3a
 2302 01f6 0B       		.uleb128 0xb
 2303 01f7 3B       		.uleb128 0x3b
 2304 01f8 0B       		.uleb128 0xb
 2305 01f9 27       		.uleb128 0x27
 2306 01fa 19       		.uleb128 0x19
 2307 01fb 3C       		.uleb128 0x3c
 2308 01fc 19       		.uleb128 0x19
 2309 01fd 00       		.byte	0
 2310 01fe 00       		.byte	0
 2311 01ff 00       		.byte	0
 2312              		.section	.debug_loc,"",%progbits
 2313              	.Ldebug_loc0:
 2314              	.LLST0:
 2315 0000 90000000 		.4byte	.LVL6
 2316 0004 A4000000 		.4byte	.LVL8
 2317 0008 0200     		.2byte	0x2
 2318 000a 30       		.byte	0x30
 2319 000b 9F       		.byte	0x9f
 2320 000c A4000000 		.4byte	.LVL8
 2321 0010 A6000000 		.4byte	.LVL9
 2322 0014 0200     		.2byte	0x2
 2323 0016 31       		.byte	0x31
 2324 0017 9F       		.byte	0x9f
 2325 0018 00000000 		.4byte	0
 2326 001c 00000000 		.4byte	0
 2327              	.LLST1:
 2328 0020 84000000 		.4byte	.LVL3
 2329 0024 8A000000 		.4byte	.LVL4
 2330 0028 0700     		.2byte	0x7
 2331 002a 75       		.byte	0x75
 2332 002b 00       		.sleb128 0
 2333 002c 40       		.byte	0x40
 2334 002d 49       		.byte	0x49
 2335 002e 24       		.byte	0x24
 2336 002f 21       		.byte	0x21
 2337 0030 9F       		.byte	0x9f
 2338 0031 8E000000 		.4byte	.LVL5
 2339 0035 90000000 		.4byte	.LVL6
 2340 0039 0100     		.2byte	0x1
 2341 003b 53       		.byte	0x53
 2342 003c 90000000 		.4byte	.LVL6
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 59


 2343 0040 A6000000 		.4byte	.LVL9
 2344 0044 0200     		.2byte	0x2
 2345 0046 30       		.byte	0x30
 2346 0047 9F       		.byte	0x9f
 2347 0048 00000000 		.4byte	0
 2348 004c 00000000 		.4byte	0
 2349              	.LLST2:
 2350 0050 94000000 		.4byte	.LVL7
 2351 0054 A6000000 		.4byte	.LVL9
 2352 0058 0400     		.2byte	0x4
 2353 005a 0A       		.byte	0xa
 2354 005b 0010     		.2byte	0x1000
 2355 005d 9F       		.byte	0x9f
 2356 005e 00000000 		.4byte	0
 2357 0062 00000000 		.4byte	0
 2358              	.LLST3:
 2359 0066 64000000 		.4byte	.LVL15
 2360 006a 76000000 		.4byte	.LVL17
 2361 006e 0200     		.2byte	0x2
 2362 0070 30       		.byte	0x30
 2363 0071 9F       		.byte	0x9f
 2364 0072 76000000 		.4byte	.LVL17
 2365 0076 78000000 		.4byte	.LVL18
 2366 007a 0200     		.2byte	0x2
 2367 007c 31       		.byte	0x31
 2368 007d 9F       		.byte	0x9f
 2369 007e 00000000 		.4byte	0
 2370 0082 00000000 		.4byte	0
 2371              	.LLST4:
 2372 0086 5A000000 		.4byte	.LVL12
 2373 008a 5E000000 		.4byte	.LVL13
 2374 008e 0700     		.2byte	0x7
 2375 0090 70       		.byte	0x70
 2376 0091 00       		.sleb128 0
 2377 0092 40       		.byte	0x40
 2378 0093 49       		.byte	0x49
 2379 0094 24       		.byte	0x24
 2380 0095 21       		.byte	0x21
 2381 0096 9F       		.byte	0x9f
 2382 0097 62000000 		.4byte	.LVL14
 2383 009b 64000000 		.4byte	.LVL15
 2384 009f 0100     		.2byte	0x1
 2385 00a1 53       		.byte	0x53
 2386 00a2 64000000 		.4byte	.LVL15
 2387 00a6 78000000 		.4byte	.LVL18
 2388 00aa 0200     		.2byte	0x2
 2389 00ac 30       		.byte	0x30
 2390 00ad 9F       		.byte	0x9f
 2391 00ae 00000000 		.4byte	0
 2392 00b2 00000000 		.4byte	0
 2393              	.LLST5:
 2394 00b6 68000000 		.4byte	.LVL16
 2395 00ba 78000000 		.4byte	.LVL18
 2396 00be 0400     		.2byte	0x4
 2397 00c0 0A       		.byte	0xa
 2398 00c1 0010     		.2byte	0x1000
 2399 00c3 9F       		.byte	0x9f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 60


 2400 00c4 00000000 		.4byte	0
 2401 00c8 00000000 		.4byte	0
 2402              	.LLST6:
 2403 00cc 00000000 		.4byte	.LVL20
 2404 00d0 0E000000 		.4byte	.LVL21
 2405 00d4 0100     		.2byte	0x1
 2406 00d6 50       		.byte	0x50
 2407 00d7 0E000000 		.4byte	.LVL21
 2408 00db 2C000000 		.4byte	.LFE7
 2409 00df 0400     		.2byte	0x4
 2410 00e1 F3       		.byte	0xf3
 2411 00e2 01       		.uleb128 0x1
 2412 00e3 50       		.byte	0x50
 2413 00e4 9F       		.byte	0x9f
 2414 00e5 00000000 		.4byte	0
 2415 00e9 00000000 		.4byte	0
 2416              	.LLST7:
 2417 00ed 00000000 		.4byte	.LVL20
 2418 00f1 10000000 		.4byte	.LVL22
 2419 00f5 0200     		.2byte	0x2
 2420 00f7 30       		.byte	0x30
 2421 00f8 9F       		.byte	0x9f
 2422 00f9 10000000 		.4byte	.LVL22
 2423 00fd 14000000 		.4byte	.LVL23
 2424 0101 0100     		.2byte	0x1
 2425 0103 53       		.byte	0x53
 2426 0104 18000000 		.4byte	.LVL24
 2427 0108 1E000000 		.4byte	.LVL25
 2428 010c 0100     		.2byte	0x1
 2429 010e 53       		.byte	0x53
 2430 010f 00000000 		.4byte	0
 2431 0113 00000000 		.4byte	0
 2432              	.LLST8:
 2433 0117 00000000 		.4byte	.LVL27
 2434 011b 0A000000 		.4byte	.LVL28
 2435 011f 0100     		.2byte	0x1
 2436 0121 50       		.byte	0x50
 2437 0122 0A000000 		.4byte	.LVL28
 2438 0126 10000000 		.4byte	.LVL30
 2439 012a 0400     		.2byte	0x4
 2440 012c F3       		.byte	0xf3
 2441 012d 01       		.uleb128 0x1
 2442 012e 50       		.byte	0x50
 2443 012f 9F       		.byte	0x9f
 2444 0130 10000000 		.4byte	.LVL30
 2445 0134 12000000 		.4byte	.LVL31
 2446 0138 0100     		.2byte	0x1
 2447 013a 50       		.byte	0x50
 2448 013b 12000000 		.4byte	.LVL31
 2449 013f 20000000 		.4byte	.LFE8
 2450 0143 0400     		.2byte	0x4
 2451 0145 F3       		.byte	0xf3
 2452 0146 01       		.uleb128 0x1
 2453 0147 50       		.byte	0x50
 2454 0148 9F       		.byte	0x9f
 2455 0149 00000000 		.4byte	0
 2456 014d 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 61


 2457              	.LLST9:
 2458 0151 0A000000 		.4byte	.LVL28
 2459 0155 0C000000 		.4byte	.LVL29
 2460 0159 0700     		.2byte	0x7
 2461 015b 70       		.byte	0x70
 2462 015c 00       		.sleb128 0
 2463 015d 0A       		.byte	0xa
 2464 015e FFFF     		.2byte	0xffff
 2465 0160 1A       		.byte	0x1a
 2466 0161 9F       		.byte	0x9f
 2467 0162 00000000 		.4byte	0
 2468 0166 00000000 		.4byte	0
 2469              	.LLST10:
 2470 016a 00000000 		.4byte	.LVL33
 2471 016e 04000000 		.4byte	.LVL34
 2472 0172 0100     		.2byte	0x1
 2473 0174 50       		.byte	0x50
 2474 0175 04000000 		.4byte	.LVL34
 2475 0179 10000000 		.4byte	.LFE9
 2476 017d 0400     		.2byte	0x4
 2477 017f F3       		.byte	0xf3
 2478 0180 01       		.uleb128 0x1
 2479 0181 50       		.byte	0x50
 2480 0182 9F       		.byte	0x9f
 2481 0183 00000000 		.4byte	0
 2482 0187 00000000 		.4byte	0
 2483              	.LLST11:
 2484 018b 00000000 		.4byte	.LVL35
 2485 018f 04000000 		.4byte	.LVL36
 2486 0193 0100     		.2byte	0x1
 2487 0195 50       		.byte	0x50
 2488 0196 04000000 		.4byte	.LVL36
 2489 019a 1C000000 		.4byte	.LFE10
 2490 019e 0400     		.2byte	0x4
 2491 01a0 F3       		.byte	0xf3
 2492 01a1 01       		.uleb128 0x1
 2493 01a2 50       		.byte	0x50
 2494 01a3 9F       		.byte	0x9f
 2495 01a4 00000000 		.4byte	0
 2496 01a8 00000000 		.4byte	0
 2497              	.LLST12:
 2498 01ac 00000000 		.4byte	.LVL37
 2499 01b0 04000000 		.4byte	.LVL38
 2500 01b4 0100     		.2byte	0x1
 2501 01b6 50       		.byte	0x50
 2502 01b7 04000000 		.4byte	.LVL38
 2503 01bb 18000000 		.4byte	.LFE11
 2504 01bf 0400     		.2byte	0x4
 2505 01c1 F3       		.byte	0xf3
 2506 01c2 01       		.uleb128 0x1
 2507 01c3 50       		.byte	0x50
 2508 01c4 9F       		.byte	0x9f
 2509 01c5 00000000 		.4byte	0
 2510 01c9 00000000 		.4byte	0
 2511              	.LLST13:
 2512 01cd 00000000 		.4byte	.LVL39
 2513 01d1 04000000 		.4byte	.LVL40
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 62


 2514 01d5 0100     		.2byte	0x1
 2515 01d7 50       		.byte	0x50
 2516 01d8 04000000 		.4byte	.LVL40
 2517 01dc 10000000 		.4byte	.LFE12
 2518 01e0 0400     		.2byte	0x4
 2519 01e2 F3       		.byte	0xf3
 2520 01e3 01       		.uleb128 0x1
 2521 01e4 50       		.byte	0x50
 2522 01e5 9F       		.byte	0x9f
 2523 01e6 00000000 		.4byte	0
 2524 01ea 00000000 		.4byte	0
 2525              	.LLST14:
 2526 01ee 00000000 		.4byte	.LVL41
 2527 01f2 04000000 		.4byte	.LVL42
 2528 01f6 0100     		.2byte	0x1
 2529 01f8 50       		.byte	0x50
 2530 01f9 04000000 		.4byte	.LVL42
 2531 01fd 10000000 		.4byte	.LFE13
 2532 0201 0400     		.2byte	0x4
 2533 0203 F3       		.byte	0xf3
 2534 0204 01       		.uleb128 0x1
 2535 0205 50       		.byte	0x50
 2536 0206 9F       		.byte	0x9f
 2537 0207 00000000 		.4byte	0
 2538 020b 00000000 		.4byte	0
 2539              	.LLST15:
 2540 020f 00000000 		.4byte	.LVL43
 2541 0213 0C000000 		.4byte	.LVL44
 2542 0217 0100     		.2byte	0x1
 2543 0219 50       		.byte	0x50
 2544 021a 0C000000 		.4byte	.LVL44
 2545 021e 14000000 		.4byte	.LVL46
 2546 0222 0100     		.2byte	0x1
 2547 0224 54       		.byte	0x54
 2548 0225 14000000 		.4byte	.LVL46
 2549 0229 1C000000 		.4byte	.LFE14
 2550 022d 0400     		.2byte	0x4
 2551 022f F3       		.byte	0xf3
 2552 0230 01       		.uleb128 0x1
 2553 0231 50       		.byte	0x50
 2554 0232 9F       		.byte	0x9f
 2555 0233 00000000 		.4byte	0
 2556 0237 00000000 		.4byte	0
 2557              	.LLST16:
 2558 023b 00000000 		.4byte	.LVL43
 2559 023f 0F000000 		.4byte	.LVL45-1
 2560 0243 0100     		.2byte	0x1
 2561 0245 51       		.byte	0x51
 2562 0246 0F000000 		.4byte	.LVL45-1
 2563 024a 1C000000 		.4byte	.LFE14
 2564 024e 0400     		.2byte	0x4
 2565 0250 F3       		.byte	0xf3
 2566 0251 01       		.uleb128 0x1
 2567 0252 51       		.byte	0x51
 2568 0253 9F       		.byte	0x9f
 2569 0254 00000000 		.4byte	0
 2570 0258 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 63


 2571              	.LLST17:
 2572 025c 00000000 		.4byte	.LVL47
 2573 0260 0C000000 		.4byte	.LVL48
 2574 0264 0100     		.2byte	0x1
 2575 0266 50       		.byte	0x50
 2576 0267 0C000000 		.4byte	.LVL48
 2577 026b 14000000 		.4byte	.LVL50
 2578 026f 0100     		.2byte	0x1
 2579 0271 54       		.byte	0x54
 2580 0272 14000000 		.4byte	.LVL50
 2581 0276 1C000000 		.4byte	.LFE15
 2582 027a 0400     		.2byte	0x4
 2583 027c F3       		.byte	0xf3
 2584 027d 01       		.uleb128 0x1
 2585 027e 50       		.byte	0x50
 2586 027f 9F       		.byte	0x9f
 2587 0280 00000000 		.4byte	0
 2588 0284 00000000 		.4byte	0
 2589              	.LLST18:
 2590 0288 00000000 		.4byte	.LVL47
 2591 028c 0F000000 		.4byte	.LVL49-1
 2592 0290 0100     		.2byte	0x1
 2593 0292 51       		.byte	0x51
 2594 0293 0F000000 		.4byte	.LVL49-1
 2595 0297 16000000 		.4byte	.LVL51
 2596 029b 0100     		.2byte	0x1
 2597 029d 55       		.byte	0x55
 2598 029e 16000000 		.4byte	.LVL51
 2599 02a2 1C000000 		.4byte	.LFE15
 2600 02a6 0800     		.2byte	0x8
 2601 02a8 F3       		.byte	0xf3
 2602 02a9 01       		.uleb128 0x1
 2603 02aa 50       		.byte	0x50
 2604 02ab 32       		.byte	0x32
 2605 02ac 24       		.byte	0x24
 2606 02ad 73       		.byte	0x73
 2607 02ae 00       		.sleb128 0
 2608 02af 22       		.byte	0x22
 2609 02b0 00000000 		.4byte	0
 2610 02b4 00000000 		.4byte	0
 2611              	.LLST19:
 2612 02b8 00000000 		.4byte	.LVL52
 2613 02bc 0A000000 		.4byte	.LVL53
 2614 02c0 0100     		.2byte	0x1
 2615 02c2 50       		.byte	0x50
 2616 02c3 0A000000 		.4byte	.LVL53
 2617 02c7 1A000000 		.4byte	.LVL55
 2618 02cb 0100     		.2byte	0x1
 2619 02cd 55       		.byte	0x55
 2620 02ce 1A000000 		.4byte	.LVL55
 2621 02d2 3E000000 		.4byte	.LVL62
 2622 02d6 0400     		.2byte	0x4
 2623 02d8 F3       		.byte	0xf3
 2624 02d9 01       		.uleb128 0x1
 2625 02da 50       		.byte	0x50
 2626 02db 9F       		.byte	0x9f
 2627 02dc 3E000000 		.4byte	.LVL62
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 64


 2628 02e0 40000000 		.4byte	.LVL63
 2629 02e4 0100     		.2byte	0x1
 2630 02e6 50       		.byte	0x50
 2631 02e7 40000000 		.4byte	.LVL63
 2632 02eb 54000000 		.4byte	.LFE16
 2633 02ef 0100     		.2byte	0x1
 2634 02f1 55       		.byte	0x55
 2635 02f2 00000000 		.4byte	0
 2636 02f6 00000000 		.4byte	0
 2637              	.LLST20:
 2638 02fa 00000000 		.4byte	.LVL52
 2639 02fe 0A000000 		.4byte	.LVL53
 2640 0302 0100     		.2byte	0x1
 2641 0304 51       		.byte	0x51
 2642 0305 0A000000 		.4byte	.LVL53
 2643 0309 18000000 		.4byte	.LVL54
 2644 030d 0400     		.2byte	0x4
 2645 030f F3       		.byte	0xf3
 2646 0310 01       		.uleb128 0x1
 2647 0311 51       		.byte	0x51
 2648 0312 9F       		.byte	0x9f
 2649 0313 18000000 		.4byte	.LVL54
 2650 0317 24000000 		.4byte	.LVL56
 2651 031b 0100     		.2byte	0x1
 2652 031d 51       		.byte	0x51
 2653 031e 34000000 		.4byte	.LVL60
 2654 0322 36000000 		.4byte	.LVL61
 2655 0326 0100     		.2byte	0x1
 2656 0328 51       		.byte	0x51
 2657 0329 3E000000 		.4byte	.LVL62
 2658 032d 43000000 		.4byte	.LVL64-1
 2659 0331 0100     		.2byte	0x1
 2660 0333 51       		.byte	0x51
 2661 0334 43000000 		.4byte	.LVL64-1
 2662 0338 54000000 		.4byte	.LFE16
 2663 033c 0400     		.2byte	0x4
 2664 033e F3       		.byte	0xf3
 2665 033f 01       		.uleb128 0x1
 2666 0340 51       		.byte	0x51
 2667 0341 9F       		.byte	0x9f
 2668 0342 00000000 		.4byte	0
 2669 0346 00000000 		.4byte	0
 2670              	.LLST21:
 2671 034a 2A000000 		.4byte	.LVL57
 2672 034e 2C000000 		.4byte	.LVL58
 2673 0352 0900     		.2byte	0x9
 2674 0354 70       		.byte	0x70
 2675 0355 00       		.sleb128 0
 2676 0356 73       		.byte	0x73
 2677 0357 00       		.sleb128 0
 2678 0358 22       		.byte	0x22
 2679 0359 71       		.byte	0x71
 2680 035a 00       		.sleb128 0
 2681 035b 1B       		.byte	0x1b
 2682 035c 9F       		.byte	0x9f
 2683 035d 00000000 		.4byte	0
 2684 0361 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 65


 2685              	.LLST22:
 2686 0365 00000000 		.4byte	.LVL65
 2687 0369 0C000000 		.4byte	.LVL66
 2688 036d 0100     		.2byte	0x1
 2689 036f 50       		.byte	0x50
 2690 0370 0C000000 		.4byte	.LVL66
 2691 0374 1C000000 		.4byte	.LVL69
 2692 0378 0100     		.2byte	0x1
 2693 037a 55       		.byte	0x55
 2694 037b 1C000000 		.4byte	.LVL69
 2695 037f 40000000 		.4byte	.LFE17
 2696 0383 0400     		.2byte	0x4
 2697 0385 F3       		.byte	0xf3
 2698 0386 01       		.uleb128 0x1
 2699 0387 50       		.byte	0x50
 2700 0388 9F       		.byte	0x9f
 2701 0389 00000000 		.4byte	0
 2702 038d 00000000 		.4byte	0
 2703              	.LLST23:
 2704 0391 00000000 		.4byte	.LVL65
 2705 0395 0F000000 		.4byte	.LVL67-1
 2706 0399 0100     		.2byte	0x1
 2707 039b 51       		.byte	0x51
 2708 039c 0F000000 		.4byte	.LVL67-1
 2709 03a0 1A000000 		.4byte	.LVL68
 2710 03a4 0400     		.2byte	0x4
 2711 03a6 F3       		.byte	0xf3
 2712 03a7 01       		.uleb128 0x1
 2713 03a8 51       		.byte	0x51
 2714 03a9 9F       		.byte	0x9f
 2715 03aa 1A000000 		.4byte	.LVL68
 2716 03ae 32000000 		.4byte	.LVL73
 2717 03b2 0100     		.2byte	0x1
 2718 03b4 54       		.byte	0x54
 2719 03b5 00000000 		.4byte	0
 2720 03b9 00000000 		.4byte	0
 2721              	.LLST24:
 2722 03bd 1E000000 		.4byte	.LVL70
 2723 03c1 32000000 		.4byte	.LVL73
 2724 03c5 1A00     		.2byte	0x1a
 2725 03c7 74       		.byte	0x74
 2726 03c8 00       		.sleb128 0
 2727 03c9 F7       		.byte	0xf7
 2728 03ca 41       		.uleb128 0x41
 2729 03cb F7       		.byte	0xf7
 2730 03cc 25       		.uleb128 0x25
 2731 03cd 0C       		.byte	0xc
 2732 03ce 80969800 		.4byte	0x989680
 2733 03d2 F7       		.byte	0xf7
 2734 03d3 25       		.uleb128 0x25
 2735 03d4 1E       		.byte	0x1e
 2736 03d5 F7       		.byte	0xf7
 2737 03d6 33       		.uleb128 0x33
 2738 03d7 75       		.byte	0x75
 2739 03d8 00       		.sleb128 0
 2740 03d9 F7       		.byte	0xf7
 2741 03da 3A       		.uleb128 0x3a
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 66


 2742 03db F7       		.byte	0xf7
 2743 03dc 33       		.uleb128 0x33
 2744 03dd 1B       		.byte	0x1b
 2745 03de F7       		.byte	0xf7
 2746 03df 25       		.uleb128 0x25
 2747 03e0 9F       		.byte	0x9f
 2748 03e1 00000000 		.4byte	0
 2749 03e5 00000000 		.4byte	0
 2750              	.LLST25:
 2751 03e9 00000000 		.4byte	.LVL74
 2752 03ed 0C000000 		.4byte	.LVL75
 2753 03f1 0100     		.2byte	0x1
 2754 03f3 50       		.byte	0x50
 2755 03f4 0C000000 		.4byte	.LVL75
 2756 03f8 1E000000 		.4byte	.LVL78
 2757 03fc 0100     		.2byte	0x1
 2758 03fe 55       		.byte	0x55
 2759 03ff 1E000000 		.4byte	.LVL78
 2760 0403 48000000 		.4byte	.LFE18
 2761 0407 0400     		.2byte	0x4
 2762 0409 F3       		.byte	0xf3
 2763 040a 01       		.uleb128 0x1
 2764 040b 50       		.byte	0x50
 2765 040c 9F       		.byte	0x9f
 2766 040d 00000000 		.4byte	0
 2767 0411 00000000 		.4byte	0
 2768              	.LLST26:
 2769 0415 00000000 		.4byte	.LVL74
 2770 0419 0F000000 		.4byte	.LVL76-1
 2771 041d 0100     		.2byte	0x1
 2772 041f 51       		.byte	0x51
 2773 0420 0F000000 		.4byte	.LVL76-1
 2774 0424 1A000000 		.4byte	.LVL77
 2775 0428 0400     		.2byte	0x4
 2776 042a F3       		.byte	0xf3
 2777 042b 01       		.uleb128 0x1
 2778 042c 51       		.byte	0x51
 2779 042d 9F       		.byte	0x9f
 2780 042e 1A000000 		.4byte	.LVL77
 2781 0432 2C000000 		.4byte	.LVL82
 2782 0436 0100     		.2byte	0x1
 2783 0438 54       		.byte	0x54
 2784 0439 00000000 		.4byte	0
 2785 043d 00000000 		.4byte	0
 2786              	.LLST27:
 2787 0441 20000000 		.4byte	.LVL79
 2788 0445 2C000000 		.4byte	.LVL82
 2789 0449 1600     		.2byte	0x16
 2790 044b 74       		.byte	0x74
 2791 044c 00       		.sleb128 0
 2792 044d F7       		.byte	0xf7
 2793 044e 41       		.uleb128 0x41
 2794 044f F7       		.byte	0xf7
 2795 0450 2C       		.uleb128 0x2c
 2796 0451 F4       		.byte	0xf4
 2797 0452 2C       		.uleb128 0x2c
 2798 0453 04       		.byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 67


 2799 0454 00002041 		.4byte	0x41200000
 2800 0458 1E       		.byte	0x1e
 2801 0459 75       		.byte	0x75
 2802 045a 00       		.sleb128 0
 2803 045b F7       		.byte	0xf7
 2804 045c 3A       		.uleb128 0x3a
 2805 045d F7       		.byte	0xf7
 2806 045e 2C       		.uleb128 0x2c
 2807 045f 1B       		.byte	0x1b
 2808 0460 9F       		.byte	0x9f
 2809 0461 00000000 		.4byte	0
 2810 0465 00000000 		.4byte	0
 2811              		.section	.debug_aranges,"",%progbits
 2812 0000 A4000000 		.4byte	0xa4
 2813 0004 0200     		.2byte	0x2
 2814 0006 00000000 		.4byte	.Ldebug_info0
 2815 000a 04       		.byte	0x4
 2816 000b 00       		.byte	0
 2817 000c 0000     		.2byte	0
 2818 000e 0000     		.2byte	0
 2819 0010 00000000 		.4byte	.LFB1
 2820 0014 10010000 		.4byte	.LFE1-.LFB1
 2821 0018 00000000 		.4byte	.LFB2
 2822 001c D8000000 		.4byte	.LFE2-.LFB2
 2823 0020 00000000 		.4byte	.LFB3
 2824 0024 30000000 		.4byte	.LFE3-.LFB3
 2825 0028 00000000 		.4byte	.LFB4
 2826 002c 10000000 		.4byte	.LFE4-.LFB4
 2827 0030 00000000 		.4byte	.LFB5
 2828 0034 14000000 		.4byte	.LFE5-.LFB5
 2829 0038 00000000 		.4byte	.LFB6
 2830 003c 14000000 		.4byte	.LFE6-.LFB6
 2831 0040 00000000 		.4byte	.LFB7
 2832 0044 2C000000 		.4byte	.LFE7-.LFB7
 2833 0048 00000000 		.4byte	.LFB8
 2834 004c 20000000 		.4byte	.LFE8-.LFB8
 2835 0050 00000000 		.4byte	.LFB9
 2836 0054 10000000 		.4byte	.LFE9-.LFB9
 2837 0058 00000000 		.4byte	.LFB10
 2838 005c 1C000000 		.4byte	.LFE10-.LFB10
 2839 0060 00000000 		.4byte	.LFB11
 2840 0064 18000000 		.4byte	.LFE11-.LFB11
 2841 0068 00000000 		.4byte	.LFB12
 2842 006c 10000000 		.4byte	.LFE12-.LFB12
 2843 0070 00000000 		.4byte	.LFB13
 2844 0074 10000000 		.4byte	.LFE13-.LFB13
 2845 0078 00000000 		.4byte	.LFB14
 2846 007c 1C000000 		.4byte	.LFE14-.LFB14
 2847 0080 00000000 		.4byte	.LFB15
 2848 0084 1C000000 		.4byte	.LFE15-.LFB15
 2849 0088 00000000 		.4byte	.LFB16
 2850 008c 54000000 		.4byte	.LFE16-.LFB16
 2851 0090 00000000 		.4byte	.LFB17
 2852 0094 40000000 		.4byte	.LFE17-.LFB17
 2853 0098 00000000 		.4byte	.LFB18
 2854 009c 48000000 		.4byte	.LFE18-.LFB18
 2855 00a0 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 68


 2856 00a4 00000000 		.4byte	0
 2857              		.section	.debug_ranges,"",%progbits
 2858              	.Ldebug_ranges0:
 2859 0000 2E000000 		.4byte	.LBB14
 2860 0004 98000000 		.4byte	.LBE14
 2861 0008 9A000000 		.4byte	.LBB17
 2862 000c 10010000 		.4byte	.LBE17
 2863 0010 00000000 		.4byte	0
 2864 0014 00000000 		.4byte	0
 2865 0018 00000000 		.4byte	.LFB1
 2866 001c 10010000 		.4byte	.LFE1
 2867 0020 00000000 		.4byte	.LFB2
 2868 0024 D8000000 		.4byte	.LFE2
 2869 0028 00000000 		.4byte	.LFB3
 2870 002c 30000000 		.4byte	.LFE3
 2871 0030 00000000 		.4byte	.LFB4
 2872 0034 10000000 		.4byte	.LFE4
 2873 0038 00000000 		.4byte	.LFB5
 2874 003c 14000000 		.4byte	.LFE5
 2875 0040 00000000 		.4byte	.LFB6
 2876 0044 14000000 		.4byte	.LFE6
 2877 0048 00000000 		.4byte	.LFB7
 2878 004c 2C000000 		.4byte	.LFE7
 2879 0050 00000000 		.4byte	.LFB8
 2880 0054 20000000 		.4byte	.LFE8
 2881 0058 00000000 		.4byte	.LFB9
 2882 005c 10000000 		.4byte	.LFE9
 2883 0060 00000000 		.4byte	.LFB10
 2884 0064 1C000000 		.4byte	.LFE10
 2885 0068 00000000 		.4byte	.LFB11
 2886 006c 18000000 		.4byte	.LFE11
 2887 0070 00000000 		.4byte	.LFB12
 2888 0074 10000000 		.4byte	.LFE12
 2889 0078 00000000 		.4byte	.LFB13
 2890 007c 10000000 		.4byte	.LFE13
 2891 0080 00000000 		.4byte	.LFB14
 2892 0084 1C000000 		.4byte	.LFE14
 2893 0088 00000000 		.4byte	.LFB15
 2894 008c 1C000000 		.4byte	.LFE15
 2895 0090 00000000 		.4byte	.LFB16
 2896 0094 54000000 		.4byte	.LFE16
 2897 0098 00000000 		.4byte	.LFB17
 2898 009c 40000000 		.4byte	.LFE17
 2899 00a0 00000000 		.4byte	.LFB18
 2900 00a4 48000000 		.4byte	.LFE18
 2901 00a8 00000000 		.4byte	0
 2902 00ac 00000000 		.4byte	0
 2903              		.section	.debug_line,"",%progbits
 2904              	.Ldebug_line0:
 2905 0000 0F030000 		.section	.debug_str,"MS",%progbits,1
 2905      02005500 
 2905      00000201 
 2905      FB0E0D00 
 2905      01010101 
 2906              	.LASF56:
 2907 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2907      5341525F 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 69


 2907      5365715F 
 2907      315F6F66 
 2907      66736574 
 2908              	.LASF11:
 2909 0015 75696E74 		.ascii	"uint16\000"
 2909      313600
 2910              	.LASF58:
 2911 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2911      5341525F 
 2911      5365715F 
 2911      315F496E 
 2911      697400
 2912              	.LASF46:
 2913 002f 61646347 		.ascii	"adcGain\000"
 2913      61696E00 
 2914              	.LASF24:
 2915 0037 636F756E 		.ascii	"counts\000"
 2915      747300
 2916              	.LASF61:
 2917 003e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2917      4320342E 
 2917      392E3320 
 2917      32303135 
 2917      30333033 
 2918 0071 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2918      20726576 
 2918      6973696F 
 2918      6E203232 
 2918      31323230 
 2919 00a4 32202D66 		.ascii	"2 -ffunction-sections -finline-functions -ffat-lto-"
 2919      66756E63 
 2919      74696F6E 
 2919      2D736563 
 2919      74696F6E 
 2920 00d7 6F626A65 		.ascii	"objects\000"
 2920      63747300 
 2921              	.LASF26:
 2922 00df 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2922      5341525F 
 2922      5365715F 
 2922      315F5374 
 2922      61727443 
 2923              	.LASF42:
 2924 00fa 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2924      5341525F 
 2924      5365715F 
 2924      315F5365 
 2924      74536174 
 2925              	.LASF34:
 2926 0113 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2926      5341525F 
 2926      5365715F 
 2926      315F5374 
 2926      61727400 
 2927              	.LASF0:
 2928 0127 6C6F6E67 		.ascii	"long long unsigned int\000"
 2928      206C6F6E 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 70


 2928      6720756E 
 2928      7369676E 
 2928      65642069 
 2929              	.LASF64:
 2930 013e 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2930      5341525F 
 2930      5365715F 
 2930      315F456E 
 2930      61626C65 
 2931              	.LASF29:
 2932 0153 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2932      5341525F 
 2932      5365715F 
 2932      315F4765 
 2932      74526573 
 2933              	.LASF2:
 2934 016d 6C6F6E67 		.ascii	"long long int\000"
 2934      206C6F6E 
 2934      6720696E 
 2934      7400
 2935              	.LASF4:
 2936 017b 7369676E 		.ascii	"signed char\000"
 2936      65642063 
 2936      68617200 
 2937              	.LASF39:
 2938 0187 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2938      5341525F 
 2938      5365715F 
 2938      315F5365 
 2938      74486967 
 2939              	.LASF14:
 2940 01a2 696E7433 		.ascii	"int32\000"
 2940      3200
 2941              	.LASF50:
 2942 01a8 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2942      5341525F 
 2942      5365715F 
 2942      315F436F 
 2942      756E7473 
 2943              	.LASF7:
 2944 01c6 6C6F6E67 		.ascii	"long int\000"
 2944      20696E74 
 2944      00
 2945              	.LASF10:
 2946 01cf 75696E74 		.ascii	"uint8\000"
 2946      3800
 2947              	.LASF59:
 2948 01d5 43794465 		.ascii	"CyDelayUs\000"
 2948      6C617955 
 2948      7300
 2949              	.LASF16:
 2950 01df 646F7562 		.ascii	"double\000"
 2950      6C6500
 2951              	.LASF12:
 2952 01e6 75696E74 		.ascii	"uint32\000"
 2952      333200
 2953              	.LASF36:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 71


 2954 01ed 6D61736B 		.ascii	"mask\000"
 2954      00
 2955              	.LASF47:
 2956 01f2 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2956      5341525F 
 2956      5365715F 
 2956      315F436F 
 2956      756E7473 
 2957              	.LASF30:
 2958 0210 7265744D 		.ascii	"retMode\000"
 2958      6F646500 
 2959              	.LASF55:
 2960 0218 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2960      5341525F 
 2960      5365715F 
 2960      315F696E 
 2960      69745661 
 2961              	.LASF9:
 2962 022e 756E7369 		.ascii	"unsigned int\000"
 2962      676E6564 
 2962      20696E74 
 2962      00
 2963              	.LASF51:
 2964 023b 75566F6C 		.ascii	"uVolts\000"
 2964      747300
 2965              	.LASF8:
 2966 0242 6C6F6E67 		.ascii	"long unsigned int\000"
 2966      20756E73 
 2966      69676E65 
 2966      6420696E 
 2966      7400
 2967              	.LASF53:
 2968 0254 766F6C74 		.ascii	"volts\000"
 2968      7300
 2969              	.LASF23:
 2970 025a 746D7052 		.ascii	"tmpRegVal\000"
 2970      65675661 
 2970      6C00
 2971              	.LASF6:
 2972 0264 73686F72 		.ascii	"short unsigned int\000"
 2972      7420756E 
 2972      7369676E 
 2972      65642069 
 2972      6E7400
 2973              	.LASF65:
 2974 0277 4379496E 		.ascii	"CyIntSetVector\000"
 2974      74536574 
 2974      56656374 
 2974      6F7200
 2975              	.LASF54:
 2976 0286 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2976      5341525F 
 2976      5365715F 
 2976      315F6368 
 2976      616E6E65 
 2977              	.LASF49:
 2978 02a3 6D566F6C 		.ascii	"mVolts\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 72


 2978      747300
 2979              	.LASF19:
 2980 02aa 72656733 		.ascii	"reg32\000"
 2980      3200
 2981              	.LASF15:
 2982 02b0 666C6F61 		.ascii	"float32\000"
 2982      74333200 
 2983              	.LASF21:
 2984 02b8 73697A65 		.ascii	"sizetype\000"
 2984      74797065 
 2984      00
 2985              	.LASF38:
 2986 02c1 6C6F774C 		.ascii	"lowLimit\000"
 2986      696D6974 
 2986      00
 2987              	.LASF28:
 2988 02ca 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2988      5341525F 
 2988      5365715F 
 2988      315F4973 
 2988      456E6443 
 2989              	.LASF27:
 2990 02e8 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2990      5341525F 
 2990      5365715F 
 2990      315F5374 
 2990      6F70436F 
 2991              	.LASF17:
 2992 0302 696E7436 		.ascii	"int64\000"
 2992      3400
 2993              	.LASF60:
 2994 0308 4379496E 		.ascii	"CyIntSetPriority\000"
 2994      74536574 
 2994      5072696F 
 2994      72697479 
 2994      00
 2995              	.LASF62:
 2996 0319 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2996      72617465 
 2996      645F536F 
 2996      75726365 
 2996      5C50536F 
 2997              	.LASF1:
 2998 0340 666C6F61 		.ascii	"float\000"
 2998      7400
 2999              	.LASF45:
 3000 0346 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 3000      5341525F 
 3000      5365715F 
 3000      315F5365 
 3000      74476169 
 3001              	.LASF25:
 3002 035c 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 3002      5341525F 
 3002      5365715F 
 3002      315F5374 
 3002      6F7000
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 73


 3003              	.LASF40:
 3004 036f 68696768 		.ascii	"highLimit\000"
 3004      4C696D69 
 3004      7400
 3005              	.LASF66:
 3006 0379 43794861 		.ascii	"CyHalt\000"
 3006      6C7400
 3007              	.LASF5:
 3008 0380 756E7369 		.ascii	"unsigned char\000"
 3008      676E6564 
 3008      20636861 
 3008      7200
 3009              	.LASF3:
 3010 038e 73686F72 		.ascii	"short int\000"
 3010      7420696E 
 3010      7400
 3011              	.LASF52:
 3012 0398 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 3012      5341525F 
 3012      5365715F 
 3012      315F436F 
 3012      756E7473 
 3013              	.LASF63:
 3014 03b5 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 3014      73657273 
 3014      5C676C65 
 3014      6E6E5C4F 
 3014      6E654472 
 3015 03e3 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 3015      69737475 
 3015      72655F53 
 3015      656E736F 
 3015      725C4D6F 
 3016              	.LASF35:
 3017 040b 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 3017      5341525F 
 3017      5365715F 
 3017      315F5365 
 3017      74436861 
 3018              	.LASF22:
 3019 0425 63684E75 		.ascii	"chNum\000"
 3019      6D00
 3020              	.LASF31:
 3021 042b 6368616E 		.ascii	"chan\000"
 3021      00
 3022              	.LASF18:
 3023 0430 63686172 		.ascii	"char\000"
 3023      00
 3024              	.LASF20:
 3025 0435 63796973 		.ascii	"cyisraddress\000"
 3025      72616464 
 3025      72657373 
 3025      00
 3026              	.LASF37:
 3027 0442 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 3027      5341525F 
 3027      5365715F 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccA4PzVI.s 			page 74


 3027      315F5365 
 3027      744C6F77 
 3028              	.LASF44:
 3029 045c 6F666673 		.ascii	"offset\000"
 3029      657400
 3030              	.LASF48:
 3031 0463 61646343 		.ascii	"adcCounts\000"
 3031      6F756E74 
 3031      7300
 3032              	.LASF57:
 3033 046d 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 3033      5341525F 
 3033      5365715F 
 3033      315F636F 
 3033      756E7473 
 3034              	.LASF32:
 3035 048b 73746174 		.ascii	"status\000"
 3035      757300
 3036              	.LASF43:
 3037 0492 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 3037      5341525F 
 3037      5365715F 
 3037      315F5365 
 3037      744F6666 
 3038              	.LASF13:
 3039 04aa 696E7431 		.ascii	"int16\000"
 3039      3600
 3040              	.LASF41:
 3041 04b0 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 3041      5341525F 
 3041      5365715F 
 3041      315F5365 
 3041      744C696D 
 3042              	.LASF33:
 3043 04cb 72657375 		.ascii	"result\000"
 3043      6C7400
 3044              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
