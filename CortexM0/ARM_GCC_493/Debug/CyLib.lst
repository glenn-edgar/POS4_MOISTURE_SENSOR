ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysTickServiceCallbacks, %function
  22              	CySysTickServiceCallbacks:
  23              	.LFB47:
  24              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 2


  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:Generated_Source\PSoC4/CyLib.c **** 
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:Generated_Source\PSoC4/CyLib.c **** *
  46:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:Generated_Source\PSoC4/CyLib.c **** *
  49:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:Generated_Source\PSoC4/CyLib.c **** 
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLib.c **** 
  73:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:Generated_Source\PSoC4/CyLib.c **** 
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 3


  91:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:Generated_Source\PSoC4/CyLib.c **** *
  96:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:Generated_Source\PSoC4/CyLib.c **** {
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:Generated_Source\PSoC4/CyLib.c **** 
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:Generated_Source\PSoC4/CyLib.c **** 
 121:Generated_Source\PSoC4/CyLib.c **** }
 122:Generated_Source\PSoC4/CyLib.c **** 
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:Generated_Source\PSoC4/CyLib.c **** {
 138:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:Generated_Source\PSoC4/CyLib.c **** 
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 147:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 4


 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:Generated_Source\PSoC4/CyLib.c ****     *
 155:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:Generated_Source\PSoC4/CyLib.c ****     {
 174:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:Generated_Source\PSoC4/CyLib.c **** 
 184:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:Generated_Source\PSoC4/CyLib.c ****         {
 186:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:Generated_Source\PSoC4/CyLib.c **** 
 195:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:Generated_Source\PSoC4/CyLib.c ****                 {
 200:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:Generated_Source\PSoC4/CyLib.c ****                     {
 202:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:Generated_Source\PSoC4/CyLib.c ****                         break;
 204:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 5


 205:Generated_Source\PSoC4/CyLib.c ****                 }
 206:Generated_Source\PSoC4/CyLib.c ****             #else
 207:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:Generated_Source\PSoC4/CyLib.c ****                 #else
 214:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:Generated_Source\PSoC4/CyLib.c **** 
 218:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****                 {
 224:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****                 }
 227:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:Generated_Source\PSoC4/CyLib.c **** 
 229:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:Generated_Source\PSoC4/CyLib.c ****             {
 243:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:Generated_Source\PSoC4/CyLib.c ****             }
 245:Generated_Source\PSoC4/CyLib.c ****             else
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:Generated_Source\PSoC4/CyLib.c ****             }
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 6


 262:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:Generated_Source\PSoC4/CyLib.c **** 
 264:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 265:Generated_Source\PSoC4/CyLib.c ****         }
 266:Generated_Source\PSoC4/CyLib.c ****     }
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:Generated_Source\PSoC4/CyLib.c ****     *
 273:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:Generated_Source\PSoC4/CyLib.c ****     {
 284:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:Generated_Source\PSoC4/CyLib.c ****     }
 286:Generated_Source\PSoC4/CyLib.c **** 
 287:Generated_Source\PSoC4/CyLib.c **** 
 288:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:Generated_Source\PSoC4/CyLib.c ****     *
 292:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:Generated_Source\PSoC4/CyLib.c ****     {
 303:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:Generated_Source\PSoC4/CyLib.c ****     }
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:Generated_Source\PSoC4/CyLib.c **** 
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:Generated_Source\PSoC4/CyLib.c ****     *
 317:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 7


 319:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 322:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:Generated_Source\PSoC4/CyLib.c ****     {
 330:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:Generated_Source\PSoC4/CyLib.c **** 
 336:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** 
 347:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:Generated_Source\PSoC4/CyLib.c ****     *
 353:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:Generated_Source\PSoC4/CyLib.c ****     {
 362:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:Generated_Source\PSoC4/CyLib.c **** 
 364:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:Generated_Source\PSoC4/CyLib.c ****     }
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c **** 
 372:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 8


 376:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:Generated_Source\PSoC4/CyLib.c ****     *
 378:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 379:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:Generated_Source\PSoC4/CyLib.c ****     {
 387:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:Generated_Source\PSoC4/CyLib.c ****     }
 391:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:Generated_Source\PSoC4/CyLib.c **** 
 393:Generated_Source\PSoC4/CyLib.c **** 
 394:Generated_Source\PSoC4/CyLib.c **** 
 395:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:Generated_Source\PSoC4/CyLib.c **** *
 399:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:Generated_Source\PSoC4/CyLib.c **** *
 401:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:Generated_Source\PSoC4/CyLib.c **** *
 403:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:Generated_Source\PSoC4/CyLib.c **** *
 407:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:Generated_Source\PSoC4/CyLib.c **** *
 414:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:Generated_Source\PSoC4/CyLib.c **** *
 425:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:Generated_Source\PSoC4/CyLib.c **** {
 428:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 432:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 9


 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 435:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:Generated_Source\PSoC4/CyLib.c ****     {
 440:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:Generated_Source\PSoC4/CyLib.c ****     }
 442:Generated_Source\PSoC4/CyLib.c ****     else
 443:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 446:Generated_Source\PSoC4/CyLib.c ****     }
 447:Generated_Source\PSoC4/CyLib.c **** 
 448:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 449:Generated_Source\PSoC4/CyLib.c **** 
 450:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 451:Generated_Source\PSoC4/CyLib.c **** }
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:Generated_Source\PSoC4/CyLib.c **** *
 458:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:Generated_Source\PSoC4/CyLib.c **** *
 460:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:Generated_Source\PSoC4/CyLib.c **** *
 462:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:Generated_Source\PSoC4/CyLib.c **** {
 465:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 469:Generated_Source\PSoC4/CyLib.c **** 
 470:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:Generated_Source\PSoC4/CyLib.c ****     {
 473:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:Generated_Source\PSoC4/CyLib.c ****     }
 475:Generated_Source\PSoC4/CyLib.c ****     else
 476:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:Generated_Source\PSoC4/CyLib.c ****     {
 478:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 479:Generated_Source\PSoC4/CyLib.c ****     }
 480:Generated_Source\PSoC4/CyLib.c **** 
 481:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:Generated_Source\PSoC4/CyLib.c **** }
 485:Generated_Source\PSoC4/CyLib.c **** 
 486:Generated_Source\PSoC4/CyLib.c **** 
 487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 10


 490:Generated_Source\PSoC4/CyLib.c **** *
 491:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:Generated_Source\PSoC4/CyLib.c **** *
 496:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:Generated_Source\PSoC4/CyLib.c **** *
 500:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:Generated_Source\PSoC4/CyLib.c **** *
 517:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:Generated_Source\PSoC4/CyLib.c **** {
 520:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 527:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 530:Generated_Source\PSoC4/CyLib.c **** }
 531:Generated_Source\PSoC4/CyLib.c **** 
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:Generated_Source\PSoC4/CyLib.c **** *
 537:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:Generated_Source\PSoC4/CyLib.c **** *
 542:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 11


 547:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:Generated_Source\PSoC4/CyLib.c **** *
 550:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:Generated_Source\PSoC4/CyLib.c **** *
 558:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:Generated_Source\PSoC4/CyLib.c **** *
 565:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:Generated_Source\PSoC4/CyLib.c **** *
 569:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:Generated_Source\PSoC4/CyLib.c **** * 4.
 573:Generated_Source\PSoC4/CyLib.c **** *
 574:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:Generated_Source\PSoC4/CyLib.c ****     {
 578:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:Generated_Source\PSoC4/CyLib.c ****         #else
 582:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:Generated_Source\PSoC4/CyLib.c **** 
 597:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:Generated_Source\PSoC4/CyLib.c **** 
 599:Generated_Source\PSoC4/CyLib.c **** 
 600:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 12


 604:Generated_Source\PSoC4/CyLib.c ****             {
 605:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:Generated_Source\PSoC4/CyLib.c ****             }
 608:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:Generated_Source\PSoC4/CyLib.c **** 
 610:Generated_Source\PSoC4/CyLib.c **** 
 611:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:Generated_Source\PSoC4/CyLib.c ****                 {
 616:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:Generated_Source\PSoC4/CyLib.c **** 
 618:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:Generated_Source\PSoC4/CyLib.c ****                 {
 620:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:Generated_Source\PSoC4/CyLib.c ****                 }
 623:Generated_Source\PSoC4/CyLib.c **** 
 624:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:Generated_Source\PSoC4/CyLib.c ****                 }
 626:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:Generated_Source\PSoC4/CyLib.c **** 
 630:Generated_Source\PSoC4/CyLib.c **** 
 631:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:Generated_Source\PSoC4/CyLib.c **** 
 633:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 646:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:Generated_Source\PSoC4/CyLib.c **** 
 650:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:Generated_Source\PSoC4/CyLib.c ****         {
 652:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:Generated_Source\PSoC4/CyLib.c ****             {
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:Generated_Source\PSoC4/CyLib.c ****             }
 657:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:Generated_Source\PSoC4/CyLib.c ****             {
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 13


 661:Generated_Source\PSoC4/CyLib.c ****             }
 662:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:Generated_Source\PSoC4/CyLib.c ****             {
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:Generated_Source\PSoC4/CyLib.c ****             }
 667:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:Generated_Source\PSoC4/CyLib.c ****             {
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:Generated_Source\PSoC4/CyLib.c ****             }
 672:Generated_Source\PSoC4/CyLib.c ****             else
 673:Generated_Source\PSoC4/CyLib.c ****             {
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:Generated_Source\PSoC4/CyLib.c ****             }
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:Generated_Source\PSoC4/CyLib.c **** 
 681:Generated_Source\PSoC4/CyLib.c **** 
 682:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:Generated_Source\PSoC4/CyLib.c ****             *
 687:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:Generated_Source\PSoC4/CyLib.c ****             {
 693:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:Generated_Source\PSoC4/CyLib.c **** 
 699:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:Generated_Source\PSoC4/CyLib.c ****             }
 701:Generated_Source\PSoC4/CyLib.c ****             else
 702:Generated_Source\PSoC4/CyLib.c ****             {
 703:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:Generated_Source\PSoC4/CyLib.c ****             }
 705:Generated_Source\PSoC4/CyLib.c **** 
 706:Generated_Source\PSoC4/CyLib.c **** 
 707:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:Generated_Source\PSoC4/CyLib.c ****             *
 711:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:Generated_Source\PSoC4/CyLib.c ****             {
 717:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 14


 718:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:Generated_Source\PSoC4/CyLib.c ****             }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:Generated_Source\PSoC4/CyLib.c ****                 {
 727:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:Generated_Source\PSoC4/CyLib.c ****                 }
 729:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:Generated_Source\PSoC4/CyLib.c ****                 {
 731:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:Generated_Source\PSoC4/CyLib.c ****                 }
 733:Generated_Source\PSoC4/CyLib.c ****                 else
 734:Generated_Source\PSoC4/CyLib.c ****                 {
 735:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:Generated_Source\PSoC4/CyLib.c ****                 }
 737:Generated_Source\PSoC4/CyLib.c ****             #else
 738:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:Generated_Source\PSoC4/CyLib.c **** 
 741:Generated_Source\PSoC4/CyLib.c **** 
 742:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:Generated_Source\PSoC4/CyLib.c **** 
 747:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:Generated_Source\PSoC4/CyLib.c ****             }
 753:Generated_Source\PSoC4/CyLib.c ****         }
 754:Generated_Source\PSoC4/CyLib.c ****         else
 755:Generated_Source\PSoC4/CyLib.c ****         {
 756:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:Generated_Source\PSoC4/CyLib.c ****         }
 759:Generated_Source\PSoC4/CyLib.c **** 
 760:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:Generated_Source\PSoC4/CyLib.c **** 
 762:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:Generated_Source\PSoC4/CyLib.c ****             {
 765:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:Generated_Source\PSoC4/CyLib.c ****             {
 772:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:Generated_Source\PSoC4/CyLib.c ****             }
 774:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 15


 775:Generated_Source\PSoC4/CyLib.c **** 
 776:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:Generated_Source\PSoC4/CyLib.c ****     }
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c **** #else
 780:Generated_Source\PSoC4/CyLib.c **** 
 781:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:Generated_Source\PSoC4/CyLib.c ****     {
 783:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:Generated_Source\PSoC4/CyLib.c **** 
 786:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:Generated_Source\PSoC4/CyLib.c ****         
 790:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:Generated_Source\PSoC4/CyLib.c ****         #else
 797:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:Generated_Source\PSoC4/CyLib.c ****                 }
 810:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:Generated_Source\PSoC4/CyLib.c ****                     {
 817:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:Generated_Source\PSoC4/CyLib.c ****                     {
 821:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:Generated_Source\PSoC4/CyLib.c ****                     }
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:Generated_Source\PSoC4/CyLib.c ****                     }
 827:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:Generated_Source\PSoC4/CyLib.c **** 
 831:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 16


 832:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c **** 
 836:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:Generated_Source\PSoC4/CyLib.c ****                 {
 840:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:Generated_Source\PSoC4/CyLib.c ****                 }
 842:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:Generated_Source\PSoC4/CyLib.c ****                 {
 844:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 }
 846:Generated_Source\PSoC4/CyLib.c ****                 else
 847:Generated_Source\PSoC4/CyLib.c ****                 {
 848:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:Generated_Source\PSoC4/CyLib.c ****                 }
 850:Generated_Source\PSoC4/CyLib.c ****             #else
 851:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:Generated_Source\PSoC4/CyLib.c **** 
 855:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:Generated_Source\PSoC4/CyLib.c **** 
 862:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:Generated_Source\PSoC4/CyLib.c ****             {
 866:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:Generated_Source\PSoC4/CyLib.c ****             }
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:Generated_Source\PSoC4/CyLib.c ****                 {
 881:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:Generated_Source\PSoC4/CyLib.c ****                 }
 883:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:Generated_Source\PSoC4/CyLib.c ****         
 885:Generated_Source\PSoC4/CyLib.c ****         
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 17


 889:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:Generated_Source\PSoC4/CyLib.c **** 
 893:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:Generated_Source\PSoC4/CyLib.c ****         }
 895:Generated_Source\PSoC4/CyLib.c ****         else
 896:Generated_Source\PSoC4/CyLib.c ****         {
 897:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:Generated_Source\PSoC4/CyLib.c ****         }
 900:Generated_Source\PSoC4/CyLib.c ****     }
 901:Generated_Source\PSoC4/CyLib.c **** 
 902:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:Generated_Source\PSoC4/CyLib.c ****     *
 910:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:Generated_Source\PSoC4/CyLib.c ****     *
 916:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:Generated_Source\PSoC4/CyLib.c ****     *
 919:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:Generated_Source\PSoC4/CyLib.c ****     *
 926:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:Generated_Source\PSoC4/CyLib.c ****     *
 931:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:Generated_Source\PSoC4/CyLib.c ****     {
 934:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:Generated_Source\PSoC4/CyLib.c **** 
 936:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****     }
 944:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 18


 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:Generated_Source\PSoC4/CyLib.c **** 
 949:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:Generated_Source\PSoC4/CyLib.c ****     *
 953:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:Generated_Source\PSoC4/CyLib.c ****     *
 956:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:Generated_Source\PSoC4/CyLib.c ****     * called.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:Generated_Source\PSoC4/CyLib.c ****     *
 963:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:Generated_Source\PSoC4/CyLib.c ****     *
 971:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:Generated_Source\PSoC4/CyLib.c ****     *
 977:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:Generated_Source\PSoC4/CyLib.c ****     {
 980:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 988:Generated_Source\PSoC4/CyLib.c **** 
 989:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:Generated_Source\PSoC4/CyLib.c ****         {
 999:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:Generated_Source\PSoC4/CyLib.c **** 
1001:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 19


1003:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:Generated_Source\PSoC4/CyLib.c ****                 {
1007:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:Generated_Source\PSoC4/CyLib.c ****                     break;
1009:Generated_Source\PSoC4/CyLib.c ****                 }
1010:Generated_Source\PSoC4/CyLib.c ****             }
1011:Generated_Source\PSoC4/CyLib.c **** 
1012:Generated_Source\PSoC4/CyLib.c ****         }
1013:Generated_Source\PSoC4/CyLib.c **** 
1014:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:Generated_Source\PSoC4/CyLib.c ****     }
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:Generated_Source\PSoC4/CyLib.c ****     *
1022:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:Generated_Source\PSoC4/CyLib.c ****     *
1028:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:Generated_Source\PSoC4/CyLib.c ****     {
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1037:Generated_Source\PSoC4/CyLib.c ****         #else
1038:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:Generated_Source\PSoC4/CyLib.c ****     }
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:Generated_Source\PSoC4/CyLib.c ****     *
1049:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:Generated_Source\PSoC4/CyLib.c ****     *
1052:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:Generated_Source\PSoC4/CyLib.c ****     *
1055:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:Generated_Source\PSoC4/CyLib.c ****     *
1058:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 20


1060:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:Generated_Source\PSoC4/CyLib.c ****     {
1063:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:Generated_Source\PSoC4/CyLib.c **** 
1065:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1067:Generated_Source\PSoC4/CyLib.c ****         #else
1068:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:Generated_Source\PSoC4/CyLib.c **** 
1071:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:Generated_Source\PSoC4/CyLib.c ****     }
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:Generated_Source\PSoC4/CyLib.c ****         *
1079:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:Generated_Source\PSoC4/CyLib.c ****         *
1094:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:Generated_Source\PSoC4/CyLib.c ****         *
1100:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:Generated_Source\PSoC4/CyLib.c ****         {
1103:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:Generated_Source\PSoC4/CyLib.c **** 
1105:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:Generated_Source\PSoC4/CyLib.c ****             {
1107:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:Generated_Source\PSoC4/CyLib.c ****             }
1114:Generated_Source\PSoC4/CyLib.c ****             else
1115:Generated_Source\PSoC4/CyLib.c ****             {
1116:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 21


1117:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:Generated_Source\PSoC4/CyLib.c ****             }
1119:Generated_Source\PSoC4/CyLib.c ****         }
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****     #else
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****         *
1127:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:Generated_Source\PSoC4/CyLib.c ****         *
1130:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:Generated_Source\PSoC4/CyLib.c ****         *
1133:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:Generated_Source\PSoC4/CyLib.c ****         *
1136:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:Generated_Source\PSoC4/CyLib.c ****         *
1140:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:Generated_Source\PSoC4/CyLib.c ****         *
1143:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:Generated_Source\PSoC4/CyLib.c ****         *
1146:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:Generated_Source\PSoC4/CyLib.c ****         *
1149:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:Generated_Source\PSoC4/CyLib.c ****         *
1152:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:Generated_Source\PSoC4/CyLib.c ****         *
1158:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:Generated_Source\PSoC4/CyLib.c ****         *
1168:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 22


1174:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *
1180:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:Generated_Source\PSoC4/CyLib.c ****         *
1189:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:Generated_Source\PSoC4/CyLib.c ****         {
1192:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:Generated_Source\PSoC4/CyLib.c **** 
1195:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:Generated_Source\PSoC4/CyLib.c **** 
1197:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:Generated_Source\PSoC4/CyLib.c **** 
1202:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:Generated_Source\PSoC4/CyLib.c **** 
1211:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:Generated_Source\PSoC4/CyLib.c ****         }
1213:Generated_Source\PSoC4/CyLib.c **** 
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:Generated_Source\PSoC4/CyLib.c ****         *
1219:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:Generated_Source\PSoC4/CyLib.c ****         *
1223:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:Generated_Source\PSoC4/CyLib.c ****         *
1225:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 23


1231:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:Generated_Source\PSoC4/CyLib.c ****         *
1237:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:Generated_Source\PSoC4/CyLib.c ****         *
1240:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:Generated_Source\PSoC4/CyLib.c ****         {
1243:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:Generated_Source\PSoC4/CyLib.c **** 
1245:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:Generated_Source\PSoC4/CyLib.c **** 
1251:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:Generated_Source\PSoC4/CyLib.c ****             {
1257:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:Generated_Source\PSoC4/CyLib.c ****             }
1259:Generated_Source\PSoC4/CyLib.c ****             else
1260:Generated_Source\PSoC4/CyLib.c ****             {
1261:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:Generated_Source\PSoC4/CyLib.c **** 
1264:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:Generated_Source\PSoC4/CyLib.c ****                 {
1266:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:Generated_Source\PSoC4/CyLib.c ****                 }
1268:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:Generated_Source\PSoC4/CyLib.c ****                 {
1270:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:Generated_Source\PSoC4/CyLib.c ****                 }
1272:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:Generated_Source\PSoC4/CyLib.c ****                 {
1274:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:Generated_Source\PSoC4/CyLib.c ****                 }
1276:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 24


1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c **** 
1297:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:Generated_Source\PSoC4/CyLib.c **** 
1300:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:Generated_Source\PSoC4/CyLib.c ****                 {
1304:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:Generated_Source\PSoC4/CyLib.c ****                 }
1307:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:Generated_Source\PSoC4/CyLib.c ****                 {
1309:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:Generated_Source\PSoC4/CyLib.c ****                 }
1311:Generated_Source\PSoC4/CyLib.c ****                 else
1312:Generated_Source\PSoC4/CyLib.c ****                 {
1313:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:Generated_Source\PSoC4/CyLib.c ****                 }
1315:Generated_Source\PSoC4/CyLib.c **** 
1316:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:Generated_Source\PSoC4/CyLib.c ****                 {
1319:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:Generated_Source\PSoC4/CyLib.c ****                 }
1321:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:Generated_Source\PSoC4/CyLib.c ****                 {
1323:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:Generated_Source\PSoC4/CyLib.c ****                 }
1325:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:Generated_Source\PSoC4/CyLib.c ****                 {
1327:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:Generated_Source\PSoC4/CyLib.c ****                 }
1329:Generated_Source\PSoC4/CyLib.c ****                 else
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:Generated_Source\PSoC4/CyLib.c **** 
1337:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:Generated_Source\PSoC4/CyLib.c **** 
1339:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:Generated_Source\PSoC4/CyLib.c ****                 {
1342:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 25


1345:Generated_Source\PSoC4/CyLib.c ****                 else
1346:Generated_Source\PSoC4/CyLib.c ****                 {
1347:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:Generated_Source\PSoC4/CyLib.c ****                     */
1350:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:Generated_Source\PSoC4/CyLib.c ****                 }
1352:Generated_Source\PSoC4/CyLib.c ****             }
1353:Generated_Source\PSoC4/CyLib.c **** 
1354:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:Generated_Source\PSoC4/CyLib.c ****         }
1356:Generated_Source\PSoC4/CyLib.c **** 
1357:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:Generated_Source\PSoC4/CyLib.c ****     *
1367:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:Generated_Source\PSoC4/CyLib.c ****     *
1370:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:Generated_Source\PSoC4/CyLib.c ****     *
1373:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:Generated_Source\PSoC4/CyLib.c ****     *
1375:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:Generated_Source\PSoC4/CyLib.c ****     *
1384:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:Generated_Source\PSoC4/CyLib.c ****     *
1391:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:Generated_Source\PSoC4/CyLib.c ****     {
1394:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:Generated_Source\PSoC4/CyLib.c ****         {
1400:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 26


1402:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:Generated_Source\PSoC4/CyLib.c **** 
1405:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:Generated_Source\PSoC4/CyLib.c **** 
1408:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:Generated_Source\PSoC4/CyLib.c **** 
1410:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:Generated_Source\PSoC4/CyLib.c **** 
1416:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:Generated_Source\PSoC4/CyLib.c ****             {
1418:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:Generated_Source\PSoC4/CyLib.c **** 
1420:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:Generated_Source\PSoC4/CyLib.c ****                 {
1422:Generated_Source\PSoC4/CyLib.c **** 
1423:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:Generated_Source\PSoC4/CyLib.c ****                     {
1425:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:Generated_Source\PSoC4/CyLib.c ****                         break;
1428:Generated_Source\PSoC4/CyLib.c ****                     }
1429:Generated_Source\PSoC4/CyLib.c **** 
1430:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****             }
1434:Generated_Source\PSoC4/CyLib.c ****         }
1435:Generated_Source\PSoC4/CyLib.c ****         else
1436:Generated_Source\PSoC4/CyLib.c ****         {
1437:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:Generated_Source\PSoC4/CyLib.c ****         }
1439:Generated_Source\PSoC4/CyLib.c **** 
1440:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:Generated_Source\PSoC4/CyLib.c ****     }
1442:Generated_Source\PSoC4/CyLib.c **** 
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:Generated_Source\PSoC4/CyLib.c ****     *
1448:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:Generated_Source\PSoC4/CyLib.c ****     *
1450:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:Generated_Source\PSoC4/CyLib.c ****     *
1452:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:Generated_Source\PSoC4/CyLib.c ****     *
1456:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:Generated_Source\PSoC4/CyLib.c ****     *
1458:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 27


1459:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:Generated_Source\PSoC4/CyLib.c ****     {
1461:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:Generated_Source\PSoC4/CyLib.c **** 
1464:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:Generated_Source\PSoC4/CyLib.c **** 
1466:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:Generated_Source\PSoC4/CyLib.c ****         {
1472:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:Generated_Source\PSoC4/CyLib.c ****         }
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:Generated_Source\PSoC4/CyLib.c **** 
1477:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:Generated_Source\PSoC4/CyLib.c ****     }
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:Generated_Source\PSoC4/CyLib.c ****     *
1484:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:Generated_Source\PSoC4/CyLib.c ****     *
1486:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:Generated_Source\PSoC4/CyLib.c ****     *
1489:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:Generated_Source\PSoC4/CyLib.c ****     *
1491:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:Generated_Source\PSoC4/CyLib.c ****     *
1495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:Generated_Source\PSoC4/CyLib.c ****     {
1498:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:Generated_Source\PSoC4/CyLib.c ****         {
1502:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:Generated_Source\PSoC4/CyLib.c ****         }
1506:Generated_Source\PSoC4/CyLib.c ****     }
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** 
1509:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:Generated_Source\PSoC4/CyLib.c ****     *
1513:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 28


1516:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:Generated_Source\PSoC4/CyLib.c ****     *
1521:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:Generated_Source\PSoC4/CyLib.c ****     *
1523:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:Generated_Source\PSoC4/CyLib.c ****     *
1527:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:Generated_Source\PSoC4/CyLib.c ****     *
1530:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:Generated_Source\PSoC4/CyLib.c ****     *
1532:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:Generated_Source\PSoC4/CyLib.c **** 
1548:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:Generated_Source\PSoC4/CyLib.c **** 
1550:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:Generated_Source\PSoC4/CyLib.c **** 
1552:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:Generated_Source\PSoC4/CyLib.c ****         {
1558:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:Generated_Source\PSoC4/CyLib.c **** 
1567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:Generated_Source\PSoC4/CyLib.c ****         }
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 29


1573:Generated_Source\PSoC4/CyLib.c **** 
1574:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:Generated_Source\PSoC4/CyLib.c ****     }
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c **** 
1578:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:Generated_Source\PSoC4/CyLib.c ****     *
1582:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:Generated_Source\PSoC4/CyLib.c ****     *
1584:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:Generated_Source\PSoC4/CyLib.c ****     *
1587:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:Generated_Source\PSoC4/CyLib.c ****     *
1592:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:Generated_Source\PSoC4/CyLib.c ****     *
1594:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:Generated_Source\PSoC4/CyLib.c ****     *
1598:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:Generated_Source\PSoC4/CyLib.c ****     *
1606:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:Generated_Source\PSoC4/CyLib.c ****     *
1608:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:Generated_Source\PSoC4/CyLib.c ****     {
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:Generated_Source\PSoC4/CyLib.c **** 
1614:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:Generated_Source\PSoC4/CyLib.c ****         {
1618:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:Generated_Source\PSoC4/CyLib.c ****         }
1622:Generated_Source\PSoC4/CyLib.c **** 
1623:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:Generated_Source\PSoC4/CyLib.c ****     }
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 30


1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:Generated_Source\PSoC4/CyLib.c ****     *
1634:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:Generated_Source\PSoC4/CyLib.c ****     *
1641:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:Generated_Source\PSoC4/CyLib.c ****     {
1644:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:Generated_Source\PSoC4/CyLib.c **** 
1647:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:Generated_Source\PSoC4/CyLib.c **** 
1651:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:Generated_Source\PSoC4/CyLib.c **** 
1656:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:Generated_Source\PSoC4/CyLib.c ****     }
1658:Generated_Source\PSoC4/CyLib.c **** 
1659:Generated_Source\PSoC4/CyLib.c **** 
1660:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:Generated_Source\PSoC4/CyLib.c ****     *
1669:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:Generated_Source\PSoC4/CyLib.c ****     *
1673:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:Generated_Source\PSoC4/CyLib.c ****     {
1679:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 31


1687:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:Generated_Source\PSoC4/CyLib.c ****         {
1690:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:Generated_Source\PSoC4/CyLib.c ****         }
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:Generated_Source\PSoC4/CyLib.c ****     }
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:Generated_Source\PSoC4/CyLib.c ****     *
1706:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:Generated_Source\PSoC4/CyLib.c ****     *
1714:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:Generated_Source\PSoC4/CyLib.c ****     {
1717:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:Generated_Source\PSoC4/CyLib.c **** 
1720:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:Generated_Source\PSoC4/CyLib.c **** 
1725:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:Generated_Source\PSoC4/CyLib.c ****     }
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:Generated_Source\PSoC4/CyLib.c ****     *
1739:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 32


1744:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:Generated_Source\PSoC4/CyLib.c ****     *
1748:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:Generated_Source\PSoC4/CyLib.c ****     *
1758:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:Generated_Source\PSoC4/CyLib.c ****     *
1766:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:Generated_Source\PSoC4/CyLib.c ****     {
1769:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:Generated_Source\PSoC4/CyLib.c **** 
1778:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:Generated_Source\PSoC4/CyLib.c **** 
1784:Generated_Source\PSoC4/CyLib.c **** 
1785:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:Generated_Source\PSoC4/CyLib.c ****         {
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 33


1801:Generated_Source\PSoC4/CyLib.c **** 
1802:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:Generated_Source\PSoC4/CyLib.c ****             {
1804:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:Generated_Source\PSoC4/CyLib.c ****                 {
1806:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:Generated_Source\PSoC4/CyLib.c **** 
1811:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:Generated_Source\PSoC4/CyLib.c **** 
1817:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:Generated_Source\PSoC4/CyLib.c ****                     {
1820:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:Generated_Source\PSoC4/CyLib.c ****                         break;
1823:Generated_Source\PSoC4/CyLib.c ****                     }
1824:Generated_Source\PSoC4/CyLib.c ****                 }
1825:Generated_Source\PSoC4/CyLib.c **** 
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:Generated_Source\PSoC4/CyLib.c ****                 {
1829:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:Generated_Source\PSoC4/CyLib.c ****                     {
1831:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:Generated_Source\PSoC4/CyLib.c ****                     }
1833:Generated_Source\PSoC4/CyLib.c ****                 }
1834:Generated_Source\PSoC4/CyLib.c ****             }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****         }
1837:Generated_Source\PSoC4/CyLib.c **** 
1838:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:Generated_Source\PSoC4/CyLib.c ****     }
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 34


1858:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:Generated_Source\PSoC4/CyLib.c ****     {
1867:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:Generated_Source\PSoC4/CyLib.c **** 
1872:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:Generated_Source\PSoC4/CyLib.c ****         {
1874:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:Generated_Source\PSoC4/CyLib.c ****         }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:Generated_Source\PSoC4/CyLib.c ****     }
1881:Generated_Source\PSoC4/CyLib.c **** 
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:Generated_Source\PSoC4/CyLib.c ****     *
1892:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:Generated_Source\PSoC4/CyLib.c ****     *
1898:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:Generated_Source\PSoC4/CyLib.c ****     *
1908:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:Generated_Source\PSoC4/CyLib.c ****     {
1911:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 35


1915:Generated_Source\PSoC4/CyLib.c **** 
1916:Generated_Source\PSoC4/CyLib.c **** 
1917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:Generated_Source\PSoC4/CyLib.c ****         }
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:Generated_Source\PSoC4/CyLib.c ****     }
1935:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:Generated_Source\PSoC4/CyLib.c **** 
1937:Generated_Source\PSoC4/CyLib.c **** 
1938:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:Generated_Source\PSoC4/CyLib.c **** 
1940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:Generated_Source\PSoC4/CyLib.c ****     *
1968:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:Generated_Source\PSoC4/CyLib.c ****     {
1971:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 36


1972:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:Generated_Source\PSoC4/CyLib.c ****     }
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:Generated_Source\PSoC4/CyLib.c ****     *
1996:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:Generated_Source\PSoC4/CyLib.c ****     {
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2002:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2003:Generated_Source\PSoC4/CyLib.c ****     }
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:Generated_Source\PSoC4/CyLib.c ****     *
2012:Generated_Source\PSoC4/CyLib.c ****     * \return
2013:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2020:Generated_Source\PSoC4/CyLib.c ****     }
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:Generated_Source\PSoC4/CyLib.c ****     *
2027:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 37


2029:Generated_Source\PSoC4/CyLib.c ****     * \return
2030:Generated_Source\PSoC4/CyLib.c ****     *  None
2031:Generated_Source\PSoC4/CyLib.c ****     *
2032:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:Generated_Source\PSoC4/CyLib.c ****     {
2035:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2036:Generated_Source\PSoC4/CyLib.c ****     }
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:Generated_Source\PSoC4/CyLib.c **** 
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:Generated_Source\PSoC4/CyLib.c **** *
2045:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:Generated_Source\PSoC4/CyLib.c **** *
2050:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:Generated_Source\PSoC4/CyLib.c **** *
2055:Generated_Source\PSoC4/CyLib.c **** * \return
2056:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:Generated_Source\PSoC4/CyLib.c **** *
2058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:Generated_Source\PSoC4/CyLib.c **** {
2061:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2064:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
2065:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:Generated_Source\PSoC4/CyLib.c **** }
2070:Generated_Source\PSoC4/CyLib.c **** 
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:Generated_Source\PSoC4/CyLib.c **** *
2076:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:Generated_Source\PSoC4/CyLib.c **** *
2078:Generated_Source\PSoC4/CyLib.c **** * \return
2079:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:Generated_Source\PSoC4/CyLib.c **** *
2081:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:Generated_Source\PSoC4/CyLib.c **** {
2084:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 38


2086:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:Generated_Source\PSoC4/CyLib.c **** }
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c **** 
2096:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:Generated_Source\PSoC4/CyLib.c **** *
2100:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:Generated_Source\PSoC4/CyLib.c **** *
2102:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:Generated_Source\PSoC4/CyLib.c **** *
2104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:Generated_Source\PSoC4/CyLib.c **** {
2107:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
2108:Generated_Source\PSoC4/CyLib.c **** }
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:Generated_Source\PSoC4/CyLib.c **** *
2115:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:Generated_Source\PSoC4/CyLib.c **** *
2118:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:Generated_Source\PSoC4/CyLib.c **** *
2125:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:Generated_Source\PSoC4/CyLib.c **** *
2127:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:Generated_Source\PSoC4/CyLib.c **** *
2129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:Generated_Source\PSoC4/CyLib.c **** {
2132:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 39


2143:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:Generated_Source\PSoC4/CyLib.c **** }
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:Generated_Source\PSoC4/CyLib.c **** *
2151:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:Generated_Source\PSoC4/CyLib.c **** *
2154:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:Generated_Source\PSoC4/CyLib.c **** *
2161:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:Generated_Source\PSoC4/CyLib.c **** *
2163:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:Generated_Source\PSoC4/CyLib.c **** {
2166:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:Generated_Source\PSoC4/CyLib.c **** }
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:Generated_Source\PSoC4/CyLib.c **** *
2178:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:Generated_Source\PSoC4/CyLib.c **** *
2180:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:Generated_Source\PSoC4/CyLib.c **** *
2183:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:Generated_Source\PSoC4/CyLib.c **** *
2185:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:Generated_Source\PSoC4/CyLib.c **** {
2188:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:Generated_Source\PSoC4/CyLib.c **** 
2191:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 40


2200:Generated_Source\PSoC4/CyLib.c **** }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c **** 
2203:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:Generated_Source\PSoC4/CyLib.c **** *
2209:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:Generated_Source\PSoC4/CyLib.c **** *
2211:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:Generated_Source\PSoC4/CyLib.c **** *
2213:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:Generated_Source\PSoC4/CyLib.c **** {
2216:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:Generated_Source\PSoC4/CyLib.c **** }
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:Generated_Source\PSoC4/CyLib.c **** *
2229:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:Generated_Source\PSoC4/CyLib.c **** *
2232:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:Generated_Source\PSoC4/CyLib.c **** {
2235:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:Generated_Source\PSoC4/CyLib.c **** 
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:Generated_Source\PSoC4/CyLib.c **** 
2242:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:Generated_Source\PSoC4/CyLib.c **** 
2246:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:Generated_Source\PSoC4/CyLib.c **** 
2251:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:Generated_Source\PSoC4/CyLib.c **** }
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 41


2257:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:Generated_Source\PSoC4/CyLib.c **** *
2259:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:Generated_Source\PSoC4/CyLib.c **** *
2261:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:Generated_Source\PSoC4/CyLib.c **** *
2263:Generated_Source\PSoC4/CyLib.c **** * \return
2264:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:Generated_Source\PSoC4/CyLib.c **** *
2266:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:Generated_Source\PSoC4/CyLib.c **** {
2269:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:Generated_Source\PSoC4/CyLib.c **** 
2273:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:Generated_Source\PSoC4/CyLib.c **** }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c **** *
2283:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:Generated_Source\PSoC4/CyLib.c **** *
2285:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:Generated_Source\PSoC4/CyLib.c **** *
2287:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:Generated_Source\PSoC4/CyLib.c **** {
2290:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2291:Generated_Source\PSoC4/CyLib.c **** }
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c **** *
2298:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * \return
2303:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:Generated_Source\PSoC4/CyLib.c **** {
2308:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2310:Generated_Source\PSoC4/CyLib.c **** }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 42


2314:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c **** *
2317:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:Generated_Source\PSoC4/CyLib.c **** *
2319:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:Generated_Source\PSoC4/CyLib.c **** {
2324:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2325:Generated_Source\PSoC4/CyLib.c **** }
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:Generated_Source\PSoC4/CyLib.c **** *
2331:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:Generated_Source\PSoC4/CyLib.c **** *
2333:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:Generated_Source\PSoC4/CyLib.c **** *
2335:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:Generated_Source\PSoC4/CyLib.c **** {
2338:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2339:Generated_Source\PSoC4/CyLib.c **** }
2340:Generated_Source\PSoC4/CyLib.c **** 
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:Generated_Source\PSoC4/CyLib.c **** *
2346:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:Generated_Source\PSoC4/CyLib.c **** *
2348:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:Generated_Source\PSoC4/CyLib.c **** *
2350:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:Generated_Source\PSoC4/CyLib.c **** {
2353:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2354:Generated_Source\PSoC4/CyLib.c **** }
2355:Generated_Source\PSoC4/CyLib.c **** 
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:Generated_Source\PSoC4/CyLib.c **** *
2363:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:Generated_Source\PSoC4/CyLib.c **** {
2368:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:Generated_Source\PSoC4/CyLib.c ****     {
2370:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 43


2371:Generated_Source\PSoC4/CyLib.c ****     }
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
2377:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:Generated_Source\PSoC4/CyLib.c **** }
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLib.c **** *
2387:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:Generated_Source\PSoC4/CyLib.c **** {
2392:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
2397:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
2398:Generated_Source\PSoC4/CyLib.c **** }
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:Generated_Source\PSoC4/CyLib.c **** *
2407:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:Generated_Source\PSoC4/CyLib.c **** *
2409:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:Generated_Source\PSoC4/CyLib.c **** {
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
2413:Generated_Source\PSoC4/CyLib.c ****     {
2414:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:Generated_Source\PSoC4/CyLib.c ****          */
2417:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
2418:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
2419:Generated_Source\PSoC4/CyLib.c ****     }
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
2422:Generated_Source\PSoC4/CyLib.c **** }
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c **** 
2425:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 44


2428:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:Generated_Source\PSoC4/CyLib.c **** *
2430:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:Generated_Source\PSoC4/CyLib.c **** {
2435:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
2436:Generated_Source\PSoC4/CyLib.c **** }
2437:Generated_Source\PSoC4/CyLib.c **** 
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:Generated_Source\PSoC4/CyLib.c **** *
2444:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:Generated_Source\PSoC4/CyLib.c **** *
2446:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:Generated_Source\PSoC4/CyLib.c **** {
2449:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
2450:Generated_Source\PSoC4/CyLib.c ****     {
2451:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
2452:Generated_Source\PSoC4/CyLib.c ****     }
2453:Generated_Source\PSoC4/CyLib.c ****     else
2454:Generated_Source\PSoC4/CyLib.c ****     {
2455:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
2456:Generated_Source\PSoC4/CyLib.c ****     }
2457:Generated_Source\PSoC4/CyLib.c **** 
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
2459:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
2460:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
2461:Generated_Source\PSoC4/CyLib.c **** }
2462:Generated_Source\PSoC4/CyLib.c **** 
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:Generated_Source\PSoC4/CyLib.c **** {
2481:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:Generated_Source\PSoC4/CyLib.c ****     {
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 45


2485:Generated_Source\PSoC4/CyLib.c ****     }
2486:Generated_Source\PSoC4/CyLib.c **** 
2487:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:Generated_Source\PSoC4/CyLib.c **** *
2507:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:Generated_Source\PSoC4/CyLib.c **** {
2510:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:Generated_Source\PSoC4/CyLib.c ****     {
2514:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2515:Generated_Source\PSoC4/CyLib.c ****     }
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:Generated_Source\PSoC4/CyLib.c **** 
2519:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:Generated_Source\PSoC4/CyLib.c **** 
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:Generated_Source\PSoC4/CyLib.c **** }
2527:Generated_Source\PSoC4/CyLib.c **** 
2528:Generated_Source\PSoC4/CyLib.c **** 
2529:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:Generated_Source\PSoC4/CyLib.c **** *
2533:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:Generated_Source\PSoC4/CyLib.c **** *
2535:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
2541:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 46


2542:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:Generated_Source\PSoC4/CyLib.c **** }
2544:Generated_Source\PSoC4/CyLib.c **** 
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:Generated_Source\PSoC4/CyLib.c **** *
2552:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:Generated_Source\PSoC4/CyLib.c **** *
2555:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:Generated_Source\PSoC4/CyLib.c **** {
2558:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2559:Generated_Source\PSoC4/CyLib.c **** }
2560:Generated_Source\PSoC4/CyLib.c **** 
2561:Generated_Source\PSoC4/CyLib.c **** 
2562:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:Generated_Source\PSoC4/CyLib.c **** *
2566:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:Generated_Source\PSoC4/CyLib.c **** *
2568:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:Generated_Source\PSoC4/CyLib.c **** {
2574:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2575:Generated_Source\PSoC4/CyLib.c **** }
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** 
2578:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:Generated_Source\PSoC4/CyLib.c **** *
2587:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:Generated_Source\PSoC4/CyLib.c **** {
2590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2591:Generated_Source\PSoC4/CyLib.c **** }
2592:Generated_Source\PSoC4/CyLib.c **** 
2593:Generated_Source\PSoC4/CyLib.c **** 
2594:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:Generated_Source\PSoC4/CyLib.c **** *
2598:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 47


2599:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:Generated_Source\PSoC4/CyLib.c **** {
2607:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2608:Generated_Source\PSoC4/CyLib.c **** }
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** 
2611:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:Generated_Source\PSoC4/CyLib.c **** *
2615:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** * \return
2618:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:Generated_Source\PSoC4/CyLib.c **** {
2623:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2624:Generated_Source\PSoC4/CyLib.c **** }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:Generated_Source\PSoC4/CyLib.c **** *
2631:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:Generated_Source\PSoC4/CyLib.c **** *
2633:Generated_Source\PSoC4/CyLib.c **** * \return
2634:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:Generated_Source\PSoC4/CyLib.c **** {
2639:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2640:Generated_Source\PSoC4/CyLib.c **** }
2641:Generated_Source\PSoC4/CyLib.c **** 
2642:Generated_Source\PSoC4/CyLib.c **** 
2643:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:Generated_Source\PSoC4/CyLib.c ****     *
2648:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:Generated_Source\PSoC4/CyLib.c ****     *
2650:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 48


2656:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:Generated_Source\PSoC4/CyLib.c ****     *
2659:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:Generated_Source\PSoC4/CyLib.c ****     *
2662:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:Generated_Source\PSoC4/CyLib.c ****     {
2671:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2672:Generated_Source\PSoC4/CyLib.c ****         {
2673:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2674:Generated_Source\PSoC4/CyLib.c ****         }
2675:Generated_Source\PSoC4/CyLib.c ****         else
2676:Generated_Source\PSoC4/CyLib.c ****         {
2677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2678:Generated_Source\PSoC4/CyLib.c ****         }
2679:Generated_Source\PSoC4/CyLib.c ****     }
2680:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:Generated_Source\PSoC4/CyLib.c **** 
2682:Generated_Source\PSoC4/CyLib.c **** 
2683:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:Generated_Source\PSoC4/CyLib.c **** *
2690:Generated_Source\PSoC4/CyLib.c **** * \return
2691:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:Generated_Source\PSoC4/CyLib.c **** *
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:Generated_Source\PSoC4/CyLib.c **** {
2700:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2701:Generated_Source\PSoC4/CyLib.c **** }
2702:Generated_Source\PSoC4/CyLib.c **** 
2703:Generated_Source\PSoC4/CyLib.c **** 
2704:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:Generated_Source\PSoC4/CyLib.c **** *
2708:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 49


2713:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2714:Generated_Source\PSoC4/CyLib.c **** }
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c **** 
2717:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:Generated_Source\PSoC4/CyLib.c **** *
2725:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:Generated_Source\PSoC4/CyLib.c **** *
2734:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** * \return
2739:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:Generated_Source\PSoC4/CyLib.c **** *
2745:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:Generated_Source\PSoC4/CyLib.c **** {
2748:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:Generated_Source\PSoC4/CyLib.c **** }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:Generated_Source\PSoC4/CyLib.c **** *
2760:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:Generated_Source\PSoC4/CyLib.c **** *
2762:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 50


2770:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:Generated_Source\PSoC4/CyLib.c **** {
  25              		.loc 1 2784 0
  26              		.cfi_startproc
  27 0000 38B5     		push	{r3, r4, r5, lr}
  28              		.cfi_def_cfa_offset 16
  29              		.cfi_offset 3, -16
  30              		.cfi_offset 4, -12
  31              		.cfi_offset 5, -8
  32              		.cfi_offset 14, -4
  33              	.LBB56:
  34              	.LBB57:
2700:Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 2700 0
  36 0002 074B     		ldr	r3, .L12
  37 0004 1B68     		ldr	r3, [r3]
  38              	.LBE57:
  39              	.LBE56:
2785:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
  40              		.loc 1 2788 0
  41 0006 DB03     		lsl	r3, r3, #15
  42 0008 00D4     		bmi	.L11
  43              	.L1:
2789:Generated_Source\PSoC4/CyLib.c ****     {
2790:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:Generated_Source\PSoC4/CyLib.c ****         {
2792:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
2793:Generated_Source\PSoC4/CyLib.c ****             {
2794:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
2795:Generated_Source\PSoC4/CyLib.c ****             }
2796:Generated_Source\PSoC4/CyLib.c ****         }
2797:Generated_Source\PSoC4/CyLib.c ****     }
2798:Generated_Source\PSoC4/CyLib.c **** }
  44              		.loc 1 2798 0
  45              		@ sp needed
  46 000a 38BD     		pop	{r3, r4, r5, pc}
  47              	.L11:
  48 000c 0024     		mov	r4, #0
  49 000e 054D     		ldr	r5, .L12+4
  50              	.L2:
  51              	.LBB58:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 51


2792:Generated_Source\PSoC4/CyLib.c ****             {
  52              		.loc 1 2792 0
  53 0010 2B59     		ldr	r3, [r5, r4]
  54 0012 002B     		cmp	r3, #0
  55 0014 00D0     		beq	.L3
2794:Generated_Source\PSoC4/CyLib.c ****             }
  56              		.loc 1 2794 0
  57 0016 9847     		blx	r3
  58              	.LVL0:
  59              	.L3:
  60 0018 0434     		add	r4, r4, #4
2790:Generated_Source\PSoC4/CyLib.c ****         {
  61              		.loc 1 2790 0
  62 001a 142C     		cmp	r4, #20
  63 001c F8D1     		bne	.L2
  64 001e F4E7     		b	.L1
  65              	.L13:
  66              		.align	2
  67              	.L12:
  68 0020 10E000E0 		.word	-536813552
  69 0024 00000000 		.word	.LANCHOR0
  70              	.LBE58:
  71              		.cfi_endproc
  72              	.LFE47:
  73              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
  74              		.section	.text.CySysClkImoStart,"ax",%progbits
  75              		.align	2
  76              		.global	CySysClkImoStart
  77              		.code	16
  78              		.thumb_func
  79              		.type	CySysClkImoStart, %function
  80              	CySysClkImoStart:
  81              	.LFB1:
 105:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  82              		.loc 1 105 0
  83              		.cfi_startproc
 106:Generated_Source\PSoC4/CyLib.c **** 
  84              		.loc 1 106 0
  85 0000 8021     		mov	r1, #128
  86 0002 034A     		ldr	r2, .L15
  87 0004 0906     		lsl	r1, r1, #24
  88 0006 1368     		ldr	r3, [r2]
 121:Generated_Source\PSoC4/CyLib.c **** 
  89              		.loc 1 121 0
  90              		@ sp needed
 106:Generated_Source\PSoC4/CyLib.c **** 
  91              		.loc 1 106 0
  92 0008 0B43     		orr	r3, r1
  93 000a 1360     		str	r3, [r2]
 121:Generated_Source\PSoC4/CyLib.c **** 
  94              		.loc 1 121 0
  95 000c 7047     		bx	lr
  96              	.L16:
  97 000e C046     		.align	2
  98              	.L15:
  99 0010 08010B40 		.word	1074462984
 100              		.cfi_endproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 52


 101              	.LFE1:
 102              		.size	CySysClkImoStart, .-CySysClkImoStart
 103              		.section	.text.CySysClkImoStop,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStop
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStop, %function
 109              	CySysClkImoStop:
 110              	.LFB2:
 137:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 111              		.loc 1 137 0
 112              		.cfi_startproc
 113              	.LBB59:
 114              	.LBB60:
 284:Generated_Source\PSoC4/CyLib.c ****     }
 115              		.loc 1 284 0
 116 0000 054A     		ldr	r2, .L18
 117 0002 064B     		ldr	r3, .L18+4
 118 0004 1168     		ldr	r1, [r2]
 119              	.LBE60:
 120              	.LBE59:
 147:Generated_Source\PSoC4/CyLib.c **** 
 121              		.loc 1 147 0
 122              		@ sp needed
 123              	.LBB62:
 124              	.LBB61:
 284:Generated_Source\PSoC4/CyLib.c ****     }
 125              		.loc 1 284 0
 126 0006 0B40     		and	r3, r1
 127 0008 1360     		str	r3, [r2]
 128              	.LBE61:
 129              	.LBE62:
 146:Generated_Source\PSoC4/CyLib.c **** }
 130              		.loc 1 146 0
 131 000a 054A     		ldr	r2, .L18+8
 132 000c 1368     		ldr	r3, [r2]
 133 000e 5B00     		lsl	r3, r3, #1
 134 0010 5B08     		lsr	r3, r3, #1
 135 0012 1360     		str	r3, [r2]
 147:Generated_Source\PSoC4/CyLib.c **** 
 136              		.loc 1 147 0
 137 0014 7047     		bx	lr
 138              	.L19:
 139 0016 C046     		.align	2
 140              	.L18:
 141 0018 00002240 		.word	1075970048
 142 001c FFFFFFBF 		.word	-1073741825
 143 0020 08010B40 		.word	1074462984
 144              		.cfi_endproc
 145              	.LFE2:
 146              		.size	CySysClkImoStop, .-CySysClkImoStop
 147              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 148              		.align	2
 149              		.global	CySysClkImoEnableWcoLock
 150              		.code	16
 151              		.thumb_func
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 53


 152              		.type	CySysClkImoEnableWcoLock, %function
 153              	CySysClkImoEnableWcoLock:
 154              	.LFB3:
 173:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 155              		.loc 1 173 0
 156              		.cfi_startproc
 157              	.LVL1:
 158 0000 70B5     		push	{r4, r5, r6, lr}
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 4, -16
 161              		.cfi_offset 5, -12
 162              		.cfi_offset 6, -8
 163              		.cfi_offset 14, -4
 164 0002 82B0     		sub	sp, sp, #8
 165              		.cfi_def_cfa_offset 24
 184:Generated_Source\PSoC4/CyLib.c ****         {
 166              		.loc 1 184 0
 167 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 168              	.LVL2:
 169 0008 0028     		cmp	r0, #0
 170 000a 01D1     		bne	.L44
 171              	.L20:
 266:Generated_Source\PSoC4/CyLib.c **** 
 172              		.loc 1 266 0
 173 000c 02B0     		add	sp, sp, #8
 174              		@ sp needed
 175 000e 70BD     		pop	{r4, r5, r6, pc}
 176              	.L44:
 177              	.LBB67:
 178              	.LBB68:
 186:Generated_Source\PSoC4/CyLib.c **** 
 179              		.loc 1 186 0
 180 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 181              	.LVL3:
 200:Generated_Source\PSoC4/CyLib.c ****                     {
 182              		.loc 1 200 0
 183 0014 304E     		ldr	r6, .L46
 186:Generated_Source\PSoC4/CyLib.c **** 
 184              		.loc 1 186 0
 185 0016 051C     		mov	r5, r0
 186              	.LVL4:
 198:Generated_Source\PSoC4/CyLib.c ****                 {
 187              		.loc 1 198 0
 188 0018 0022     		mov	r2, #0
 189 001a 3048     		ldr	r0, .L46+4
 200:Generated_Source\PSoC4/CyLib.c ****                     {
 190              		.loc 1 200 0
 191 001c 3F24     		mov	r4, #63
 192 001e 02E0     		b	.L25
 193              	.LVL5:
 194              	.L22:
 198:Generated_Source\PSoC4/CyLib.c ****                 {
 195              		.loc 1 198 0
 196 0020 0132     		add	r2, r2, #1
 197              	.LVL6:
 198 0022 2E2A     		cmp	r2, #46
 199 0024 48D0     		beq	.L45
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 54


 200              	.LVL7:
 201              	.L25:
 200:Generated_Source\PSoC4/CyLib.c ****                     {
 202              		.loc 1 200 0
 203 0026 3368     		ldr	r3, [r6]
 204 0028 815C     		ldrb	r1, [r0, r2]
 205 002a 2340     		and	r3, r4
 206 002c 8B42     		cmp	r3, r1
 207 002e F7D1     		bne	.L22
 208 0030 8021     		mov	r1, #128
 209 0032 C901     		lsl	r1, r1, #7
 210 0034 8C46     		mov	ip, r1
 211 0036 2A4B     		ldr	r3, .L46+8
 202:Generated_Source\PSoC4/CyLib.c ****                         break;
 212              		.loc 1 202 0
 213 0038 0332     		add	r2, r2, #3
 214              	.LVL8:
 215 003a 5343     		mul	r3, r2
 222:Generated_Source\PSoC4/CyLib.c ****                 {
 216              		.loc 1 222 0
 217 003c 2949     		ldr	r1, .L46+12
 218 003e 6344     		add	r3, r3, ip
 219 0040 0968     		ldr	r1, [r1]
 220 0042 DB0B     		lsr	r3, r3, #15
 221 0044 013B     		sub	r3, r3, #1
 222 0046 C906     		lsl	r1, r1, #27
 223 0048 06D1     		bne	.L24
 224              	.LVL9:
 225              	.L23:
 224:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226              		.loc 1 224 0
 227 004a 1F24     		mov	r4, #31
 228 004c 254E     		ldr	r6, .L46+12
 229 004e 3168     		ldr	r1, [r6]
 230 0050 A143     		bic	r1, r4
 231 0052 133C     		sub	r4, r4, #19
 232 0054 2143     		orr	r1, r4
 233 0056 3160     		str	r1, [r6]
 234              	.L24:
 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235              		.loc 1 229 0
 236 0058 2349     		ldr	r1, .L46+16
 237 005a 0C68     		ldr	r4, [r1]
 238 005c 2349     		ldr	r1, .L46+20
 239 005e 2140     		and	r1, r4
 240              	.LVL10:
 235:Generated_Source\PSoC4/CyLib.c **** 
 241              		.loc 1 235 0
 242 0060 0B43     		orr	r3, r1
 243              	.LVL11:
 241:Generated_Source\PSoC4/CyLib.c ****             {
 244              		.loc 1 241 0
 245 0062 192A     		cmp	r2, #25
 246 0064 32D9     		bls	.L30
 247:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 247              		.loc 1 247 0
 248 0066 2249     		ldr	r1, .L46+24
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 55


 249 0068 5118     		add	r1, r2, r1
 248:Generated_Source\PSoC4/CyLib.c **** 
 250              		.loc 1 248 0
 251 006a 8218     		add	r2, r0, r2
 238:Generated_Source\PSoC4/CyLib.c **** 
 252              		.loc 1 238 0
 253 006c A020     		mov	r0, #160
 247:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 254              		.loc 1 247 0
 255 006e 0978     		ldrb	r1, [r1]
 256 0070 927D     		ldrb	r2, [r2, #22]
 257              	.LVL12:
 238:Generated_Source\PSoC4/CyLib.c **** 
 258              		.loc 1 238 0
 259 0072 4003     		lsl	r0, r0, #13
 250:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 260              		.loc 1 250 0
 261 0074 5218     		add	r2, r2, r1
 262              	.LVL13:
 238:Generated_Source\PSoC4/CyLib.c **** 
 263              		.loc 1 238 0
 264 0076 0343     		orr	r3, r0
 265              	.LVL14:
 250:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 266              		.loc 1 250 0
 267 0078 FF2A     		cmp	r2, #255
 268 007a 00D9     		bls	.L29
 269 007c FF22     		mov	r2, #255
 270              	.L29:
 253:Generated_Source\PSoC4/CyLib.c ****             }
 271              		.loc 1 253 0
 272 007e 9205     		lsl	r2, r2, #22
 273 0080 1343     		orr	r3, r2
 274              	.LVL15:
 275              	.L28:
 256:Generated_Source\PSoC4/CyLib.c **** 
 276              		.loc 1 256 0
 277 0082 194A     		ldr	r2, .L46+16
 258:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 278              		.loc 1 258 0
 279 0084 1B4C     		ldr	r4, .L46+28
 256:Generated_Source\PSoC4/CyLib.c **** 
 280              		.loc 1 256 0
 281 0086 1360     		str	r3, [r2]
 258:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 282              		.loc 1 258 0
 283 0088 2368     		ldr	r3, [r4]
 284              	.LVL16:
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285              		.loc 1 259 0
 286 008a 3020     		mov	r0, #48
 258:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 287              		.loc 1 258 0
 288 008c 0193     		str	r3, [sp, #4]
 289              	.LVL17:
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 290              		.loc 1 259 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 56


 291 008e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 292              	.LVL18:
 260:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 293              		.loc 1 260 0
 294 0092 8021     		mov	r1, #128
 295 0094 184A     		ldr	r2, .L46+32
 296 0096 C905     		lsl	r1, r1, #23
 297 0098 1368     		ldr	r3, [r2]
 298 009a 0B43     		orr	r3, r1
 299 009c 1360     		str	r3, [r2]
 300              	.LVL19:
 301              	.LBB69:
 302              	.LBB70:
2421:Generated_Source\PSoC4/CyLib.c **** }
 303              		.loc 1 2421 0
 304 009e 174B     		ldr	r3, .L46+36
 305 00a0 1B68     		ldr	r3, [r3]
 306 00a2 9800     		lsl	r0, r3, #2
 307 00a4 C018     		add	r0, r0, r3
 308 00a6 8000     		lsl	r0, r0, #2
 309 00a8 FFF7FEFF 		bl	CyDelayCycles
 310              	.LVL20:
 311              	.LBE70:
 312              	.LBE69:
 262:Generated_Source\PSoC4/CyLib.c **** 
 313              		.loc 1 262 0
 314 00ac 019B     		ldr	r3, [sp, #4]
 264:Generated_Source\PSoC4/CyLib.c ****         }
 315              		.loc 1 264 0
 316 00ae 281C     		mov	r0, r5
 262:Generated_Source\PSoC4/CyLib.c **** 
 317              		.loc 1 262 0
 318 00b0 2360     		str	r3, [r4]
 264:Generated_Source\PSoC4/CyLib.c ****         }
 319              		.loc 1 264 0
 320 00b2 FFF7FEFF 		bl	CyExitCriticalSection
 321              	.LVL21:
 322 00b6 A9E7     		b	.L20
 323              	.LVL22:
 324              	.L45:
 222:Generated_Source\PSoC4/CyLib.c ****                 {
 325              		.loc 1 222 0
 326 00b8 0A4B     		ldr	r3, .L46+12
 327 00ba 1B68     		ldr	r3, [r3]
 328 00bc DB06     		lsl	r3, r3, #27
 329 00be 08D0     		beq	.L32
 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 330              		.loc 1 229 0
 331 00c0 094B     		ldr	r3, .L46+16
 332 00c2 1A68     		ldr	r2, [r3]
 333              	.LVL23:
 334 00c4 094B     		ldr	r3, .L46+20
 335 00c6 1340     		and	r3, r2
 336              	.LVL24:
 235:Generated_Source\PSoC4/CyLib.c **** 
 337              		.loc 1 235 0
 338 00c8 5B22     		mov	r2, #91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 57


 339 00ca 1343     		orr	r3, r2
 340              	.LVL25:
 341              	.L30:
 243:Generated_Source\PSoC4/CyLib.c ****             }
 342              		.loc 1 243 0
 343 00cc 0C4A     		ldr	r2, .L46+40
 344 00ce 1343     		orr	r3, r2
 345              	.LVL26:
 346 00d0 D7E7     		b	.L28
 347              	.LVL27:
 348              	.L32:
 222:Generated_Source\PSoC4/CyLib.c ****                 {
 349              		.loc 1 222 0
 350 00d2 5B23     		mov	r3, #91
 197:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 351              		.loc 1 197 0
 352 00d4 0322     		mov	r2, #3
 353              	.LVL28:
 354 00d6 B8E7     		b	.L23
 355              	.L47:
 356              		.align	2
 357              	.L46:
 358 00d8 2CFF0B40 		.word	1074528044
 359 00dc 00000000 		.word	.LANCHOR1
 360 00e0 40420F00 		.word	1000000
 361 00e4 34FF0B40 		.word	1074528052
 362 00e8 08002240 		.word	1075970056
 363 00ec 00F800C0 		.word	-1073678336
 364 00f0 CDF1FF0F 		.word	268431821
 365 00f4 30001040 		.word	1074790448
 366 00f8 00002240 		.word	1075970048
 367 00fc 00000000 		.word	.LANCHOR2
 368 0100 0000D43F 		.word	1070858240
 369              	.LBE68:
 370              	.LBE67:
 371              		.cfi_endproc
 372              	.LFE3:
 373              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 374              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 375              		.align	2
 376              		.global	CySysClkImoDisableWcoLock
 377              		.code	16
 378              		.thumb_func
 379              		.type	CySysClkImoDisableWcoLock, %function
 380              	CySysClkImoDisableWcoLock:
 381              	.LFB4:
 283:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 382              		.loc 1 283 0
 383              		.cfi_startproc
 284:Generated_Source\PSoC4/CyLib.c ****     }
 384              		.loc 1 284 0
 385 0000 024A     		ldr	r2, .L49
 386 0002 034B     		ldr	r3, .L49+4
 387 0004 1168     		ldr	r1, [r2]
 285:Generated_Source\PSoC4/CyLib.c **** 
 388              		.loc 1 285 0
 389              		@ sp needed
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 58


 284:Generated_Source\PSoC4/CyLib.c ****     }
 390              		.loc 1 284 0
 391 0006 0B40     		and	r3, r1
 392 0008 1360     		str	r3, [r2]
 285:Generated_Source\PSoC4/CyLib.c **** 
 393              		.loc 1 285 0
 394 000a 7047     		bx	lr
 395              	.L50:
 396              		.align	2
 397              	.L49:
 398 000c 00002240 		.word	1075970048
 399 0010 FFFFFFBF 		.word	-1073741825
 400              		.cfi_endproc
 401              	.LFE4:
 402              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 403              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 404              		.align	2
 405              		.global	CySysClkImoGetWcoLock
 406              		.code	16
 407              		.thumb_func
 408              		.type	CySysClkImoGetWcoLock, %function
 409              	CySysClkImoGetWcoLock:
 410              	.LFB5:
 302:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 411              		.loc 1 302 0
 412              		.cfi_startproc
 303:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 413              		.loc 1 303 0
 414 0000 024B     		ldr	r3, .L52
 306:Generated_Source\PSoC4/CyLib.c **** 
 415              		.loc 1 306 0
 416              		@ sp needed
 303:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 417              		.loc 1 303 0
 418 0002 1868     		ldr	r0, [r3]
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 419              		.loc 1 304 0
 420 0004 4000     		lsl	r0, r0, #1
 421 0006 C00F     		lsr	r0, r0, #31
 306:Generated_Source\PSoC4/CyLib.c **** 
 422              		.loc 1 306 0
 423 0008 7047     		bx	lr
 424              	.L53:
 425 000a C046     		.align	2
 426              	.L52:
 427 000c 00002240 		.word	1075970048
 428              		.cfi_endproc
 429              	.LFE5:
 430              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 431              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 432              		.align	2
 433              		.global	CySysClkWriteHfclkDirect
 434              		.code	16
 435              		.thumb_func
 436              		.type	CySysClkWriteHfclkDirect, %function
 437              	CySysClkWriteHfclkDirect:
 438              	.LFB6:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 59


 427:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 439              		.loc 1 427 0
 440              		.cfi_startproc
 441              	.LVL29:
 442 0000 10B5     		push	{r4, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 4, -8
 445              		.cfi_offset 14, -4
 427:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 446              		.loc 1 427 0
 447 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c **** 
 448              		.loc 1 431 0
 449 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 450              	.LVL30:
 434:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 451              		.loc 1 434 0
 452 0008 0723     		mov	r3, #7
 453 000a 0449     		ldr	r1, .L55
 451:Generated_Source\PSoC4/CyLib.c **** 
 454              		.loc 1 451 0
 455              		@ sp needed
 434:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 456              		.loc 1 434 0
 457 000c 0A68     		ldr	r2, [r1]
 458 000e 9A43     		bic	r2, r3
 459              	.LVL31:
 445:Generated_Source\PSoC4/CyLib.c ****     }
 460              		.loc 1 445 0
 461 0010 2340     		and	r3, r4
 462 0012 1343     		orr	r3, r2
 463              	.LVL32:
 448:Generated_Source\PSoC4/CyLib.c **** 
 464              		.loc 1 448 0
 465 0014 0B60     		str	r3, [r1]
 450:Generated_Source\PSoC4/CyLib.c **** }
 466              		.loc 1 450 0
 467 0016 FFF7FEFF 		bl	CyExitCriticalSection
 468              	.LVL33:
 469              	.LVL34:
 451:Generated_Source\PSoC4/CyLib.c **** 
 470              		.loc 1 451 0
 471 001a 10BD     		pop	{r4, pc}
 472              	.L56:
 473              		.align	2
 474              	.L55:
 475 001c 00010B40 		.word	1074462976
 476              		.cfi_endproc
 477              	.LFE6:
 478              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 479              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 480              		.align	2
 481              		.global	CySysClkGetSysclkSource
 482              		.code	16
 483              		.thumb_func
 484              		.type	CySysClkGetSysclkSource, %function
 485              	CySysClkGetSysclkSource:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 60


 486              	.LFB7:
 464:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 487              		.loc 1 464 0
 488              		.cfi_startproc
 489 0000 10B5     		push	{r4, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 4, -8
 492              		.cfi_offset 14, -4
 468:Generated_Source\PSoC4/CyLib.c **** 
 493              		.loc 1 468 0
 494 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 495              	.LVL35:
 478:Generated_Source\PSoC4/CyLib.c ****     }
 496              		.loc 1 478 0
 497 0006 034B     		ldr	r3, .L58
 484:Generated_Source\PSoC4/CyLib.c **** 
 498              		.loc 1 484 0
 499              		@ sp needed
 478:Generated_Source\PSoC4/CyLib.c ****     }
 500              		.loc 1 478 0
 501 0008 1C68     		ldr	r4, [r3]
 502              	.LVL36:
 481:Generated_Source\PSoC4/CyLib.c **** 
 503              		.loc 1 481 0
 504 000a FFF7FEFF 		bl	CyExitCriticalSection
 505              	.LVL37:
 478:Generated_Source\PSoC4/CyLib.c ****     }
 506              		.loc 1 478 0
 507 000e 0720     		mov	r0, #7
 508 0010 2040     		and	r0, r4
 509              	.LVL38:
 484:Generated_Source\PSoC4/CyLib.c **** 
 510              		.loc 1 484 0
 511 0012 10BD     		pop	{r4, pc}
 512              	.L59:
 513              		.align	2
 514              	.L58:
 515 0014 00010B40 		.word	1074462976
 516              		.cfi_endproc
 517              	.LFE7:
 518              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 519              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 520              		.align	2
 521              		.global	CySysClkWriteSysclkDiv
 522              		.code	16
 523              		.thumb_func
 524              		.type	CySysClkWriteSysclkDiv, %function
 525              	CySysClkWriteSysclkDiv:
 526              	.LFB8:
 519:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 527              		.loc 1 519 0
 528              		.cfi_startproc
 529              	.LVL39:
 530 0000 10B5     		push	{r4, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 4, -8
 533              		.cfi_offset 14, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 61


 519:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 534              		.loc 1 519 0
 535 0002 041C     		mov	r4, r0
 522:Generated_Source\PSoC4/CyLib.c **** 
 536              		.loc 1 522 0
 537 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 538              	.LVL40:
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 539              		.loc 1 524 0
 540 0008 0722     		mov	r2, #7
 526:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 541              		.loc 1 526 0
 542 000a 0549     		ldr	r1, .L61
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 543              		.loc 1 524 0
 544 000c 1440     		and	r4, r2
 545              	.LVL41:
 526:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 546              		.loc 1 526 0
 547 000e 0B68     		ldr	r3, [r1]
 548 0010 044A     		ldr	r2, .L61+4
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 549              		.loc 1 524 0
 550 0012 E404     		lsl	r4, r4, #19
 526:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 551              		.loc 1 526 0
 552 0014 1340     		and	r3, r2
 525:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 553              		.loc 1 525 0
 554 0016 2343     		orr	r3, r4
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 555              		.loc 1 524 0
 556 0018 0B60     		str	r3, [r1]
 529:Generated_Source\PSoC4/CyLib.c **** }
 557              		.loc 1 529 0
 558 001a FFF7FEFF 		bl	CyExitCriticalSection
 559              	.LVL42:
 530:Generated_Source\PSoC4/CyLib.c **** 
 560              		.loc 1 530 0
 561              		@ sp needed
 562 001e 10BD     		pop	{r4, pc}
 563              	.L62:
 564              		.align	2
 565              	.L61:
 566 0020 00010B40 		.word	1074462976
 567 0024 FFFFC7FF 		.word	-3670017
 568              		.cfi_endproc
 569              	.LFE8:
 570              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 571              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 572              		.align	2
 573              		.global	CySysClkWriteImoFreq
 574              		.code	16
 575              		.thumb_func
 576              		.type	CySysClkWriteImoFreq, %function
 577              	CySysClkWriteImoFreq:
 578              	.LFB9:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 62


 577:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579              		.loc 1 577 0
 580              		.cfi_startproc
 581              	.LVL43:
 582 0000 30B5     		push	{r4, r5, lr}
 583              		.cfi_def_cfa_offset 12
 584              		.cfi_offset 4, -12
 585              		.cfi_offset 5, -8
 586              		.cfi_offset 14, -4
 587 0002 87B0     		sub	sp, sp, #28
 588              		.cfi_def_cfa_offset 40
 577:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 589              		.loc 1 577 0
 590 0004 051C     		mov	r5, r0
 600:Generated_Source\PSoC4/CyLib.c **** 
 591              		.loc 1 600 0
 592 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 593              	.LVL44:
 594              	.LBB71:
 595              	.LBB72:
 303:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 596              		.loc 1 303 0
 597 000a 174B     		ldr	r3, .L69
 598              	.LBE72:
 599              	.LBE71:
 600:Generated_Source\PSoC4/CyLib.c **** 
 600              		.loc 1 600 0
 601 000c 041C     		mov	r4, r0
 602              	.LVL45:
 603              	.LBB74:
 604              	.LBB73:
 303:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 605              		.loc 1 303 0
 606 000e 1A68     		ldr	r2, [r3]
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 607              		.loc 1 304 0
 608 0010 5200     		lsl	r2, r2, #1
 609 0012 20D4     		bmi	.L64
 610              	.LBE73:
 611              	.LBE74:
 590:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 612              		.loc 1 590 0
 613 0014 0022     		mov	r2, #0
 614              	.LVL46:
 615              	.L66:
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 616              		.loc 1 634 0
 617 0016 154B     		ldr	r3, .L69+4
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 618              		.loc 1 636 0
 619 0018 1548     		ldr	r0, .L69+8
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 620              		.loc 1 634 0
 621 001a 1968     		ldr	r1, [r3]
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 622              		.loc 1 636 0
 623 001c 4019     		add	r0, r0, r5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 63


 634:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 624              		.loc 1 634 0
 625 001e 0291     		str	r1, [sp, #8]
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 626              		.loc 1 635 0
 627 0020 1449     		ldr	r1, .L69+12
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 628              		.loc 1 636 0
 629 0022 0338     		sub	r0, r0, #3
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 630              		.loc 1 635 0
 631 0024 0968     		ldr	r1, [r1]
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 632              		.loc 1 634 0
 633 0026 02AB     		add	r3, sp, #8
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 634              		.loc 1 635 0
 635 0028 0391     		str	r1, [sp, #12]
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 636              		.loc 1 636 0
 637 002a 0178     		ldrb	r1, [r0]
 645:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 638              		.loc 1 645 0
 639 002c 1248     		ldr	r0, .L69+16
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 640              		.loc 1 636 0
 641 002e 0491     		str	r1, [sp, #16]
 637:Generated_Source\PSoC4/CyLib.c **** 
 642              		.loc 1 637 0
 643 0030 1249     		ldr	r1, .L69+20
 644 0032 0968     		ldr	r1, [r1]
 645 0034 0591     		str	r1, [sp, #20]
 639:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 646              		.loc 1 639 0
 647 0036 1249     		ldr	r1, .L69+24
 648 0038 0091     		str	r1, [sp]
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 649              		.loc 1 644 0
 650 003a 6946     		mov	r1, sp
 642:Generated_Source\PSoC4/CyLib.c **** 
 651              		.loc 1 642 0
 652 003c 0193     		str	r3, [sp, #4]
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 653              		.loc 1 644 0
 654 003e 114B     		ldr	r3, .L69+28
 655 0040 1960     		str	r1, [r3]
 645:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 656              		.loc 1 645 0
 657 0042 1149     		ldr	r1, .L69+32
 658 0044 0860     		str	r0, [r1]
 646:Generated_Source\PSoC4/CyLib.c **** 
 659              		.loc 1 646 0
 660 0046 1B68     		ldr	r3, [r3]
 763:Generated_Source\PSoC4/CyLib.c ****             {
 661              		.loc 1 763 0
 662 0048 012A     		cmp	r2, #1
 663 004a 0AD0     		beq	.L68
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 64


 664              	.LVL47:
 665              	.L65:
 776:Generated_Source\PSoC4/CyLib.c ****     }
 666              		.loc 1 776 0
 667 004c 201C     		mov	r0, r4
 668 004e FFF7FEFF 		bl	CyExitCriticalSection
 669              	.LVL48:
 777:Generated_Source\PSoC4/CyLib.c **** 
 670              		.loc 1 777 0
 671 0052 07B0     		add	sp, sp, #28
 672              		@ sp needed
 673              	.LVL49:
 674              	.LVL50:
 675 0054 30BD     		pop	{r4, r5, pc}
 676              	.LVL51:
 677              	.L64:
 678              	.LBB75:
 679              	.LBB76:
 284:Generated_Source\PSoC4/CyLib.c ****     }
 680              		.loc 1 284 0
 681 0056 1968     		ldr	r1, [r3]
 682 0058 0C4A     		ldr	r2, .L69+36
 683 005a 0A40     		and	r2, r1
 684 005c 1A60     		str	r2, [r3]
 685              	.LBE76:
 686              	.LBE75:
 605:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 687              		.loc 1 605 0
 688 005e 0122     		mov	r2, #1
 689 0060 D9E7     		b	.L66
 690              	.LVL52:
 691              	.L68:
 765:Generated_Source\PSoC4/CyLib.c ****             }
 692              		.loc 1 765 0
 693 0062 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 694              	.LVL53:
 695 0066 F1E7     		b	.L65
 696              	.L70:
 697              		.align	2
 698              	.L69:
 699 0068 00002240 		.word	1075970048
 700 006c 08010B40 		.word	1074462984
 701 0070 00000000 		.word	.LANCHOR1
 702 0074 00010B40 		.word	1074462976
 703 0078 17000080 		.word	-2147483625
 704 007c 30001040 		.word	1074790448
 705 0080 B6EA0000 		.word	60086
 706 0084 08001040 		.word	1074790408
 707 0088 04001040 		.word	1074790404
 708 008c FFFFFFBF 		.word	-1073741825
 709              		.cfi_endproc
 710              	.LFE9:
 711              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 712              		.section	.text.CySysLvdEnable,"ax",%progbits
 713              		.align	2
 714              		.global	CySysLvdEnable
 715              		.code	16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 65


 716              		.thumb_func
 717              		.type	CySysLvdEnable, %function
 718              	CySysLvdEnable:
 719              	.LFB10:
1970:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 720              		.loc 1 1970 0
 721              		.cfi_startproc
 722              	.LVL54:
 723 0000 38B5     		push	{r3, r4, r5, lr}
 724              		.cfi_def_cfa_offset 16
 725              		.cfi_offset 3, -16
 726              		.cfi_offset 4, -12
 727              		.cfi_offset 5, -8
 728              		.cfi_offset 14, -4
1972:Generated_Source\PSoC4/CyLib.c **** 
 729              		.loc 1 1972 0
 730 0002 0224     		mov	r4, #2
1976:Generated_Source\PSoC4/CyLib.c **** 
 731              		.loc 1 1976 0
 732 0004 1E21     		mov	r1, #30
1972:Generated_Source\PSoC4/CyLib.c **** 
 733              		.loc 1 1972 0
 734 0006 0E4D     		ldr	r5, .L72
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 735              		.loc 1 1975 0
 736 0008 0E4A     		ldr	r2, .L72+4
1972:Generated_Source\PSoC4/CyLib.c **** 
 737              		.loc 1 1972 0
 738 000a 2B68     		ldr	r3, [r5]
1976:Generated_Source\PSoC4/CyLib.c **** 
 739              		.loc 1 1976 0
 740 000c 4000     		lsl	r0, r0, #1
 741              	.LVL55:
1972:Generated_Source\PSoC4/CyLib.c **** 
 742              		.loc 1 1972 0
 743 000e A343     		bic	r3, r4
 744 0010 2B60     		str	r3, [r5]
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 745              		.loc 1 1975 0
 746 0012 1368     		ldr	r3, [r2]
1976:Generated_Source\PSoC4/CyLib.c **** 
 747              		.loc 1 1976 0
 748 0014 0840     		and	r0, r1
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 749              		.loc 1 1975 0
 750 0016 8B43     		bic	r3, r1
 751 0018 1843     		orr	r0, r3
1979:Generated_Source\PSoC4/CyLib.c **** 
 752              		.loc 1 1979 0
 753 001a 0123     		mov	r3, #1
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 754              		.loc 1 1975 0
 755 001c 1060     		str	r0, [r2]
1979:Generated_Source\PSoC4/CyLib.c **** 
 756              		.loc 1 1979 0
 757 001e 1168     		ldr	r1, [r2]
1989:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 66


 758              		.loc 1 1989 0
 759              		@ sp needed
1979:Generated_Source\PSoC4/CyLib.c **** 
 760              		.loc 1 1979 0
 761 0020 0B43     		orr	r3, r1
 762 0022 1360     		str	r3, [r2]
 763              	.LVL56:
 764              	.LBB77:
 765              	.LBB78:
2435:Generated_Source\PSoC4/CyLib.c **** }
 766              		.loc 1 2435 0
 767 0024 084B     		ldr	r3, .L72+8
 768 0026 1879     		ldrb	r0, [r3, #4]
 769 0028 FA23     		mov	r3, #250
 770 002a 9B00     		lsl	r3, r3, #2
 771 002c 5843     		mul	r0, r3
 772 002e FFF7FEFF 		bl	CyDelayCycles
 773              	.LVL57:
 774              	.LBE78:
 775              	.LBE77:
 776              	.LBB79:
 777              	.LBB80:
2035:Generated_Source\PSoC4/CyLib.c ****     }
 778              		.loc 1 2035 0
 779 0032 064B     		ldr	r3, .L72+12
 780 0034 1C60     		str	r4, [r3]
 781              	.LBE80:
 782              	.LBE79:
1988:Generated_Source\PSoC4/CyLib.c ****     }
 783              		.loc 1 1988 0
 784 0036 2B68     		ldr	r3, [r5]
 785 0038 1C43     		orr	r4, r3
 786 003a 2C60     		str	r4, [r5]
1989:Generated_Source\PSoC4/CyLib.c **** 
 787              		.loc 1 1989 0
 788 003c 38BD     		pop	{r3, r4, r5, pc}
 789              	.L73:
 790 003e C046     		.align	2
 791              	.L72:
 792 0040 08000B40 		.word	1074462728
 793 0044 18000B40 		.word	1074462744
 794 0048 00000000 		.word	.LANCHOR2
 795 004c 04000B40 		.word	1074462724
 796              		.cfi_endproc
 797              	.LFE10:
 798              		.size	CySysLvdEnable, .-CySysLvdEnable
 799              		.section	.text.CySysLvdDisable,"ax",%progbits
 800              		.align	2
 801              		.global	CySysLvdDisable
 802              		.code	16
 803              		.thumb_func
 804              		.type	CySysLvdDisable, %function
 805              	CySysLvdDisable:
 806              	.LFB11:
2000:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 807              		.loc 1 2000 0
 808              		.cfi_startproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 67


2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 809              		.loc 1 2001 0
 810 0000 0221     		mov	r1, #2
 811 0002 054A     		ldr	r2, .L75
2003:Generated_Source\PSoC4/CyLib.c **** 
 812              		.loc 1 2003 0
 813              		@ sp needed
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 814              		.loc 1 2001 0
 815 0004 1368     		ldr	r3, [r2]
 816 0006 8B43     		bic	r3, r1
 817 0008 1360     		str	r3, [r2]
2002:Generated_Source\PSoC4/CyLib.c ****     }
 818              		.loc 1 2002 0
 819 000a 044A     		ldr	r2, .L75+4
 820 000c 0139     		sub	r1, r1, #1
 821 000e 1368     		ldr	r3, [r2]
 822 0010 8B43     		bic	r3, r1
 823 0012 1360     		str	r3, [r2]
2003:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 2003 0
 825 0014 7047     		bx	lr
 826              	.L76:
 827 0016 C046     		.align	2
 828              	.L75:
 829 0018 08000B40 		.word	1074462728
 830 001c 18000B40 		.word	1074462744
 831              		.cfi_endproc
 832              	.LFE11:
 833              		.size	CySysLvdDisable, .-CySysLvdDisable
 834              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 835              		.align	2
 836              		.global	CySysLvdGetInterruptSource
 837              		.code	16
 838              		.thumb_func
 839              		.type	CySysLvdGetInterruptSource, %function
 840              	CySysLvdGetInterruptSource:
 841              	.LFB12:
2018:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 842              		.loc 1 2018 0
 843              		.cfi_startproc
2019:Generated_Source\PSoC4/CyLib.c ****     }
 844              		.loc 1 2019 0
 845 0000 0220     		mov	r0, #2
 846 0002 024B     		ldr	r3, .L78
2020:Generated_Source\PSoC4/CyLib.c **** 
 847              		.loc 1 2020 0
 848              		@ sp needed
2019:Generated_Source\PSoC4/CyLib.c ****     }
 849              		.loc 1 2019 0
 850 0004 1B68     		ldr	r3, [r3]
 851 0006 1840     		and	r0, r3
2020:Generated_Source\PSoC4/CyLib.c **** 
 852              		.loc 1 2020 0
 853 0008 7047     		bx	lr
 854              	.L79:
 855 000a C046     		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 68


 856              	.L78:
 857 000c 04000B40 		.word	1074462724
 858              		.cfi_endproc
 859              	.LFE12:
 860              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 861              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 862              		.align	2
 863              		.global	CySysLvdClearInterrupt
 864              		.code	16
 865              		.thumb_func
 866              		.type	CySysLvdClearInterrupt, %function
 867              	CySysLvdClearInterrupt:
 868              	.LFB13:
2034:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 869              		.loc 1 2034 0
 870              		.cfi_startproc
2035:Generated_Source\PSoC4/CyLib.c ****     }
 871              		.loc 1 2035 0
 872 0000 0222     		mov	r2, #2
 873 0002 014B     		ldr	r3, .L81
2036:Generated_Source\PSoC4/CyLib.c **** 
 874              		.loc 1 2036 0
 875              		@ sp needed
2035:Generated_Source\PSoC4/CyLib.c ****     }
 876              		.loc 1 2035 0
 877 0004 1A60     		str	r2, [r3]
2036:Generated_Source\PSoC4/CyLib.c **** 
 878              		.loc 1 2036 0
 879 0006 7047     		bx	lr
 880              	.L82:
 881              		.align	2
 882              	.L81:
 883 0008 04000B40 		.word	1074462724
 884              		.cfi_endproc
 885              	.LFE13:
 886              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 887              		.section	.text.CySysGetResetReason,"ax",%progbits
 888              		.align	2
 889              		.global	CySysGetResetReason
 890              		.code	16
 891              		.thumb_func
 892              		.type	CySysGetResetReason, %function
 893              	CySysGetResetReason:
 894              	.LFB14:
2060:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 895              		.loc 1 2060 0
 896              		.cfi_startproc
 897              	.LVL58:
2060:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 898              		.loc 1 2060 0
 899 0000 021C     		mov	r2, r0
2063:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 900              		.loc 1 2063 0
 901 0002 1920     		mov	r0, #25
 902              	.LVL59:
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 903              		.loc 1 2064 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 69


 904 0004 0249     		ldr	r1, .L84
2063:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 905              		.loc 1 2063 0
 906 0006 0240     		and	r2, r0
 907              	.LVL60:
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 908              		.loc 1 2064 0
 909 0008 0B68     		ldr	r3, [r1]
 910              	.LVL61:
2069:Generated_Source\PSoC4/CyLib.c **** 
 911              		.loc 1 2069 0
 912              		@ sp needed
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 913              		.loc 1 2064 0
 914 000a 1840     		and	r0, r3
 915              	.LVL62:
2066:Generated_Source\PSoC4/CyLib.c **** 
 916              		.loc 1 2066 0
 917 000c 0A60     		str	r2, [r1]
2069:Generated_Source\PSoC4/CyLib.c **** 
 918              		.loc 1 2069 0
 919 000e 7047     		bx	lr
 920              	.L85:
 921              		.align	2
 922              	.L84:
 923 0010 00030B40 		.word	1074463488
 924              		.cfi_endproc
 925              	.LFE14:
 926              		.size	CySysGetResetReason, .-CySysGetResetReason
 927              		.section	.text.CyDisableInts,"ax",%progbits
 928              		.align	2
 929              		.global	CyDisableInts
 930              		.code	16
 931              		.thumb_func
 932              		.type	CyDisableInts, %function
 933              	CyDisableInts:
 934              	.LFB15:
2083:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 935              		.loc 1 2083 0
 936              		.cfi_startproc
2090:Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2090 0
 938 0000 0122     		mov	r2, #1
2087:Generated_Source\PSoC4/CyLib.c **** 
 939              		.loc 1 2087 0
 940 0002 024B     		ldr	r3, .L87
2090:Generated_Source\PSoC4/CyLib.c **** 
 941              		.loc 1 2090 0
 942 0004 5242     		neg	r2, r2
2087:Generated_Source\PSoC4/CyLib.c **** 
 943              		.loc 1 2087 0
 944 0006 1868     		ldr	r0, [r3]
 945              	.LVL63:
2093:Generated_Source\PSoC4/CyLib.c **** 
 946              		.loc 1 2093 0
 947              		@ sp needed
2090:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 70


 948              		.loc 1 2090 0
 949 0008 1A60     		str	r2, [r3]
2093:Generated_Source\PSoC4/CyLib.c **** 
 950              		.loc 1 2093 0
 951 000a 7047     		bx	lr
 952              	.L88:
 953              		.align	2
 954              	.L87:
 955 000c 80E100E0 		.word	-536813184
 956              		.cfi_endproc
 957              	.LFE15:
 958              		.size	CyDisableInts, .-CyDisableInts
 959              		.section	.text.CyEnableInts,"ax",%progbits
 960              		.align	2
 961              		.global	CyEnableInts
 962              		.code	16
 963              		.thumb_func
 964              		.type	CyEnableInts, %function
 965              	CyEnableInts:
 966              	.LFB16:
2106:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 967              		.loc 1 2106 0
 968              		.cfi_startproc
 969              	.LVL64:
2107:Generated_Source\PSoC4/CyLib.c **** }
 970              		.loc 1 2107 0
 971 0000 014B     		ldr	r3, .L90
2108:Generated_Source\PSoC4/CyLib.c **** 
 972              		.loc 1 2108 0
 973              		@ sp needed
2107:Generated_Source\PSoC4/CyLib.c **** }
 974              		.loc 1 2107 0
 975 0002 1860     		str	r0, [r3]
2108:Generated_Source\PSoC4/CyLib.c **** 
 976              		.loc 1 2108 0
 977 0004 7047     		bx	lr
 978              	.L91:
 979 0006 C046     		.align	2
 980              	.L90:
 981 0008 00E100E0 		.word	-536813312
 982              		.cfi_endproc
 983              	.LFE16:
 984              		.size	CyEnableInts, .-CyEnableInts
 985              		.section	.text.CyIntSetSysVector,"ax",%progbits
 986              		.align	2
 987              		.global	CyIntSetSysVector
 988              		.code	16
 989              		.thumb_func
 990              		.type	CyIntSetSysVector, %function
 991              	CyIntSetSysVector:
 992              	.LFB17:
2131:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 993              		.loc 1 2131 0
 994              		.cfi_startproc
 995              	.LVL65:
2135:Generated_Source\PSoC4/CyLib.c **** 
 996              		.loc 1 2135 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 71


 997 0000 0F28     		cmp	r0, #15
 998 0002 00D9     		bls	.L93
 999              	.LVL66:
 1000              	.LBB81:
 1001              	.LBB82:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1002              		.loc 1 2376 0
 1003              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1004 0004 01BE     		    bkpt    1
 1005              	@ 0 "" 2
 1006              	.LVL67:
 1007              		.code	16
 1008              	.L93:
 1009              	.LBE82:
 1010              	.LBE81:
2138:Generated_Source\PSoC4/CyLib.c **** 
 1011              		.loc 1 2138 0
 1012 0006 8023     		mov	r3, #128
 1013 0008 8000     		lsl	r0, r0, #2
 1014              	.LVL68:
 1015 000a 9B05     		lsl	r3, r3, #22
 1016 000c C318     		add	r3, r0, r3
 1017 000e 1868     		ldr	r0, [r3]
 1018              	.LVL69:
2144:Generated_Source\PSoC4/CyLib.c **** 
 1019              		.loc 1 2144 0
 1020              		@ sp needed
2141:Generated_Source\PSoC4/CyLib.c **** 
 1021              		.loc 1 2141 0
 1022 0010 1960     		str	r1, [r3]
2144:Generated_Source\PSoC4/CyLib.c **** 
 1023              		.loc 1 2144 0
 1024 0012 7047     		bx	lr
 1025              		.cfi_endproc
 1026              	.LFE17:
 1027              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1028              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1029              		.align	2
 1030              		.global	CyIntGetSysVector
 1031              		.code	16
 1032              		.thumb_func
 1033              		.type	CyIntGetSysVector, %function
 1034              	CyIntGetSysVector:
 1035              	.LFB18:
2165:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1036              		.loc 1 2165 0
 1037              		.cfi_startproc
 1038              	.LVL70:
2168:Generated_Source\PSoC4/CyLib.c **** 
 1039              		.loc 1 2168 0
 1040 0000 0F28     		cmp	r0, #15
 1041 0002 00D9     		bls	.L95
 1042              	.LVL71:
 1043              	.LBB83:
 1044              	.LBB84:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1045              		.loc 1 2376 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 72


 1046              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1047 0004 01BE     		    bkpt    1
 1048              	@ 0 "" 2
 1049              	.LVL72:
 1050              		.code	16
 1051              	.L95:
 1052              	.LBE84:
 1053              	.LBE83:
2170:Generated_Source\PSoC4/CyLib.c **** }
 1054              		.loc 1 2170 0
 1055 0006 8023     		mov	r3, #128
 1056 0008 9B05     		lsl	r3, r3, #22
 1057 000a 9C46     		mov	ip, r3
 1058 000c 8000     		lsl	r0, r0, #2
 1059              	.LVL73:
 1060 000e 6044     		add	r0, r0, ip
 1061 0010 0068     		ldr	r0, [r0]
2171:Generated_Source\PSoC4/CyLib.c **** 
 1062              		.loc 1 2171 0
 1063              		@ sp needed
 1064 0012 7047     		bx	lr
 1065              		.cfi_endproc
 1066              	.LFE18:
 1067              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1068              		.section	.text.CyIntSetVector,"ax",%progbits
 1069              		.align	2
 1070              		.global	CyIntSetVector
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	CyIntSetVector, %function
 1074              	CyIntSetVector:
 1075              	.LFB19:
2187:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 1076              		.loc 1 2187 0
 1077              		.cfi_startproc
 1078              	.LVL74:
2191:Generated_Source\PSoC4/CyLib.c **** 
 1079              		.loc 1 2191 0
 1080 0000 1F28     		cmp	r0, #31
 1081 0002 00D9     		bls	.L97
 1082              	.LVL75:
 1083              	.LBB85:
 1084              	.LBB86:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1085              		.loc 1 2376 0
 1086              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1087 0004 01BE     		    bkpt    1
 1088              	@ 0 "" 2
 1089              	.LVL76:
 1090              		.code	16
 1091              	.L97:
 1092              	.LBE86:
 1093              	.LBE85:
2194:Generated_Source\PSoC4/CyLib.c **** 
 1094              		.loc 1 2194 0
 1095 0006 034B     		ldr	r3, .L98
 1096 0008 8000     		lsl	r0, r0, #2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 73


 1097              	.LVL77:
 1098 000a C318     		add	r3, r0, r3
 1099 000c 1868     		ldr	r0, [r3]
 1100              	.LVL78:
2200:Generated_Source\PSoC4/CyLib.c **** 
 1101              		.loc 1 2200 0
 1102              		@ sp needed
2197:Generated_Source\PSoC4/CyLib.c **** 
 1103              		.loc 1 2197 0
 1104 000e 1960     		str	r1, [r3]
2200:Generated_Source\PSoC4/CyLib.c **** 
 1105              		.loc 1 2200 0
 1106 0010 7047     		bx	lr
 1107              	.L99:
 1108 0012 C046     		.align	2
 1109              	.L98:
 1110 0014 40000020 		.word	536870976
 1111              		.cfi_endproc
 1112              	.LFE19:
 1113              		.size	CyIntSetVector, .-CyIntSetVector
 1114              		.section	.text.CyIntGetVector,"ax",%progbits
 1115              		.align	2
 1116              		.global	CyIntGetVector
 1117              		.code	16
 1118              		.thumb_func
 1119              		.type	CyIntGetVector, %function
 1120              	CyIntGetVector:
 1121              	.LFB20:
2215:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1122              		.loc 1 2215 0
 1123              		.cfi_startproc
 1124              	.LVL79:
2218:Generated_Source\PSoC4/CyLib.c **** 
 1125              		.loc 1 2218 0
 1126 0000 1F28     		cmp	r0, #31
 1127 0002 00D9     		bls	.L101
 1128              	.LVL80:
 1129              	.LBB87:
 1130              	.LBB88:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1131              		.loc 1 2376 0
 1132              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1133 0004 01BE     		    bkpt    1
 1134              	@ 0 "" 2
 1135              	.LVL81:
 1136              		.code	16
 1137              	.L101:
 1138              	.LBE88:
 1139              	.LBE87:
2220:Generated_Source\PSoC4/CyLib.c **** }
 1140              		.loc 1 2220 0
 1141 0006 034B     		ldr	r3, .L102
 1142 0008 8000     		lsl	r0, r0, #2
 1143              	.LVL82:
 1144 000a 9C46     		mov	ip, r3
 1145 000c 6044     		add	r0, r0, ip
 1146 000e 0068     		ldr	r0, [r0]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 74


2221:Generated_Source\PSoC4/CyLib.c **** 
 1147              		.loc 1 2221 0
 1148              		@ sp needed
 1149 0010 7047     		bx	lr
 1150              	.L103:
 1151 0012 C046     		.align	2
 1152              	.L102:
 1153 0014 40000020 		.word	536870976
 1154              		.cfi_endproc
 1155              	.LFE20:
 1156              		.size	CyIntGetVector, .-CyIntGetVector
 1157              		.section	.text.CyIntSetPriority,"ax",%progbits
 1158              		.align	2
 1159              		.global	CyIntSetPriority
 1160              		.code	16
 1161              		.thumb_func
 1162              		.type	CyIntSetPriority, %function
 1163              	CyIntSetPriority:
 1164              	.LFB21:
2234:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1165              		.loc 1 2234 0
 1166              		.cfi_startproc
 1167              	.LVL83:
 1168 0000 38B5     		push	{r3, r4, r5, lr}
 1169              		.cfi_def_cfa_offset 16
 1170              		.cfi_offset 3, -16
 1171              		.cfi_offset 4, -12
 1172              		.cfi_offset 5, -8
 1173              		.cfi_offset 14, -4
2234:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1174              		.loc 1 2234 0
 1175 0002 041C     		mov	r4, r0
 1176 0004 0D1E     		sub	r5, r1, #0
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1177              		.loc 1 2239 0
 1178 0006 032D     		cmp	r5, #3
 1179 0008 00D9     		bls	.L105
 1180              	.LVL84:
 1181              	.LBB89:
 1182              	.LBB90:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1183              		.loc 1 2376 0
 1184              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1185 000a 01BE     		    bkpt    1
 1186              	@ 0 "" 2
 1187              	.LVL85:
 1188              		.code	16
 1189              	.L105:
 1190              	.LBE90:
 1191              	.LBE89:
2240:Generated_Source\PSoC4/CyLib.c **** 
 1192              		.loc 1 2240 0
 1193 000c 1F2C     		cmp	r4, #31
 1194 000e 00D9     		bls	.L106
 1195              	.LVL86:
 1196              	.LBB91:
 1197              	.LBB92:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 75


2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1198              		.loc 1 2376 0
 1199              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1200 0010 01BE     		    bkpt    1
 1201              	@ 0 "" 2
 1202              	.LVL87:
 1203              		.code	16
 1204              	.L106:
 1205              	.LBE92:
 1206              	.LBE91:
2244:Generated_Source\PSoC4/CyLib.c **** 
 1207              		.loc 1 2244 0
 1208 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1209              	.LVL88:
2246:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1210              		.loc 1 2246 0
 1211 0016 094A     		ldr	r2, .L107
 1212 0018 A308     		lsr	r3, r4, #2
 1213 001a 9446     		mov	ip, r2
2242:Generated_Source\PSoC4/CyLib.c **** 
 1214              		.loc 1 2242 0
 1215 001c 0322     		mov	r2, #3
 1216 001e 1440     		and	r4, r2
 1217              	.LVL89:
 1218 0020 E400     		lsl	r4, r4, #3
 1219 0022 0634     		add	r4, r4, #6
2247:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1220              		.loc 1 2247 0
 1221 0024 A240     		lsl	r2, r2, r4
2246:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1222              		.loc 1 2246 0
 1223 0026 9B00     		lsl	r3, r3, #2
 1224 0028 6344     		add	r3, r3, ip
 1225 002a 1968     		ldr	r1, [r3]
 1226              	.LVL90:
2248:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1227              		.loc 1 2248 0
 1228 002c A540     		lsl	r5, r5, r4
2247:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1229              		.loc 1 2247 0
 1230 002e 9143     		bic	r1, r2
 1231              	.LVL91:
 1232 0030 0A1C     		mov	r2, r1
 1233              	.LVL92:
2248:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1234              		.loc 1 2248 0
 1235 0032 2A43     		orr	r2, r5
 1236              	.LVL93:
2249:Generated_Source\PSoC4/CyLib.c **** 
 1237              		.loc 1 2249 0
 1238 0034 1A60     		str	r2, [r3]
2251:Generated_Source\PSoC4/CyLib.c **** }
 1239              		.loc 1 2251 0
 1240 0036 FFF7FEFF 		bl	CyExitCriticalSection
 1241              	.LVL94:
2252:Generated_Source\PSoC4/CyLib.c **** 
 1242              		.loc 1 2252 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 76


 1243              		@ sp needed
 1244 003a 38BD     		pop	{r3, r4, r5, pc}
 1245              	.L108:
 1246              		.align	2
 1247              	.L107:
 1248 003c 00E400E0 		.word	-536812544
 1249              		.cfi_endproc
 1250              	.LFE21:
 1251              		.size	CyIntSetPriority, .-CyIntSetPriority
 1252              		.section	.text.CyIntGetPriority,"ax",%progbits
 1253              		.align	2
 1254              		.global	CyIntGetPriority
 1255              		.code	16
 1256              		.thumb_func
 1257              		.type	CyIntGetPriority, %function
 1258              	CyIntGetPriority:
 1259              	.LFB22:
2268:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1260              		.loc 1 2268 0
 1261              		.cfi_startproc
 1262              	.LVL95:
2271:Generated_Source\PSoC4/CyLib.c **** 
 1263              		.loc 1 2271 0
 1264 0000 1F28     		cmp	r0, #31
 1265 0002 00D9     		bls	.L110
 1266              	.LVL96:
 1267              	.LBB93:
 1268              	.LBB94:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1269              		.loc 1 2376 0
 1270              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1271 0004 01BE     		    bkpt    1
 1272              	@ 0 "" 2
 1273              	.LVL97:
 1274              		.code	16
 1275              	.L110:
 1276              	.LBE94:
 1277              	.LBE93:
2273:Generated_Source\PSoC4/CyLib.c **** 
 1278              		.loc 1 2273 0
 1279 0006 074A     		ldr	r2, .L111
 1280 0008 8308     		lsr	r3, r0, #2
 1281 000a 9446     		mov	ip, r2
 1282 000c 9B00     		lsl	r3, r3, #2
 1283 000e 6344     		add	r3, r3, ip
 1284 0010 1A68     		ldr	r2, [r3]
 1285              	.LVL98:
 1286 0012 0321     		mov	r1, #3
 1287 0014 031C     		mov	r3, r0
 1288 0016 0B40     		and	r3, r1
 1289 0018 DB00     		lsl	r3, r3, #3
 1290 001a 0633     		add	r3, r3, #6
 1291 001c DA40     		lsr	r2, r2, r3
 1292              	.LVL99:
2275:Generated_Source\PSoC4/CyLib.c **** }
 1293              		.loc 1 2275 0
 1294 001e 1140     		and	r1, r2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 77


 1295 0020 081C     		mov	r0, r1
 1296              	.LVL100:
2276:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 2276 0
 1298              		@ sp needed
 1299 0022 7047     		bx	lr
 1300              	.L112:
 1301              		.align	2
 1302              	.L111:
 1303 0024 00E400E0 		.word	-536812544
 1304              		.cfi_endproc
 1305              	.LFE22:
 1306              		.size	CyIntGetPriority, .-CyIntGetPriority
 1307              		.section	.text.CyIntEnable,"ax",%progbits
 1308              		.align	2
 1309              		.global	CyIntEnable
 1310              		.code	16
 1311              		.thumb_func
 1312              		.type	CyIntEnable, %function
 1313              	CyIntEnable:
 1314              	.LFB23:
2289:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1315              		.loc 1 2289 0
 1316              		.cfi_startproc
 1317              	.LVL101:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1318              		.loc 1 2290 0
 1319 0000 1F23     		mov	r3, #31
 1320 0002 1840     		and	r0, r3
 1321              	.LVL102:
 1322 0004 1E3B     		sub	r3, r3, #30
 1323 0006 8340     		lsl	r3, r3, r0
 1324 0008 181C     		mov	r0, r3
 1325 000a 014B     		ldr	r3, .L114
2291:Generated_Source\PSoC4/CyLib.c **** 
 1326              		.loc 1 2291 0
 1327              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** }
 1328              		.loc 1 2290 0
 1329 000c 1860     		str	r0, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
 1330              		.loc 1 2291 0
 1331 000e 7047     		bx	lr
 1332              	.L115:
 1333              		.align	2
 1334              	.L114:
 1335 0010 00E100E0 		.word	-536813312
 1336              		.cfi_endproc
 1337              	.LFE23:
 1338              		.size	CyIntEnable, .-CyIntEnable
 1339              		.section	.text.CyIntGetState,"ax",%progbits
 1340              		.align	2
 1341              		.global	CyIntGetState
 1342              		.code	16
 1343              		.thumb_func
 1344              		.type	CyIntGetState, %function
 1345              	CyIntGetState:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 78


 1346              	.LFB24:
2307:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 1347              		.loc 1 2307 0
 1348              		.cfi_startproc
 1349              	.LVL103:
2309:Generated_Source\PSoC4/CyLib.c **** }
 1350              		.loc 1 2309 0
 1351 0000 1F22     		mov	r2, #31
 1352 0002 044B     		ldr	r3, .L117
 1353 0004 1040     		and	r0, r2
 1354              	.LVL104:
 1355 0006 1B68     		ldr	r3, [r3]
2310:Generated_Source\PSoC4/CyLib.c **** 
 1356              		.loc 1 2310 0
 1357              		@ sp needed
2309:Generated_Source\PSoC4/CyLib.c **** }
 1358              		.loc 1 2309 0
 1359 0008 C340     		lsr	r3, r3, r0
 1360 000a 181C     		mov	r0, r3
 1361 000c 0123     		mov	r3, #1
 1362 000e 1840     		and	r0, r3
2310:Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 2310 0
 1364 0010 7047     		bx	lr
 1365              	.L118:
 1366 0012 C046     		.align	2
 1367              	.L117:
 1368 0014 00E100E0 		.word	-536813312
 1369              		.cfi_endproc
 1370              	.LFE24:
 1371              		.size	CyIntGetState, .-CyIntGetState
 1372              		.section	.text.CyIntDisable,"ax",%progbits
 1373              		.align	2
 1374              		.global	CyIntDisable
 1375              		.code	16
 1376              		.thumb_func
 1377              		.type	CyIntDisable, %function
 1378              	CyIntDisable:
 1379              	.LFB25:
2323:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1380              		.loc 1 2323 0
 1381              		.cfi_startproc
 1382              	.LVL105:
2324:Generated_Source\PSoC4/CyLib.c **** }
 1383              		.loc 1 2324 0
 1384 0000 1F23     		mov	r3, #31
 1385 0002 1840     		and	r0, r3
 1386              	.LVL106:
 1387 0004 1E3B     		sub	r3, r3, #30
 1388 0006 8340     		lsl	r3, r3, r0
 1389 0008 181C     		mov	r0, r3
 1390 000a 014B     		ldr	r3, .L120
2325:Generated_Source\PSoC4/CyLib.c **** 
 1391              		.loc 1 2325 0
 1392              		@ sp needed
2324:Generated_Source\PSoC4/CyLib.c **** }
 1393              		.loc 1 2324 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 79


 1394 000c 1860     		str	r0, [r3]
2325:Generated_Source\PSoC4/CyLib.c **** 
 1395              		.loc 1 2325 0
 1396 000e 7047     		bx	lr
 1397              	.L121:
 1398              		.align	2
 1399              	.L120:
 1400 0010 80E100E0 		.word	-536813184
 1401              		.cfi_endproc
 1402              	.LFE25:
 1403              		.size	CyIntDisable, .-CyIntDisable
 1404              		.section	.text.CyIntSetPending,"ax",%progbits
 1405              		.align	2
 1406              		.global	CyIntSetPending
 1407              		.code	16
 1408              		.thumb_func
 1409              		.type	CyIntSetPending, %function
 1410              	CyIntSetPending:
 1411              	.LFB26:
2337:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1412              		.loc 1 2337 0
 1413              		.cfi_startproc
 1414              	.LVL107:
2338:Generated_Source\PSoC4/CyLib.c **** }
 1415              		.loc 1 2338 0
 1416 0000 1F23     		mov	r3, #31
 1417 0002 1840     		and	r0, r3
 1418              	.LVL108:
 1419 0004 1E3B     		sub	r3, r3, #30
 1420 0006 8340     		lsl	r3, r3, r0
 1421 0008 181C     		mov	r0, r3
 1422 000a 014B     		ldr	r3, .L123
2339:Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 2339 0
 1424              		@ sp needed
2338:Generated_Source\PSoC4/CyLib.c **** }
 1425              		.loc 1 2338 0
 1426 000c 1860     		str	r0, [r3]
2339:Generated_Source\PSoC4/CyLib.c **** 
 1427              		.loc 1 2339 0
 1428 000e 7047     		bx	lr
 1429              	.L124:
 1430              		.align	2
 1431              	.L123:
 1432 0010 00E200E0 		.word	-536813056
 1433              		.cfi_endproc
 1434              	.LFE26:
 1435              		.size	CyIntSetPending, .-CyIntSetPending
 1436              		.section	.text.CyIntClearPending,"ax",%progbits
 1437              		.align	2
 1438              		.global	CyIntClearPending
 1439              		.code	16
 1440              		.thumb_func
 1441              		.type	CyIntClearPending, %function
 1442              	CyIntClearPending:
 1443              	.LFB27:
2352:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 80


 1444              		.loc 1 2352 0
 1445              		.cfi_startproc
 1446              	.LVL109:
2353:Generated_Source\PSoC4/CyLib.c **** }
 1447              		.loc 1 2353 0
 1448 0000 1F23     		mov	r3, #31
 1449 0002 1840     		and	r0, r3
 1450              	.LVL110:
 1451 0004 1E3B     		sub	r3, r3, #30
 1452 0006 8340     		lsl	r3, r3, r0
 1453 0008 181C     		mov	r0, r3
 1454 000a 014B     		ldr	r3, .L126
2354:Generated_Source\PSoC4/CyLib.c **** 
 1455              		.loc 1 2354 0
 1456              		@ sp needed
2353:Generated_Source\PSoC4/CyLib.c **** }
 1457              		.loc 1 2353 0
 1458 000c 1860     		str	r0, [r3]
2354:Generated_Source\PSoC4/CyLib.c **** 
 1459              		.loc 1 2354 0
 1460 000e 7047     		bx	lr
 1461              	.L127:
 1462              		.align	2
 1463              	.L126:
 1464 0010 80E200E0 		.word	-536812928
 1465              		.cfi_endproc
 1466              	.LFE27:
 1467              		.size	CyIntClearPending, .-CyIntClearPending
 1468              		.section	.text.CyHalt,"ax",%progbits
 1469              		.align	2
 1470              		.global	CyHalt
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	CyHalt, %function
 1474              	CyHalt:
 1475              	.LFB28:
2367:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1476              		.loc 1 2367 0
 1477              		.cfi_startproc
 1478              	.LVL111:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1479              		.loc 1 2376 0
 1480              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1481 0000 01BE     		    bkpt    1
 1482              	@ 0 "" 2
2380:Generated_Source\PSoC4/CyLib.c **** 
 1483              		.loc 1 2380 0
 1484              		.code	16
 1485              		@ sp needed
 1486 0002 7047     		bx	lr
 1487              		.cfi_endproc
 1488              	.LFE28:
 1489              		.size	CyHalt, .-CyHalt
 1490              		.section	.text.CySoftwareReset,"ax",%progbits
 1491              		.align	2
 1492              		.global	CySoftwareReset
 1493              		.code	16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 81


 1494              		.thumb_func
 1495              		.type	CySoftwareReset, %function
 1496              	CySoftwareReset:
 1497              	.LFB29:
2391:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
 1498              		.loc 1 2391 0
 1499              		.cfi_startproc
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1500              		.loc 1 2396 0
 1501 0000 034A     		ldr	r2, .L130
2397:Generated_Source\PSoC4/CyLib.c **** }
 1502              		.loc 1 2397 0
 1503 0002 0449     		ldr	r1, .L130+4
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1504              		.loc 1 2396 0
 1505 0004 1368     		ldr	r3, [r2]
2398:Generated_Source\PSoC4/CyLib.c **** 
 1506              		.loc 1 2398 0
 1507              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1508              		.loc 1 2396 0
 1509 0006 1B04     		lsl	r3, r3, #16
 1510 0008 1B0C     		lsr	r3, r3, #16
2397:Generated_Source\PSoC4/CyLib.c **** }
 1511              		.loc 1 2397 0
 1512 000a 0B43     		orr	r3, r1
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1513              		.loc 1 2396 0
 1514 000c 1360     		str	r3, [r2]
2398:Generated_Source\PSoC4/CyLib.c **** 
 1515              		.loc 1 2398 0
 1516 000e 7047     		bx	lr
 1517              	.L131:
 1518              		.align	2
 1519              	.L130:
 1520 0010 0CED00E0 		.word	-536810228
 1521 0014 0400FA05 		.word	100270084
 1522              		.cfi_endproc
 1523              	.LFE29:
 1524              		.size	CySoftwareReset, .-CySoftwareReset
 1525              		.section	.text.CyDelay,"ax",%progbits
 1526              		.align	2
 1527              		.global	CyDelay
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	CyDelay, %function
 1531              	CyDelay:
 1532              	.LFB30:
2411:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1533              		.loc 1 2411 0
 1534              		.cfi_startproc
 1535              	.LVL112:
 1536 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1537              		.cfi_def_cfa_offset 24
 1538              		.cfi_offset 3, -24
 1539              		.cfi_offset 4, -20
 1540              		.cfi_offset 5, -16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 82


 1541              		.cfi_offset 6, -12
 1542              		.cfi_offset 7, -8
 1543              		.cfi_offset 14, -4
2412:Generated_Source\PSoC4/CyLib.c ****     {
 1544              		.loc 1 2412 0
 1545 0002 8025     		mov	r5, #128
2411:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1546              		.loc 1 2411 0
 1547 0004 071C     		mov	r7, r0
2412:Generated_Source\PSoC4/CyLib.c ****     {
 1548              		.loc 1 2412 0
 1549 0006 2D02     		lsl	r5, r5, #8
 1550 0008 A842     		cmp	r0, r5
 1551 000a 14D9     		bls	.L138
 1552 000c 041C     		mov	r4, r0
 1553 000e 0B4E     		ldr	r6, .L139
 1554              	.LVL113:
 1555              	.L134:
2417:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1556              		.loc 1 2417 0
 1557 0010 B068     		ldr	r0, [r6, #8]
 1558 0012 FFF7FEFF 		bl	CyDelayCycles
 1559              	.LVL114:
2418:Generated_Source\PSoC4/CyLib.c ****     }
 1560              		.loc 1 2418 0
 1561 0016 0A4B     		ldr	r3, .L139+4
 1562 0018 9C46     		mov	ip, r3
 1563 001a 6444     		add	r4, r4, ip
 1564              	.LVL115:
2412:Generated_Source\PSoC4/CyLib.c ****     {
 1565              		.loc 1 2412 0
 1566 001c AC42     		cmp	r4, r5
 1567 001e F7D8     		bhi	.L134
 1568 0020 084B     		ldr	r3, .L139+8
 1569 0022 FB18     		add	r3, r7, r3
 1570 0024 DB0B     		lsr	r3, r3, #15
 1571 0026 DB03     		lsl	r3, r3, #15
 1572 0028 6744     		add	r7, r7, ip
 1573 002a FF1A     		sub	r7, r7, r3
 1574              	.LVL116:
 1575              	.L133:
2421:Generated_Source\PSoC4/CyLib.c **** }
 1576              		.loc 1 2421 0
 1577 002c 3068     		ldr	r0, [r6]
2422:Generated_Source\PSoC4/CyLib.c **** 
 1578              		.loc 1 2422 0
 1579              		@ sp needed
2421:Generated_Source\PSoC4/CyLib.c **** }
 1580              		.loc 1 2421 0
 1581 002e 7843     		mul	r0, r7
 1582 0030 FFF7FEFF 		bl	CyDelayCycles
 1583              	.LVL117:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1584              		.loc 1 2422 0
 1585 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1586              	.LVL118:
 1587              	.L138:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 83


 1588 0036 014E     		ldr	r6, .L139
 1589 0038 F8E7     		b	.L133
 1590              	.L140:
 1591 003a C046     		.align	2
 1592              	.L139:
 1593 003c 00000000 		.word	.LANCHOR2
 1594 0040 0080FFFF 		.word	-32768
 1595 0044 FF7FFFFF 		.word	-32769
 1596              		.cfi_endproc
 1597              	.LFE30:
 1598              		.size	CyDelay, .-CyDelay
 1599              		.section	.text.CyDelayUs,"ax",%progbits
 1600              		.align	2
 1601              		.global	CyDelayUs
 1602              		.code	16
 1603              		.thumb_func
 1604              		.type	CyDelayUs, %function
 1605              	CyDelayUs:
 1606              	.LFB31:
2434:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1607              		.loc 1 2434 0
 1608              		.cfi_startproc
 1609              	.LVL119:
 1610 0000 08B5     		push	{r3, lr}
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 3, -8
 1613              		.cfi_offset 14, -4
2435:Generated_Source\PSoC4/CyLib.c **** }
 1614              		.loc 1 2435 0
 1615 0002 034B     		ldr	r3, .L142
2436:Generated_Source\PSoC4/CyLib.c **** 
 1616              		.loc 1 2436 0
 1617              		@ sp needed
2435:Generated_Source\PSoC4/CyLib.c **** }
 1618              		.loc 1 2435 0
 1619 0004 1B79     		ldrb	r3, [r3, #4]
 1620 0006 5843     		mul	r0, r3
 1621              	.LVL120:
 1622 0008 FFF7FEFF 		bl	CyDelayCycles
 1623              	.LVL121:
2436:Generated_Source\PSoC4/CyLib.c **** 
 1624              		.loc 1 2436 0
 1625 000c 08BD     		pop	{r3, pc}
 1626              	.L143:
 1627 000e C046     		.align	2
 1628              	.L142:
 1629 0010 00000000 		.word	.LANCHOR2
 1630              		.cfi_endproc
 1631              	.LFE31:
 1632              		.size	CyDelayUs, .-CyDelayUs
 1633              		.global	__aeabi_uidiv
 1634              		.section	.text.CyDelayFreq,"ax",%progbits
 1635              		.align	2
 1636              		.global	CyDelayFreq
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CyDelayFreq, %function
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 84


 1640              	CyDelayFreq:
 1641              	.LFB32:
2448:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1642              		.loc 1 2448 0
 1643              		.cfi_startproc
 1644              	.LVL122:
 1645 0000 70B5     		push	{r4, r5, r6, lr}
 1646              		.cfi_def_cfa_offset 16
 1647              		.cfi_offset 4, -16
 1648              		.cfi_offset 5, -12
 1649              		.cfi_offset 6, -8
 1650              		.cfi_offset 14, -4
2449:Generated_Source\PSoC4/CyLib.c ****     {
 1651              		.loc 1 2449 0
 1652 0002 0028     		cmp	r0, #0
 1653 0004 09D1     		bne	.L147
2455:Generated_Source\PSoC4/CyLib.c ****     }
 1654              		.loc 1 2455 0
 1655 0006 2826     		mov	r6, #40
 1656 0008 0C4B     		ldr	r3, .L148
 1657 000a 0D4C     		ldr	r4, .L148+4
 1658 000c 0D48     		ldr	r0, .L148+8
 1659              	.LVL123:
 1660 000e E360     		str	r3, [r4, #12]
 1661 0010 0D4B     		ldr	r3, .L148+12
 1662              	.L146:
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1663              		.loc 1 2458 0
 1664 0012 2671     		strb	r6, [r4, #4]
2459:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1665              		.loc 1 2459 0
 1666 0014 2060     		str	r0, [r4]
2460:Generated_Source\PSoC4/CyLib.c **** }
 1667              		.loc 1 2460 0
 1668 0016 A360     		str	r3, [r4, #8]
2461:Generated_Source\PSoC4/CyLib.c **** 
 1669              		.loc 1 2461 0
 1670              		@ sp needed
 1671 0018 70BD     		pop	{r4, r5, r6, pc}
 1672              	.LVL124:
 1673              	.L147:
 1674 001a 0C4B     		ldr	r3, .L148+16
2451:Generated_Source\PSoC4/CyLib.c ****     }
 1675              		.loc 1 2451 0
 1676 001c 084C     		ldr	r4, .L148+4
 1677 001e 051C     		mov	r5, r0
 1678 0020 E060     		str	r0, [r4, #12]
 1679 0022 0B49     		ldr	r1, .L148+20
 1680 0024 C018     		add	r0, r0, r3
 1681              	.LVL125:
 1682 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1683              	.LVL126:
 1684 002a FA21     		mov	r1, #250
 1685 002c 094B     		ldr	r3, .L148+24
 1686 002e C6B2     		uxtb	r6, r0
 1687 0030 8900     		lsl	r1, r1, #2
 1688 0032 E818     		add	r0, r5, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 85


 1689 0034 FFF7FEFF 		bl	__aeabi_uidiv
 1690              	.LVL127:
 1691 0038 C303     		lsl	r3, r0, #15
 1692 003a EAE7     		b	.L146
 1693              	.L149:
 1694              		.align	2
 1695              	.L148:
 1696 003c 005A6202 		.word	40000000
 1697 0040 00000000 		.word	.LANCHOR2
 1698 0044 409C0000 		.word	40000
 1699 0048 0000204E 		.word	1310720000
 1700 004c 3F420F00 		.word	999999
 1701 0050 40420F00 		.word	1000000
 1702 0054 E7030000 		.word	999
 1703              		.cfi_endproc
 1704              	.LFE32:
 1705              		.size	CyDelayFreq, .-CyDelayFreq
 1706              		.section	.text.CySysTickStart,"ax",%progbits
 1707              		.align	2
 1708              		.global	CySysTickStart
 1709              		.code	16
 1710              		.thumb_func
 1711              		.type	CySysTickStart, %function
 1712              	CySysTickStart:
 1713              	.LFB33:
2480:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1714              		.loc 1 2480 0
 1715              		.cfi_startproc
 1716 0000 38B5     		push	{r3, r4, r5, lr}
 1717              		.cfi_def_cfa_offset 16
 1718              		.cfi_offset 3, -16
 1719              		.cfi_offset 4, -12
 1720              		.cfi_offset 5, -8
 1721              		.cfi_offset 14, -4
2481:Generated_Source\PSoC4/CyLib.c ****     {
 1722              		.loc 1 2481 0
 1723 0002 154C     		ldr	r4, .L152
 1724 0004 6569     		ldr	r5, [r4, #20]
 1725 0006 002D     		cmp	r5, #0
 1726 0008 1CD1     		bne	.L151
 1727              	.LVL128:
 1728              	.LBB113:
 1729              	.LBB114:
 1730              	.LBB115:
 1731              	.LBB116:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1732              		.loc 1 2141 0
 1733 000a 144A     		ldr	r2, .L152+4
 1734 000c 144B     		ldr	r3, .L152+8
 1735              	.LBE116:
 1736              	.LBE115:
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1737              		.loc 1 2514 0
 1738 000e 2560     		str	r5, [r4]
 1739              	.LVL129:
 1740 0010 6560     		str	r5, [r4, #4]
 1741              	.LVL130:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 86


 1742 0012 A560     		str	r5, [r4, #8]
 1743              	.LVL131:
 1744 0014 E560     		str	r5, [r4, #12]
 1745              	.LVL132:
 1746 0016 2561     		str	r5, [r4, #16]
 1747              	.LVL133:
 1748              	.LBB118:
 1749              	.LBB117:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1750              		.loc 1 2141 0
 1751 0018 1A60     		str	r2, [r3]
 1752              	.LVL134:
 1753              	.LBE117:
 1754              	.LBE118:
 1755              	.LBB119:
 1756              	.LBB120:
 1757              	.LBB121:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 1758              		.loc 1 2673 0
 1759 001a 0423     		mov	r3, #4
 1760 001c 114A     		ldr	r2, .L152+12
 1761 001e 1168     		ldr	r1, [r2]
 1762 0020 0B43     		orr	r3, r1
 1763              	.LBE121:
 1764              	.LBE120:
 1765              	.LBE119:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1766              		.loc 1 2523 0
 1767 0022 FA21     		mov	r1, #250
 1768              	.LBB124:
 1769              	.LBB123:
 1770              	.LBB122:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 1771              		.loc 1 2673 0
 1772 0024 1360     		str	r3, [r2]
 1773              	.LBE122:
 1774              	.LBE123:
 1775              	.LBE124:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1776              		.loc 1 2523 0
 1777 0026 104B     		ldr	r3, .L152+16
 1778 0028 8900     		lsl	r1, r1, #2
 1779 002a D868     		ldr	r0, [r3, #12]
 1780 002c FFF7FEFF 		bl	__aeabi_uidiv
 1781              	.LVL135:
 1782              	.LBB125:
 1783              	.LBB126:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1784              		.loc 1 2290 0
 1785 0030 8022     		mov	r2, #128
 1786              	.LBE126:
 1787              	.LBE125:
 1788              	.LBB129:
 1789              	.LBB130:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1790              		.loc 1 2607 0
 1791 0032 0E4B     		ldr	r3, .L152+20
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 87


 1792              	.LBE130:
 1793              	.LBE129:
 1794              	.LBB132:
 1795              	.LBB127:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1796              		.loc 1 2290 0
 1797 0034 1202     		lsl	r2, r2, #8
 1798              	.LBE127:
 1799              	.LBE132:
 1800              	.LBB133:
 1801              	.LBB131:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1802              		.loc 1 2607 0
 1803 0036 1860     		str	r0, [r3]
 1804              	.LBE131:
 1805              	.LBE133:
 1806              	.LBB134:
 1807              	.LBB135:
2713:Generated_Source\PSoC4/CyLib.c **** }
 1808              		.loc 1 2713 0
 1809 0038 0D4B     		ldr	r3, .L152+24
 1810 003a 1D60     		str	r5, [r3]
 1811              	.LVL136:
 1812              	.LBE135:
 1813              	.LBE134:
 1814              	.LBB136:
 1815              	.LBB128:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1816              		.loc 1 2290 0
 1817 003c 0D4B     		ldr	r3, .L152+28
 1818 003e 1A60     		str	r2, [r3]
 1819              	.LBE128:
 1820              	.LBE136:
 1821              	.LBE114:
 1822              	.LBE113:
2484:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 2484 0
 1824 0040 0123     		mov	r3, #1
 1825 0042 6361     		str	r3, [r4, #20]
 1826              	.LVL137:
 1827              	.L151:
 1828              	.LBB137:
 1829              	.LBB138:
 1830              	.LBB139:
 1831              	.LBB140:
2574:Generated_Source\PSoC4/CyLib.c **** }
 1832              		.loc 1 2574 0
 1833 0044 0222     		mov	r2, #2
 1834 0046 074B     		ldr	r3, .L152+12
 1835              	.LBE140:
 1836              	.LBE139:
 1837              	.LBE138:
 1838              	.LBE137:
2488:Generated_Source\PSoC4/CyLib.c **** 
 1839              		.loc 1 2488 0
 1840              		@ sp needed
 1841              	.LBB144:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 88


 1842              	.LBB143:
 1843              	.LBB142:
 1844              	.LBB141:
2574:Generated_Source\PSoC4/CyLib.c **** }
 1845              		.loc 1 2574 0
 1846 0048 1968     		ldr	r1, [r3]
 1847 004a 0A43     		orr	r2, r1
 1848 004c 1A60     		str	r2, [r3]
 1849              	.LBE141:
 1850              	.LBE142:
2542:Generated_Source\PSoC4/CyLib.c **** }
 1851              		.loc 1 2542 0
 1852 004e 0122     		mov	r2, #1
 1853 0050 1968     		ldr	r1, [r3]
 1854 0052 0A43     		orr	r2, r1
 1855 0054 1A60     		str	r2, [r3]
 1856              	.LBE143:
 1857              	.LBE144:
2488:Generated_Source\PSoC4/CyLib.c **** 
 1858              		.loc 1 2488 0
 1859 0056 38BD     		pop	{r3, r4, r5, pc}
 1860              	.L153:
 1861              		.align	2
 1862              	.L152:
 1863 0058 00000000 		.word	.LANCHOR0
 1864 005c 00000000 		.word	CySysTickServiceCallbacks
 1865 0060 3C000020 		.word	536870972
 1866 0064 10E000E0 		.word	-536813552
 1867 0068 00000000 		.word	.LANCHOR2
 1868 006c 14E000E0 		.word	-536813548
 1869 0070 18E000E0 		.word	-536813544
 1870 0074 00E100E0 		.word	-536813312
 1871              		.cfi_endproc
 1872              	.LFE33:
 1873              		.size	CySysTickStart, .-CySysTickStart
 1874              		.section	.text.CySysTickInit,"ax",%progbits
 1875              		.align	2
 1876              		.global	CySysTickInit
 1877              		.code	16
 1878              		.thumb_func
 1879              		.type	CySysTickInit, %function
 1880              	CySysTickInit:
 1881              	.LFB34:
2509:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1882              		.loc 1 2509 0
 1883              		.cfi_startproc
 1884              	.LVL138:
 1885 0000 10B5     		push	{r4, lr}
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 4, -8
 1888              		.cfi_offset 14, -4
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1889              		.loc 1 2514 0
 1890 0002 0024     		mov	r4, #0
 1891 0004 0E4B     		ldr	r3, .L155
 1892              	.LBB157:
 1893              	.LBB158:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 89


2141:Generated_Source\PSoC4/CyLib.c **** 
 1894              		.loc 1 2141 0
 1895 0006 0F4A     		ldr	r2, .L155+4
 1896              	.LBE158:
 1897              	.LBE157:
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1898              		.loc 1 2514 0
 1899 0008 1C60     		str	r4, [r3]
 1900              	.LVL139:
 1901 000a DC60     		str	r4, [r3, #12]
 1902 000c 5C60     		str	r4, [r3, #4]
 1903              	.LVL140:
 1904 000e 9C60     		str	r4, [r3, #8]
 1905              	.LVL141:
 1906 0010 1C61     		str	r4, [r3, #16]
 1907              	.LVL142:
 1908              	.LBB161:
 1909              	.LBB159:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1910              		.loc 1 2141 0
 1911 0012 0D4B     		ldr	r3, .L155+8
 1912              	.LVL143:
 1913              	.LBE159:
 1914              	.LBE161:
2526:Generated_Source\PSoC4/CyLib.c **** 
 1915              		.loc 1 2526 0
 1916              		@ sp needed
 1917              	.LBB162:
 1918              	.LBB160:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1919              		.loc 1 2141 0
 1920 0014 1A60     		str	r2, [r3]
 1921              	.LVL144:
 1922              	.LBE160:
 1923              	.LBE162:
 1924              	.LBB163:
 1925              	.LBB164:
 1926              	.LBB165:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 1927              		.loc 1 2673 0
 1928 0016 0423     		mov	r3, #4
 1929 0018 0C4A     		ldr	r2, .L155+12
 1930 001a 1168     		ldr	r1, [r2]
 1931 001c 0B43     		orr	r3, r1
 1932              	.LBE165:
 1933              	.LBE164:
 1934              	.LBE163:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1935              		.loc 1 2523 0
 1936 001e FA21     		mov	r1, #250
 1937              	.LBB168:
 1938              	.LBB167:
 1939              	.LBB166:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 1940              		.loc 1 2673 0
 1941 0020 1360     		str	r3, [r2]
 1942              	.LBE166:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 90


 1943              	.LBE167:
 1944              	.LBE168:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1945              		.loc 1 2523 0
 1946 0022 0B4B     		ldr	r3, .L155+16
 1947 0024 8900     		lsl	r1, r1, #2
 1948 0026 D868     		ldr	r0, [r3, #12]
 1949 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1950              	.LVL145:
 1951              	.LBB169:
 1952              	.LBB170:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1953              		.loc 1 2290 0
 1954 002c 8022     		mov	r2, #128
 1955              	.LBE170:
 1956              	.LBE169:
 1957              	.LBB173:
 1958              	.LBB174:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1959              		.loc 1 2607 0
 1960 002e 094B     		ldr	r3, .L155+20
 1961              	.LBE174:
 1962              	.LBE173:
 1963              	.LBB176:
 1964              	.LBB171:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1965              		.loc 1 2290 0
 1966 0030 1202     		lsl	r2, r2, #8
 1967              	.LBE171:
 1968              	.LBE176:
 1969              	.LBB177:
 1970              	.LBB175:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1971              		.loc 1 2607 0
 1972 0032 1860     		str	r0, [r3]
 1973              	.LBE175:
 1974              	.LBE177:
 1975              	.LBB178:
 1976              	.LBB179:
2713:Generated_Source\PSoC4/CyLib.c **** }
 1977              		.loc 1 2713 0
 1978 0034 084B     		ldr	r3, .L155+24
 1979 0036 1C60     		str	r4, [r3]
 1980              	.LVL146:
 1981              	.LBE179:
 1982              	.LBE178:
 1983              	.LBB180:
 1984              	.LBB172:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1985              		.loc 1 2290 0
 1986 0038 084B     		ldr	r3, .L155+28
 1987 003a 1A60     		str	r2, [r3]
 1988              	.LBE172:
 1989              	.LBE180:
2526:Generated_Source\PSoC4/CyLib.c **** 
 1990              		.loc 1 2526 0
 1991 003c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 91


 1992              	.L156:
 1993 003e C046     		.align	2
 1994              	.L155:
 1995 0040 00000000 		.word	.LANCHOR0
 1996 0044 00000000 		.word	CySysTickServiceCallbacks
 1997 0048 3C000020 		.word	536870972
 1998 004c 10E000E0 		.word	-536813552
 1999 0050 00000000 		.word	.LANCHOR2
 2000 0054 14E000E0 		.word	-536813548
 2001 0058 18E000E0 		.word	-536813544
 2002 005c 00E100E0 		.word	-536813312
 2003              		.cfi_endproc
 2004              	.LFE34:
 2005              		.size	CySysTickInit, .-CySysTickInit
 2006              		.section	.text.CySysTickEnable,"ax",%progbits
 2007              		.align	2
 2008              		.global	CySysTickEnable
 2009              		.code	16
 2010              		.thumb_func
 2011              		.type	CySysTickEnable, %function
 2012              	CySysTickEnable:
 2013              	.LFB35:
2540:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2014              		.loc 1 2540 0
 2015              		.cfi_startproc
 2016              	.LBB181:
 2017              	.LBB182:
2574:Generated_Source\PSoC4/CyLib.c **** }
 2018              		.loc 1 2574 0
 2019 0000 0222     		mov	r2, #2
 2020 0002 044B     		ldr	r3, .L158
 2021              	.LBE182:
 2022              	.LBE181:
2543:Generated_Source\PSoC4/CyLib.c **** 
 2023              		.loc 1 2543 0
 2024              		@ sp needed
 2025              	.LBB184:
 2026              	.LBB183:
2574:Generated_Source\PSoC4/CyLib.c **** }
 2027              		.loc 1 2574 0
 2028 0004 1968     		ldr	r1, [r3]
 2029 0006 0A43     		orr	r2, r1
 2030 0008 1A60     		str	r2, [r3]
 2031              	.LBE183:
 2032              	.LBE184:
2542:Generated_Source\PSoC4/CyLib.c **** }
 2033              		.loc 1 2542 0
 2034 000a 0122     		mov	r2, #1
 2035 000c 1968     		ldr	r1, [r3]
 2036 000e 0A43     		orr	r2, r1
 2037 0010 1A60     		str	r2, [r3]
2543:Generated_Source\PSoC4/CyLib.c **** 
 2038              		.loc 1 2543 0
 2039 0012 7047     		bx	lr
 2040              	.L159:
 2041              		.align	2
 2042              	.L158:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 92


 2043 0014 10E000E0 		.word	-536813552
 2044              		.cfi_endproc
 2045              	.LFE35:
 2046              		.size	CySysTickEnable, .-CySysTickEnable
 2047              		.section	.text.CySysTickStop,"ax",%progbits
 2048              		.align	2
 2049              		.global	CySysTickStop
 2050              		.code	16
 2051              		.thumb_func
 2052              		.type	CySysTickStop, %function
 2053              	CySysTickStop:
 2054              	.LFB36:
2557:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2055              		.loc 1 2557 0
 2056              		.cfi_startproc
2558:Generated_Source\PSoC4/CyLib.c **** }
 2057              		.loc 1 2558 0
 2058 0000 0121     		mov	r1, #1
 2059 0002 024A     		ldr	r2, .L161
2559:Generated_Source\PSoC4/CyLib.c **** 
 2060              		.loc 1 2559 0
 2061              		@ sp needed
2558:Generated_Source\PSoC4/CyLib.c **** }
 2062              		.loc 1 2558 0
 2063 0004 1368     		ldr	r3, [r2]
 2064 0006 8B43     		bic	r3, r1
 2065 0008 1360     		str	r3, [r2]
2559:Generated_Source\PSoC4/CyLib.c **** 
 2066              		.loc 1 2559 0
 2067 000a 7047     		bx	lr
 2068              	.L162:
 2069              		.align	2
 2070              	.L161:
 2071 000c 10E000E0 		.word	-536813552
 2072              		.cfi_endproc
 2073              	.LFE36:
 2074              		.size	CySysTickStop, .-CySysTickStop
 2075              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2076              		.align	2
 2077              		.global	CySysTickEnableInterrupt
 2078              		.code	16
 2079              		.thumb_func
 2080              		.type	CySysTickEnableInterrupt, %function
 2081              	CySysTickEnableInterrupt:
 2082              	.LFB37:
2573:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2083              		.loc 1 2573 0
 2084              		.cfi_startproc
2574:Generated_Source\PSoC4/CyLib.c **** }
 2085              		.loc 1 2574 0
 2086 0000 0223     		mov	r3, #2
 2087 0002 024A     		ldr	r2, .L164
2575:Generated_Source\PSoC4/CyLib.c **** 
 2088              		.loc 1 2575 0
 2089              		@ sp needed
2574:Generated_Source\PSoC4/CyLib.c **** }
 2090              		.loc 1 2574 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 93


 2091 0004 1168     		ldr	r1, [r2]
 2092 0006 0B43     		orr	r3, r1
 2093 0008 1360     		str	r3, [r2]
2575:Generated_Source\PSoC4/CyLib.c **** 
 2094              		.loc 1 2575 0
 2095 000a 7047     		bx	lr
 2096              	.L165:
 2097              		.align	2
 2098              	.L164:
 2099 000c 10E000E0 		.word	-536813552
 2100              		.cfi_endproc
 2101              	.LFE37:
 2102              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2103              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2104              		.align	2
 2105              		.global	CySysTickDisableInterrupt
 2106              		.code	16
 2107              		.thumb_func
 2108              		.type	CySysTickDisableInterrupt, %function
 2109              	CySysTickDisableInterrupt:
 2110              	.LFB38:
2589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2111              		.loc 1 2589 0
 2112              		.cfi_startproc
2590:Generated_Source\PSoC4/CyLib.c **** }
 2113              		.loc 1 2590 0
 2114 0000 0221     		mov	r1, #2
 2115 0002 024A     		ldr	r2, .L167
2591:Generated_Source\PSoC4/CyLib.c **** 
 2116              		.loc 1 2591 0
 2117              		@ sp needed
2590:Generated_Source\PSoC4/CyLib.c **** }
 2118              		.loc 1 2590 0
 2119 0004 1368     		ldr	r3, [r2]
 2120 0006 8B43     		bic	r3, r1
 2121 0008 1360     		str	r3, [r2]
2591:Generated_Source\PSoC4/CyLib.c **** 
 2122              		.loc 1 2591 0
 2123 000a 7047     		bx	lr
 2124              	.L168:
 2125              		.align	2
 2126              	.L167:
 2127 000c 10E000E0 		.word	-536813552
 2128              		.cfi_endproc
 2129              	.LFE38:
 2130              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2131              		.section	.text.CySysTickSetReload,"ax",%progbits
 2132              		.align	2
 2133              		.global	CySysTickSetReload
 2134              		.code	16
 2135              		.thumb_func
 2136              		.type	CySysTickSetReload, %function
 2137              	CySysTickSetReload:
 2138              	.LFB39:
2606:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2139              		.loc 1 2606 0
 2140              		.cfi_startproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 94


 2141              	.LVL147:
2607:Generated_Source\PSoC4/CyLib.c **** }
 2142              		.loc 1 2607 0
 2143 0000 024B     		ldr	r3, .L170
 2144 0002 0002     		lsl	r0, r0, #8
 2145              	.LVL148:
 2146 0004 000A     		lsr	r0, r0, #8
 2147 0006 1860     		str	r0, [r3]
2608:Generated_Source\PSoC4/CyLib.c **** 
 2148              		.loc 1 2608 0
 2149              		@ sp needed
 2150 0008 7047     		bx	lr
 2151              	.L171:
 2152 000a C046     		.align	2
 2153              	.L170:
 2154 000c 14E000E0 		.word	-536813548
 2155              		.cfi_endproc
 2156              	.LFE39:
 2157              		.size	CySysTickSetReload, .-CySysTickSetReload
 2158              		.section	.text.CySysTickGetReload,"ax",%progbits
 2159              		.align	2
 2160              		.global	CySysTickGetReload
 2161              		.code	16
 2162              		.thumb_func
 2163              		.type	CySysTickGetReload, %function
 2164              	CySysTickGetReload:
 2165              	.LFB40:
2622:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2166              		.loc 1 2622 0
 2167              		.cfi_startproc
2623:Generated_Source\PSoC4/CyLib.c **** }
 2168              		.loc 1 2623 0
 2169 0000 024B     		ldr	r3, .L173
2624:Generated_Source\PSoC4/CyLib.c **** 
 2170              		.loc 1 2624 0
 2171              		@ sp needed
2623:Generated_Source\PSoC4/CyLib.c **** }
 2172              		.loc 1 2623 0
 2173 0002 1868     		ldr	r0, [r3]
 2174 0004 0002     		lsl	r0, r0, #8
 2175 0006 000A     		lsr	r0, r0, #8
2624:Generated_Source\PSoC4/CyLib.c **** 
 2176              		.loc 1 2624 0
 2177 0008 7047     		bx	lr
 2178              	.L174:
 2179 000a C046     		.align	2
 2180              	.L173:
 2181 000c 14E000E0 		.word	-536813548
 2182              		.cfi_endproc
 2183              	.LFE40:
 2184              		.size	CySysTickGetReload, .-CySysTickGetReload
 2185              		.section	.text.CySysTickGetValue,"ax",%progbits
 2186              		.align	2
 2187              		.global	CySysTickGetValue
 2188              		.code	16
 2189              		.thumb_func
 2190              		.type	CySysTickGetValue, %function
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 95


 2191              	CySysTickGetValue:
 2192              	.LFB41:
2638:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2193              		.loc 1 2638 0
 2194              		.cfi_startproc
2639:Generated_Source\PSoC4/CyLib.c **** }
 2195              		.loc 1 2639 0
 2196 0000 024B     		ldr	r3, .L176
2640:Generated_Source\PSoC4/CyLib.c **** 
 2197              		.loc 1 2640 0
 2198              		@ sp needed
2639:Generated_Source\PSoC4/CyLib.c **** }
 2199              		.loc 1 2639 0
 2200 0002 1868     		ldr	r0, [r3]
 2201 0004 0002     		lsl	r0, r0, #8
 2202 0006 000A     		lsr	r0, r0, #8
2640:Generated_Source\PSoC4/CyLib.c **** 
 2203              		.loc 1 2640 0
 2204 0008 7047     		bx	lr
 2205              	.L177:
 2206 000a C046     		.align	2
 2207              	.L176:
 2208 000c 18E000E0 		.word	-536813544
 2209              		.cfi_endproc
 2210              	.LFE41:
 2211              		.size	CySysTickGetValue, .-CySysTickGetValue
 2212              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2213              		.align	2
 2214              		.global	CySysTickSetClockSource
 2215              		.code	16
 2216              		.thumb_func
 2217              		.type	CySysTickSetClockSource, %function
 2218              	CySysTickSetClockSource:
 2219              	.LFB42:
2670:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2220              		.loc 1 2670 0
 2221              		.cfi_startproc
 2222              	.LVL149:
 2223              	.LBB187:
 2224              	.LBB188:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 2225              		.loc 1 2673 0
 2226 0000 064A     		ldr	r2, .L182
 2227              	.LBE188:
 2228              	.LBE187:
2671:Generated_Source\PSoC4/CyLib.c ****         {
 2229              		.loc 1 2671 0
 2230 0002 0128     		cmp	r0, #1
 2231 0004 04D0     		beq	.L181
2677:Generated_Source\PSoC4/CyLib.c ****         }
 2232              		.loc 1 2677 0
 2233 0006 0421     		mov	r1, #4
 2234 0008 1368     		ldr	r3, [r2]
 2235 000a 8B43     		bic	r3, r1
 2236 000c 1360     		str	r3, [r2]
 2237              	.L178:
2679:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 96


 2238              		.loc 1 2679 0
 2239              		@ sp needed
 2240 000e 7047     		bx	lr
 2241              	.L181:
 2242              	.LVL150:
 2243              	.LBB190:
 2244              	.LBB189:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 2245              		.loc 1 2673 0
 2246 0010 0423     		mov	r3, #4
 2247 0012 1168     		ldr	r1, [r2]
 2248 0014 0B43     		orr	r3, r1
 2249 0016 1360     		str	r3, [r2]
 2250 0018 F9E7     		b	.L178
 2251              	.L183:
 2252 001a C046     		.align	2
 2253              	.L182:
 2254 001c 10E000E0 		.word	-536813552
 2255              	.LBE189:
 2256              	.LBE190:
 2257              		.cfi_endproc
 2258              	.LFE42:
 2259              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2260              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2261              		.align	2
 2262              		.global	CySysTickGetCountFlag
 2263              		.code	16
 2264              		.thumb_func
 2265              		.type	CySysTickGetCountFlag, %function
 2266              	CySysTickGetCountFlag:
 2267              	.LFB43:
2699:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2268              		.loc 1 2699 0
 2269              		.cfi_startproc
2700:Generated_Source\PSoC4/CyLib.c **** }
 2270              		.loc 1 2700 0
 2271 0000 024B     		ldr	r3, .L185
2701:Generated_Source\PSoC4/CyLib.c **** 
 2272              		.loc 1 2701 0
 2273              		@ sp needed
2700:Generated_Source\PSoC4/CyLib.c **** }
 2274              		.loc 1 2700 0
 2275 0002 1868     		ldr	r0, [r3]
 2276 0004 C003     		lsl	r0, r0, #15
 2277 0006 C00F     		lsr	r0, r0, #31
2701:Generated_Source\PSoC4/CyLib.c **** 
 2278              		.loc 1 2701 0
 2279 0008 7047     		bx	lr
 2280              	.L186:
 2281 000a C046     		.align	2
 2282              	.L185:
 2283 000c 10E000E0 		.word	-536813552
 2284              		.cfi_endproc
 2285              	.LFE43:
 2286              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2287              		.section	.text.CySysTickClear,"ax",%progbits
 2288              		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 97


 2289              		.global	CySysTickClear
 2290              		.code	16
 2291              		.thumb_func
 2292              		.type	CySysTickClear, %function
 2293              	CySysTickClear:
 2294              	.LFB44:
2712:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2295              		.loc 1 2712 0
 2296              		.cfi_startproc
2713:Generated_Source\PSoC4/CyLib.c **** }
 2297              		.loc 1 2713 0
 2298 0000 0022     		mov	r2, #0
 2299 0002 014B     		ldr	r3, .L188
2714:Generated_Source\PSoC4/CyLib.c **** 
 2300              		.loc 1 2714 0
 2301              		@ sp needed
2713:Generated_Source\PSoC4/CyLib.c **** }
 2302              		.loc 1 2713 0
 2303 0004 1A60     		str	r2, [r3]
2714:Generated_Source\PSoC4/CyLib.c **** 
 2304              		.loc 1 2714 0
 2305 0006 7047     		bx	lr
 2306              	.L189:
 2307              		.align	2
 2308              	.L188:
 2309 0008 18E000E0 		.word	-536813544
 2310              		.cfi_endproc
 2311              	.LFE44:
 2312              		.size	CySysTickClear, .-CySysTickClear
 2313              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2314              		.align	2
 2315              		.global	CySysTickSetCallback
 2316              		.code	16
 2317              		.thumb_func
 2318              		.type	CySysTickSetCallback, %function
 2319              	CySysTickSetCallback:
 2320              	.LFB45:
2747:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2321              		.loc 1 2747 0
 2322              		.cfi_startproc
 2323              	.LVL151:
2750:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2324              		.loc 1 2750 0
 2325 0000 024A     		ldr	r2, .L191
 2326 0002 8300     		lsl	r3, r0, #2
 2327 0004 9858     		ldr	r0, [r3, r2]
 2328              	.LVL152:
2753:Generated_Source\PSoC4/CyLib.c **** 
 2329              		.loc 1 2753 0
 2330              		@ sp needed
2751:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2331              		.loc 1 2751 0
 2332 0006 9950     		str	r1, [r3, r2]
2753:Generated_Source\PSoC4/CyLib.c **** 
 2333              		.loc 1 2753 0
 2334 0008 7047     		bx	lr
 2335              	.L192:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 98


 2336 000a C046     		.align	2
 2337              	.L191:
 2338 000c 00000000 		.word	.LANCHOR0
 2339              		.cfi_endproc
 2340              	.LFE45:
 2341              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2342              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2343              		.align	2
 2344              		.global	CySysTickGetCallback
 2345              		.code	16
 2346              		.thumb_func
 2347              		.type	CySysTickGetCallback, %function
 2348              	CySysTickGetCallback:
 2349              	.LFB46:
2771:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2350              		.loc 1 2771 0
 2351              		.cfi_startproc
 2352              	.LVL153:
2772:Generated_Source\PSoC4/CyLib.c **** }
 2353              		.loc 1 2772 0
 2354 0000 014B     		ldr	r3, .L194
 2355 0002 8000     		lsl	r0, r0, #2
 2356              	.LVL154:
 2357 0004 C058     		ldr	r0, [r0, r3]
2773:Generated_Source\PSoC4/CyLib.c **** 
 2358              		.loc 1 2773 0
 2359              		@ sp needed
 2360 0006 7047     		bx	lr
 2361              	.L195:
 2362              		.align	2
 2363              	.L194:
 2364 0008 00000000 		.word	.LANCHOR0
 2365              		.cfi_endproc
 2366              	.LFE46:
 2367              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2368              		.section	.text.CyGetUniqueId,"ax",%progbits
 2369              		.align	2
 2370              		.global	CyGetUniqueId
 2371              		.code	16
 2372              		.thumb_func
 2373              		.type	CyGetUniqueId, %function
 2374              	CyGetUniqueId:
 2375              	.LFB48:
2799:Generated_Source\PSoC4/CyLib.c **** 
2800:Generated_Source\PSoC4/CyLib.c **** 
2801:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:Generated_Source\PSoC4/CyLib.c **** *
2810:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 99


2813:Generated_Source\PSoC4/CyLib.c **** *
2814:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:Generated_Source\PSoC4/CyLib.c **** {
 2376              		.loc 1 2816 0
 2377              		.cfi_startproc
 2378              	.LVL155:
2817:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2379              		.loc 1 2818 0
 2380 0000 134B     		ldr	r3, .L197
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2821:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2822:Generated_Source\PSoC4/CyLib.c **** 
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2826:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2827:Generated_Source\PSoC4/CyLib.c **** #else
2828:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:Generated_Source\PSoC4/CyLib.c **** }
 2381              		.loc 1 2838 0
 2382              		@ sp needed
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2383              		.loc 1 2818 0
 2384 0002 1B78     		ldrb	r3, [r3]
 2385 0004 DAB2     		uxtb	r2, r3
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2386              		.loc 1 2819 0
 2387 0006 134B     		ldr	r3, .L197+4
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2388              		.loc 1 2818 0
 2389 0008 0260     		str	r2, [r0]
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2390              		.loc 1 2819 0
 2391 000a 1B78     		ldrb	r3, [r3]
 2392 000c 1B02     		lsl	r3, r3, #8
 2393 000e 1343     		orr	r3, r2
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2394              		.loc 1 2820 0
 2395 0010 114A     		ldr	r2, .L197+8
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2396              		.loc 1 2819 0
 2397 0012 0360     		str	r3, [r0]
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2398              		.loc 1 2820 0
 2399 0014 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 100


 2400 0016 1204     		lsl	r2, r2, #16
 2401 0018 1343     		orr	r3, r2
2821:Generated_Source\PSoC4/CyLib.c **** 
 2402              		.loc 1 2821 0
 2403 001a 104A     		ldr	r2, .L197+12
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2404              		.loc 1 2820 0
 2405 001c 0360     		str	r3, [r0]
2821:Generated_Source\PSoC4/CyLib.c **** 
 2406              		.loc 1 2821 0
 2407 001e 1278     		ldrb	r2, [r2]
 2408 0020 1206     		lsl	r2, r2, #24
 2409 0022 1343     		orr	r3, r2
 2410 0024 0360     		str	r3, [r0]
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2411              		.loc 1 2823 0
 2412 0026 0E4B     		ldr	r3, .L197+16
 2413 0028 1B78     		ldrb	r3, [r3]
 2414 002a DAB2     		uxtb	r2, r3
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2415              		.loc 1 2824 0
 2416 002c 0D4B     		ldr	r3, .L197+20
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2417              		.loc 1 2823 0
 2418 002e 4260     		str	r2, [r0, #4]
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2419              		.loc 1 2824 0
 2420 0030 1B78     		ldrb	r3, [r3]
 2421 0032 1B02     		lsl	r3, r3, #8
 2422 0034 1343     		orr	r3, r2
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2423              		.loc 1 2825 0
 2424 0036 0C4A     		ldr	r2, .L197+24
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2425              		.loc 1 2824 0
 2426 0038 4360     		str	r3, [r0, #4]
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2427              		.loc 1 2825 0
 2428 003a 1278     		ldrb	r2, [r2]
 2429 003c 1204     		lsl	r2, r2, #16
 2430 003e 1343     		orr	r3, r2
2826:Generated_Source\PSoC4/CyLib.c **** #else
 2431              		.loc 1 2826 0
 2432 0040 0A4A     		ldr	r2, .L197+28
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2433              		.loc 1 2825 0
 2434 0042 4360     		str	r3, [r0, #4]
2826:Generated_Source\PSoC4/CyLib.c **** #else
 2435              		.loc 1 2826 0
 2436 0044 1278     		ldrb	r2, [r2]
 2437 0046 1206     		lsl	r2, r2, #24
 2438 0048 1343     		orr	r3, r2
 2439 004a 4360     		str	r3, [r0, #4]
 2440              		.loc 1 2838 0
 2441 004c 7047     		bx	lr
 2442              	.L198:
 2443 004e C046     		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 101


 2444              	.L197:
 2445 0050 78F1FF0F 		.word	268431736
 2446 0054 79F1FF0F 		.word	268431737
 2447 0058 7AF1FF0F 		.word	268431738
 2448 005c 7BF1FF0F 		.word	268431739
 2449 0060 7CF1FF0F 		.word	268431740
 2450 0064 7DF1FF0F 		.word	268431741
 2451 0068 7EF1FF0F 		.word	268431742
 2452 006c 7FF1FF0F 		.word	268431743
 2453              		.cfi_endproc
 2454              	.LFE48:
 2455              		.size	CyGetUniqueId, .-CyGetUniqueId
 2456              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2457              		.align	2
 2458              		.global	CySysSetRamAccessArbPriority
 2459              		.code	16
 2460              		.thumb_func
 2461              		.type	CySysSetRamAccessArbPriority, %function
 2462              	CySysSetRamAccessArbPriority:
 2463              	.LFB49:
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
2842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
2844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c ****     *
2846:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
2847:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2848:Generated_Source\PSoC4/CyLib.c ****     *  details.
2849:Generated_Source\PSoC4/CyLib.c ****     *
2850:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2851:Generated_Source\PSoC4/CyLib.c ****     *
2852:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2853:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2854:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2855:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2856:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2857:Generated_Source\PSoC4/CyLib.c ****     *
2858:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2859:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
2860:Generated_Source\PSoC4/CyLib.c ****     {
 2464              		.loc 1 2860 0
 2465              		.cfi_startproc
 2466              	.LVL156:
2861:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2467              		.loc 1 2863 0
 2468 0000 0549     		ldr	r1, .L200
 2469 0002 064B     		ldr	r3, .L200+4
 2470 0004 0A68     		ldr	r2, [r1]
2864:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2471              		.loc 1 2864 0
 2472 0006 4004     		lsl	r0, r0, #17
 2473              	.LVL157:
2863:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 102


 2474              		.loc 1 2863 0
 2475 0008 1340     		and	r3, r2
 2476              	.LVL158:
 2477              		.loc 1 2864 0
 2478 000a C022     		mov	r2, #192
 2479 000c D202     		lsl	r2, r2, #11
 2480 000e 1040     		and	r0, r2
 2481 0010 1843     		orr	r0, r3
 2482              	.LVL159:
2865:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2483              		.loc 1 2865 0
 2484 0012 0860     		str	r0, [r1]
2866:Generated_Source\PSoC4/CyLib.c ****     }
 2485              		.loc 1 2866 0
 2486              		@ sp needed
 2487 0014 7047     		bx	lr
 2488              	.L201:
 2489 0016 C046     		.align	2
 2490              	.L200:
 2491 0018 38001040 		.word	1074790456
 2492 001c FFFFF9FF 		.word	-393217
 2493              		.cfi_endproc
 2494              	.LFE49:
 2495              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2496              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2497              		.align	2
 2498              		.global	CySysSetFlashAccessArbPriority
 2499              		.code	16
 2500              		.thumb_func
 2501              		.type	CySysSetFlashAccessArbPriority, %function
 2502              	CySysSetFlashAccessArbPriority:
 2503              	.LFB50:
2867:Generated_Source\PSoC4/CyLib.c **** 
2868:Generated_Source\PSoC4/CyLib.c **** 
2869:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2870:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
2871:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2872:Generated_Source\PSoC4/CyLib.c ****     *
2873:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
2874:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
2875:Generated_Source\PSoC4/CyLib.c ****     *  details.
2876:Generated_Source\PSoC4/CyLib.c ****     *
2877:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2878:Generated_Source\PSoC4/CyLib.c ****     *
2879:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2880:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2881:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2882:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2883:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2884:Generated_Source\PSoC4/CyLib.c ****     *
2885:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2886:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
2887:Generated_Source\PSoC4/CyLib.c ****     {
 2504              		.loc 1 2887 0
 2505              		.cfi_startproc
 2506              	.LVL160:
2888:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 103


2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2507              		.loc 1 2890 0
 2508 0000 0549     		ldr	r1, .L203
 2509 0002 064B     		ldr	r3, .L203+4
 2510 0004 0A68     		ldr	r2, [r1]
2891:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2511              		.loc 1 2891 0
 2512 0006 4004     		lsl	r0, r0, #17
 2513              	.LVL161:
2890:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2514              		.loc 1 2890 0
 2515 0008 1340     		and	r3, r2
 2516              	.LVL162:
 2517              		.loc 1 2891 0
 2518 000a C022     		mov	r2, #192
 2519 000c D202     		lsl	r2, r2, #11
 2520 000e 1040     		and	r0, r2
 2521 0010 1843     		orr	r0, r3
 2522              	.LVL163:
2892:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2523              		.loc 1 2892 0
 2524 0012 0860     		str	r0, [r1]
2893:Generated_Source\PSoC4/CyLib.c ****     }
 2525              		.loc 1 2893 0
 2526              		@ sp needed
 2527 0014 7047     		bx	lr
 2528              	.L204:
 2529 0016 C046     		.align	2
 2530              	.L203:
 2531 0018 30001040 		.word	1074790448
 2532 001c FFFFF9FF 		.word	-393217
 2533              		.cfi_endproc
 2534              	.LFE50:
 2535              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2536              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2537              		.align	2
 2538              		.global	CySysSetDmacAccessArbPriority
 2539              		.code	16
 2540              		.thumb_func
 2541              		.type	CySysSetDmacAccessArbPriority, %function
 2542              	CySysSetDmacAccessArbPriority:
 2543              	.LFB51:
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
2898:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c ****     *
2900:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
2901:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
2902:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
2903:Generated_Source\PSoC4/CyLib.c ****     *
2904:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2905:Generated_Source\PSoC4/CyLib.c ****     *
2906:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2907:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 104


2908:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2909:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2910:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2911:Generated_Source\PSoC4/CyLib.c ****     *
2912:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
2914:Generated_Source\PSoC4/CyLib.c ****     {
 2544              		.loc 1 2914 0
 2545              		.cfi_startproc
 2546              	.LVL164:
2915:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2547              		.loc 1 2917 0
 2548 0000 0549     		ldr	r1, .L206
 2549 0002 064B     		ldr	r3, .L206+4
 2550 0004 0A68     		ldr	r2, [r1]
2918:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2551              		.loc 1 2918 0
 2552 0006 4004     		lsl	r0, r0, #17
 2553              	.LVL165:
2917:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2554              		.loc 1 2917 0
 2555 0008 1340     		and	r3, r2
 2556              	.LVL166:
 2557              		.loc 1 2918 0
 2558 000a C022     		mov	r2, #192
 2559 000c D202     		lsl	r2, r2, #11
 2560 000e 1040     		and	r0, r2
 2561 0010 1843     		orr	r0, r3
 2562              	.LVL167:
2919:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2563              		.loc 1 2919 0
 2564 0012 0860     		str	r0, [r1]
2920:Generated_Source\PSoC4/CyLib.c ****     }
 2565              		.loc 1 2920 0
 2566              		@ sp needed
 2567 0014 7047     		bx	lr
 2568              	.L207:
 2569 0016 C046     		.align	2
 2570              	.L206:
 2571 0018 3C001040 		.word	1074790460
 2572 001c FFFFF9FF 		.word	-393217
 2573              		.cfi_endproc
 2574              	.LFE51:
 2575              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2576              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2577              		.align	2
 2578              		.global	CySysSetPeripheralAccessArbPriority
 2579              		.code	16
 2580              		.thumb_func
 2581              		.type	CySysSetPeripheralAccessArbPriority, %function
 2582              	CySysSetPeripheralAccessArbPriority:
 2583              	.LFB52:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 105


2924:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
2925:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c ****     *
2927:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
2928:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
2929:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2930:Generated_Source\PSoC4/CyLib.c ****     *
2931:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
2932:Generated_Source\PSoC4/CyLib.c ****     *
2933:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
2934:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
2935:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
2936:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
2937:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
2938:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
2939:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
2940:Generated_Source\PSoC4/CyLib.c ****     *
2941:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2942:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
2943:Generated_Source\PSoC4/CyLib.c ****     {
 2584              		.loc 1 2943 0
 2585              		.cfi_startproc
 2586              	.LVL168:
2944:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2945:Generated_Source\PSoC4/CyLib.c **** 
2946:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2587              		.loc 1 2946 0
 2588 0000 0028     		cmp	r0, #0
 2589 0002 05D0     		beq	.L214
2947:Generated_Source\PSoC4/CyLib.c ****         {
2948:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
2949:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
2950:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
2951:Generated_Source\PSoC4/CyLib.c ****         } else
2952:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
2953:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2590              		.loc 1 2953 0
 2591 0004 0128     		cmp	r0, #1
 2592 0006 0ED0     		beq	.L215
2954:Generated_Source\PSoC4/CyLib.c ****         {
2955:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
2956:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
2957:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
2958:Generated_Source\PSoC4/CyLib.c ****         } else
2959:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2960:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
2961:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2593              		.loc 1 2961 0
 2594 0008 0228     		cmp	r0, #2
 2595 000a 0ED0     		beq	.L216
 2596              	.LVL169:
 2597              	.LBB191:
 2598              	.LBB192:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 2599              		.loc 1 2376 0
 2600              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 2601 000c 01BE     		    bkpt    1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 106


 2602              	@ 0 "" 2
 2603              	.LVL170:
 2604              		.code	16
 2605              	.L208:
 2606              	.LBE192:
 2607              	.LBE191:
2962:Generated_Source\PSoC4/CyLib.c ****         {
2963:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
2964:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
2965:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
2966:Generated_Source\PSoC4/CyLib.c ****         } else
2967:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
2970:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
2971:Generated_Source\PSoC4/CyLib.c ****         }
2972:Generated_Source\PSoC4/CyLib.c ****     }
 2608              		.loc 1 2972 0
 2609              		@ sp needed
 2610 000e 7047     		bx	lr
 2611              	.LVL171:
 2612              	.L214:
2948:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2613              		.loc 1 2948 0
 2614 0010 0748     		ldr	r0, .L217
 2615              	.LVL172:
 2616              	.L213:
2963:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2617              		.loc 1 2963 0
 2618 0012 0268     		ldr	r2, [r0]
 2619 0014 074B     		ldr	r3, .L217+4
2964:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2620              		.loc 1 2964 0
 2621 0016 4904     		lsl	r1, r1, #17
 2622              	.LVL173:
2963:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2623              		.loc 1 2963 0
 2624 0018 1340     		and	r3, r2
 2625              	.LVL174:
2964:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2626              		.loc 1 2964 0
 2627 001a C022     		mov	r2, #192
 2628 001c D202     		lsl	r2, r2, #11
 2629 001e 1140     		and	r1, r2
 2630 0020 1943     		orr	r1, r3
 2631              	.LVL175:
2965:Generated_Source\PSoC4/CyLib.c ****         } else
 2632              		.loc 1 2965 0
 2633 0022 0160     		str	r1, [r0]
 2634 0024 F3E7     		b	.L208
 2635              	.LVL176:
 2636              	.L215:
2955:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2637              		.loc 1 2955 0
 2638 0026 0448     		ldr	r0, .L217+8
 2639              	.LVL177:
 2640 0028 F3E7     		b	.L213
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 107


 2641              	.LVL178:
 2642              	.L216:
2963:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2643              		.loc 1 2963 0
 2644 002a 0448     		ldr	r0, .L217+12
 2645              	.LVL179:
 2646 002c F1E7     		b	.L213
 2647              	.L218:
 2648 002e C046     		.align	2
 2649              	.L217:
 2650 0030 00011040 		.word	1074790656
 2651 0034 FFFFF9FF 		.word	-393217
 2652 0038 04011040 		.word	1074790660
 2653 003c 08011040 		.word	1074790664
 2654              		.cfi_endproc
 2655              	.LFE52:
 2656              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2657              		.global	cyImoFreqMhz2DpllOffset
 2658              		.global	cyImoFreqMhz2Reg
 2659              		.global	CySysTickInitVar
 2660              		.global	cydelay32kMs
 2661              		.global	cydelayFreqMhz
 2662              		.global	cydelayFreqKhz
 2663              		.global	cydelayFreqHz
 2664              		.section	.rodata
 2665              		.align	2
 2666              		.set	.LANCHOR1,. + 0
 2667              		.type	cyImoFreqMhz2Reg, %object
 2668              		.size	cyImoFreqMhz2Reg, 46
 2669              	cyImoFreqMhz2Reg:
 2670 0000 03       		.byte	3
 2671 0001 04       		.byte	4
 2672 0002 05       		.byte	5
 2673 0003 06       		.byte	6
 2674 0004 07       		.byte	7
 2675 0005 08       		.byte	8
 2676 0006 09       		.byte	9
 2677 0007 0A       		.byte	10
 2678 0008 0B       		.byte	11
 2679 0009 0C       		.byte	12
 2680 000a 0E       		.byte	14
 2681 000b 0F       		.byte	15
 2682 000c 10       		.byte	16
 2683 000d 11       		.byte	17
 2684 000e 12       		.byte	18
 2685 000f 13       		.byte	19
 2686 0010 14       		.byte	20
 2687 0011 15       		.byte	21
 2688 0012 16       		.byte	22
 2689 0013 17       		.byte	23
 2690 0014 18       		.byte	24
 2691 0015 19       		.byte	25
 2692 0016 1B       		.byte	27
 2693 0017 1C       		.byte	28
 2694 0018 1D       		.byte	29
 2695 0019 1E       		.byte	30
 2696 001a 1F       		.byte	31
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 108


 2697 001b 20       		.byte	32
 2698 001c 21       		.byte	33
 2699 001d 22       		.byte	34
 2700 001e 23       		.byte	35
 2701 001f 25       		.byte	37
 2702 0020 26       		.byte	38
 2703 0021 27       		.byte	39
 2704 0022 28       		.byte	40
 2705 0023 29       		.byte	41
 2706 0024 2A       		.byte	42
 2707 0025 2B       		.byte	43
 2708 0026 2E       		.byte	46
 2709 0027 2F       		.byte	47
 2710 0028 30       		.byte	48
 2711 0029 31       		.byte	49
 2712 002a 32       		.byte	50
 2713 002b 33       		.byte	51
 2714 002c 34       		.byte	52
 2715 002d 35       		.byte	53
 2716 002e 0000     		.space	2
 2717              		.type	cyImoFreqMhz2DpllOffset, %object
 2718              		.size	cyImoFreqMhz2DpllOffset, 23
 2719              	cyImoFreqMhz2DpllOffset:
 2720 0030 EE       		.byte	-18
 2721 0031 DB       		.byte	-37
 2722 0032 C9       		.byte	-55
 2723 0033 B9       		.byte	-71
 2724 0034 AA       		.byte	-86
 2725 0035 9B       		.byte	-101
 2726 0036 8E       		.byte	-114
 2727 0037 82       		.byte	-126
 2728 0038 76       		.byte	118
 2729 0039 6B       		.byte	107
 2730 003a 60       		.byte	96
 2731 003b 56       		.byte	86
 2732 003c 4D       		.byte	77
 2733 003d 44       		.byte	68
 2734 003e 3B       		.byte	59
 2735 003f 33       		.byte	51
 2736 0040 2C       		.byte	44
 2737 0041 24       		.byte	36
 2738 0042 1D       		.byte	29
 2739 0043 17       		.byte	23
 2740 0044 10       		.byte	16
 2741 0045 0A       		.byte	10
 2742 0046 04       		.byte	4
 2743 0047 00       		.data
 2744              		.align	2
 2745              		.set	.LANCHOR2,. + 0
 2746              		.type	cydelayFreqKhz, %object
 2747              		.size	cydelayFreqKhz, 4
 2748              	cydelayFreqKhz:
 2749 0000 409C0000 		.word	40000
 2750              		.type	cydelayFreqMhz, %object
 2751              		.size	cydelayFreqMhz, 1
 2752              	cydelayFreqMhz:
 2753 0004 28       		.byte	40
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 109


 2754 0005 000000   		.space	3
 2755              		.type	cydelay32kMs, %object
 2756              		.size	cydelay32kMs, 4
 2757              	cydelay32kMs:
 2758 0008 0000204E 		.word	1310720000
 2759              		.type	cydelayFreqHz, %object
 2760              		.size	cydelayFreqHz, 4
 2761              	cydelayFreqHz:
 2762 000c 005A6202 		.word	40000000
 2763              		.bss
 2764              		.align	2
 2765              		.set	.LANCHOR0,. + 0
 2766              		.type	CySysTickCallbacks, %object
 2767              		.size	CySysTickCallbacks, 20
 2768              	CySysTickCallbacks:
 2769 0000 00000000 		.space	20
 2769      00000000 
 2769      00000000 
 2769      00000000 
 2769      00000000 
 2770              		.type	CySysTickInitVar, %object
 2771              		.size	CySysTickInitVar, 4
 2772              	CySysTickInitVar:
 2773 0014 00000000 		.space	4
 2774              		.text
 2775              	.Letext0:
 2776              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2777              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2778              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2779              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2780              		.section	.debug_info,"",%progbits
 2781              	.Ldebug_info0:
 2782 0000 1B100000 		.4byte	0x101b
 2783 0004 0400     		.2byte	0x4
 2784 0006 00000000 		.4byte	.Ldebug_abbrev0
 2785 000a 04       		.byte	0x4
 2786 000b 01       		.uleb128 0x1
 2787 000c 38000000 		.4byte	.LASF115
 2788 0010 01       		.byte	0x1
 2789 0011 89070000 		.4byte	.LASF116
 2790 0015 F4050000 		.4byte	.LASF117
 2791 0019 68010000 		.4byte	.Ldebug_ranges0+0x168
 2792 001d 00000000 		.4byte	0
 2793 0021 00000000 		.4byte	.Ldebug_line0
 2794 0025 02       		.uleb128 0x2
 2795 0026 01       		.byte	0x1
 2796 0027 06       		.byte	0x6
 2797 0028 79010000 		.4byte	.LASF0
 2798 002c 02       		.uleb128 0x2
 2799 002d 01       		.byte	0x1
 2800 002e 08       		.byte	0x8
 2801 002f AD050000 		.4byte	.LASF1
 2802 0033 02       		.uleb128 0x2
 2803 0034 02       		.byte	0x2
 2804 0035 05       		.byte	0x5
 2805 0036 BB050000 		.4byte	.LASF2
 2806 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 110


 2807 003b 02       		.byte	0x2
 2808 003c 07       		.byte	0x7
 2809 003d 89030000 		.4byte	.LASF3
 2810 0041 02       		.uleb128 0x2
 2811 0042 04       		.byte	0x4
 2812 0043 05       		.byte	0x5
 2813 0044 DE010000 		.4byte	.LASF4
 2814 0048 02       		.uleb128 0x2
 2815 0049 04       		.byte	0x4
 2816 004a 07       		.byte	0x7
 2817 004b FC020000 		.4byte	.LASF5
 2818 004f 02       		.uleb128 0x2
 2819 0050 08       		.byte	0x8
 2820 0051 05       		.byte	0x5
 2821 0052 6B010000 		.4byte	.LASF6
 2822 0056 02       		.uleb128 0x2
 2823 0057 08       		.byte	0x8
 2824 0058 07       		.byte	0x7
 2825 0059 F5000000 		.4byte	.LASF7
 2826 005d 03       		.uleb128 0x3
 2827 005e 04       		.byte	0x4
 2828 005f 05       		.byte	0x5
 2829 0060 696E7400 		.ascii	"int\000"
 2830 0064 02       		.uleb128 0x2
 2831 0065 04       		.byte	0x4
 2832 0066 07       		.byte	0x7
 2833 0067 E0020000 		.4byte	.LASF8
 2834 006b 04       		.uleb128 0x4
 2835 006c FE010000 		.4byte	.LASF9
 2836 0070 02       		.byte	0x2
 2837 0071 9801     		.2byte	0x198
 2838 0073 2C000000 		.4byte	0x2c
 2839 0077 04       		.uleb128 0x4
 2840 0078 0F000000 		.4byte	.LASF10
 2841 007c 02       		.byte	0x2
 2842 007d 9901     		.2byte	0x199
 2843 007f 3A000000 		.4byte	0x3a
 2844 0083 04       		.uleb128 0x4
 2845 0084 41020000 		.4byte	.LASF11
 2846 0088 02       		.byte	0x2
 2847 0089 9A01     		.2byte	0x19a
 2848 008b 48000000 		.4byte	0x48
 2849 008f 02       		.uleb128 0x2
 2850 0090 04       		.byte	0x4
 2851 0091 04       		.byte	0x4
 2852 0092 13050000 		.4byte	.LASF12
 2853 0096 02       		.uleb128 0x2
 2854 0097 08       		.byte	0x8
 2855 0098 04       		.byte	0x4
 2856 0099 1D020000 		.4byte	.LASF13
 2857 009d 02       		.uleb128 0x2
 2858 009e 01       		.byte	0x1
 2859 009f 08       		.byte	0x8
 2860 00a0 4A060000 		.4byte	.LASF14
 2861 00a4 04       		.uleb128 0x4
 2862 00a5 7A050000 		.4byte	.LASF15
 2863 00a9 02       		.byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 111


 2864 00aa 4202     		.2byte	0x242
 2865 00ac B0000000 		.4byte	0xb0
 2866 00b0 05       		.uleb128 0x5
 2867 00b1 6B000000 		.4byte	0x6b
 2868 00b5 04       		.uleb128 0x4
 2869 00b6 3A040000 		.4byte	.LASF16
 2870 00ba 02       		.byte	0x2
 2871 00bb 4402     		.2byte	0x244
 2872 00bd C1000000 		.4byte	0xc1
 2873 00c1 05       		.uleb128 0x5
 2874 00c2 83000000 		.4byte	0x83
 2875 00c6 04       		.uleb128 0x4
 2876 00c7 67060000 		.4byte	.LASF17
 2877 00cb 02       		.byte	0x2
 2878 00cc 5402     		.2byte	0x254
 2879 00ce D2000000 		.4byte	0xd2
 2880 00d2 06       		.uleb128 0x6
 2881 00d3 04       		.byte	0x4
 2882 00d4 D8000000 		.4byte	0xd8
 2883 00d8 07       		.uleb128 0x7
 2884 00d9 02       		.uleb128 0x2
 2885 00da 04       		.byte	0x4
 2886 00db 07       		.byte	0x7
 2887 00dc 63040000 		.4byte	.LASF18
 2888 00e0 08       		.uleb128 0x8
 2889 00e1 3E050000 		.4byte	.LASF19
 2890 00e5 03       		.byte	0x3
 2891 00e6 F3       		.byte	0xf3
 2892 00e7 D2000000 		.4byte	0xd2
 2893 00eb 09       		.uleb128 0x9
 2894 00ec 20040000 		.4byte	.LASF30
 2895 00f0 01       		.byte	0x1
 2896 00f1 1A01     		.2byte	0x11a
 2897 00f3 01       		.byte	0x1
 2898 00f4 0A       		.uleb128 0xa
 2899 00f5 89050000 		.4byte	.LASF20
 2900 00f9 01       		.byte	0x1
 2901 00fa 3E09     		.2byte	0x93e
 2902 00fc 01       		.byte	0x1
 2903 00fd 0E010000 		.4byte	0x10e
 2904 0101 0B       		.uleb128 0xb
 2905 0102 ED050000 		.4byte	.LASF28
 2906 0106 01       		.byte	0x1
 2907 0107 3E09     		.2byte	0x93e
 2908 0109 6B000000 		.4byte	0x6b
 2909 010d 00       		.byte	0
 2910 010e 0C       		.uleb128 0xc
 2911 010f 65020000 		.4byte	.LASF21
 2912 0113 01       		.byte	0x1
 2913 0114 AC       		.byte	0xac
 2914 0115 01       		.byte	0x1
 2915 0116 5B010000 		.4byte	0x15b
 2916 011a 0D       		.uleb128 0xd
 2917 011b 6900     		.ascii	"i\000"
 2918 011d 01       		.byte	0x1
 2919 011e AF       		.byte	0xaf
 2920 011f 83000000 		.4byte	0x83
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 112


 2921 0123 0E       		.uleb128 0xe
 2922 0124 85010000 		.4byte	.LASF22
 2923 0128 01       		.byte	0x1
 2924 0129 B2       		.byte	0xb2
 2925 012a 83000000 		.4byte	0x83
 2926 012e 0E       		.uleb128 0xe
 2927 012f 96010000 		.4byte	.LASF23
 2928 0133 01       		.byte	0x1
 2929 0134 B3       		.byte	0xb3
 2930 0135 6B000000 		.4byte	0x6b
 2931 0139 0E       		.uleb128 0xe
 2932 013a 9C030000 		.4byte	.LASF24
 2933 013e 01       		.byte	0x1
 2934 013f B4       		.byte	0xb4
 2935 0140 83000000 		.4byte	0x83
 2936 0144 0E       		.uleb128 0xe
 2937 0145 A5010000 		.4byte	.LASF25
 2938 0149 01       		.byte	0x1
 2939 014a B5       		.byte	0xb5
 2940 014b 83000000 		.4byte	0x83
 2941 014f 0E       		.uleb128 0xe
 2942 0150 CC060000 		.4byte	.LASF26
 2943 0154 01       		.byte	0x1
 2944 0155 B6       		.byte	0xb6
 2945 0156 C1000000 		.4byte	0xc1
 2946 015a 00       		.byte	0
 2947 015b 0F       		.uleb128 0xf
 2948 015c C0010000 		.4byte	.LASF35
 2949 0160 01       		.byte	0x1
 2950 0161 2D01     		.2byte	0x12d
 2951 0163 83000000 		.4byte	0x83
 2952 0167 01       		.byte	0x1
 2953 0168 0A       		.uleb128 0xa
 2954 0169 13020000 		.4byte	.LASF27
 2955 016d 01       		.byte	0x1
 2956 016e 8109     		.2byte	0x981
 2957 0170 01       		.byte	0x1
 2958 0171 82010000 		.4byte	0x182
 2959 0175 0B       		.uleb128 0xb
 2960 0176 A8070000 		.4byte	.LASF29
 2961 017a 01       		.byte	0x1
 2962 017b 8109     		.2byte	0x981
 2963 017d 77000000 		.4byte	0x77
 2964 0181 00       		.byte	0
 2965 0182 09       		.uleb128 0x9
 2966 0183 2A020000 		.4byte	.LASF31
 2967 0187 01       		.byte	0x1
 2968 0188 F107     		.2byte	0x7f1
 2969 018a 01       		.byte	0x1
 2970 018b 09       		.uleb128 0x9
 2971 018c 44010000 		.4byte	.LASF32
 2972 0190 01       		.byte	0x1
 2973 0191 0C0A     		.2byte	0xa0c
 2974 0193 01       		.byte	0x1
 2975 0194 0A       		.uleb128 0xa
 2976 0195 A3030000 		.4byte	.LASF33
 2977 0199 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 113


 2978 019a 6D0A     		.2byte	0xa6d
 2979 019c 01       		.byte	0x1
 2980 019d AE010000 		.4byte	0x1ae
 2981 01a1 0B       		.uleb128 0xb
 2982 01a2 B0020000 		.4byte	.LASF34
 2983 01a6 01       		.byte	0x1
 2984 01a7 6D0A     		.2byte	0xa6d
 2985 01a9 83000000 		.4byte	0x83
 2986 01ad 00       		.byte	0
 2987 01ae 0F       		.uleb128 0xf
 2988 01af CA020000 		.4byte	.LASF36
 2989 01b3 01       		.byte	0x1
 2990 01b4 8A0A     		.2byte	0xa8a
 2991 01b6 83000000 		.4byte	0x83
 2992 01ba 01       		.byte	0x1
 2993 01bb 10       		.uleb128 0x10
 2994 01bc CF070000 		.4byte	.LASF118
 2995 01c0 01       		.byte	0x1
 2996 01c1 DF0A     		.2byte	0xadf
 2997 01c3 01       		.byte	0x1
 2998 01c4 D3010000 		.4byte	0x1d3
 2999 01c8 11       		.uleb128 0x11
 3000 01c9 6900     		.ascii	"i\000"
 3001 01cb 01       		.byte	0x1
 3002 01cc E10A     		.2byte	0xae1
 3003 01ce 83000000 		.4byte	0x83
 3004 01d2 00       		.byte	0
 3005 01d3 12       		.uleb128 0x12
 3006 01d4 0E040000 		.4byte	.LASF119
 3007 01d8 01       		.byte	0x1
 3008 01d9 5208     		.2byte	0x852
 3009 01db C6000000 		.4byte	0xc6
 3010 01df 01       		.byte	0x1
 3011 01e0 15020000 		.4byte	0x215
 3012 01e4 0B       		.uleb128 0xb
 3013 01e5 CA030000 		.4byte	.LASF37
 3014 01e9 01       		.byte	0x1
 3015 01ea 5208     		.2byte	0x852
 3016 01ec 6B000000 		.4byte	0x6b
 3017 01f0 0B       		.uleb128 0xb
 3018 01f1 B3040000 		.4byte	.LASF38
 3019 01f5 01       		.byte	0x1
 3020 01f6 5208     		.2byte	0x852
 3021 01f8 C6000000 		.4byte	0xc6
 3022 01fc 13       		.uleb128 0x13
 3023 01fd D9000000 		.4byte	.LASF39
 3024 0201 01       		.byte	0x1
 3025 0202 5408     		.2byte	0x854
 3026 0204 C6000000 		.4byte	0xc6
 3027 0208 13       		.uleb128 0x13
 3028 0209 00000000 		.4byte	.LASF40
 3029 020d 01       		.byte	0x1
 3030 020e 5508     		.2byte	0x855
 3031 0210 15020000 		.4byte	0x215
 3032 0214 00       		.byte	0
 3033 0215 06       		.uleb128 0x6
 3034 0216 04       		.byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 114


 3035 0217 C6000000 		.4byte	0xc6
 3036 021b 0A       		.uleb128 0xa
 3037 021c BC070000 		.4byte	.LASF41
 3038 0220 01       		.byte	0x1
 3039 0221 2D0A     		.2byte	0xa2d
 3040 0223 01       		.byte	0x1
 3041 0224 35020000 		.4byte	0x235
 3042 0228 0B       		.uleb128 0xb
 3043 0229 AA020000 		.4byte	.LASF42
 3044 022d 01       		.byte	0x1
 3045 022e 2D0A     		.2byte	0xa2d
 3046 0230 83000000 		.4byte	0x83
 3047 0234 00       		.byte	0
 3048 0235 09       		.uleb128 0x9
 3049 0236 ED020000 		.4byte	.LASF43
 3050 023a 01       		.byte	0x1
 3051 023b 970A     		.2byte	0xa97
 3052 023d 01       		.byte	0x1
 3053 023e 0A       		.uleb128 0xa
 3054 023f C5050000 		.4byte	.LASF44
 3055 0243 01       		.byte	0x1
 3056 0244 F008     		.2byte	0x8f0
 3057 0246 01       		.byte	0x1
 3058 0247 58020000 		.4byte	0x258
 3059 024b 0B       		.uleb128 0xb
 3060 024c CA030000 		.4byte	.LASF37
 3061 0250 01       		.byte	0x1
 3062 0251 F008     		.2byte	0x8f0
 3063 0253 6B000000 		.4byte	0x6b
 3064 0257 00       		.byte	0
 3065 0258 09       		.uleb128 0x9
 3066 0259 74060000 		.4byte	.LASF45
 3067 025d 01       		.byte	0x1
 3068 025e EB09     		.2byte	0x9eb
 3069 0260 01       		.byte	0x1
 3070 0261 14       		.uleb128 0x14
 3071 0262 BB010000 		.4byte	0x1bb
 3072 0266 00000000 		.4byte	.LFB47
 3073 026a 28000000 		.4byte	.LFE47-.LFB47
 3074 026e 01       		.uleb128 0x1
 3075 026f 9C       		.byte	0x9c
 3076 0270 99020000 		.4byte	0x299
 3077 0274 15       		.uleb128 0x15
 3078 0275 C8010000 		.4byte	0x1c8
 3079 0279 16       		.uleb128 0x16
 3080 027a AE010000 		.4byte	0x1ae
 3081 027e 02000000 		.4byte	.LBB56
 3082 0282 04000000 		.4byte	.LBE56-.LBB56
 3083 0286 01       		.byte	0x1
 3084 0287 E40A     		.2byte	0xae4
 3085 0289 17       		.uleb128 0x17
 3086 028a 10000000 		.4byte	.LBB58
 3087 028e 18000000 		.4byte	.LBE58-.LBB58
 3088 0292 15       		.uleb128 0x15
 3089 0293 C8010000 		.4byte	0x1c8
 3090 0297 00       		.byte	0
 3091 0298 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 115


 3092 0299 18       		.uleb128 0x18
 3093 029a 60070000 		.4byte	.LASF61
 3094 029e 01       		.byte	0x1
 3095 029f 68       		.byte	0x68
 3096 02a0 00000000 		.4byte	.LFB1
 3097 02a4 14000000 		.4byte	.LFE1-.LFB1
 3098 02a8 01       		.uleb128 0x1
 3099 02a9 9C       		.byte	0x9c
 3100 02aa 19       		.uleb128 0x19
 3101 02ab 29030000 		.4byte	.LASF48
 3102 02af 01       		.byte	0x1
 3103 02b0 88       		.byte	0x88
 3104 02b1 00000000 		.4byte	.LFB2
 3105 02b5 24000000 		.4byte	.LFE2-.LFB2
 3106 02b9 01       		.uleb128 0x1
 3107 02ba 9C       		.byte	0x9c
 3108 02bb CF020000 		.4byte	0x2cf
 3109 02bf 1A       		.uleb128 0x1a
 3110 02c0 EB000000 		.4byte	0xeb
 3111 02c4 00000000 		.4byte	.LBB59
 3112 02c8 00000000 		.4byte	.Ldebug_ranges0+0
 3113 02cc 01       		.byte	0x1
 3114 02cd 8B       		.byte	0x8b
 3115 02ce 00       		.byte	0
 3116 02cf 0A       		.uleb128 0xa
 3117 02d0 D8060000 		.4byte	.LASF46
 3118 02d4 01       		.byte	0x1
 3119 02d5 6A09     		.2byte	0x96a
 3120 02d7 01       		.byte	0x1
 3121 02d8 E9020000 		.4byte	0x2e9
 3122 02dc 0B       		.uleb128 0xb
 3123 02dd 5F050000 		.4byte	.LASF47
 3124 02e1 01       		.byte	0x1
 3125 02e2 6A09     		.2byte	0x96a
 3126 02e4 83000000 		.4byte	0x83
 3127 02e8 00       		.byte	0
 3128 02e9 1B       		.uleb128 0x1b
 3129 02ea 0E010000 		.4byte	0x10e
 3130 02ee 00000000 		.4byte	.LFB3
 3131 02f2 04010000 		.4byte	.LFE3-.LFB3
 3132 02f6 01       		.uleb128 0x1
 3133 02f7 9C       		.byte	0x9c
 3134 02f8 BA030000 		.4byte	0x3ba
 3135 02fc 15       		.uleb128 0x15
 3136 02fd 1A010000 		.4byte	0x11a
 3137 0301 15       		.uleb128 0x15
 3138 0302 23010000 		.4byte	0x123
 3139 0306 15       		.uleb128 0x15
 3140 0307 2E010000 		.4byte	0x12e
 3141 030b 15       		.uleb128 0x15
 3142 030c 39010000 		.4byte	0x139
 3143 0310 1C       		.uleb128 0x1c
 3144 0311 44010000 		.4byte	0x144
 3145 0315 00       		.byte	0
 3146 0316 15       		.uleb128 0x15
 3147 0317 4F010000 		.4byte	0x14f
 3148 031b 1D       		.uleb128 0x1d
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 116


 3149 031c 10000000 		.4byte	.LBB68
 3150 0320 F4000000 		.4byte	.LBE68-.LBB68
 3151 0324 B0030000 		.4byte	0x3b0
 3152 0328 1E       		.uleb128 0x1e
 3153 0329 1A010000 		.4byte	0x11a
 3154 032d 00000000 		.4byte	.LLST0
 3155 0331 1E       		.uleb128 0x1e
 3156 0332 23010000 		.4byte	0x123
 3157 0336 42000000 		.4byte	.LLST1
 3158 033a 1F       		.uleb128 0x1f
 3159 033b 2E010000 		.4byte	0x12e
 3160 033f 01       		.uleb128 0x1
 3161 0340 55       		.byte	0x55
 3162 0341 1E       		.uleb128 0x1e
 3163 0342 39010000 		.4byte	0x139
 3164 0346 79000000 		.4byte	.LLST2
 3165 034a 1E       		.uleb128 0x1e
 3166 034b 44010000 		.4byte	0x144
 3167 034f DB000000 		.4byte	.LLST3
 3168 0353 1F       		.uleb128 0x1f
 3169 0354 4F010000 		.4byte	0x14f
 3170 0358 02       		.uleb128 0x2
 3171 0359 91       		.byte	0x91
 3172 035a 6C       		.sleb128 -20
 3173 035b 20       		.uleb128 0x20
 3174 035c CF020000 		.4byte	0x2cf
 3175 0360 9E000000 		.4byte	.LBB69
 3176 0364 0E000000 		.4byte	.LBE69-.LBB69
 3177 0368 01       		.byte	0x1
 3178 0369 0501     		.2byte	0x105
 3179 036b 82030000 		.4byte	0x382
 3180 036f 21       		.uleb128 0x21
 3181 0370 DC020000 		.4byte	0x2dc
 3182 0374 06010000 		.4byte	.LLST4
 3183 0378 22       		.uleb128 0x22
 3184 0379 AC000000 		.4byte	.LVL20
 3185 037d D50F0000 		.4byte	0xfd5
 3186 0381 00       		.byte	0
 3187 0382 22       		.uleb128 0x22
 3188 0383 14000000 		.4byte	.LVL3
 3189 0387 E60F0000 		.4byte	0xfe6
 3190 038b 23       		.uleb128 0x23
 3191 038c 92000000 		.4byte	.LVL18
 3192 0390 F10F0000 		.4byte	0xff1
 3193 0394 9F030000 		.4byte	0x39f
 3194 0398 24       		.uleb128 0x24
 3195 0399 01       		.uleb128 0x1
 3196 039a 50       		.byte	0x50
 3197 039b 02       		.uleb128 0x2
 3198 039c 08       		.byte	0x8
 3199 039d 30       		.byte	0x30
 3200 039e 00       		.byte	0
 3201 039f 25       		.uleb128 0x25
 3202 03a0 B6000000 		.4byte	.LVL21
 3203 03a4 02100000 		.4byte	0x1002
 3204 03a8 24       		.uleb128 0x24
 3205 03a9 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 117


 3206 03aa 50       		.byte	0x50
 3207 03ab 02       		.uleb128 0x2
 3208 03ac 75       		.byte	0x75
 3209 03ad 00       		.sleb128 0
 3210 03ae 00       		.byte	0
 3211 03af 00       		.byte	0
 3212 03b0 22       		.uleb128 0x22
 3213 03b1 08000000 		.4byte	.LVL2
 3214 03b5 13100000 		.4byte	0x1013
 3215 03b9 00       		.byte	0
 3216 03ba 26       		.uleb128 0x26
 3217 03bb EB000000 		.4byte	0xeb
 3218 03bf 00000000 		.4byte	.LFB4
 3219 03c3 14000000 		.4byte	.LFE4-.LFB4
 3220 03c7 01       		.uleb128 0x1
 3221 03c8 9C       		.byte	0x9c
 3222 03c9 26       		.uleb128 0x26
 3223 03ca 5B010000 		.4byte	0x15b
 3224 03ce 00000000 		.4byte	.LFB5
 3225 03d2 10000000 		.4byte	.LFE5-.LFB5
 3226 03d6 01       		.uleb128 0x1
 3227 03d7 9C       		.byte	0x9c
 3228 03d8 27       		.uleb128 0x27
 3229 03d9 1F000000 		.4byte	.LASF49
 3230 03dd 01       		.byte	0x1
 3231 03de AA01     		.2byte	0x1aa
 3232 03e0 00000000 		.4byte	.LFB6
 3233 03e4 20000000 		.4byte	.LFE6-.LFB6
 3234 03e8 01       		.uleb128 0x1
 3235 03e9 9C       		.byte	0x9c
 3236 03ea 31040000 		.4byte	0x431
 3237 03ee 28       		.uleb128 0x28
 3238 03ef E3050000 		.4byte	.LASF53
 3239 03f3 01       		.byte	0x1
 3240 03f4 AA01     		.2byte	0x1aa
 3241 03f6 83000000 		.4byte	0x83
 3242 03fa 1A010000 		.4byte	.LLST5
 3243 03fe 29       		.uleb128 0x29
 3244 03ff 96010000 		.4byte	.LASF23
 3245 0403 01       		.byte	0x1
 3246 0404 AC01     		.2byte	0x1ac
 3247 0406 6B000000 		.4byte	0x6b
 3248 040a 46010000 		.4byte	.LLST6
 3249 040e 29       		.uleb128 0x29
 3250 040f B5070000 		.4byte	.LASF50
 3251 0413 01       		.byte	0x1
 3252 0414 AD01     		.2byte	0x1ad
 3253 0416 83000000 		.4byte	0x83
 3254 041a 59010000 		.4byte	.LLST7
 3255 041e 22       		.uleb128 0x22
 3256 041f 08000000 		.4byte	.LVL30
 3257 0423 E60F0000 		.4byte	0xfe6
 3258 0427 22       		.uleb128 0x22
 3259 0428 1A000000 		.4byte	.LVL33
 3260 042c 02100000 		.4byte	0x1002
 3261 0430 00       		.byte	0
 3262 0431 2A       		.uleb128 0x2a
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 118


 3263 0432 4D020000 		.4byte	.LASF63
 3264 0436 01       		.byte	0x1
 3265 0437 CF01     		.2byte	0x1cf
 3266 0439 83000000 		.4byte	0x83
 3267 043d 00000000 		.4byte	.LFB7
 3268 0441 18000000 		.4byte	.LFE7-.LFB7
 3269 0445 01       		.uleb128 0x1
 3270 0446 9C       		.byte	0x9c
 3271 0447 7E040000 		.4byte	0x47e
 3272 044b 29       		.uleb128 0x29
 3273 044c 96010000 		.4byte	.LASF23
 3274 0450 01       		.byte	0x1
 3275 0451 D101     		.2byte	0x1d1
 3276 0453 6B000000 		.4byte	0x6b
 3277 0457 77010000 		.4byte	.LLST8
 3278 045b 29       		.uleb128 0x29
 3279 045c BB040000 		.4byte	.LASF51
 3280 0460 01       		.byte	0x1
 3281 0461 D201     		.2byte	0x1d2
 3282 0463 83000000 		.4byte	0x83
 3283 0467 8A010000 		.4byte	.LLST9
 3284 046b 22       		.uleb128 0x22
 3285 046c 06000000 		.4byte	.LVL35
 3286 0470 E60F0000 		.4byte	0xfe6
 3287 0474 22       		.uleb128 0x22
 3288 0475 0E000000 		.4byte	.LVL37
 3289 0479 02100000 		.4byte	0x1002
 3290 047d 00       		.byte	0
 3291 047e 27       		.uleb128 0x27
 3292 047f 84060000 		.4byte	.LASF52
 3293 0483 01       		.byte	0x1
 3294 0484 0602     		.2byte	0x206
 3295 0486 00000000 		.4byte	.LFB8
 3296 048a 28000000 		.4byte	.LFE8-.LFB8
 3297 048e 01       		.uleb128 0x1
 3298 048f 9C       		.byte	0x9c
 3299 0490 C7040000 		.4byte	0x4c7
 3300 0494 28       		.uleb128 0x28
 3301 0495 58070000 		.4byte	.LASF54
 3302 0499 01       		.byte	0x1
 3303 049a 0602     		.2byte	0x206
 3304 049c 83000000 		.4byte	0x83
 3305 04a0 AC010000 		.4byte	.LLST10
 3306 04a4 29       		.uleb128 0x29
 3307 04a5 96010000 		.4byte	.LASF23
 3308 04a9 01       		.byte	0x1
 3309 04aa 0802     		.2byte	0x208
 3310 04ac 6B000000 		.4byte	0x6b
 3311 04b0 D8010000 		.4byte	.LLST11
 3312 04b4 22       		.uleb128 0x22
 3313 04b5 08000000 		.4byte	.LVL40
 3314 04b9 E60F0000 		.4byte	0xfe6
 3315 04bd 22       		.uleb128 0x22
 3316 04be 1E000000 		.4byte	.LVL42
 3317 04c2 02100000 		.4byte	0x1002
 3318 04c6 00       		.byte	0
 3319 04c7 27       		.uleb128 0x27
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 119


 3320 04c8 DA030000 		.4byte	.LASF55
 3321 04cc 01       		.byte	0x1
 3322 04cd 4002     		.2byte	0x240
 3323 04cf 00000000 		.4byte	.LFB9
 3324 04d3 90000000 		.4byte	.LFE9-.LFB9
 3325 04d7 01       		.uleb128 0x1
 3326 04d8 9C       		.byte	0x9c
 3327 04d9 72050000 		.4byte	0x572
 3328 04dd 28       		.uleb128 0x28
 3329 04de 85010000 		.4byte	.LASF22
 3330 04e2 01       		.byte	0x1
 3331 04e3 4002     		.2byte	0x240
 3332 04e5 83000000 		.4byte	0x83
 3333 04e9 EB010000 		.4byte	.LLST12
 3334 04ed 2B       		.uleb128 0x2b
 3335 04ee 0C010000 		.4byte	.LASF56
 3336 04f2 01       		.byte	0x1
 3337 04f3 4302     		.2byte	0x243
 3338 04f5 82050000 		.4byte	0x582
 3339 04f9 02       		.uleb128 0x2
 3340 04fa 91       		.byte	0x91
 3341 04fb 58       		.sleb128 -40
 3342 04fc 2B       		.uleb128 0x2b
 3343 04fd F4010000 		.4byte	.LASF57
 3344 0501 01       		.byte	0x1
 3345 0502 4402     		.2byte	0x244
 3346 0504 97050000 		.4byte	0x597
 3347 0508 02       		.uleb128 0x2
 3348 0509 91       		.byte	0x91
 3349 050a 60       		.sleb128 -32
 3350 050b 29       		.uleb128 0x29
 3351 050c D6010000 		.4byte	.LASF58
 3352 0510 01       		.byte	0x1
 3353 0511 4E02     		.2byte	0x24e
 3354 0513 83000000 		.4byte	0x83
 3355 0517 22020000 		.4byte	.LLST13
 3356 051b 29       		.uleb128 0x29
 3357 051c 96010000 		.4byte	.LASF23
 3358 0520 01       		.byte	0x1
 3359 0521 5502     		.2byte	0x255
 3360 0523 6B000000 		.4byte	0x6b
 3361 0527 58020000 		.4byte	.LLST14
 3362 052b 2C       		.uleb128 0x2c
 3363 052c 5B010000 		.4byte	0x15b
 3364 0530 0A000000 		.4byte	.LBB71
 3365 0534 18000000 		.4byte	.Ldebug_ranges0+0x18
 3366 0538 01       		.byte	0x1
 3367 0539 5B02     		.2byte	0x25b
 3368 053b 16       		.uleb128 0x16
 3369 053c EB000000 		.4byte	0xeb
 3370 0540 56000000 		.4byte	.LBB75
 3371 0544 08000000 		.4byte	.LBE75-.LBB75
 3372 0548 01       		.byte	0x1
 3373 0549 5E02     		.2byte	0x25e
 3374 054b 22       		.uleb128 0x22
 3375 054c 0A000000 		.4byte	.LVL44
 3376 0550 E60F0000 		.4byte	0xfe6
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 120


 3377 0554 23       		.uleb128 0x23
 3378 0555 52000000 		.4byte	.LVL48
 3379 0559 02100000 		.4byte	0x1002
 3380 055d 68050000 		.4byte	0x568
 3381 0561 24       		.uleb128 0x24
 3382 0562 01       		.uleb128 0x1
 3383 0563 50       		.byte	0x50
 3384 0564 02       		.uleb128 0x2
 3385 0565 74       		.byte	0x74
 3386 0566 00       		.sleb128 0
 3387 0567 00       		.byte	0
 3388 0568 22       		.uleb128 0x22
 3389 0569 66000000 		.4byte	.LVL53
 3390 056d 0E010000 		.4byte	0x10e
 3391 0571 00       		.byte	0
 3392 0572 2D       		.uleb128 0x2d
 3393 0573 83000000 		.4byte	0x83
 3394 0577 82050000 		.4byte	0x582
 3395 057b 2E       		.uleb128 0x2e
 3396 057c D9000000 		.4byte	0xd9
 3397 0580 01       		.byte	0x1
 3398 0581 00       		.byte	0
 3399 0582 05       		.uleb128 0x5
 3400 0583 72050000 		.4byte	0x572
 3401 0587 2D       		.uleb128 0x2d
 3402 0588 83000000 		.4byte	0x83
 3403 058c 97050000 		.4byte	0x597
 3404 0590 2E       		.uleb128 0x2e
 3405 0591 D9000000 		.4byte	0xd9
 3406 0595 03       		.byte	0x3
 3407 0596 00       		.byte	0
 3408 0597 05       		.uleb128 0x5
 3409 0598 87050000 		.4byte	0x587
 3410 059c 27       		.uleb128 0x27
 3411 059d 2F050000 		.4byte	.LASF59
 3412 05a1 01       		.byte	0x1
 3413 05a2 B107     		.2byte	0x7b1
 3414 05a4 00000000 		.4byte	.LFB10
 3415 05a8 50000000 		.4byte	.LFE10-.LFB10
 3416 05ac 01       		.uleb128 0x1
 3417 05ad 9C       		.byte	0x9c
 3418 05ae F8050000 		.4byte	0x5f8
 3419 05b2 28       		.uleb128 0x28
 3420 05b3 7F050000 		.4byte	.LASF60
 3421 05b7 01       		.byte	0x1
 3422 05b8 B107     		.2byte	0x7b1
 3423 05ba 83000000 		.4byte	0x83
 3424 05be 76020000 		.4byte	.LLST15
 3425 05c2 20       		.uleb128 0x20
 3426 05c3 68010000 		.4byte	0x168
 3427 05c7 24000000 		.4byte	.LBB77
 3428 05cb 0E000000 		.4byte	.LBE77-.LBB77
 3429 05cf 01       		.byte	0x1
 3430 05d0 BE07     		.2byte	0x7be
 3431 05d2 E7050000 		.4byte	0x5e7
 3432 05d6 2F       		.uleb128 0x2f
 3433 05d7 75010000 		.4byte	0x175
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 121


 3434 05db E803     		.2byte	0x3e8
 3435 05dd 22       		.uleb128 0x22
 3436 05de 32000000 		.4byte	.LVL57
 3437 05e2 D50F0000 		.4byte	0xfd5
 3438 05e6 00       		.byte	0
 3439 05e7 16       		.uleb128 0x16
 3440 05e8 82010000 		.4byte	0x182
 3441 05ec 32000000 		.4byte	.LBB79
 3442 05f0 04000000 		.4byte	.LBE79-.LBB79
 3443 05f4 01       		.byte	0x1
 3444 05f5 C107     		.2byte	0x7c1
 3445 05f7 00       		.byte	0
 3446 05f8 30       		.uleb128 0x30
 3447 05f9 FA060000 		.4byte	.LASF62
 3448 05fd 01       		.byte	0x1
 3449 05fe CF07     		.2byte	0x7cf
 3450 0600 00000000 		.4byte	.LFB11
 3451 0604 20000000 		.4byte	.LFE11-.LFB11
 3452 0608 01       		.uleb128 0x1
 3453 0609 9C       		.byte	0x9c
 3454 060a 31       		.uleb128 0x31
 3455 060b 0E030000 		.4byte	.LASF87
 3456 060f 01       		.byte	0x1
 3457 0610 E107     		.2byte	0x7e1
 3458 0612 83000000 		.4byte	0x83
 3459 0616 00000000 		.4byte	.LFB12
 3460 061a 10000000 		.4byte	.LFE12-.LFB12
 3461 061e 01       		.uleb128 0x1
 3462 061f 9C       		.byte	0x9c
 3463 0620 26       		.uleb128 0x26
 3464 0621 82010000 		.4byte	0x182
 3465 0625 00000000 		.4byte	.LFB13
 3466 0629 0C000000 		.4byte	.LFE13-.LFB13
 3467 062d 01       		.uleb128 0x1
 3468 062e 9C       		.byte	0x9c
 3469 062f 2A       		.uleb128 0x2a
 3470 0630 75030000 		.4byte	.LASF64
 3471 0634 01       		.byte	0x1
 3472 0635 0B08     		.2byte	0x80b
 3473 0637 83000000 		.4byte	0x83
 3474 063b 00000000 		.4byte	.LFB14
 3475 063f 14000000 		.4byte	.LFE14-.LFB14
 3476 0643 01       		.uleb128 0x1
 3477 0644 9C       		.byte	0x9c
 3478 0645 6A060000 		.4byte	0x66a
 3479 0649 28       		.uleb128 0x28
 3480 064a ED050000 		.4byte	.LASF28
 3481 064e 01       		.byte	0x1
 3482 064f 0B08     		.2byte	0x80b
 3483 0651 83000000 		.4byte	0x83
 3484 0655 97020000 		.4byte	.LLST16
 3485 0659 29       		.uleb128 0x29
 3486 065a 4F040000 		.4byte	.LASF65
 3487 065e 01       		.byte	0x1
 3488 065f 0D08     		.2byte	0x80d
 3489 0661 83000000 		.4byte	0x83
 3490 0665 B5020000 		.4byte	.LLST17
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 122


 3491 0669 00       		.byte	0
 3492 066a 2A       		.uleb128 0x2a
 3493 066b E7000000 		.4byte	.LASF66
 3494 066f 01       		.byte	0x1
 3495 0670 2208     		.2byte	0x822
 3496 0672 83000000 		.4byte	0x83
 3497 0676 00000000 		.4byte	.LFB15
 3498 067a 10000000 		.4byte	.LFE15-.LFB15
 3499 067e 01       		.uleb128 0x1
 3500 067f 9C       		.byte	0x9c
 3501 0680 93060000 		.4byte	0x693
 3502 0684 2B       		.uleb128 0x2b
 3503 0685 16000000 		.4byte	.LASF67
 3504 0689 01       		.byte	0x1
 3505 068a 2408     		.2byte	0x824
 3506 068c 83000000 		.4byte	0x83
 3507 0690 01       		.uleb128 0x1
 3508 0691 50       		.byte	0x50
 3509 0692 00       		.byte	0
 3510 0693 27       		.uleb128 0x27
 3511 0694 17010000 		.4byte	.LASF68
 3512 0698 01       		.byte	0x1
 3513 0699 3908     		.2byte	0x839
 3514 069b 00000000 		.4byte	.LFB16
 3515 069f 0C000000 		.4byte	.LFE16-.LFB16
 3516 06a3 01       		.uleb128 0x1
 3517 06a4 9C       		.byte	0x9c
 3518 06a5 B8060000 		.4byte	0x6b8
 3519 06a9 32       		.uleb128 0x32
 3520 06aa 48020000 		.4byte	.LASF69
 3521 06ae 01       		.byte	0x1
 3522 06af 3908     		.2byte	0x839
 3523 06b1 83000000 		.4byte	0x83
 3524 06b5 01       		.uleb128 0x1
 3525 06b6 50       		.byte	0x50
 3526 06b7 00       		.byte	0
 3527 06b8 1B       		.uleb128 0x1b
 3528 06b9 D3010000 		.4byte	0x1d3
 3529 06bd 00000000 		.4byte	.LFB17
 3530 06c1 14000000 		.4byte	.LFE17-.LFB17
 3531 06c5 01       		.uleb128 0x1
 3532 06c6 9C       		.byte	0x9c
 3533 06c7 06070000 		.4byte	0x706
 3534 06cb 21       		.uleb128 0x21
 3535 06cc E4010000 		.4byte	0x1e4
 3536 06d0 D7020000 		.4byte	.LLST18
 3537 06d4 33       		.uleb128 0x33
 3538 06d5 F0010000 		.4byte	0x1f0
 3539 06d9 01       		.uleb128 0x1
 3540 06da 51       		.byte	0x51
 3541 06db 1F       		.uleb128 0x1f
 3542 06dc FC010000 		.4byte	0x1fc
 3543 06e0 01       		.uleb128 0x1
 3544 06e1 50       		.byte	0x50
 3545 06e2 34       		.uleb128 0x34
 3546 06e3 08020000 		.4byte	0x208
 3547 06e7 00000020 		.4byte	0x20000000
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 123


 3548 06eb 35       		.uleb128 0x35
 3549 06ec F4000000 		.4byte	0xf4
 3550 06f0 04000000 		.4byte	.LBB81
 3551 06f4 02000000 		.4byte	.LBE81-.LBB81
 3552 06f8 01       		.byte	0x1
 3553 06f9 5708     		.2byte	0x857
 3554 06fb 21       		.uleb128 0x21
 3555 06fc 01010000 		.4byte	0x101
 3556 0700 F8020000 		.4byte	.LLST19
 3557 0704 00       		.byte	0
 3558 0705 00       		.byte	0
 3559 0706 2A       		.uleb128 0x2a
 3560 0707 D1050000 		.4byte	.LASF70
 3561 070b 01       		.byte	0x1
 3562 070c 7408     		.2byte	0x874
 3563 070e C6000000 		.4byte	0xc6
 3564 0712 00000000 		.4byte	.LFB18
 3565 0716 14000000 		.4byte	.LFE18-.LFB18
 3566 071a 01       		.uleb128 0x1
 3567 071b 9C       		.byte	0x9c
 3568 071c 5B070000 		.4byte	0x75b
 3569 0720 28       		.uleb128 0x28
 3570 0721 CA030000 		.4byte	.LASF37
 3571 0725 01       		.byte	0x1
 3572 0726 7408     		.2byte	0x874
 3573 0728 6B000000 		.4byte	0x6b
 3574 072c 0C030000 		.4byte	.LLST20
 3575 0730 36       		.uleb128 0x36
 3576 0731 00000000 		.4byte	.LASF40
 3577 0735 01       		.byte	0x1
 3578 0736 7608     		.2byte	0x876
 3579 0738 15020000 		.4byte	0x215
 3580 073c 00000020 		.4byte	0x20000000
 3581 0740 35       		.uleb128 0x35
 3582 0741 F4000000 		.4byte	0xf4
 3583 0745 04000000 		.4byte	.LBB83
 3584 0749 02000000 		.4byte	.LBE83-.LBB83
 3585 074d 01       		.byte	0x1
 3586 074e 7808     		.2byte	0x878
 3587 0750 21       		.uleb128 0x21
 3588 0751 01010000 		.4byte	0x101
 3589 0755 2D030000 		.4byte	.LLST21
 3590 0759 00       		.byte	0
 3591 075a 00       		.byte	0
 3592 075b 2A       		.uleb128 0x2a
 3593 075c BB030000 		.4byte	.LASF71
 3594 0760 01       		.byte	0x1
 3595 0761 8A08     		.2byte	0x88a
 3596 0763 C6000000 		.4byte	0xc6
 3597 0767 00000000 		.4byte	.LFB19
 3598 076b 18000000 		.4byte	.LFE19-.LFB19
 3599 076f 01       		.uleb128 0x1
 3600 0770 9C       		.byte	0x9c
 3601 0771 CC070000 		.4byte	0x7cc
 3602 0775 28       		.uleb128 0x28
 3603 0776 CA030000 		.4byte	.LASF37
 3604 077a 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 124


 3605 077b 8A08     		.2byte	0x88a
 3606 077d 6B000000 		.4byte	0x6b
 3607 0781 41030000 		.4byte	.LLST22
 3608 0785 32       		.uleb128 0x32
 3609 0786 B3040000 		.4byte	.LASF38
 3610 078a 01       		.byte	0x1
 3611 078b 8A08     		.2byte	0x88a
 3612 078d C6000000 		.4byte	0xc6
 3613 0791 01       		.uleb128 0x1
 3614 0792 51       		.byte	0x51
 3615 0793 2B       		.uleb128 0x2b
 3616 0794 D9000000 		.4byte	.LASF39
 3617 0798 01       		.byte	0x1
 3618 0799 8C08     		.2byte	0x88c
 3619 079b C6000000 		.4byte	0xc6
 3620 079f 01       		.uleb128 0x1
 3621 07a0 50       		.byte	0x50
 3622 07a1 36       		.uleb128 0x36
 3623 07a2 00000000 		.4byte	.LASF40
 3624 07a6 01       		.byte	0x1
 3625 07a7 8D08     		.2byte	0x88d
 3626 07a9 15020000 		.4byte	0x215
 3627 07ad 00000020 		.4byte	0x20000000
 3628 07b1 35       		.uleb128 0x35
 3629 07b2 F4000000 		.4byte	0xf4
 3630 07b6 04000000 		.4byte	.LBB85
 3631 07ba 02000000 		.4byte	.LBE85-.LBB85
 3632 07be 01       		.byte	0x1
 3633 07bf 8F08     		.2byte	0x88f
 3634 07c1 21       		.uleb128 0x21
 3635 07c2 01010000 		.4byte	0x101
 3636 07c6 62030000 		.4byte	.LLST23
 3637 07ca 00       		.byte	0
 3638 07cb 00       		.byte	0
 3639 07cc 2A       		.uleb128 0x2a
 3640 07cd 50050000 		.4byte	.LASF72
 3641 07d1 01       		.byte	0x1
 3642 07d2 A608     		.2byte	0x8a6
 3643 07d4 C6000000 		.4byte	0xc6
 3644 07d8 00000000 		.4byte	.LFB20
 3645 07dc 18000000 		.4byte	.LFE20-.LFB20
 3646 07e0 01       		.uleb128 0x1
 3647 07e1 9C       		.byte	0x9c
 3648 07e2 21080000 		.4byte	0x821
 3649 07e6 28       		.uleb128 0x28
 3650 07e7 CA030000 		.4byte	.LASF37
 3651 07eb 01       		.byte	0x1
 3652 07ec A608     		.2byte	0x8a6
 3653 07ee 6B000000 		.4byte	0x6b
 3654 07f2 76030000 		.4byte	.LLST24
 3655 07f6 36       		.uleb128 0x36
 3656 07f7 00000000 		.4byte	.LASF40
 3657 07fb 01       		.byte	0x1
 3658 07fc A808     		.2byte	0x8a8
 3659 07fe 15020000 		.4byte	0x215
 3660 0802 00000020 		.4byte	0x20000000
 3661 0806 35       		.uleb128 0x35
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 125


 3662 0807 F4000000 		.4byte	0xf4
 3663 080b 04000000 		.4byte	.LBB87
 3664 080f 02000000 		.4byte	.LBE87-.LBB87
 3665 0813 01       		.byte	0x1
 3666 0814 AA08     		.2byte	0x8aa
 3667 0816 21       		.uleb128 0x21
 3668 0817 01010000 		.4byte	0x101
 3669 081b 97030000 		.4byte	.LLST25
 3670 081f 00       		.byte	0
 3671 0820 00       		.byte	0
 3672 0821 27       		.uleb128 0x27
 3673 0822 02050000 		.4byte	.LASF73
 3674 0826 01       		.byte	0x1
 3675 0827 B908     		.2byte	0x8b9
 3676 0829 00000000 		.4byte	.LFB21
 3677 082d 40000000 		.4byte	.LFE21-.LFB21
 3678 0831 01       		.uleb128 0x1
 3679 0832 9C       		.byte	0x9c
 3680 0833 D6080000 		.4byte	0x8d6
 3681 0837 28       		.uleb128 0x28
 3682 0838 CA030000 		.4byte	.LASF37
 3683 083c 01       		.byte	0x1
 3684 083d B908     		.2byte	0x8b9
 3685 083f 6B000000 		.4byte	0x6b
 3686 0843 AB030000 		.4byte	.LLST26
 3687 0847 28       		.uleb128 0x28
 3688 0848 D1030000 		.4byte	.LASF74
 3689 084c 01       		.byte	0x1
 3690 084d B908     		.2byte	0x8b9
 3691 084f 6B000000 		.4byte	0x6b
 3692 0853 CC030000 		.4byte	.LLST27
 3693 0857 29       		.uleb128 0x29
 3694 0858 96010000 		.4byte	.LASF23
 3695 085c 01       		.byte	0x1
 3696 085d BB08     		.2byte	0x8bb
 3697 085f 6B000000 		.4byte	0x6b
 3698 0863 ED030000 		.4byte	.LLST28
 3699 0867 29       		.uleb128 0x29
 3700 0868 24020000 		.4byte	.LASF75
 3701 086c 01       		.byte	0x1
 3702 086d BC08     		.2byte	0x8bc
 3703 086f 83000000 		.4byte	0x83
 3704 0873 00040000 		.4byte	.LLST29
 3705 0877 29       		.uleb128 0x29
 3706 0878 AA020000 		.4byte	.LASF42
 3707 087c 01       		.byte	0x1
 3708 087d BD08     		.2byte	0x8bd
 3709 087f 83000000 		.4byte	0x83
 3710 0883 1E040000 		.4byte	.LLST30
 3711 0887 20       		.uleb128 0x20
 3712 0888 F4000000 		.4byte	0xf4
 3713 088c 0A000000 		.4byte	.LBB89
 3714 0890 02000000 		.4byte	.LBE89-.LBB89
 3715 0894 01       		.byte	0x1
 3716 0895 BF08     		.2byte	0x8bf
 3717 0897 A5080000 		.4byte	0x8a5
 3718 089b 21       		.uleb128 0x21
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 126


 3719 089c 01010000 		.4byte	0x101
 3720 08a0 47040000 		.4byte	.LLST31
 3721 08a4 00       		.byte	0
 3722 08a5 20       		.uleb128 0x20
 3723 08a6 F4000000 		.4byte	0xf4
 3724 08aa 10000000 		.4byte	.LBB91
 3725 08ae 02000000 		.4byte	.LBE91-.LBB91
 3726 08b2 01       		.byte	0x1
 3727 08b3 C008     		.2byte	0x8c0
 3728 08b5 C3080000 		.4byte	0x8c3
 3729 08b9 21       		.uleb128 0x21
 3730 08ba 01010000 		.4byte	0x101
 3731 08be 5B040000 		.4byte	.LLST32
 3732 08c2 00       		.byte	0
 3733 08c3 22       		.uleb128 0x22
 3734 08c4 16000000 		.4byte	.LVL88
 3735 08c8 E60F0000 		.4byte	0xfe6
 3736 08cc 22       		.uleb128 0x22
 3737 08cd 3A000000 		.4byte	.LVL94
 3738 08d1 02100000 		.4byte	0x1002
 3739 08d5 00       		.byte	0
 3740 08d6 2A       		.uleb128 0x2a
 3741 08d7 7E020000 		.4byte	.LASF76
 3742 08db 01       		.byte	0x1
 3743 08dc DB08     		.2byte	0x8db
 3744 08de 6B000000 		.4byte	0x6b
 3745 08e2 00000000 		.4byte	.LFB22
 3746 08e6 28000000 		.4byte	.LFE22-.LFB22
 3747 08ea 01       		.uleb128 0x1
 3748 08eb 9C       		.byte	0x9c
 3749 08ec 2B090000 		.4byte	0x92b
 3750 08f0 28       		.uleb128 0x28
 3751 08f1 CA030000 		.4byte	.LASF37
 3752 08f5 01       		.byte	0x1
 3753 08f6 DB08     		.2byte	0x8db
 3754 08f8 6B000000 		.4byte	0x6b
 3755 08fc 6F040000 		.4byte	.LLST33
 3756 0900 29       		.uleb128 0x29
 3757 0901 D1030000 		.4byte	.LASF74
 3758 0905 01       		.byte	0x1
 3759 0906 DD08     		.2byte	0x8dd
 3760 0908 6B000000 		.4byte	0x6b
 3761 090c 90040000 		.4byte	.LLST34
 3762 0910 35       		.uleb128 0x35
 3763 0911 F4000000 		.4byte	0xf4
 3764 0915 04000000 		.4byte	.LBB93
 3765 0919 02000000 		.4byte	.LBE93-.LBB93
 3766 091d 01       		.byte	0x1
 3767 091e DF08     		.2byte	0x8df
 3768 0920 21       		.uleb128 0x21
 3769 0921 01010000 		.4byte	0x101
 3770 0925 B1040000 		.4byte	.LLST35
 3771 0929 00       		.byte	0
 3772 092a 00       		.byte	0
 3773 092b 1B       		.uleb128 0x1b
 3774 092c 3E020000 		.4byte	0x23e
 3775 0930 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 127


 3776 0934 14000000 		.4byte	.LFE23-.LFB23
 3777 0938 01       		.uleb128 0x1
 3778 0939 9C       		.byte	0x9c
 3779 093a 48090000 		.4byte	0x948
 3780 093e 21       		.uleb128 0x21
 3781 093f 4B020000 		.4byte	0x24b
 3782 0943 C5040000 		.4byte	.LLST36
 3783 0947 00       		.byte	0
 3784 0948 2A       		.uleb128 0x2a
 3785 0949 5D010000 		.4byte	.LASF77
 3786 094d 01       		.byte	0x1
 3787 094e 0209     		.2byte	0x902
 3788 0950 6B000000 		.4byte	0x6b
 3789 0954 00000000 		.4byte	.LFB24
 3790 0958 18000000 		.4byte	.LFE24-.LFB24
 3791 095c 01       		.uleb128 0x1
 3792 095d 9C       		.byte	0x9c
 3793 095e 73090000 		.4byte	0x973
 3794 0962 28       		.uleb128 0x28
 3795 0963 CA030000 		.4byte	.LASF37
 3796 0967 01       		.byte	0x1
 3797 0968 0209     		.2byte	0x902
 3798 096a 6B000000 		.4byte	0x6b
 3799 096e E6040000 		.4byte	.LLST37
 3800 0972 00       		.byte	0
 3801 0973 27       		.uleb128 0x27
 3802 0974 E7010000 		.4byte	.LASF78
 3803 0978 01       		.byte	0x1
 3804 0979 1209     		.2byte	0x912
 3805 097b 00000000 		.4byte	.LFB25
 3806 097f 14000000 		.4byte	.LFE25-.LFB25
 3807 0983 01       		.uleb128 0x1
 3808 0984 9C       		.byte	0x9c
 3809 0985 9A090000 		.4byte	0x99a
 3810 0989 28       		.uleb128 0x28
 3811 098a CA030000 		.4byte	.LASF37
 3812 098e 01       		.byte	0x1
 3813 098f 1209     		.2byte	0x912
 3814 0991 6B000000 		.4byte	0x6b
 3815 0995 07050000 		.4byte	.LLST38
 3816 0999 00       		.byte	0
 3817 099a 27       		.uleb128 0x27
 3818 099b 50030000 		.4byte	.LASF79
 3819 099f 01       		.byte	0x1
 3820 09a0 2009     		.2byte	0x920
 3821 09a2 00000000 		.4byte	.LFB26
 3822 09a6 14000000 		.4byte	.LFE26-.LFB26
 3823 09aa 01       		.uleb128 0x1
 3824 09ab 9C       		.byte	0x9c
 3825 09ac C1090000 		.4byte	0x9c1
 3826 09b0 28       		.uleb128 0x28
 3827 09b1 CA030000 		.4byte	.LASF37
 3828 09b5 01       		.byte	0x1
 3829 09b6 2009     		.2byte	0x920
 3830 09b8 6B000000 		.4byte	0x6b
 3831 09bc 28050000 		.4byte	.LLST39
 3832 09c0 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 128


 3833 09c1 27       		.uleb128 0x27
 3834 09c2 A1040000 		.4byte	.LASF80
 3835 09c6 01       		.byte	0x1
 3836 09c7 2F09     		.2byte	0x92f
 3837 09c9 00000000 		.4byte	.LFB27
 3838 09cd 14000000 		.4byte	.LFE27-.LFB27
 3839 09d1 01       		.uleb128 0x1
 3840 09d2 9C       		.byte	0x9c
 3841 09d3 E8090000 		.4byte	0x9e8
 3842 09d7 28       		.uleb128 0x28
 3843 09d8 CA030000 		.4byte	.LASF37
 3844 09dc 01       		.byte	0x1
 3845 09dd 2F09     		.2byte	0x92f
 3846 09df 6B000000 		.4byte	0x6b
 3847 09e3 49050000 		.4byte	.LLST40
 3848 09e7 00       		.byte	0
 3849 09e8 1B       		.uleb128 0x1b
 3850 09e9 F4000000 		.4byte	0xf4
 3851 09ed 00000000 		.4byte	.LFB28
 3852 09f1 04000000 		.4byte	.LFE28-.LFB28
 3853 09f5 01       		.uleb128 0x1
 3854 09f6 9C       		.byte	0x9c
 3855 09f7 030A0000 		.4byte	0xa03
 3856 09fb 33       		.uleb128 0x33
 3857 09fc 01010000 		.4byte	0x101
 3858 0a00 01       		.uleb128 0x1
 3859 0a01 50       		.byte	0x50
 3860 0a02 00       		.byte	0
 3861 0a03 30       		.uleb128 0x30
 3862 0a04 34010000 		.4byte	.LASF81
 3863 0a08 01       		.byte	0x1
 3864 0a09 5609     		.2byte	0x956
 3865 0a0b 00000000 		.4byte	.LFB29
 3866 0a0f 18000000 		.4byte	.LFE29-.LFB29
 3867 0a13 01       		.uleb128 0x1
 3868 0a14 9C       		.byte	0x9c
 3869 0a15 1B       		.uleb128 0x1b
 3870 0a16 CF020000 		.4byte	0x2cf
 3871 0a1a 00000000 		.4byte	.LFB30
 3872 0a1e 48000000 		.4byte	.LFE30-.LFB30
 3873 0a22 01       		.uleb128 0x1
 3874 0a23 9C       		.byte	0x9c
 3875 0a24 440A0000 		.4byte	0xa44
 3876 0a28 21       		.uleb128 0x21
 3877 0a29 DC020000 		.4byte	0x2dc
 3878 0a2d 6A050000 		.4byte	.LLST41
 3879 0a31 22       		.uleb128 0x22
 3880 0a32 16000000 		.4byte	.LVL114
 3881 0a36 D50F0000 		.4byte	0xfd5
 3882 0a3a 22       		.uleb128 0x22
 3883 0a3b 34000000 		.4byte	.LVL117
 3884 0a3f D50F0000 		.4byte	0xfd5
 3885 0a43 00       		.byte	0
 3886 0a44 1B       		.uleb128 0x1b
 3887 0a45 68010000 		.4byte	0x168
 3888 0a49 00000000 		.4byte	.LFB31
 3889 0a4d 14000000 		.4byte	.LFE31-.LFB31
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 129


 3890 0a51 01       		.uleb128 0x1
 3891 0a52 9C       		.byte	0x9c
 3892 0a53 6A0A0000 		.4byte	0xa6a
 3893 0a57 21       		.uleb128 0x21
 3894 0a58 75010000 		.4byte	0x175
 3895 0a5c 93050000 		.4byte	.LLST42
 3896 0a60 22       		.uleb128 0x22
 3897 0a61 0C000000 		.4byte	.LVL121
 3898 0a65 D50F0000 		.4byte	0xfd5
 3899 0a69 00       		.byte	0
 3900 0a6a 37       		.uleb128 0x37
 3901 0a6b 8A010000 		.4byte	.LASF82
 3902 0a6f 01       		.byte	0x1
 3903 0a70 8F09     		.2byte	0x98f
 3904 0a72 00000000 		.4byte	.LFB32
 3905 0a76 58000000 		.4byte	.LFE32-.LFB32
 3906 0a7a 01       		.uleb128 0x1
 3907 0a7b 9C       		.byte	0x9c
 3908 0a7c 910A0000 		.4byte	0xa91
 3909 0a80 28       		.uleb128 0x28
 3910 0a81 85010000 		.4byte	.LASF22
 3911 0a85 01       		.byte	0x1
 3912 0a86 8F09     		.2byte	0x98f
 3913 0a88 83000000 		.4byte	0x83
 3914 0a8c B4050000 		.4byte	.LLST43
 3915 0a90 00       		.byte	0
 3916 0a91 0A       		.uleb128 0xa
 3917 0a92 9C020000 		.4byte	.LASF83
 3918 0a96 01       		.byte	0x1
 3919 0a97 CC09     		.2byte	0x9cc
 3920 0a99 01       		.byte	0x1
 3921 0a9a A90A0000 		.4byte	0xaa9
 3922 0a9e 11       		.uleb128 0x11
 3923 0a9f 6900     		.ascii	"i\000"
 3924 0aa1 01       		.byte	0x1
 3925 0aa2 CE09     		.2byte	0x9ce
 3926 0aa4 83000000 		.4byte	0x83
 3927 0aa8 00       		.byte	0
 3928 0aa9 37       		.uleb128 0x37
 3929 0aaa 40040000 		.4byte	.LASF84
 3930 0aae 01       		.byte	0x1
 3931 0aaf AF09     		.2byte	0x9af
 3932 0ab1 00000000 		.4byte	.LFB33
 3933 0ab5 78000000 		.4byte	.LFE33-.LFB33
 3934 0ab9 01       		.uleb128 0x1
 3935 0aba 9C       		.byte	0x9c
 3936 0abb C10B0000 		.4byte	0xbc1
 3937 0abf 20       		.uleb128 0x20
 3938 0ac0 910A0000 		.4byte	0xa91
 3939 0ac4 0A000000 		.4byte	.LBB113
 3940 0ac8 36000000 		.4byte	.LBE113-.LBB113
 3941 0acc 01       		.byte	0x1
 3942 0acd B309     		.2byte	0x9b3
 3943 0acf 9F0B0000 		.4byte	0xb9f
 3944 0ad3 17       		.uleb128 0x17
 3945 0ad4 0A000000 		.4byte	.LBB114
 3946 0ad8 36000000 		.4byte	.LBE114-.LBB114
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 130


 3947 0adc 1E       		.uleb128 0x1e
 3948 0add 9E0A0000 		.4byte	0xa9e
 3949 0ae1 EB050000 		.4byte	.LLST44
 3950 0ae5 38       		.uleb128 0x38
 3951 0ae6 D3010000 		.4byte	0x1d3
 3952 0aea 0A000000 		.4byte	.LBB115
 3953 0aee 30000000 		.4byte	.Ldebug_ranges0+0x30
 3954 0af2 01       		.byte	0x1
 3955 0af3 D509     		.2byte	0x9d5
 3956 0af5 240B0000 		.4byte	0xb24
 3957 0af9 21       		.uleb128 0x21
 3958 0afa F0010000 		.4byte	0x1f0
 3959 0afe 3B060000 		.4byte	.LLST45
 3960 0b02 21       		.uleb128 0x21
 3961 0b03 E4010000 		.4byte	0x1e4
 3962 0b07 53060000 		.4byte	.LLST46
 3963 0b0b 39       		.uleb128 0x39
 3964 0b0c 30000000 		.4byte	.Ldebug_ranges0+0x30
 3965 0b10 1E       		.uleb128 0x1e
 3966 0b11 FC010000 		.4byte	0x1fc
 3967 0b15 67060000 		.4byte	.LLST47
 3968 0b19 1E       		.uleb128 0x1e
 3969 0b1a 08020000 		.4byte	0x208
 3970 0b1e 7B060000 		.4byte	.LLST48
 3971 0b22 00       		.byte	0
 3972 0b23 00       		.byte	0
 3973 0b24 38       		.uleb128 0x38
 3974 0b25 94010000 		.4byte	0x194
 3975 0b29 1A000000 		.4byte	.LBB119
 3976 0b2d 48000000 		.4byte	.Ldebug_ranges0+0x48
 3977 0b31 01       		.byte	0x1
 3978 0b32 D809     		.2byte	0x9d8
 3979 0b34 510B0000 		.4byte	0xb51
 3980 0b38 21       		.uleb128 0x21
 3981 0b39 A1010000 		.4byte	0x1a1
 3982 0b3d 91060000 		.4byte	.LLST49
 3983 0b41 39       		.uleb128 0x39
 3984 0b42 48000000 		.4byte	.Ldebug_ranges0+0x48
 3985 0b46 21       		.uleb128 0x21
 3986 0b47 A1010000 		.4byte	0x1a1
 3987 0b4b 91060000 		.4byte	.LLST49
 3988 0b4f 00       		.byte	0
 3989 0b50 00       		.byte	0
 3990 0b51 38       		.uleb128 0x38
 3991 0b52 3E020000 		.4byte	0x23e
 3992 0b56 30000000 		.4byte	.LBB125
 3993 0b5a 60000000 		.4byte	.Ldebug_ranges0+0x60
 3994 0b5e 01       		.byte	0x1
 3995 0b5f DD09     		.2byte	0x9dd
 3996 0b61 6F0B0000 		.4byte	0xb6f
 3997 0b65 21       		.uleb128 0x21
 3998 0b66 4B020000 		.4byte	0x24b
 3999 0b6a A5060000 		.4byte	.LLST51
 4000 0b6e 00       		.byte	0
 4001 0b6f 38       		.uleb128 0x38
 4002 0b70 1B020000 		.4byte	0x21b
 4003 0b74 32000000 		.4byte	.LBB129
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 131


 4004 0b78 80000000 		.4byte	.Ldebug_ranges0+0x80
 4005 0b7c 01       		.byte	0x1
 4006 0b7d DB09     		.2byte	0x9db
 4007 0b7f 8D0B0000 		.4byte	0xb8d
 4008 0b83 21       		.uleb128 0x21
 4009 0b84 28020000 		.4byte	0x228
 4010 0b88 B9060000 		.4byte	.LLST52
 4011 0b8c 00       		.byte	0
 4012 0b8d 16       		.uleb128 0x16
 4013 0b8e 35020000 		.4byte	0x235
 4014 0b92 38000000 		.4byte	.LBB134
 4015 0b96 04000000 		.4byte	.LBE134-.LBB134
 4016 0b9a 01       		.byte	0x1
 4017 0b9b DC09     		.2byte	0x9dc
 4018 0b9d 00       		.byte	0
 4019 0b9e 00       		.byte	0
 4020 0b9f 3A       		.uleb128 0x3a
 4021 0ba0 58020000 		.4byte	0x258
 4022 0ba4 44000000 		.4byte	.LBB137
 4023 0ba8 98000000 		.4byte	.Ldebug_ranges0+0x98
 4024 0bac 01       		.byte	0x1
 4025 0bad B709     		.2byte	0x9b7
 4026 0baf 2C       		.uleb128 0x2c
 4027 0bb0 8B010000 		.4byte	0x18b
 4028 0bb4 44000000 		.4byte	.LBB139
 4029 0bb8 B0000000 		.4byte	.Ldebug_ranges0+0xb0
 4030 0bbc 01       		.byte	0x1
 4031 0bbd ED09     		.2byte	0x9ed
 4032 0bbf 00       		.byte	0
 4033 0bc0 00       		.byte	0
 4034 0bc1 14       		.uleb128 0x14
 4035 0bc2 910A0000 		.4byte	0xa91
 4036 0bc6 00000000 		.4byte	.LFB34
 4037 0bca 60000000 		.4byte	.LFE34-.LFB34
 4038 0bce 01       		.uleb128 0x1
 4039 0bcf 9C       		.byte	0x9c
 4040 0bd0 8B0C0000 		.4byte	0xc8b
 4041 0bd4 1E       		.uleb128 0x1e
 4042 0bd5 9E0A0000 		.4byte	0xa9e
 4043 0bd9 CC060000 		.4byte	.LLST53
 4044 0bdd 38       		.uleb128 0x38
 4045 0bde D3010000 		.4byte	0x1d3
 4046 0be2 06000000 		.4byte	.LBB157
 4047 0be6 C8000000 		.4byte	.Ldebug_ranges0+0xc8
 4048 0bea 01       		.byte	0x1
 4049 0beb D509     		.2byte	0x9d5
 4050 0bed 1C0C0000 		.4byte	0xc1c
 4051 0bf1 33       		.uleb128 0x33
 4052 0bf2 F0010000 		.4byte	0x1f0
 4053 0bf6 06       		.uleb128 0x6
 4054 0bf7 03       		.byte	0x3
 4055 0bf8 00000000 		.4byte	CySysTickServiceCallbacks
 4056 0bfc 9F       		.byte	0x9f
 4057 0bfd 3B       		.uleb128 0x3b
 4058 0bfe E4010000 		.4byte	0x1e4
 4059 0c02 0F       		.byte	0xf
 4060 0c03 39       		.uleb128 0x39
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 132


 4061 0c04 C8000000 		.4byte	.Ldebug_ranges0+0xc8
 4062 0c08 1E       		.uleb128 0x1e
 4063 0c09 FC010000 		.4byte	0x1fc
 4064 0c0d 10070000 		.4byte	.LLST54
 4065 0c11 34       		.uleb128 0x34
 4066 0c12 08020000 		.4byte	0x208
 4067 0c16 00000020 		.4byte	0x20000000
 4068 0c1a 00       		.byte	0
 4069 0c1b 00       		.byte	0
 4070 0c1c 38       		.uleb128 0x38
 4071 0c1d 94010000 		.4byte	0x194
 4072 0c21 16000000 		.4byte	.LBB163
 4073 0c25 E8000000 		.4byte	.Ldebug_ranges0+0xe8
 4074 0c29 01       		.byte	0x1
 4075 0c2a D809     		.2byte	0x9d8
 4076 0c2c 430C0000 		.4byte	0xc43
 4077 0c30 3B       		.uleb128 0x3b
 4078 0c31 A1010000 		.4byte	0x1a1
 4079 0c35 01       		.byte	0x1
 4080 0c36 39       		.uleb128 0x39
 4081 0c37 E8000000 		.4byte	.Ldebug_ranges0+0xe8
 4082 0c3b 3B       		.uleb128 0x3b
 4083 0c3c A1010000 		.4byte	0x1a1
 4084 0c40 01       		.byte	0x1
 4085 0c41 00       		.byte	0
 4086 0c42 00       		.byte	0
 4087 0c43 38       		.uleb128 0x38
 4088 0c44 3E020000 		.4byte	0x23e
 4089 0c48 2C000000 		.4byte	.LBB169
 4090 0c4c 00010000 		.4byte	.Ldebug_ranges0+0x100
 4091 0c50 01       		.byte	0x1
 4092 0c51 DD09     		.2byte	0x9dd
 4093 0c53 5E0C0000 		.4byte	0xc5e
 4094 0c57 3B       		.uleb128 0x3b
 4095 0c58 4B020000 		.4byte	0x24b
 4096 0c5c 0F       		.byte	0xf
 4097 0c5d 00       		.byte	0
 4098 0c5e 38       		.uleb128 0x38
 4099 0c5f 1B020000 		.4byte	0x21b
 4100 0c63 2E000000 		.4byte	.LBB173
 4101 0c67 20010000 		.4byte	.Ldebug_ranges0+0x120
 4102 0c6b 01       		.byte	0x1
 4103 0c6c DB09     		.2byte	0x9db
 4104 0c6e 7A0C0000 		.4byte	0xc7a
 4105 0c72 33       		.uleb128 0x33
 4106 0c73 28020000 		.4byte	0x228
 4107 0c77 01       		.uleb128 0x1
 4108 0c78 50       		.byte	0x50
 4109 0c79 00       		.byte	0
 4110 0c7a 16       		.uleb128 0x16
 4111 0c7b 35020000 		.4byte	0x235
 4112 0c7f 34000000 		.4byte	.LBB178
 4113 0c83 04000000 		.4byte	.LBE178-.LBB178
 4114 0c87 01       		.byte	0x1
 4115 0c88 DC09     		.2byte	0x9dc
 4116 0c8a 00       		.byte	0
 4117 0c8b 1B       		.uleb128 0x1b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 133


 4118 0c8c 58020000 		.4byte	0x258
 4119 0c90 00000000 		.4byte	.LFB35
 4120 0c94 18000000 		.4byte	.LFE35-.LFB35
 4121 0c98 01       		.uleb128 0x1
 4122 0c99 9C       		.byte	0x9c
 4123 0c9a AF0C0000 		.4byte	0xcaf
 4124 0c9e 2C       		.uleb128 0x2c
 4125 0c9f 8B010000 		.4byte	0x18b
 4126 0ca3 00000000 		.4byte	.LBB181
 4127 0ca7 38010000 		.4byte	.Ldebug_ranges0+0x138
 4128 0cab 01       		.byte	0x1
 4129 0cac ED09     		.2byte	0x9ed
 4130 0cae 00       		.byte	0
 4131 0caf 30       		.uleb128 0x30
 4132 0cb0 4A070000 		.4byte	.LASF85
 4133 0cb4 01       		.byte	0x1
 4134 0cb5 FC09     		.2byte	0x9fc
 4135 0cb7 00000000 		.4byte	.LFB36
 4136 0cbb 10000000 		.4byte	.LFE36-.LFB36
 4137 0cbf 01       		.uleb128 0x1
 4138 0cc0 9C       		.byte	0x9c
 4139 0cc1 26       		.uleb128 0x26
 4140 0cc2 8B010000 		.4byte	0x18b
 4141 0cc6 00000000 		.4byte	.LFB37
 4142 0cca 10000000 		.4byte	.LFE37-.LFB37
 4143 0cce 01       		.uleb128 0x1
 4144 0ccf 9C       		.byte	0x9c
 4145 0cd0 30       		.uleb128 0x30
 4146 0cd1 E0060000 		.4byte	.LASF86
 4147 0cd5 01       		.byte	0x1
 4148 0cd6 1C0A     		.2byte	0xa1c
 4149 0cd8 00000000 		.4byte	.LFB38
 4150 0cdc 10000000 		.4byte	.LFE38-.LFB38
 4151 0ce0 01       		.uleb128 0x1
 4152 0ce1 9C       		.byte	0x9c
 4153 0ce2 1B       		.uleb128 0x1b
 4154 0ce3 1B020000 		.4byte	0x21b
 4155 0ce7 00000000 		.4byte	.LFB39
 4156 0ceb 10000000 		.4byte	.LFE39-.LFB39
 4157 0cef 01       		.uleb128 0x1
 4158 0cf0 9C       		.byte	0x9c
 4159 0cf1 FF0C0000 		.4byte	0xcff
 4160 0cf5 21       		.uleb128 0x21
 4161 0cf6 28020000 		.4byte	0x228
 4162 0cfa 33070000 		.4byte	.LLST55
 4163 0cfe 00       		.byte	0
 4164 0cff 31       		.uleb128 0x31
 4165 0d00 AD010000 		.4byte	.LASF88
 4166 0d04 01       		.byte	0x1
 4167 0d05 3D0A     		.2byte	0xa3d
 4168 0d07 83000000 		.4byte	0x83
 4169 0d0b 00000000 		.4byte	.LFB40
 4170 0d0f 10000000 		.4byte	.LFE40-.LFB40
 4171 0d13 01       		.uleb128 0x1
 4172 0d14 9C       		.byte	0x9c
 4173 0d15 31       		.uleb128 0x31
 4174 0d16 E2040000 		.4byte	.LASF89
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 134


 4175 0d1a 01       		.byte	0x1
 4176 0d1b 4D0A     		.2byte	0xa4d
 4177 0d1d 83000000 		.4byte	0x83
 4178 0d21 00000000 		.4byte	.LFB41
 4179 0d25 10000000 		.4byte	.LFE41-.LFB41
 4180 0d29 01       		.uleb128 0x1
 4181 0d2a 9C       		.byte	0x9c
 4182 0d2b 1B       		.uleb128 0x1b
 4183 0d2c 94010000 		.4byte	0x194
 4184 0d30 00000000 		.4byte	.LFB42
 4185 0d34 20000000 		.4byte	.LFE42-.LFB42
 4186 0d38 01       		.uleb128 0x1
 4187 0d39 9C       		.byte	0x9c
 4188 0d3a 520D0000 		.4byte	0xd52
 4189 0d3e 33       		.uleb128 0x33
 4190 0d3f A1010000 		.4byte	0x1a1
 4191 0d43 01       		.uleb128 0x1
 4192 0d44 50       		.byte	0x50
 4193 0d45 39       		.uleb128 0x39
 4194 0d46 50010000 		.4byte	.Ldebug_ranges0+0x150
 4195 0d4a 3B       		.uleb128 0x3b
 4196 0d4b A1010000 		.4byte	0x1a1
 4197 0d4f 01       		.byte	0x1
 4198 0d50 00       		.byte	0
 4199 0d51 00       		.byte	0
 4200 0d52 26       		.uleb128 0x26
 4201 0d53 AE010000 		.4byte	0x1ae
 4202 0d57 00000000 		.4byte	.LFB43
 4203 0d5b 10000000 		.4byte	.LFE43-.LFB43
 4204 0d5f 01       		.uleb128 0x1
 4205 0d60 9C       		.byte	0x9c
 4206 0d61 26       		.uleb128 0x26
 4207 0d62 35020000 		.4byte	0x235
 4208 0d66 00000000 		.4byte	.LFB44
 4209 0d6a 0C000000 		.4byte	.LFE44-.LFB44
 4210 0d6e 01       		.uleb128 0x1
 4211 0d6f 9C       		.byte	0x9c
 4212 0d70 2A       		.uleb128 0x2a
 4213 0d71 9B060000 		.4byte	.LASF90
 4214 0d75 01       		.byte	0x1
 4215 0d76 BA0A     		.2byte	0xaba
 4216 0d78 E0000000 		.4byte	0xe0
 4217 0d7c 00000000 		.4byte	.LFB45
 4218 0d80 10000000 		.4byte	.LFE45-.LFB45
 4219 0d84 01       		.uleb128 0x1
 4220 0d85 9C       		.byte	0x9c
 4221 0d86 B70D0000 		.4byte	0xdb7
 4222 0d8a 28       		.uleb128 0x28
 4223 0d8b CA030000 		.4byte	.LASF37
 4224 0d8f 01       		.byte	0x1
 4225 0d90 BA0A     		.2byte	0xaba
 4226 0d92 83000000 		.4byte	0x83
 4227 0d96 54070000 		.4byte	.LLST56
 4228 0d9a 32       		.uleb128 0x32
 4229 0d9b C8040000 		.4byte	.LASF91
 4230 0d9f 01       		.byte	0x1
 4231 0da0 BA0A     		.2byte	0xaba
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 135


 4232 0da2 E0000000 		.4byte	0xe0
 4233 0da6 01       		.uleb128 0x1
 4234 0da7 51       		.byte	0x51
 4235 0da8 2B       		.uleb128 0x2b
 4236 0da9 E0000000 		.4byte	.LASF92
 4237 0dad 01       		.byte	0x1
 4238 0dae BC0A     		.2byte	0xabc
 4239 0db0 E0000000 		.4byte	0xe0
 4240 0db4 01       		.uleb128 0x1
 4241 0db5 50       		.byte	0x50
 4242 0db6 00       		.byte	0
 4243 0db7 2A       		.uleb128 0x2a
 4244 0db8 60030000 		.4byte	.LASF93
 4245 0dbc 01       		.byte	0x1
 4246 0dbd D20A     		.2byte	0xad2
 4247 0dbf E0000000 		.4byte	0xe0
 4248 0dc3 00000000 		.4byte	.LFB46
 4249 0dc7 0C000000 		.4byte	.LFE46-.LFB46
 4250 0dcb 01       		.uleb128 0x1
 4251 0dcc 9C       		.byte	0x9c
 4252 0dcd E20D0000 		.4byte	0xde2
 4253 0dd1 28       		.uleb128 0x28
 4254 0dd2 CA030000 		.4byte	.LASF37
 4255 0dd6 01       		.byte	0x1
 4256 0dd7 D20A     		.2byte	0xad2
 4257 0dd9 83000000 		.4byte	0x83
 4258 0ddd 75070000 		.4byte	.LLST57
 4259 0de1 00       		.byte	0
 4260 0de2 27       		.uleb128 0x27
 4261 0de3 BC020000 		.4byte	.LASF94
 4262 0de7 01       		.byte	0x1
 4263 0de8 FF0A     		.2byte	0xaff
 4264 0dea 00000000 		.4byte	.LFB48
 4265 0dee 70000000 		.4byte	.LFE48-.LFB48
 4266 0df2 01       		.uleb128 0x1
 4267 0df3 9C       		.byte	0x9c
 4268 0df4 070E0000 		.4byte	0xe07
 4269 0df8 32       		.uleb128 0x32
 4270 0df9 C3060000 		.4byte	.LASF95
 4271 0dfd 01       		.byte	0x1
 4272 0dfe FF0A     		.2byte	0xaff
 4273 0e00 070E0000 		.4byte	0xe07
 4274 0e04 01       		.uleb128 0x1
 4275 0e05 50       		.byte	0x50
 4276 0e06 00       		.byte	0
 4277 0e07 06       		.uleb128 0x6
 4278 0e08 04       		.byte	0x4
 4279 0e09 83000000 		.4byte	0x83
 4280 0e0d 27       		.uleb128 0x27
 4281 0e0e 90050000 		.4byte	.LASF96
 4282 0e12 01       		.byte	0x1
 4283 0e13 2B0B     		.2byte	0xb2b
 4284 0e15 00000000 		.4byte	.LFB49
 4285 0e19 20000000 		.4byte	.LFE49-.LFB49
 4286 0e1d 01       		.uleb128 0x1
 4287 0e1e 9C       		.byte	0x9c
 4288 0e1f 440E0000 		.4byte	0xe44
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 136


 4289 0e23 28       		.uleb128 0x28
 4290 0e24 5C040000 		.4byte	.LASF97
 4291 0e28 01       		.byte	0x1
 4292 0e29 2B0B     		.2byte	0xb2b
 4293 0e2b 83000000 		.4byte	0x83
 4294 0e2f 96070000 		.4byte	.LLST58
 4295 0e33 29       		.uleb128 0x29
 4296 0e34 9C030000 		.4byte	.LASF24
 4297 0e38 01       		.byte	0x1
 4298 0e39 2D0B     		.2byte	0xb2d
 4299 0e3b 83000000 		.4byte	0x83
 4300 0e3f B7070000 		.4byte	.LLST59
 4301 0e43 00       		.byte	0
 4302 0e44 27       		.uleb128 0x27
 4303 0e45 EF030000 		.4byte	.LASF98
 4304 0e49 01       		.byte	0x1
 4305 0e4a 460B     		.2byte	0xb46
 4306 0e4c 00000000 		.4byte	.LFB50
 4307 0e50 20000000 		.4byte	.LFE50-.LFB50
 4308 0e54 01       		.uleb128 0x1
 4309 0e55 9C       		.byte	0x9c
 4310 0e56 7B0E0000 		.4byte	0xe7b
 4311 0e5a 28       		.uleb128 0x28
 4312 0e5b 5C040000 		.4byte	.LASF97
 4313 0e5f 01       		.byte	0x1
 4314 0e60 460B     		.2byte	0xb46
 4315 0e62 83000000 		.4byte	0x83
 4316 0e66 D5070000 		.4byte	.LLST60
 4317 0e6a 29       		.uleb128 0x29
 4318 0e6b 9C030000 		.4byte	.LASF24
 4319 0e6f 01       		.byte	0x1
 4320 0e70 480B     		.2byte	0xb48
 4321 0e72 83000000 		.4byte	0x83
 4322 0e76 F6070000 		.4byte	.LLST61
 4323 0e7a 00       		.byte	0
 4324 0e7b 27       		.uleb128 0x27
 4325 0e7c 2C070000 		.4byte	.LASF99
 4326 0e80 01       		.byte	0x1
 4327 0e81 610B     		.2byte	0xb61
 4328 0e83 00000000 		.4byte	.LFB51
 4329 0e87 20000000 		.4byte	.LFE51-.LFB51
 4330 0e8b 01       		.uleb128 0x1
 4331 0e8c 9C       		.byte	0x9c
 4332 0e8d B20E0000 		.4byte	0xeb2
 4333 0e91 28       		.uleb128 0x28
 4334 0e92 5C040000 		.4byte	.LASF97
 4335 0e96 01       		.byte	0x1
 4336 0e97 610B     		.2byte	0xb61
 4337 0e99 83000000 		.4byte	0x83
 4338 0e9d 14080000 		.4byte	.LLST62
 4339 0ea1 29       		.uleb128 0x29
 4340 0ea2 9C030000 		.4byte	.LASF24
 4341 0ea6 01       		.byte	0x1
 4342 0ea7 630B     		.2byte	0xb63
 4343 0ea9 83000000 		.4byte	0x83
 4344 0ead 35080000 		.4byte	.LLST63
 4345 0eb1 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 137


 4346 0eb2 27       		.uleb128 0x27
 4347 0eb3 7D040000 		.4byte	.LASF100
 4348 0eb7 01       		.byte	0x1
 4349 0eb8 7E0B     		.2byte	0xb7e
 4350 0eba 00000000 		.4byte	.LFB52
 4351 0ebe 40000000 		.4byte	.LFE52-.LFB52
 4352 0ec2 01       		.uleb128 0x1
 4353 0ec3 9C       		.byte	0x9c
 4354 0ec4 130F0000 		.4byte	0xf13
 4355 0ec8 28       		.uleb128 0x28
 4356 0ec9 24010000 		.4byte	.LASF101
 4357 0ecd 01       		.byte	0x1
 4358 0ece 7E0B     		.2byte	0xb7e
 4359 0ed0 83000000 		.4byte	0x83
 4360 0ed4 53080000 		.4byte	.LLST64
 4361 0ed8 28       		.uleb128 0x28
 4362 0ed9 5C040000 		.4byte	.LASF97
 4363 0edd 01       		.byte	0x1
 4364 0ede 7E0B     		.2byte	0xb7e
 4365 0ee0 83000000 		.4byte	0x83
 4366 0ee4 BF080000 		.4byte	.LLST65
 4367 0ee8 29       		.uleb128 0x29
 4368 0ee9 9C030000 		.4byte	.LASF24
 4369 0eed 01       		.byte	0x1
 4370 0eee 800B     		.2byte	0xb80
 4371 0ef0 83000000 		.4byte	0x83
 4372 0ef4 04090000 		.4byte	.LLST66
 4373 0ef8 35       		.uleb128 0x35
 4374 0ef9 F4000000 		.4byte	0xf4
 4375 0efd 0C000000 		.4byte	.LBB191
 4376 0f01 02000000 		.4byte	.LBE191-.LBB191
 4377 0f05 01       		.byte	0x1
 4378 0f06 9A0B     		.2byte	0xb9a
 4379 0f08 21       		.uleb128 0x21
 4380 0f09 01010000 		.4byte	0x101
 4381 0f0d 22090000 		.4byte	.LLST67
 4382 0f11 00       		.byte	0
 4383 0f12 00       		.byte	0
 4384 0f13 2D       		.uleb128 0x2d
 4385 0f14 E0000000 		.4byte	0xe0
 4386 0f18 230F0000 		.4byte	0xf23
 4387 0f1c 2E       		.uleb128 0x2e
 4388 0f1d D9000000 		.4byte	0xd9
 4389 0f21 04       		.byte	0x4
 4390 0f22 00       		.byte	0
 4391 0f23 3C       		.uleb128 0x3c
 4392 0f24 B0060000 		.4byte	.LASF102
 4393 0f28 01       		.byte	0x1
 4394 0f29 22       		.byte	0x22
 4395 0f2a 130F0000 		.4byte	0xf13
 4396 0f2e 05       		.uleb128 0x5
 4397 0f2f 03       		.byte	0x3
 4398 0f30 00000000 		.4byte	CySysTickCallbacks
 4399 0f34 3D       		.uleb128 0x3d
 4400 0f35 F4040000 		.4byte	.LASF103
 4401 0f39 01       		.byte	0x1
 4402 0f3a 1B       		.byte	0x1b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 138


 4403 0f3b 83000000 		.4byte	0x83
 4404 0f3f 05       		.uleb128 0x5
 4405 0f40 03       		.byte	0x3
 4406 0f41 00000000 		.4byte	cydelayFreqHz
 4407 0f45 3D       		.uleb128 0x3d
 4408 0f46 04020000 		.4byte	.LASF104
 4409 0f4a 01       		.byte	0x1
 4410 0f4b 1C       		.byte	0x1c
 4411 0f4c 83000000 		.4byte	0x83
 4412 0f50 05       		.uleb128 0x5
 4413 0f51 03       		.byte	0x3
 4414 0f52 00000000 		.4byte	cydelayFreqKhz
 4415 0f56 3D       		.uleb128 0x3d
 4416 0f57 0A070000 		.4byte	.LASF105
 4417 0f5b 01       		.byte	0x1
 4418 0f5c 1D       		.byte	0x1d
 4419 0f5d 6B000000 		.4byte	0x6b
 4420 0f61 05       		.uleb128 0x5
 4421 0f62 03       		.byte	0x3
 4422 0f63 00000000 		.4byte	cydelayFreqMhz
 4423 0f67 3D       		.uleb128 0x3d
 4424 0f68 8F020000 		.4byte	.LASF106
 4425 0f6c 01       		.byte	0x1
 4426 0f6d 1E       		.byte	0x1e
 4427 0f6e 83000000 		.4byte	0x83
 4428 0f72 05       		.uleb128 0x5
 4429 0f73 03       		.byte	0x3
 4430 0f74 00000000 		.4byte	cydelay32kMs
 4431 0f78 3D       		.uleb128 0x3d
 4432 0f79 6C040000 		.4byte	.LASF107
 4433 0f7d 01       		.byte	0x1
 4434 0f7e 35       		.byte	0x35
 4435 0f7f 83000000 		.4byte	0x83
 4436 0f83 05       		.uleb128 0x5
 4437 0f84 03       		.byte	0x3
 4438 0f85 00000000 		.4byte	CySysTickInitVar
 4439 0f89 2D       		.uleb128 0x2d
 4440 0f8a 6B000000 		.4byte	0x6b
 4441 0f8e 990F0000 		.4byte	0xf99
 4442 0f92 2E       		.uleb128 0x2e
 4443 0f93 D9000000 		.4byte	0xd9
 4444 0f97 2D       		.byte	0x2d
 4445 0f98 00       		.byte	0
 4446 0f99 3D       		.uleb128 0x3d
 4447 0f9a D1040000 		.4byte	.LASF108
 4448 0f9e 01       		.byte	0x1
 4449 0f9f 3A       		.byte	0x3a
 4450 0fa0 AA0F0000 		.4byte	0xfaa
 4451 0fa4 05       		.uleb128 0x5
 4452 0fa5 03       		.byte	0x3
 4453 0fa6 00000000 		.4byte	cyImoFreqMhz2Reg
 4454 0faa 3E       		.uleb128 0x3e
 4455 0fab 890F0000 		.4byte	0xf89
 4456 0faf 2D       		.uleb128 0x2d
 4457 0fb0 6B000000 		.4byte	0x6b
 4458 0fb4 BF0F0000 		.4byte	0xfbf
 4459 0fb8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 139


 4460 0fb9 D9000000 		.4byte	0xd9
 4461 0fbd 16       		.byte	0x16
 4462 0fbe 00       		.byte	0
 4463 0fbf 3D       		.uleb128 0x3d
 4464 0fc0 4F060000 		.4byte	.LASF109
 4465 0fc4 01       		.byte	0x1
 4466 0fc5 4B       		.byte	0x4b
 4467 0fc6 D00F0000 		.4byte	0xfd0
 4468 0fca 05       		.uleb128 0x5
 4469 0fcb 03       		.byte	0x3
 4470 0fcc 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4471 0fd0 3E       		.uleb128 0x3e
 4472 0fd1 AF0F0000 		.4byte	0xfaf
 4473 0fd5 3F       		.uleb128 0x3f
 4474 0fd6 6C050000 		.4byte	.LASF110
 4475 0fda 03       		.byte	0x3
 4476 0fdb DA       		.byte	0xda
 4477 0fdc E60F0000 		.4byte	0xfe6
 4478 0fe0 40       		.uleb128 0x40
 4479 0fe1 83000000 		.4byte	0x83
 4480 0fe5 00       		.byte	0
 4481 0fe6 41       		.uleb128 0x41
 4482 0fe7 39030000 		.4byte	.LASF111
 4483 0feb 03       		.byte	0x3
 4484 0fec E3       		.byte	0xe3
 4485 0fed 6B000000 		.4byte	0x6b
 4486 0ff1 3F       		.uleb128 0x3f
 4487 0ff2 71070000 		.4byte	.LASF112
 4488 0ff6 04       		.byte	0x4
 4489 0ff7 52       		.byte	0x52
 4490 0ff8 02100000 		.4byte	0x1002
 4491 0ffc 40       		.uleb128 0x40
 4492 0ffd 83000000 		.4byte	0x83
 4493 1001 00       		.byte	0
 4494 1002 3F       		.uleb128 0x3f
 4495 1003 19050000 		.4byte	.LASF113
 4496 1007 03       		.byte	0x3
 4497 1008 E4       		.byte	0xe4
 4498 1009 13100000 		.4byte	0x1013
 4499 100d 40       		.uleb128 0x40
 4500 100e 6B000000 		.4byte	0x6b
 4501 1012 00       		.byte	0
 4502 1013 41       		.uleb128 0x41
 4503 1014 19070000 		.4byte	.LASF114
 4504 1018 05       		.byte	0x5
 4505 1019 54       		.byte	0x54
 4506 101a 83000000 		.4byte	0x83
 4507 101e 00       		.byte	0
 4508              		.section	.debug_abbrev,"",%progbits
 4509              	.Ldebug_abbrev0:
 4510 0000 01       		.uleb128 0x1
 4511 0001 11       		.uleb128 0x11
 4512 0002 01       		.byte	0x1
 4513 0003 25       		.uleb128 0x25
 4514 0004 0E       		.uleb128 0xe
 4515 0005 13       		.uleb128 0x13
 4516 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 140


 4517 0007 03       		.uleb128 0x3
 4518 0008 0E       		.uleb128 0xe
 4519 0009 1B       		.uleb128 0x1b
 4520 000a 0E       		.uleb128 0xe
 4521 000b 55       		.uleb128 0x55
 4522 000c 17       		.uleb128 0x17
 4523 000d 11       		.uleb128 0x11
 4524 000e 01       		.uleb128 0x1
 4525 000f 10       		.uleb128 0x10
 4526 0010 17       		.uleb128 0x17
 4527 0011 00       		.byte	0
 4528 0012 00       		.byte	0
 4529 0013 02       		.uleb128 0x2
 4530 0014 24       		.uleb128 0x24
 4531 0015 00       		.byte	0
 4532 0016 0B       		.uleb128 0xb
 4533 0017 0B       		.uleb128 0xb
 4534 0018 3E       		.uleb128 0x3e
 4535 0019 0B       		.uleb128 0xb
 4536 001a 03       		.uleb128 0x3
 4537 001b 0E       		.uleb128 0xe
 4538 001c 00       		.byte	0
 4539 001d 00       		.byte	0
 4540 001e 03       		.uleb128 0x3
 4541 001f 24       		.uleb128 0x24
 4542 0020 00       		.byte	0
 4543 0021 0B       		.uleb128 0xb
 4544 0022 0B       		.uleb128 0xb
 4545 0023 3E       		.uleb128 0x3e
 4546 0024 0B       		.uleb128 0xb
 4547 0025 03       		.uleb128 0x3
 4548 0026 08       		.uleb128 0x8
 4549 0027 00       		.byte	0
 4550 0028 00       		.byte	0
 4551 0029 04       		.uleb128 0x4
 4552 002a 16       		.uleb128 0x16
 4553 002b 00       		.byte	0
 4554 002c 03       		.uleb128 0x3
 4555 002d 0E       		.uleb128 0xe
 4556 002e 3A       		.uleb128 0x3a
 4557 002f 0B       		.uleb128 0xb
 4558 0030 3B       		.uleb128 0x3b
 4559 0031 05       		.uleb128 0x5
 4560 0032 49       		.uleb128 0x49
 4561 0033 13       		.uleb128 0x13
 4562 0034 00       		.byte	0
 4563 0035 00       		.byte	0
 4564 0036 05       		.uleb128 0x5
 4565 0037 35       		.uleb128 0x35
 4566 0038 00       		.byte	0
 4567 0039 49       		.uleb128 0x49
 4568 003a 13       		.uleb128 0x13
 4569 003b 00       		.byte	0
 4570 003c 00       		.byte	0
 4571 003d 06       		.uleb128 0x6
 4572 003e 0F       		.uleb128 0xf
 4573 003f 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 141


 4574 0040 0B       		.uleb128 0xb
 4575 0041 0B       		.uleb128 0xb
 4576 0042 49       		.uleb128 0x49
 4577 0043 13       		.uleb128 0x13
 4578 0044 00       		.byte	0
 4579 0045 00       		.byte	0
 4580 0046 07       		.uleb128 0x7
 4581 0047 15       		.uleb128 0x15
 4582 0048 00       		.byte	0
 4583 0049 27       		.uleb128 0x27
 4584 004a 19       		.uleb128 0x19
 4585 004b 00       		.byte	0
 4586 004c 00       		.byte	0
 4587 004d 08       		.uleb128 0x8
 4588 004e 16       		.uleb128 0x16
 4589 004f 00       		.byte	0
 4590 0050 03       		.uleb128 0x3
 4591 0051 0E       		.uleb128 0xe
 4592 0052 3A       		.uleb128 0x3a
 4593 0053 0B       		.uleb128 0xb
 4594 0054 3B       		.uleb128 0x3b
 4595 0055 0B       		.uleb128 0xb
 4596 0056 49       		.uleb128 0x49
 4597 0057 13       		.uleb128 0x13
 4598 0058 00       		.byte	0
 4599 0059 00       		.byte	0
 4600 005a 09       		.uleb128 0x9
 4601 005b 2E       		.uleb128 0x2e
 4602 005c 00       		.byte	0
 4603 005d 3F       		.uleb128 0x3f
 4604 005e 19       		.uleb128 0x19
 4605 005f 03       		.uleb128 0x3
 4606 0060 0E       		.uleb128 0xe
 4607 0061 3A       		.uleb128 0x3a
 4608 0062 0B       		.uleb128 0xb
 4609 0063 3B       		.uleb128 0x3b
 4610 0064 05       		.uleb128 0x5
 4611 0065 27       		.uleb128 0x27
 4612 0066 19       		.uleb128 0x19
 4613 0067 20       		.uleb128 0x20
 4614 0068 0B       		.uleb128 0xb
 4615 0069 00       		.byte	0
 4616 006a 00       		.byte	0
 4617 006b 0A       		.uleb128 0xa
 4618 006c 2E       		.uleb128 0x2e
 4619 006d 01       		.byte	0x1
 4620 006e 3F       		.uleb128 0x3f
 4621 006f 19       		.uleb128 0x19
 4622 0070 03       		.uleb128 0x3
 4623 0071 0E       		.uleb128 0xe
 4624 0072 3A       		.uleb128 0x3a
 4625 0073 0B       		.uleb128 0xb
 4626 0074 3B       		.uleb128 0x3b
 4627 0075 05       		.uleb128 0x5
 4628 0076 27       		.uleb128 0x27
 4629 0077 19       		.uleb128 0x19
 4630 0078 20       		.uleb128 0x20
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 142


 4631 0079 0B       		.uleb128 0xb
 4632 007a 01       		.uleb128 0x1
 4633 007b 13       		.uleb128 0x13
 4634 007c 00       		.byte	0
 4635 007d 00       		.byte	0
 4636 007e 0B       		.uleb128 0xb
 4637 007f 05       		.uleb128 0x5
 4638 0080 00       		.byte	0
 4639 0081 03       		.uleb128 0x3
 4640 0082 0E       		.uleb128 0xe
 4641 0083 3A       		.uleb128 0x3a
 4642 0084 0B       		.uleb128 0xb
 4643 0085 3B       		.uleb128 0x3b
 4644 0086 05       		.uleb128 0x5
 4645 0087 49       		.uleb128 0x49
 4646 0088 13       		.uleb128 0x13
 4647 0089 00       		.byte	0
 4648 008a 00       		.byte	0
 4649 008b 0C       		.uleb128 0xc
 4650 008c 2E       		.uleb128 0x2e
 4651 008d 01       		.byte	0x1
 4652 008e 3F       		.uleb128 0x3f
 4653 008f 19       		.uleb128 0x19
 4654 0090 03       		.uleb128 0x3
 4655 0091 0E       		.uleb128 0xe
 4656 0092 3A       		.uleb128 0x3a
 4657 0093 0B       		.uleb128 0xb
 4658 0094 3B       		.uleb128 0x3b
 4659 0095 0B       		.uleb128 0xb
 4660 0096 27       		.uleb128 0x27
 4661 0097 19       		.uleb128 0x19
 4662 0098 20       		.uleb128 0x20
 4663 0099 0B       		.uleb128 0xb
 4664 009a 01       		.uleb128 0x1
 4665 009b 13       		.uleb128 0x13
 4666 009c 00       		.byte	0
 4667 009d 00       		.byte	0
 4668 009e 0D       		.uleb128 0xd
 4669 009f 34       		.uleb128 0x34
 4670 00a0 00       		.byte	0
 4671 00a1 03       		.uleb128 0x3
 4672 00a2 08       		.uleb128 0x8
 4673 00a3 3A       		.uleb128 0x3a
 4674 00a4 0B       		.uleb128 0xb
 4675 00a5 3B       		.uleb128 0x3b
 4676 00a6 0B       		.uleb128 0xb
 4677 00a7 49       		.uleb128 0x49
 4678 00a8 13       		.uleb128 0x13
 4679 00a9 00       		.byte	0
 4680 00aa 00       		.byte	0
 4681 00ab 0E       		.uleb128 0xe
 4682 00ac 34       		.uleb128 0x34
 4683 00ad 00       		.byte	0
 4684 00ae 03       		.uleb128 0x3
 4685 00af 0E       		.uleb128 0xe
 4686 00b0 3A       		.uleb128 0x3a
 4687 00b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 143


 4688 00b2 3B       		.uleb128 0x3b
 4689 00b3 0B       		.uleb128 0xb
 4690 00b4 49       		.uleb128 0x49
 4691 00b5 13       		.uleb128 0x13
 4692 00b6 00       		.byte	0
 4693 00b7 00       		.byte	0
 4694 00b8 0F       		.uleb128 0xf
 4695 00b9 2E       		.uleb128 0x2e
 4696 00ba 00       		.byte	0
 4697 00bb 3F       		.uleb128 0x3f
 4698 00bc 19       		.uleb128 0x19
 4699 00bd 03       		.uleb128 0x3
 4700 00be 0E       		.uleb128 0xe
 4701 00bf 3A       		.uleb128 0x3a
 4702 00c0 0B       		.uleb128 0xb
 4703 00c1 3B       		.uleb128 0x3b
 4704 00c2 05       		.uleb128 0x5
 4705 00c3 27       		.uleb128 0x27
 4706 00c4 19       		.uleb128 0x19
 4707 00c5 49       		.uleb128 0x49
 4708 00c6 13       		.uleb128 0x13
 4709 00c7 20       		.uleb128 0x20
 4710 00c8 0B       		.uleb128 0xb
 4711 00c9 00       		.byte	0
 4712 00ca 00       		.byte	0
 4713 00cb 10       		.uleb128 0x10
 4714 00cc 2E       		.uleb128 0x2e
 4715 00cd 01       		.byte	0x1
 4716 00ce 03       		.uleb128 0x3
 4717 00cf 0E       		.uleb128 0xe
 4718 00d0 3A       		.uleb128 0x3a
 4719 00d1 0B       		.uleb128 0xb
 4720 00d2 3B       		.uleb128 0x3b
 4721 00d3 05       		.uleb128 0x5
 4722 00d4 27       		.uleb128 0x27
 4723 00d5 19       		.uleb128 0x19
 4724 00d6 20       		.uleb128 0x20
 4725 00d7 0B       		.uleb128 0xb
 4726 00d8 01       		.uleb128 0x1
 4727 00d9 13       		.uleb128 0x13
 4728 00da 00       		.byte	0
 4729 00db 00       		.byte	0
 4730 00dc 11       		.uleb128 0x11
 4731 00dd 34       		.uleb128 0x34
 4732 00de 00       		.byte	0
 4733 00df 03       		.uleb128 0x3
 4734 00e0 08       		.uleb128 0x8
 4735 00e1 3A       		.uleb128 0x3a
 4736 00e2 0B       		.uleb128 0xb
 4737 00e3 3B       		.uleb128 0x3b
 4738 00e4 05       		.uleb128 0x5
 4739 00e5 49       		.uleb128 0x49
 4740 00e6 13       		.uleb128 0x13
 4741 00e7 00       		.byte	0
 4742 00e8 00       		.byte	0
 4743 00e9 12       		.uleb128 0x12
 4744 00ea 2E       		.uleb128 0x2e
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 144


 4745 00eb 01       		.byte	0x1
 4746 00ec 3F       		.uleb128 0x3f
 4747 00ed 19       		.uleb128 0x19
 4748 00ee 03       		.uleb128 0x3
 4749 00ef 0E       		.uleb128 0xe
 4750 00f0 3A       		.uleb128 0x3a
 4751 00f1 0B       		.uleb128 0xb
 4752 00f2 3B       		.uleb128 0x3b
 4753 00f3 05       		.uleb128 0x5
 4754 00f4 27       		.uleb128 0x27
 4755 00f5 19       		.uleb128 0x19
 4756 00f6 49       		.uleb128 0x49
 4757 00f7 13       		.uleb128 0x13
 4758 00f8 20       		.uleb128 0x20
 4759 00f9 0B       		.uleb128 0xb
 4760 00fa 01       		.uleb128 0x1
 4761 00fb 13       		.uleb128 0x13
 4762 00fc 00       		.byte	0
 4763 00fd 00       		.byte	0
 4764 00fe 13       		.uleb128 0x13
 4765 00ff 34       		.uleb128 0x34
 4766 0100 00       		.byte	0
 4767 0101 03       		.uleb128 0x3
 4768 0102 0E       		.uleb128 0xe
 4769 0103 3A       		.uleb128 0x3a
 4770 0104 0B       		.uleb128 0xb
 4771 0105 3B       		.uleb128 0x3b
 4772 0106 05       		.uleb128 0x5
 4773 0107 49       		.uleb128 0x49
 4774 0108 13       		.uleb128 0x13
 4775 0109 00       		.byte	0
 4776 010a 00       		.byte	0
 4777 010b 14       		.uleb128 0x14
 4778 010c 2E       		.uleb128 0x2e
 4779 010d 01       		.byte	0x1
 4780 010e 31       		.uleb128 0x31
 4781 010f 13       		.uleb128 0x13
 4782 0110 11       		.uleb128 0x11
 4783 0111 01       		.uleb128 0x1
 4784 0112 12       		.uleb128 0x12
 4785 0113 06       		.uleb128 0x6
 4786 0114 40       		.uleb128 0x40
 4787 0115 18       		.uleb128 0x18
 4788 0116 9642     		.uleb128 0x2116
 4789 0118 19       		.uleb128 0x19
 4790 0119 01       		.uleb128 0x1
 4791 011a 13       		.uleb128 0x13
 4792 011b 00       		.byte	0
 4793 011c 00       		.byte	0
 4794 011d 15       		.uleb128 0x15
 4795 011e 34       		.uleb128 0x34
 4796 011f 00       		.byte	0
 4797 0120 31       		.uleb128 0x31
 4798 0121 13       		.uleb128 0x13
 4799 0122 00       		.byte	0
 4800 0123 00       		.byte	0
 4801 0124 16       		.uleb128 0x16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 145


 4802 0125 1D       		.uleb128 0x1d
 4803 0126 00       		.byte	0
 4804 0127 31       		.uleb128 0x31
 4805 0128 13       		.uleb128 0x13
 4806 0129 11       		.uleb128 0x11
 4807 012a 01       		.uleb128 0x1
 4808 012b 12       		.uleb128 0x12
 4809 012c 06       		.uleb128 0x6
 4810 012d 58       		.uleb128 0x58
 4811 012e 0B       		.uleb128 0xb
 4812 012f 59       		.uleb128 0x59
 4813 0130 05       		.uleb128 0x5
 4814 0131 00       		.byte	0
 4815 0132 00       		.byte	0
 4816 0133 17       		.uleb128 0x17
 4817 0134 0B       		.uleb128 0xb
 4818 0135 01       		.byte	0x1
 4819 0136 11       		.uleb128 0x11
 4820 0137 01       		.uleb128 0x1
 4821 0138 12       		.uleb128 0x12
 4822 0139 06       		.uleb128 0x6
 4823 013a 00       		.byte	0
 4824 013b 00       		.byte	0
 4825 013c 18       		.uleb128 0x18
 4826 013d 2E       		.uleb128 0x2e
 4827 013e 00       		.byte	0
 4828 013f 3F       		.uleb128 0x3f
 4829 0140 19       		.uleb128 0x19
 4830 0141 03       		.uleb128 0x3
 4831 0142 0E       		.uleb128 0xe
 4832 0143 3A       		.uleb128 0x3a
 4833 0144 0B       		.uleb128 0xb
 4834 0145 3B       		.uleb128 0x3b
 4835 0146 0B       		.uleb128 0xb
 4836 0147 27       		.uleb128 0x27
 4837 0148 19       		.uleb128 0x19
 4838 0149 11       		.uleb128 0x11
 4839 014a 01       		.uleb128 0x1
 4840 014b 12       		.uleb128 0x12
 4841 014c 06       		.uleb128 0x6
 4842 014d 40       		.uleb128 0x40
 4843 014e 18       		.uleb128 0x18
 4844 014f 9742     		.uleb128 0x2117
 4845 0151 19       		.uleb128 0x19
 4846 0152 00       		.byte	0
 4847 0153 00       		.byte	0
 4848 0154 19       		.uleb128 0x19
 4849 0155 2E       		.uleb128 0x2e
 4850 0156 01       		.byte	0x1
 4851 0157 3F       		.uleb128 0x3f
 4852 0158 19       		.uleb128 0x19
 4853 0159 03       		.uleb128 0x3
 4854 015a 0E       		.uleb128 0xe
 4855 015b 3A       		.uleb128 0x3a
 4856 015c 0B       		.uleb128 0xb
 4857 015d 3B       		.uleb128 0x3b
 4858 015e 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 146


 4859 015f 27       		.uleb128 0x27
 4860 0160 19       		.uleb128 0x19
 4861 0161 11       		.uleb128 0x11
 4862 0162 01       		.uleb128 0x1
 4863 0163 12       		.uleb128 0x12
 4864 0164 06       		.uleb128 0x6
 4865 0165 40       		.uleb128 0x40
 4866 0166 18       		.uleb128 0x18
 4867 0167 9742     		.uleb128 0x2117
 4868 0169 19       		.uleb128 0x19
 4869 016a 01       		.uleb128 0x1
 4870 016b 13       		.uleb128 0x13
 4871 016c 00       		.byte	0
 4872 016d 00       		.byte	0
 4873 016e 1A       		.uleb128 0x1a
 4874 016f 1D       		.uleb128 0x1d
 4875 0170 00       		.byte	0
 4876 0171 31       		.uleb128 0x31
 4877 0172 13       		.uleb128 0x13
 4878 0173 52       		.uleb128 0x52
 4879 0174 01       		.uleb128 0x1
 4880 0175 55       		.uleb128 0x55
 4881 0176 17       		.uleb128 0x17
 4882 0177 58       		.uleb128 0x58
 4883 0178 0B       		.uleb128 0xb
 4884 0179 59       		.uleb128 0x59
 4885 017a 0B       		.uleb128 0xb
 4886 017b 00       		.byte	0
 4887 017c 00       		.byte	0
 4888 017d 1B       		.uleb128 0x1b
 4889 017e 2E       		.uleb128 0x2e
 4890 017f 01       		.byte	0x1
 4891 0180 31       		.uleb128 0x31
 4892 0181 13       		.uleb128 0x13
 4893 0182 11       		.uleb128 0x11
 4894 0183 01       		.uleb128 0x1
 4895 0184 12       		.uleb128 0x12
 4896 0185 06       		.uleb128 0x6
 4897 0186 40       		.uleb128 0x40
 4898 0187 18       		.uleb128 0x18
 4899 0188 9742     		.uleb128 0x2117
 4900 018a 19       		.uleb128 0x19
 4901 018b 01       		.uleb128 0x1
 4902 018c 13       		.uleb128 0x13
 4903 018d 00       		.byte	0
 4904 018e 00       		.byte	0
 4905 018f 1C       		.uleb128 0x1c
 4906 0190 34       		.uleb128 0x34
 4907 0191 00       		.byte	0
 4908 0192 31       		.uleb128 0x31
 4909 0193 13       		.uleb128 0x13
 4910 0194 1C       		.uleb128 0x1c
 4911 0195 0B       		.uleb128 0xb
 4912 0196 00       		.byte	0
 4913 0197 00       		.byte	0
 4914 0198 1D       		.uleb128 0x1d
 4915 0199 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 147


 4916 019a 01       		.byte	0x1
 4917 019b 11       		.uleb128 0x11
 4918 019c 01       		.uleb128 0x1
 4919 019d 12       		.uleb128 0x12
 4920 019e 06       		.uleb128 0x6
 4921 019f 01       		.uleb128 0x1
 4922 01a0 13       		.uleb128 0x13
 4923 01a1 00       		.byte	0
 4924 01a2 00       		.byte	0
 4925 01a3 1E       		.uleb128 0x1e
 4926 01a4 34       		.uleb128 0x34
 4927 01a5 00       		.byte	0
 4928 01a6 31       		.uleb128 0x31
 4929 01a7 13       		.uleb128 0x13
 4930 01a8 02       		.uleb128 0x2
 4931 01a9 17       		.uleb128 0x17
 4932 01aa 00       		.byte	0
 4933 01ab 00       		.byte	0
 4934 01ac 1F       		.uleb128 0x1f
 4935 01ad 34       		.uleb128 0x34
 4936 01ae 00       		.byte	0
 4937 01af 31       		.uleb128 0x31
 4938 01b0 13       		.uleb128 0x13
 4939 01b1 02       		.uleb128 0x2
 4940 01b2 18       		.uleb128 0x18
 4941 01b3 00       		.byte	0
 4942 01b4 00       		.byte	0
 4943 01b5 20       		.uleb128 0x20
 4944 01b6 1D       		.uleb128 0x1d
 4945 01b7 01       		.byte	0x1
 4946 01b8 31       		.uleb128 0x31
 4947 01b9 13       		.uleb128 0x13
 4948 01ba 11       		.uleb128 0x11
 4949 01bb 01       		.uleb128 0x1
 4950 01bc 12       		.uleb128 0x12
 4951 01bd 06       		.uleb128 0x6
 4952 01be 58       		.uleb128 0x58
 4953 01bf 0B       		.uleb128 0xb
 4954 01c0 59       		.uleb128 0x59
 4955 01c1 05       		.uleb128 0x5
 4956 01c2 01       		.uleb128 0x1
 4957 01c3 13       		.uleb128 0x13
 4958 01c4 00       		.byte	0
 4959 01c5 00       		.byte	0
 4960 01c6 21       		.uleb128 0x21
 4961 01c7 05       		.uleb128 0x5
 4962 01c8 00       		.byte	0
 4963 01c9 31       		.uleb128 0x31
 4964 01ca 13       		.uleb128 0x13
 4965 01cb 02       		.uleb128 0x2
 4966 01cc 17       		.uleb128 0x17
 4967 01cd 00       		.byte	0
 4968 01ce 00       		.byte	0
 4969 01cf 22       		.uleb128 0x22
 4970 01d0 898201   		.uleb128 0x4109
 4971 01d3 00       		.byte	0
 4972 01d4 11       		.uleb128 0x11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 148


 4973 01d5 01       		.uleb128 0x1
 4974 01d6 31       		.uleb128 0x31
 4975 01d7 13       		.uleb128 0x13
 4976 01d8 00       		.byte	0
 4977 01d9 00       		.byte	0
 4978 01da 23       		.uleb128 0x23
 4979 01db 898201   		.uleb128 0x4109
 4980 01de 01       		.byte	0x1
 4981 01df 11       		.uleb128 0x11
 4982 01e0 01       		.uleb128 0x1
 4983 01e1 31       		.uleb128 0x31
 4984 01e2 13       		.uleb128 0x13
 4985 01e3 01       		.uleb128 0x1
 4986 01e4 13       		.uleb128 0x13
 4987 01e5 00       		.byte	0
 4988 01e6 00       		.byte	0
 4989 01e7 24       		.uleb128 0x24
 4990 01e8 8A8201   		.uleb128 0x410a
 4991 01eb 00       		.byte	0
 4992 01ec 02       		.uleb128 0x2
 4993 01ed 18       		.uleb128 0x18
 4994 01ee 9142     		.uleb128 0x2111
 4995 01f0 18       		.uleb128 0x18
 4996 01f1 00       		.byte	0
 4997 01f2 00       		.byte	0
 4998 01f3 25       		.uleb128 0x25
 4999 01f4 898201   		.uleb128 0x4109
 5000 01f7 01       		.byte	0x1
 5001 01f8 11       		.uleb128 0x11
 5002 01f9 01       		.uleb128 0x1
 5003 01fa 31       		.uleb128 0x31
 5004 01fb 13       		.uleb128 0x13
 5005 01fc 00       		.byte	0
 5006 01fd 00       		.byte	0
 5007 01fe 26       		.uleb128 0x26
 5008 01ff 2E       		.uleb128 0x2e
 5009 0200 00       		.byte	0
 5010 0201 31       		.uleb128 0x31
 5011 0202 13       		.uleb128 0x13
 5012 0203 11       		.uleb128 0x11
 5013 0204 01       		.uleb128 0x1
 5014 0205 12       		.uleb128 0x12
 5015 0206 06       		.uleb128 0x6
 5016 0207 40       		.uleb128 0x40
 5017 0208 18       		.uleb128 0x18
 5018 0209 9742     		.uleb128 0x2117
 5019 020b 19       		.uleb128 0x19
 5020 020c 00       		.byte	0
 5021 020d 00       		.byte	0
 5022 020e 27       		.uleb128 0x27
 5023 020f 2E       		.uleb128 0x2e
 5024 0210 01       		.byte	0x1
 5025 0211 3F       		.uleb128 0x3f
 5026 0212 19       		.uleb128 0x19
 5027 0213 03       		.uleb128 0x3
 5028 0214 0E       		.uleb128 0xe
 5029 0215 3A       		.uleb128 0x3a
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 149


 5030 0216 0B       		.uleb128 0xb
 5031 0217 3B       		.uleb128 0x3b
 5032 0218 05       		.uleb128 0x5
 5033 0219 27       		.uleb128 0x27
 5034 021a 19       		.uleb128 0x19
 5035 021b 11       		.uleb128 0x11
 5036 021c 01       		.uleb128 0x1
 5037 021d 12       		.uleb128 0x12
 5038 021e 06       		.uleb128 0x6
 5039 021f 40       		.uleb128 0x40
 5040 0220 18       		.uleb128 0x18
 5041 0221 9742     		.uleb128 0x2117
 5042 0223 19       		.uleb128 0x19
 5043 0224 01       		.uleb128 0x1
 5044 0225 13       		.uleb128 0x13
 5045 0226 00       		.byte	0
 5046 0227 00       		.byte	0
 5047 0228 28       		.uleb128 0x28
 5048 0229 05       		.uleb128 0x5
 5049 022a 00       		.byte	0
 5050 022b 03       		.uleb128 0x3
 5051 022c 0E       		.uleb128 0xe
 5052 022d 3A       		.uleb128 0x3a
 5053 022e 0B       		.uleb128 0xb
 5054 022f 3B       		.uleb128 0x3b
 5055 0230 05       		.uleb128 0x5
 5056 0231 49       		.uleb128 0x49
 5057 0232 13       		.uleb128 0x13
 5058 0233 02       		.uleb128 0x2
 5059 0234 17       		.uleb128 0x17
 5060 0235 00       		.byte	0
 5061 0236 00       		.byte	0
 5062 0237 29       		.uleb128 0x29
 5063 0238 34       		.uleb128 0x34
 5064 0239 00       		.byte	0
 5065 023a 03       		.uleb128 0x3
 5066 023b 0E       		.uleb128 0xe
 5067 023c 3A       		.uleb128 0x3a
 5068 023d 0B       		.uleb128 0xb
 5069 023e 3B       		.uleb128 0x3b
 5070 023f 05       		.uleb128 0x5
 5071 0240 49       		.uleb128 0x49
 5072 0241 13       		.uleb128 0x13
 5073 0242 02       		.uleb128 0x2
 5074 0243 17       		.uleb128 0x17
 5075 0244 00       		.byte	0
 5076 0245 00       		.byte	0
 5077 0246 2A       		.uleb128 0x2a
 5078 0247 2E       		.uleb128 0x2e
 5079 0248 01       		.byte	0x1
 5080 0249 3F       		.uleb128 0x3f
 5081 024a 19       		.uleb128 0x19
 5082 024b 03       		.uleb128 0x3
 5083 024c 0E       		.uleb128 0xe
 5084 024d 3A       		.uleb128 0x3a
 5085 024e 0B       		.uleb128 0xb
 5086 024f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 150


 5087 0250 05       		.uleb128 0x5
 5088 0251 27       		.uleb128 0x27
 5089 0252 19       		.uleb128 0x19
 5090 0253 49       		.uleb128 0x49
 5091 0254 13       		.uleb128 0x13
 5092 0255 11       		.uleb128 0x11
 5093 0256 01       		.uleb128 0x1
 5094 0257 12       		.uleb128 0x12
 5095 0258 06       		.uleb128 0x6
 5096 0259 40       		.uleb128 0x40
 5097 025a 18       		.uleb128 0x18
 5098 025b 9742     		.uleb128 0x2117
 5099 025d 19       		.uleb128 0x19
 5100 025e 01       		.uleb128 0x1
 5101 025f 13       		.uleb128 0x13
 5102 0260 00       		.byte	0
 5103 0261 00       		.byte	0
 5104 0262 2B       		.uleb128 0x2b
 5105 0263 34       		.uleb128 0x34
 5106 0264 00       		.byte	0
 5107 0265 03       		.uleb128 0x3
 5108 0266 0E       		.uleb128 0xe
 5109 0267 3A       		.uleb128 0x3a
 5110 0268 0B       		.uleb128 0xb
 5111 0269 3B       		.uleb128 0x3b
 5112 026a 05       		.uleb128 0x5
 5113 026b 49       		.uleb128 0x49
 5114 026c 13       		.uleb128 0x13
 5115 026d 02       		.uleb128 0x2
 5116 026e 18       		.uleb128 0x18
 5117 026f 00       		.byte	0
 5118 0270 00       		.byte	0
 5119 0271 2C       		.uleb128 0x2c
 5120 0272 1D       		.uleb128 0x1d
 5121 0273 00       		.byte	0
 5122 0274 31       		.uleb128 0x31
 5123 0275 13       		.uleb128 0x13
 5124 0276 52       		.uleb128 0x52
 5125 0277 01       		.uleb128 0x1
 5126 0278 55       		.uleb128 0x55
 5127 0279 17       		.uleb128 0x17
 5128 027a 58       		.uleb128 0x58
 5129 027b 0B       		.uleb128 0xb
 5130 027c 59       		.uleb128 0x59
 5131 027d 05       		.uleb128 0x5
 5132 027e 00       		.byte	0
 5133 027f 00       		.byte	0
 5134 0280 2D       		.uleb128 0x2d
 5135 0281 01       		.uleb128 0x1
 5136 0282 01       		.byte	0x1
 5137 0283 49       		.uleb128 0x49
 5138 0284 13       		.uleb128 0x13
 5139 0285 01       		.uleb128 0x1
 5140 0286 13       		.uleb128 0x13
 5141 0287 00       		.byte	0
 5142 0288 00       		.byte	0
 5143 0289 2E       		.uleb128 0x2e
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 151


 5144 028a 21       		.uleb128 0x21
 5145 028b 00       		.byte	0
 5146 028c 49       		.uleb128 0x49
 5147 028d 13       		.uleb128 0x13
 5148 028e 2F       		.uleb128 0x2f
 5149 028f 0B       		.uleb128 0xb
 5150 0290 00       		.byte	0
 5151 0291 00       		.byte	0
 5152 0292 2F       		.uleb128 0x2f
 5153 0293 05       		.uleb128 0x5
 5154 0294 00       		.byte	0
 5155 0295 31       		.uleb128 0x31
 5156 0296 13       		.uleb128 0x13
 5157 0297 1C       		.uleb128 0x1c
 5158 0298 05       		.uleb128 0x5
 5159 0299 00       		.byte	0
 5160 029a 00       		.byte	0
 5161 029b 30       		.uleb128 0x30
 5162 029c 2E       		.uleb128 0x2e
 5163 029d 00       		.byte	0
 5164 029e 3F       		.uleb128 0x3f
 5165 029f 19       		.uleb128 0x19
 5166 02a0 03       		.uleb128 0x3
 5167 02a1 0E       		.uleb128 0xe
 5168 02a2 3A       		.uleb128 0x3a
 5169 02a3 0B       		.uleb128 0xb
 5170 02a4 3B       		.uleb128 0x3b
 5171 02a5 05       		.uleb128 0x5
 5172 02a6 27       		.uleb128 0x27
 5173 02a7 19       		.uleb128 0x19
 5174 02a8 11       		.uleb128 0x11
 5175 02a9 01       		.uleb128 0x1
 5176 02aa 12       		.uleb128 0x12
 5177 02ab 06       		.uleb128 0x6
 5178 02ac 40       		.uleb128 0x40
 5179 02ad 18       		.uleb128 0x18
 5180 02ae 9742     		.uleb128 0x2117
 5181 02b0 19       		.uleb128 0x19
 5182 02b1 00       		.byte	0
 5183 02b2 00       		.byte	0
 5184 02b3 31       		.uleb128 0x31
 5185 02b4 2E       		.uleb128 0x2e
 5186 02b5 00       		.byte	0
 5187 02b6 3F       		.uleb128 0x3f
 5188 02b7 19       		.uleb128 0x19
 5189 02b8 03       		.uleb128 0x3
 5190 02b9 0E       		.uleb128 0xe
 5191 02ba 3A       		.uleb128 0x3a
 5192 02bb 0B       		.uleb128 0xb
 5193 02bc 3B       		.uleb128 0x3b
 5194 02bd 05       		.uleb128 0x5
 5195 02be 27       		.uleb128 0x27
 5196 02bf 19       		.uleb128 0x19
 5197 02c0 49       		.uleb128 0x49
 5198 02c1 13       		.uleb128 0x13
 5199 02c2 11       		.uleb128 0x11
 5200 02c3 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 152


 5201 02c4 12       		.uleb128 0x12
 5202 02c5 06       		.uleb128 0x6
 5203 02c6 40       		.uleb128 0x40
 5204 02c7 18       		.uleb128 0x18
 5205 02c8 9742     		.uleb128 0x2117
 5206 02ca 19       		.uleb128 0x19
 5207 02cb 00       		.byte	0
 5208 02cc 00       		.byte	0
 5209 02cd 32       		.uleb128 0x32
 5210 02ce 05       		.uleb128 0x5
 5211 02cf 00       		.byte	0
 5212 02d0 03       		.uleb128 0x3
 5213 02d1 0E       		.uleb128 0xe
 5214 02d2 3A       		.uleb128 0x3a
 5215 02d3 0B       		.uleb128 0xb
 5216 02d4 3B       		.uleb128 0x3b
 5217 02d5 05       		.uleb128 0x5
 5218 02d6 49       		.uleb128 0x49
 5219 02d7 13       		.uleb128 0x13
 5220 02d8 02       		.uleb128 0x2
 5221 02d9 18       		.uleb128 0x18
 5222 02da 00       		.byte	0
 5223 02db 00       		.byte	0
 5224 02dc 33       		.uleb128 0x33
 5225 02dd 05       		.uleb128 0x5
 5226 02de 00       		.byte	0
 5227 02df 31       		.uleb128 0x31
 5228 02e0 13       		.uleb128 0x13
 5229 02e1 02       		.uleb128 0x2
 5230 02e2 18       		.uleb128 0x18
 5231 02e3 00       		.byte	0
 5232 02e4 00       		.byte	0
 5233 02e5 34       		.uleb128 0x34
 5234 02e6 34       		.uleb128 0x34
 5235 02e7 00       		.byte	0
 5236 02e8 31       		.uleb128 0x31
 5237 02e9 13       		.uleb128 0x13
 5238 02ea 1C       		.uleb128 0x1c
 5239 02eb 06       		.uleb128 0x6
 5240 02ec 00       		.byte	0
 5241 02ed 00       		.byte	0
 5242 02ee 35       		.uleb128 0x35
 5243 02ef 1D       		.uleb128 0x1d
 5244 02f0 01       		.byte	0x1
 5245 02f1 31       		.uleb128 0x31
 5246 02f2 13       		.uleb128 0x13
 5247 02f3 11       		.uleb128 0x11
 5248 02f4 01       		.uleb128 0x1
 5249 02f5 12       		.uleb128 0x12
 5250 02f6 06       		.uleb128 0x6
 5251 02f7 58       		.uleb128 0x58
 5252 02f8 0B       		.uleb128 0xb
 5253 02f9 59       		.uleb128 0x59
 5254 02fa 05       		.uleb128 0x5
 5255 02fb 00       		.byte	0
 5256 02fc 00       		.byte	0
 5257 02fd 36       		.uleb128 0x36
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 153


 5258 02fe 34       		.uleb128 0x34
 5259 02ff 00       		.byte	0
 5260 0300 03       		.uleb128 0x3
 5261 0301 0E       		.uleb128 0xe
 5262 0302 3A       		.uleb128 0x3a
 5263 0303 0B       		.uleb128 0xb
 5264 0304 3B       		.uleb128 0x3b
 5265 0305 05       		.uleb128 0x5
 5266 0306 49       		.uleb128 0x49
 5267 0307 13       		.uleb128 0x13
 5268 0308 1C       		.uleb128 0x1c
 5269 0309 06       		.uleb128 0x6
 5270 030a 00       		.byte	0
 5271 030b 00       		.byte	0
 5272 030c 37       		.uleb128 0x37
 5273 030d 2E       		.uleb128 0x2e
 5274 030e 01       		.byte	0x1
 5275 030f 3F       		.uleb128 0x3f
 5276 0310 19       		.uleb128 0x19
 5277 0311 03       		.uleb128 0x3
 5278 0312 0E       		.uleb128 0xe
 5279 0313 3A       		.uleb128 0x3a
 5280 0314 0B       		.uleb128 0xb
 5281 0315 3B       		.uleb128 0x3b
 5282 0316 05       		.uleb128 0x5
 5283 0317 27       		.uleb128 0x27
 5284 0318 19       		.uleb128 0x19
 5285 0319 11       		.uleb128 0x11
 5286 031a 01       		.uleb128 0x1
 5287 031b 12       		.uleb128 0x12
 5288 031c 06       		.uleb128 0x6
 5289 031d 40       		.uleb128 0x40
 5290 031e 18       		.uleb128 0x18
 5291 031f 9642     		.uleb128 0x2116
 5292 0321 19       		.uleb128 0x19
 5293 0322 01       		.uleb128 0x1
 5294 0323 13       		.uleb128 0x13
 5295 0324 00       		.byte	0
 5296 0325 00       		.byte	0
 5297 0326 38       		.uleb128 0x38
 5298 0327 1D       		.uleb128 0x1d
 5299 0328 01       		.byte	0x1
 5300 0329 31       		.uleb128 0x31
 5301 032a 13       		.uleb128 0x13
 5302 032b 52       		.uleb128 0x52
 5303 032c 01       		.uleb128 0x1
 5304 032d 55       		.uleb128 0x55
 5305 032e 17       		.uleb128 0x17
 5306 032f 58       		.uleb128 0x58
 5307 0330 0B       		.uleb128 0xb
 5308 0331 59       		.uleb128 0x59
 5309 0332 05       		.uleb128 0x5
 5310 0333 01       		.uleb128 0x1
 5311 0334 13       		.uleb128 0x13
 5312 0335 00       		.byte	0
 5313 0336 00       		.byte	0
 5314 0337 39       		.uleb128 0x39
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 154


 5315 0338 0B       		.uleb128 0xb
 5316 0339 01       		.byte	0x1
 5317 033a 55       		.uleb128 0x55
 5318 033b 17       		.uleb128 0x17
 5319 033c 00       		.byte	0
 5320 033d 00       		.byte	0
 5321 033e 3A       		.uleb128 0x3a
 5322 033f 1D       		.uleb128 0x1d
 5323 0340 01       		.byte	0x1
 5324 0341 31       		.uleb128 0x31
 5325 0342 13       		.uleb128 0x13
 5326 0343 52       		.uleb128 0x52
 5327 0344 01       		.uleb128 0x1
 5328 0345 55       		.uleb128 0x55
 5329 0346 17       		.uleb128 0x17
 5330 0347 58       		.uleb128 0x58
 5331 0348 0B       		.uleb128 0xb
 5332 0349 59       		.uleb128 0x59
 5333 034a 05       		.uleb128 0x5
 5334 034b 00       		.byte	0
 5335 034c 00       		.byte	0
 5336 034d 3B       		.uleb128 0x3b
 5337 034e 05       		.uleb128 0x5
 5338 034f 00       		.byte	0
 5339 0350 31       		.uleb128 0x31
 5340 0351 13       		.uleb128 0x13
 5341 0352 1C       		.uleb128 0x1c
 5342 0353 0B       		.uleb128 0xb
 5343 0354 00       		.byte	0
 5344 0355 00       		.byte	0
 5345 0356 3C       		.uleb128 0x3c
 5346 0357 34       		.uleb128 0x34
 5347 0358 00       		.byte	0
 5348 0359 03       		.uleb128 0x3
 5349 035a 0E       		.uleb128 0xe
 5350 035b 3A       		.uleb128 0x3a
 5351 035c 0B       		.uleb128 0xb
 5352 035d 3B       		.uleb128 0x3b
 5353 035e 0B       		.uleb128 0xb
 5354 035f 49       		.uleb128 0x49
 5355 0360 13       		.uleb128 0x13
 5356 0361 02       		.uleb128 0x2
 5357 0362 18       		.uleb128 0x18
 5358 0363 00       		.byte	0
 5359 0364 00       		.byte	0
 5360 0365 3D       		.uleb128 0x3d
 5361 0366 34       		.uleb128 0x34
 5362 0367 00       		.byte	0
 5363 0368 03       		.uleb128 0x3
 5364 0369 0E       		.uleb128 0xe
 5365 036a 3A       		.uleb128 0x3a
 5366 036b 0B       		.uleb128 0xb
 5367 036c 3B       		.uleb128 0x3b
 5368 036d 0B       		.uleb128 0xb
 5369 036e 49       		.uleb128 0x49
 5370 036f 13       		.uleb128 0x13
 5371 0370 3F       		.uleb128 0x3f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 155


 5372 0371 19       		.uleb128 0x19
 5373 0372 02       		.uleb128 0x2
 5374 0373 18       		.uleb128 0x18
 5375 0374 00       		.byte	0
 5376 0375 00       		.byte	0
 5377 0376 3E       		.uleb128 0x3e
 5378 0377 26       		.uleb128 0x26
 5379 0378 00       		.byte	0
 5380 0379 49       		.uleb128 0x49
 5381 037a 13       		.uleb128 0x13
 5382 037b 00       		.byte	0
 5383 037c 00       		.byte	0
 5384 037d 3F       		.uleb128 0x3f
 5385 037e 2E       		.uleb128 0x2e
 5386 037f 01       		.byte	0x1
 5387 0380 3F       		.uleb128 0x3f
 5388 0381 19       		.uleb128 0x19
 5389 0382 03       		.uleb128 0x3
 5390 0383 0E       		.uleb128 0xe
 5391 0384 3A       		.uleb128 0x3a
 5392 0385 0B       		.uleb128 0xb
 5393 0386 3B       		.uleb128 0x3b
 5394 0387 0B       		.uleb128 0xb
 5395 0388 27       		.uleb128 0x27
 5396 0389 19       		.uleb128 0x19
 5397 038a 3C       		.uleb128 0x3c
 5398 038b 19       		.uleb128 0x19
 5399 038c 01       		.uleb128 0x1
 5400 038d 13       		.uleb128 0x13
 5401 038e 00       		.byte	0
 5402 038f 00       		.byte	0
 5403 0390 40       		.uleb128 0x40
 5404 0391 05       		.uleb128 0x5
 5405 0392 00       		.byte	0
 5406 0393 49       		.uleb128 0x49
 5407 0394 13       		.uleb128 0x13
 5408 0395 00       		.byte	0
 5409 0396 00       		.byte	0
 5410 0397 41       		.uleb128 0x41
 5411 0398 2E       		.uleb128 0x2e
 5412 0399 00       		.byte	0
 5413 039a 3F       		.uleb128 0x3f
 5414 039b 19       		.uleb128 0x19
 5415 039c 03       		.uleb128 0x3
 5416 039d 0E       		.uleb128 0xe
 5417 039e 3A       		.uleb128 0x3a
 5418 039f 0B       		.uleb128 0xb
 5419 03a0 3B       		.uleb128 0x3b
 5420 03a1 0B       		.uleb128 0xb
 5421 03a2 27       		.uleb128 0x27
 5422 03a3 19       		.uleb128 0x19
 5423 03a4 49       		.uleb128 0x49
 5424 03a5 13       		.uleb128 0x13
 5425 03a6 3C       		.uleb128 0x3c
 5426 03a7 19       		.uleb128 0x19
 5427 03a8 00       		.byte	0
 5428 03a9 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 156


 5429 03aa 00       		.byte	0
 5430              		.section	.debug_loc,"",%progbits
 5431              	.Ldebug_loc0:
 5432              	.LLST0:
 5433 0000 18000000 		.4byte	.LVL4
 5434 0004 20000000 		.4byte	.LVL5
 5435 0008 0200     		.2byte	0x2
 5436 000a 30       		.byte	0x30
 5437 000b 9F       		.byte	0x9f
 5438 000c 20000000 		.4byte	.LVL5
 5439 0010 3A000000 		.4byte	.LVL8
 5440 0014 0100     		.2byte	0x1
 5441 0016 52       		.byte	0x52
 5442 0017 3A000000 		.4byte	.LVL8
 5443 001b 4A000000 		.4byte	.LVL9
 5444 001f 0300     		.2byte	0x3
 5445 0021 72       		.byte	0x72
 5446 0022 7D       		.sleb128 -3
 5447 0023 9F       		.byte	0x9f
 5448 0024 B8000000 		.4byte	.LVL22
 5449 0028 C4000000 		.4byte	.LVL23
 5450 002c 0100     		.2byte	0x1
 5451 002e 52       		.byte	0x52
 5452 002f D2000000 		.4byte	.LVL27
 5453 0033 D6000000 		.4byte	.LVL28
 5454 0037 0100     		.2byte	0x1
 5455 0039 52       		.byte	0x52
 5456 003a 00000000 		.4byte	0
 5457 003e 00000000 		.4byte	0
 5458              	.LLST1:
 5459 0042 18000000 		.4byte	.LVL4
 5460 0046 3A000000 		.4byte	.LVL8
 5461 004a 0200     		.2byte	0x2
 5462 004c 33       		.byte	0x33
 5463 004d 9F       		.byte	0x9f
 5464 004e 3A000000 		.4byte	.LVL8
 5465 0052 4A000000 		.4byte	.LVL9
 5466 0056 0100     		.2byte	0x1
 5467 0058 52       		.byte	0x52
 5468 0059 B8000000 		.4byte	.LVL22
 5469 005d CC000000 		.4byte	.LVL25
 5470 0061 0200     		.2byte	0x2
 5471 0063 33       		.byte	0x33
 5472 0064 9F       		.byte	0x9f
 5473 0065 D2000000 		.4byte	.LVL27
 5474 0069 04010000 		.4byte	.LFE3
 5475 006d 0200     		.2byte	0x2
 5476 006f 33       		.byte	0x33
 5477 0070 9F       		.byte	0x9f
 5478 0071 00000000 		.4byte	0
 5479 0075 00000000 		.4byte	0
 5480              	.LLST2:
 5481 0079 60000000 		.4byte	.LVL10
 5482 007d 62000000 		.4byte	.LVL11
 5483 0081 0100     		.2byte	0x1
 5484 0083 51       		.byte	0x51
 5485 0084 62000000 		.4byte	.LVL11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 157


 5486 0088 78000000 		.4byte	.LVL14
 5487 008c 0700     		.2byte	0x7
 5488 008e 73       		.byte	0x73
 5489 008f 00       		.sleb128 0
 5490 0090 44       		.byte	0x44
 5491 0091 40       		.byte	0x40
 5492 0092 24       		.byte	0x24
 5493 0093 21       		.byte	0x21
 5494 0094 9F       		.byte	0x9f
 5495 0095 82000000 		.4byte	.LVL15
 5496 0099 8A000000 		.4byte	.LVL16
 5497 009d 0100     		.2byte	0x1
 5498 009f 53       		.byte	0x53
 5499 00a0 8A000000 		.4byte	.LVL16
 5500 00a4 8E000000 		.4byte	.LVL17
 5501 00a8 0200     		.2byte	0x2
 5502 00aa 72       		.byte	0x72
 5503 00ab 00       		.sleb128 0
 5504 00ac C8000000 		.4byte	.LVL24
 5505 00b0 CC000000 		.4byte	.LVL25
 5506 00b4 0100     		.2byte	0x1
 5507 00b6 53       		.byte	0x53
 5508 00b7 CC000000 		.4byte	.LVL25
 5509 00bb D0000000 		.4byte	.LVL26
 5510 00bf 0700     		.2byte	0x7
 5511 00c1 73       		.byte	0x73
 5512 00c2 00       		.sleb128 0
 5513 00c3 44       		.byte	0x44
 5514 00c4 40       		.byte	0x40
 5515 00c5 24       		.byte	0x24
 5516 00c6 21       		.byte	0x21
 5517 00c7 9F       		.byte	0x9f
 5518 00c8 D0000000 		.4byte	.LVL26
 5519 00cc D2000000 		.4byte	.LVL27
 5520 00d0 0100     		.2byte	0x1
 5521 00d2 53       		.byte	0x53
 5522 00d3 00000000 		.4byte	0
 5523 00d7 00000000 		.4byte	0
 5524              	.LLST3:
 5525 00db 72000000 		.4byte	.LVL12
 5526 00df 76000000 		.4byte	.LVL13
 5527 00e3 1900     		.2byte	0x19
 5528 00e5 72       		.byte	0x72
 5529 00e6 00       		.sleb128 0
 5530 00e7 71       		.byte	0x71
 5531 00e8 00       		.sleb128 0
 5532 00e9 22       		.byte	0x22
 5533 00ea 12       		.byte	0x12
 5534 00eb 40       		.byte	0x40
 5535 00ec 4B       		.byte	0x4b
 5536 00ed 24       		.byte	0x24
 5537 00ee 22       		.byte	0x22
 5538 00ef 08       		.byte	0x8
 5539 00f0 FF       		.byte	0xff
 5540 00f1 16       		.byte	0x16
 5541 00f2 14       		.byte	0x14
 5542 00f3 40       		.byte	0x40
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 158


 5543 00f4 4B       		.byte	0x4b
 5544 00f5 24       		.byte	0x24
 5545 00f6 22       		.byte	0x22
 5546 00f7 2D       		.byte	0x2d
 5547 00f8 28       		.byte	0x28
 5548 00f9 0100     		.2byte	0x1
 5549 00fb 16       		.byte	0x16
 5550 00fc 13       		.byte	0x13
 5551 00fd 9F       		.byte	0x9f
 5552 00fe 00000000 		.4byte	0
 5553 0102 00000000 		.4byte	0
 5554              	.LLST4:
 5555 0106 9E000000 		.4byte	.LVL19
 5556 010a B8000000 		.4byte	.LVL22
 5557 010e 0200     		.2byte	0x2
 5558 0110 44       		.byte	0x44
 5559 0111 9F       		.byte	0x9f
 5560 0112 00000000 		.4byte	0
 5561 0116 00000000 		.4byte	0
 5562              	.LLST5:
 5563 011a 00000000 		.4byte	.LVL29
 5564 011e 07000000 		.4byte	.LVL30-1
 5565 0122 0100     		.2byte	0x1
 5566 0124 50       		.byte	0x50
 5567 0125 07000000 		.4byte	.LVL30-1
 5568 0129 1A000000 		.4byte	.LVL34
 5569 012d 0100     		.2byte	0x1
 5570 012f 54       		.byte	0x54
 5571 0130 1A000000 		.4byte	.LVL34
 5572 0134 20000000 		.4byte	.LFE6
 5573 0138 0400     		.2byte	0x4
 5574 013a F3       		.byte	0xf3
 5575 013b 01       		.uleb128 0x1
 5576 013c 50       		.byte	0x50
 5577 013d 9F       		.byte	0x9f
 5578 013e 00000000 		.4byte	0
 5579 0142 00000000 		.4byte	0
 5580              	.LLST6:
 5581 0146 08000000 		.4byte	.LVL30
 5582 014a 19000000 		.4byte	.LVL33-1
 5583 014e 0100     		.2byte	0x1
 5584 0150 50       		.byte	0x50
 5585 0151 00000000 		.4byte	0
 5586 0155 00000000 		.4byte	0
 5587              	.LLST7:
 5588 0159 10000000 		.4byte	.LVL31
 5589 015d 14000000 		.4byte	.LVL32
 5590 0161 0100     		.2byte	0x1
 5591 0163 52       		.byte	0x52
 5592 0164 14000000 		.4byte	.LVL32
 5593 0168 19000000 		.4byte	.LVL33-1
 5594 016c 0100     		.2byte	0x1
 5595 016e 53       		.byte	0x53
 5596 016f 00000000 		.4byte	0
 5597 0173 00000000 		.4byte	0
 5598              	.LLST8:
 5599 0177 06000000 		.4byte	.LVL35
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 159


 5600 017b 0D000000 		.4byte	.LVL37-1
 5601 017f 0100     		.2byte	0x1
 5602 0181 50       		.byte	0x50
 5603 0182 00000000 		.4byte	0
 5604 0186 00000000 		.4byte	0
 5605              	.LLST9:
 5606 018a 0A000000 		.4byte	.LVL36
 5607 018e 12000000 		.4byte	.LVL38
 5608 0192 0500     		.2byte	0x5
 5609 0194 74       		.byte	0x74
 5610 0195 00       		.sleb128 0
 5611 0196 37       		.byte	0x37
 5612 0197 1A       		.byte	0x1a
 5613 0198 9F       		.byte	0x9f
 5614 0199 12000000 		.4byte	.LVL38
 5615 019d 18000000 		.4byte	.LFE7
 5616 01a1 0100     		.2byte	0x1
 5617 01a3 50       		.byte	0x50
 5618 01a4 00000000 		.4byte	0
 5619 01a8 00000000 		.4byte	0
 5620              	.LLST10:
 5621 01ac 00000000 		.4byte	.LVL39
 5622 01b0 07000000 		.4byte	.LVL40-1
 5623 01b4 0100     		.2byte	0x1
 5624 01b6 50       		.byte	0x50
 5625 01b7 07000000 		.4byte	.LVL40-1
 5626 01bb 0E000000 		.4byte	.LVL41
 5627 01bf 0100     		.2byte	0x1
 5628 01c1 54       		.byte	0x54
 5629 01c2 0E000000 		.4byte	.LVL41
 5630 01c6 28000000 		.4byte	.LFE8
 5631 01ca 0400     		.2byte	0x4
 5632 01cc F3       		.byte	0xf3
 5633 01cd 01       		.uleb128 0x1
 5634 01ce 50       		.byte	0x50
 5635 01cf 9F       		.byte	0x9f
 5636 01d0 00000000 		.4byte	0
 5637 01d4 00000000 		.4byte	0
 5638              	.LLST11:
 5639 01d8 08000000 		.4byte	.LVL40
 5640 01dc 1D000000 		.4byte	.LVL42-1
 5641 01e0 0100     		.2byte	0x1
 5642 01e2 50       		.byte	0x50
 5643 01e3 00000000 		.4byte	0
 5644 01e7 00000000 		.4byte	0
 5645              	.LLST12:
 5646 01eb 00000000 		.4byte	.LVL43
 5647 01ef 09000000 		.4byte	.LVL44-1
 5648 01f3 0100     		.2byte	0x1
 5649 01f5 50       		.byte	0x50
 5650 01f6 09000000 		.4byte	.LVL44-1
 5651 01fa 54000000 		.4byte	.LVL50
 5652 01fe 0100     		.2byte	0x1
 5653 0200 55       		.byte	0x55
 5654 0201 54000000 		.4byte	.LVL50
 5655 0205 56000000 		.4byte	.LVL51
 5656 0209 0400     		.2byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 160


 5657 020b F3       		.byte	0xf3
 5658 020c 01       		.uleb128 0x1
 5659 020d 50       		.byte	0x50
 5660 020e 9F       		.byte	0x9f
 5661 020f 56000000 		.4byte	.LVL51
 5662 0213 90000000 		.4byte	.LFE9
 5663 0217 0100     		.2byte	0x1
 5664 0219 55       		.byte	0x55
 5665 021a 00000000 		.4byte	0
 5666 021e 00000000 		.4byte	0
 5667              	.LLST13:
 5668 0222 00000000 		.4byte	.LVL43
 5669 0226 16000000 		.4byte	.LVL46
 5670 022a 0200     		.2byte	0x2
 5671 022c 30       		.byte	0x30
 5672 022d 9F       		.byte	0x9f
 5673 022e 16000000 		.4byte	.LVL46
 5674 0232 4C000000 		.4byte	.LVL47
 5675 0236 0100     		.2byte	0x1
 5676 0238 52       		.byte	0x52
 5677 0239 56000000 		.4byte	.LVL51
 5678 023d 62000000 		.4byte	.LVL52
 5679 0241 0200     		.2byte	0x2
 5680 0243 31       		.byte	0x31
 5681 0244 9F       		.byte	0x9f
 5682 0245 62000000 		.4byte	.LVL52
 5683 0249 65000000 		.4byte	.LVL53-1
 5684 024d 0100     		.2byte	0x1
 5685 024f 52       		.byte	0x52
 5686 0250 00000000 		.4byte	0
 5687 0254 00000000 		.4byte	0
 5688              	.LLST14:
 5689 0258 0E000000 		.4byte	.LVL45
 5690 025c 54000000 		.4byte	.LVL49
 5691 0260 0100     		.2byte	0x1
 5692 0262 54       		.byte	0x54
 5693 0263 56000000 		.4byte	.LVL51
 5694 0267 90000000 		.4byte	.LFE9
 5695 026b 0100     		.2byte	0x1
 5696 026d 54       		.byte	0x54
 5697 026e 00000000 		.4byte	0
 5698 0272 00000000 		.4byte	0
 5699              	.LLST15:
 5700 0276 00000000 		.4byte	.LVL54
 5701 027a 0E000000 		.4byte	.LVL55
 5702 027e 0100     		.2byte	0x1
 5703 0280 50       		.byte	0x50
 5704 0281 0E000000 		.4byte	.LVL55
 5705 0285 50000000 		.4byte	.LFE10
 5706 0289 0400     		.2byte	0x4
 5707 028b F3       		.byte	0xf3
 5708 028c 01       		.uleb128 0x1
 5709 028d 50       		.byte	0x50
 5710 028e 9F       		.byte	0x9f
 5711 028f 00000000 		.4byte	0
 5712 0293 00000000 		.4byte	0
 5713              	.LLST16:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 161


 5714 0297 00000000 		.4byte	.LVL58
 5715 029b 04000000 		.4byte	.LVL59
 5716 029f 0100     		.2byte	0x1
 5717 02a1 50       		.byte	0x50
 5718 02a2 04000000 		.4byte	.LVL59
 5719 02a6 14000000 		.4byte	.LFE14
 5720 02aa 0100     		.2byte	0x1
 5721 02ac 52       		.byte	0x52
 5722 02ad 00000000 		.4byte	0
 5723 02b1 00000000 		.4byte	0
 5724              	.LLST17:
 5725 02b5 0A000000 		.4byte	.LVL61
 5726 02b9 0C000000 		.4byte	.LVL62
 5727 02bd 0500     		.2byte	0x5
 5728 02bf 73       		.byte	0x73
 5729 02c0 00       		.sleb128 0
 5730 02c1 49       		.byte	0x49
 5731 02c2 1A       		.byte	0x1a
 5732 02c3 9F       		.byte	0x9f
 5733 02c4 0C000000 		.4byte	.LVL62
 5734 02c8 14000000 		.4byte	.LFE14
 5735 02cc 0100     		.2byte	0x1
 5736 02ce 50       		.byte	0x50
 5737 02cf 00000000 		.4byte	0
 5738 02d3 00000000 		.4byte	0
 5739              	.LLST18:
 5740 02d7 00000000 		.4byte	.LVL65
 5741 02db 0A000000 		.4byte	.LVL68
 5742 02df 0100     		.2byte	0x1
 5743 02e1 50       		.byte	0x50
 5744 02e2 0A000000 		.4byte	.LVL68
 5745 02e6 14000000 		.4byte	.LFE17
 5746 02ea 0400     		.2byte	0x4
 5747 02ec F3       		.byte	0xf3
 5748 02ed 01       		.uleb128 0x1
 5749 02ee 50       		.byte	0x50
 5750 02ef 9F       		.byte	0x9f
 5751 02f0 00000000 		.4byte	0
 5752 02f4 00000000 		.4byte	0
 5753              	.LLST19:
 5754 02f8 04000000 		.4byte	.LVL66
 5755 02fc 06000000 		.4byte	.LVL67
 5756 0300 0200     		.2byte	0x2
 5757 0302 30       		.byte	0x30
 5758 0303 9F       		.byte	0x9f
 5759 0304 00000000 		.4byte	0
 5760 0308 00000000 		.4byte	0
 5761              	.LLST20:
 5762 030c 00000000 		.4byte	.LVL70
 5763 0310 0E000000 		.4byte	.LVL73
 5764 0314 0100     		.2byte	0x1
 5765 0316 50       		.byte	0x50
 5766 0317 0E000000 		.4byte	.LVL73
 5767 031b 14000000 		.4byte	.LFE18
 5768 031f 0400     		.2byte	0x4
 5769 0321 F3       		.byte	0xf3
 5770 0322 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 162


 5771 0323 50       		.byte	0x50
 5772 0324 9F       		.byte	0x9f
 5773 0325 00000000 		.4byte	0
 5774 0329 00000000 		.4byte	0
 5775              	.LLST21:
 5776 032d 04000000 		.4byte	.LVL71
 5777 0331 06000000 		.4byte	.LVL72
 5778 0335 0200     		.2byte	0x2
 5779 0337 30       		.byte	0x30
 5780 0338 9F       		.byte	0x9f
 5781 0339 00000000 		.4byte	0
 5782 033d 00000000 		.4byte	0
 5783              	.LLST22:
 5784 0341 00000000 		.4byte	.LVL74
 5785 0345 0A000000 		.4byte	.LVL77
 5786 0349 0100     		.2byte	0x1
 5787 034b 50       		.byte	0x50
 5788 034c 0A000000 		.4byte	.LVL77
 5789 0350 18000000 		.4byte	.LFE19
 5790 0354 0400     		.2byte	0x4
 5791 0356 F3       		.byte	0xf3
 5792 0357 01       		.uleb128 0x1
 5793 0358 50       		.byte	0x50
 5794 0359 9F       		.byte	0x9f
 5795 035a 00000000 		.4byte	0
 5796 035e 00000000 		.4byte	0
 5797              	.LLST23:
 5798 0362 04000000 		.4byte	.LVL75
 5799 0366 06000000 		.4byte	.LVL76
 5800 036a 0200     		.2byte	0x2
 5801 036c 30       		.byte	0x30
 5802 036d 9F       		.byte	0x9f
 5803 036e 00000000 		.4byte	0
 5804 0372 00000000 		.4byte	0
 5805              	.LLST24:
 5806 0376 00000000 		.4byte	.LVL79
 5807 037a 0A000000 		.4byte	.LVL82
 5808 037e 0100     		.2byte	0x1
 5809 0380 50       		.byte	0x50
 5810 0381 0A000000 		.4byte	.LVL82
 5811 0385 18000000 		.4byte	.LFE20
 5812 0389 0400     		.2byte	0x4
 5813 038b F3       		.byte	0xf3
 5814 038c 01       		.uleb128 0x1
 5815 038d 50       		.byte	0x50
 5816 038e 9F       		.byte	0x9f
 5817 038f 00000000 		.4byte	0
 5818 0393 00000000 		.4byte	0
 5819              	.LLST25:
 5820 0397 04000000 		.4byte	.LVL80
 5821 039b 06000000 		.4byte	.LVL81
 5822 039f 0200     		.2byte	0x2
 5823 03a1 30       		.byte	0x30
 5824 03a2 9F       		.byte	0x9f
 5825 03a3 00000000 		.4byte	0
 5826 03a7 00000000 		.4byte	0
 5827              	.LLST26:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 163


 5828 03ab 00000000 		.4byte	.LVL83
 5829 03af 15000000 		.4byte	.LVL88-1
 5830 03b3 0100     		.2byte	0x1
 5831 03b5 50       		.byte	0x50
 5832 03b6 15000000 		.4byte	.LVL88-1
 5833 03ba 40000000 		.4byte	.LFE21
 5834 03be 0400     		.2byte	0x4
 5835 03c0 F3       		.byte	0xf3
 5836 03c1 01       		.uleb128 0x1
 5837 03c2 50       		.byte	0x50
 5838 03c3 9F       		.byte	0x9f
 5839 03c4 00000000 		.4byte	0
 5840 03c8 00000000 		.4byte	0
 5841              	.LLST27:
 5842 03cc 00000000 		.4byte	.LVL83
 5843 03d0 15000000 		.4byte	.LVL88-1
 5844 03d4 0100     		.2byte	0x1
 5845 03d6 51       		.byte	0x51
 5846 03d7 15000000 		.4byte	.LVL88-1
 5847 03db 40000000 		.4byte	.LFE21
 5848 03df 0400     		.2byte	0x4
 5849 03e1 F3       		.byte	0xf3
 5850 03e2 01       		.uleb128 0x1
 5851 03e3 51       		.byte	0x51
 5852 03e4 9F       		.byte	0x9f
 5853 03e5 00000000 		.4byte	0
 5854 03e9 00000000 		.4byte	0
 5855              	.LLST28:
 5856 03ed 16000000 		.4byte	.LVL88
 5857 03f1 39000000 		.4byte	.LVL94-1
 5858 03f5 0100     		.2byte	0x1
 5859 03f7 50       		.byte	0x50
 5860 03f8 00000000 		.4byte	0
 5861 03fc 00000000 		.4byte	0
 5862              	.LLST29:
 5863 0400 12000000 		.4byte	.LVL87
 5864 0404 20000000 		.4byte	.LVL89
 5865 0408 0C00     		.2byte	0xc
 5866 040a 74       		.byte	0x74
 5867 040b 00       		.sleb128 0
 5868 040c 33       		.byte	0x33
 5869 040d 1A       		.byte	0x1a
 5870 040e 08       		.byte	0x8
 5871 040f FF       		.byte	0xff
 5872 0410 1A       		.byte	0x1a
 5873 0411 33       		.byte	0x33
 5874 0412 24       		.byte	0x24
 5875 0413 23       		.byte	0x23
 5876 0414 06       		.uleb128 0x6
 5877 0415 9F       		.byte	0x9f
 5878 0416 00000000 		.4byte	0
 5879 041a 00000000 		.4byte	0
 5880              	.LLST30:
 5881 041e 2C000000 		.4byte	.LVL90
 5882 0422 30000000 		.4byte	.LVL91
 5883 0426 0100     		.2byte	0x1
 5884 0428 51       		.byte	0x51
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 164


 5885 0429 32000000 		.4byte	.LVL92
 5886 042d 34000000 		.4byte	.LVL93
 5887 0431 0100     		.2byte	0x1
 5888 0433 51       		.byte	0x51
 5889 0434 34000000 		.4byte	.LVL93
 5890 0438 39000000 		.4byte	.LVL94-1
 5891 043c 0100     		.2byte	0x1
 5892 043e 52       		.byte	0x52
 5893 043f 00000000 		.4byte	0
 5894 0443 00000000 		.4byte	0
 5895              	.LLST31:
 5896 0447 0A000000 		.4byte	.LVL84
 5897 044b 0C000000 		.4byte	.LVL85
 5898 044f 0200     		.2byte	0x2
 5899 0451 30       		.byte	0x30
 5900 0452 9F       		.byte	0x9f
 5901 0453 00000000 		.4byte	0
 5902 0457 00000000 		.4byte	0
 5903              	.LLST32:
 5904 045b 10000000 		.4byte	.LVL86
 5905 045f 12000000 		.4byte	.LVL87
 5906 0463 0200     		.2byte	0x2
 5907 0465 30       		.byte	0x30
 5908 0466 9F       		.byte	0x9f
 5909 0467 00000000 		.4byte	0
 5910 046b 00000000 		.4byte	0
 5911              	.LLST33:
 5912 046f 00000000 		.4byte	.LVL95
 5913 0473 22000000 		.4byte	.LVL100
 5914 0477 0100     		.2byte	0x1
 5915 0479 50       		.byte	0x50
 5916 047a 22000000 		.4byte	.LVL100
 5917 047e 28000000 		.4byte	.LFE22
 5918 0482 0400     		.2byte	0x4
 5919 0484 F3       		.byte	0xf3
 5920 0485 01       		.uleb128 0x1
 5921 0486 50       		.byte	0x50
 5922 0487 9F       		.byte	0x9f
 5923 0488 00000000 		.4byte	0
 5924 048c 00000000 		.4byte	0
 5925              	.LLST34:
 5926 0490 12000000 		.4byte	.LVL98
 5927 0494 1E000000 		.4byte	.LVL99
 5928 0498 0F00     		.2byte	0xf
 5929 049a 72       		.byte	0x72
 5930 049b 00       		.sleb128 0
 5931 049c 70       		.byte	0x70
 5932 049d 00       		.sleb128 0
 5933 049e 33       		.byte	0x33
 5934 049f 1A       		.byte	0x1a
 5935 04a0 08       		.byte	0x8
 5936 04a1 FF       		.byte	0xff
 5937 04a2 1A       		.byte	0x1a
 5938 04a3 33       		.byte	0x33
 5939 04a4 24       		.byte	0x24
 5940 04a5 23       		.byte	0x23
 5941 04a6 06       		.uleb128 0x6
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 165


 5942 04a7 25       		.byte	0x25
 5943 04a8 9F       		.byte	0x9f
 5944 04a9 00000000 		.4byte	0
 5945 04ad 00000000 		.4byte	0
 5946              	.LLST35:
 5947 04b1 04000000 		.4byte	.LVL96
 5948 04b5 06000000 		.4byte	.LVL97
 5949 04b9 0200     		.2byte	0x2
 5950 04bb 30       		.byte	0x30
 5951 04bc 9F       		.byte	0x9f
 5952 04bd 00000000 		.4byte	0
 5953 04c1 00000000 		.4byte	0
 5954              	.LLST36:
 5955 04c5 00000000 		.4byte	.LVL101
 5956 04c9 04000000 		.4byte	.LVL102
 5957 04cd 0100     		.2byte	0x1
 5958 04cf 50       		.byte	0x50
 5959 04d0 04000000 		.4byte	.LVL102
 5960 04d4 14000000 		.4byte	.LFE23
 5961 04d8 0400     		.2byte	0x4
 5962 04da F3       		.byte	0xf3
 5963 04db 01       		.uleb128 0x1
 5964 04dc 50       		.byte	0x50
 5965 04dd 9F       		.byte	0x9f
 5966 04de 00000000 		.4byte	0
 5967 04e2 00000000 		.4byte	0
 5968              	.LLST37:
 5969 04e6 00000000 		.4byte	.LVL103
 5970 04ea 06000000 		.4byte	.LVL104
 5971 04ee 0100     		.2byte	0x1
 5972 04f0 50       		.byte	0x50
 5973 04f1 06000000 		.4byte	.LVL104
 5974 04f5 18000000 		.4byte	.LFE24
 5975 04f9 0400     		.2byte	0x4
 5976 04fb F3       		.byte	0xf3
 5977 04fc 01       		.uleb128 0x1
 5978 04fd 50       		.byte	0x50
 5979 04fe 9F       		.byte	0x9f
 5980 04ff 00000000 		.4byte	0
 5981 0503 00000000 		.4byte	0
 5982              	.LLST38:
 5983 0507 00000000 		.4byte	.LVL105
 5984 050b 04000000 		.4byte	.LVL106
 5985 050f 0100     		.2byte	0x1
 5986 0511 50       		.byte	0x50
 5987 0512 04000000 		.4byte	.LVL106
 5988 0516 14000000 		.4byte	.LFE25
 5989 051a 0400     		.2byte	0x4
 5990 051c F3       		.byte	0xf3
 5991 051d 01       		.uleb128 0x1
 5992 051e 50       		.byte	0x50
 5993 051f 9F       		.byte	0x9f
 5994 0520 00000000 		.4byte	0
 5995 0524 00000000 		.4byte	0
 5996              	.LLST39:
 5997 0528 00000000 		.4byte	.LVL107
 5998 052c 04000000 		.4byte	.LVL108
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 166


 5999 0530 0100     		.2byte	0x1
 6000 0532 50       		.byte	0x50
 6001 0533 04000000 		.4byte	.LVL108
 6002 0537 14000000 		.4byte	.LFE26
 6003 053b 0400     		.2byte	0x4
 6004 053d F3       		.byte	0xf3
 6005 053e 01       		.uleb128 0x1
 6006 053f 50       		.byte	0x50
 6007 0540 9F       		.byte	0x9f
 6008 0541 00000000 		.4byte	0
 6009 0545 00000000 		.4byte	0
 6010              	.LLST40:
 6011 0549 00000000 		.4byte	.LVL109
 6012 054d 04000000 		.4byte	.LVL110
 6013 0551 0100     		.2byte	0x1
 6014 0553 50       		.byte	0x50
 6015 0554 04000000 		.4byte	.LVL110
 6016 0558 14000000 		.4byte	.LFE27
 6017 055c 0400     		.2byte	0x4
 6018 055e F3       		.byte	0xf3
 6019 055f 01       		.uleb128 0x1
 6020 0560 50       		.byte	0x50
 6021 0561 9F       		.byte	0x9f
 6022 0562 00000000 		.4byte	0
 6023 0566 00000000 		.4byte	0
 6024              	.LLST41:
 6025 056a 00000000 		.4byte	.LVL112
 6026 056e 10000000 		.4byte	.LVL113
 6027 0572 0100     		.2byte	0x1
 6028 0574 50       		.byte	0x50
 6029 0575 10000000 		.4byte	.LVL113
 6030 0579 2C000000 		.4byte	.LVL116
 6031 057d 0100     		.2byte	0x1
 6032 057f 54       		.byte	0x54
 6033 0580 36000000 		.4byte	.LVL118
 6034 0584 48000000 		.4byte	.LFE30
 6035 0588 0100     		.2byte	0x1
 6036 058a 50       		.byte	0x50
 6037 058b 00000000 		.4byte	0
 6038 058f 00000000 		.4byte	0
 6039              	.LLST42:
 6040 0593 00000000 		.4byte	.LVL119
 6041 0597 08000000 		.4byte	.LVL120
 6042 059b 0100     		.2byte	0x1
 6043 059d 50       		.byte	0x50
 6044 059e 08000000 		.4byte	.LVL120
 6045 05a2 14000000 		.4byte	.LFE31
 6046 05a6 0400     		.2byte	0x4
 6047 05a8 F3       		.byte	0xf3
 6048 05a9 01       		.uleb128 0x1
 6049 05aa 50       		.byte	0x50
 6050 05ab 9F       		.byte	0x9f
 6051 05ac 00000000 		.4byte	0
 6052 05b0 00000000 		.4byte	0
 6053              	.LLST43:
 6054 05b4 00000000 		.4byte	.LVL122
 6055 05b8 0E000000 		.4byte	.LVL123
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 167


 6056 05bc 0100     		.2byte	0x1
 6057 05be 50       		.byte	0x50
 6058 05bf 0E000000 		.4byte	.LVL123
 6059 05c3 1A000000 		.4byte	.LVL124
 6060 05c7 0400     		.2byte	0x4
 6061 05c9 F3       		.byte	0xf3
 6062 05ca 01       		.uleb128 0x1
 6063 05cb 50       		.byte	0x50
 6064 05cc 9F       		.byte	0x9f
 6065 05cd 1A000000 		.4byte	.LVL124
 6066 05d1 26000000 		.4byte	.LVL125
 6067 05d5 0100     		.2byte	0x1
 6068 05d7 50       		.byte	0x50
 6069 05d8 26000000 		.4byte	.LVL125
 6070 05dc 58000000 		.4byte	.LFE32
 6071 05e0 0100     		.2byte	0x1
 6072 05e2 55       		.byte	0x55
 6073 05e3 00000000 		.4byte	0
 6074 05e7 00000000 		.4byte	0
 6075              	.LLST44:
 6076 05eb 0A000000 		.4byte	.LVL128
 6077 05ef 10000000 		.4byte	.LVL129
 6078 05f3 0200     		.2byte	0x2
 6079 05f5 30       		.byte	0x30
 6080 05f6 9F       		.byte	0x9f
 6081 05f7 10000000 		.4byte	.LVL129
 6082 05fb 12000000 		.4byte	.LVL130
 6083 05ff 0200     		.2byte	0x2
 6084 0601 31       		.byte	0x31
 6085 0602 9F       		.byte	0x9f
 6086 0603 12000000 		.4byte	.LVL130
 6087 0607 14000000 		.4byte	.LVL131
 6088 060b 0200     		.2byte	0x2
 6089 060d 32       		.byte	0x32
 6090 060e 9F       		.byte	0x9f
 6091 060f 14000000 		.4byte	.LVL131
 6092 0613 16000000 		.4byte	.LVL132
 6093 0617 0200     		.2byte	0x2
 6094 0619 33       		.byte	0x33
 6095 061a 9F       		.byte	0x9f
 6096 061b 16000000 		.4byte	.LVL132
 6097 061f 18000000 		.4byte	.LVL133
 6098 0623 0200     		.2byte	0x2
 6099 0625 34       		.byte	0x34
 6100 0626 9F       		.byte	0x9f
 6101 0627 18000000 		.4byte	.LVL133
 6102 062b 44000000 		.4byte	.LVL137
 6103 062f 0200     		.2byte	0x2
 6104 0631 35       		.byte	0x35
 6105 0632 9F       		.byte	0x9f
 6106 0633 00000000 		.4byte	0
 6107 0637 00000000 		.4byte	0
 6108              	.LLST45:
 6109 063b 18000000 		.4byte	.LVL133
 6110 063f 44000000 		.4byte	.LVL137
 6111 0643 0600     		.2byte	0x6
 6112 0645 03       		.byte	0x3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 168


 6113 0646 00000000 		.4byte	CySysTickServiceCallbacks
 6114 064a 9F       		.byte	0x9f
 6115 064b 00000000 		.4byte	0
 6116 064f 00000000 		.4byte	0
 6117              	.LLST46:
 6118 0653 18000000 		.4byte	.LVL133
 6119 0657 44000000 		.4byte	.LVL137
 6120 065b 0200     		.2byte	0x2
 6121 065d 3F       		.byte	0x3f
 6122 065e 9F       		.byte	0x9f
 6123 065f 00000000 		.4byte	0
 6124 0663 00000000 		.4byte	0
 6125              	.LLST47:
 6126 0667 18000000 		.4byte	.LVL133
 6127 066b 1A000000 		.4byte	.LVL134
 6128 066f 0200     		.2byte	0x2
 6129 0671 73       		.byte	0x73
 6130 0672 00       		.sleb128 0
 6131 0673 00000000 		.4byte	0
 6132 0677 00000000 		.4byte	0
 6133              	.LLST48:
 6134 067b 18000000 		.4byte	.LVL133
 6135 067f 44000000 		.4byte	.LVL137
 6136 0683 0400     		.2byte	0x4
 6137 0685 40       		.byte	0x40
 6138 0686 49       		.byte	0x49
 6139 0687 24       		.byte	0x24
 6140 0688 9F       		.byte	0x9f
 6141 0689 00000000 		.4byte	0
 6142 068d 00000000 		.4byte	0
 6143              	.LLST49:
 6144 0691 1A000000 		.4byte	.LVL134
 6145 0695 44000000 		.4byte	.LVL137
 6146 0699 0200     		.2byte	0x2
 6147 069b 31       		.byte	0x31
 6148 069c 9F       		.byte	0x9f
 6149 069d 00000000 		.4byte	0
 6150 06a1 00000000 		.4byte	0
 6151              	.LLST51:
 6152 06a5 3C000000 		.4byte	.LVL136
 6153 06a9 44000000 		.4byte	.LVL137
 6154 06ad 0200     		.2byte	0x2
 6155 06af 3F       		.byte	0x3f
 6156 06b0 9F       		.byte	0x9f
 6157 06b1 00000000 		.4byte	0
 6158 06b5 00000000 		.4byte	0
 6159              	.LLST52:
 6160 06b9 30000000 		.4byte	.LVL135
 6161 06bd 44000000 		.4byte	.LVL137
 6162 06c1 0100     		.2byte	0x1
 6163 06c3 50       		.byte	0x50
 6164 06c4 00000000 		.4byte	0
 6165 06c8 00000000 		.4byte	0
 6166              	.LLST53:
 6167 06cc 00000000 		.4byte	.LVL138
 6168 06d0 0A000000 		.4byte	.LVL139
 6169 06d4 0200     		.2byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 169


 6170 06d6 30       		.byte	0x30
 6171 06d7 9F       		.byte	0x9f
 6172 06d8 0A000000 		.4byte	.LVL139
 6173 06dc 0E000000 		.4byte	.LVL140
 6174 06e0 0200     		.2byte	0x2
 6175 06e2 31       		.byte	0x31
 6176 06e3 9F       		.byte	0x9f
 6177 06e4 0E000000 		.4byte	.LVL140
 6178 06e8 10000000 		.4byte	.LVL141
 6179 06ec 0200     		.2byte	0x2
 6180 06ee 32       		.byte	0x32
 6181 06ef 9F       		.byte	0x9f
 6182 06f0 10000000 		.4byte	.LVL141
 6183 06f4 12000000 		.4byte	.LVL142
 6184 06f8 0200     		.2byte	0x2
 6185 06fa 34       		.byte	0x34
 6186 06fb 9F       		.byte	0x9f
 6187 06fc 12000000 		.4byte	.LVL142
 6188 0700 60000000 		.4byte	.LFE34
 6189 0704 0200     		.2byte	0x2
 6190 0706 35       		.byte	0x35
 6191 0707 9F       		.byte	0x9f
 6192 0708 00000000 		.4byte	0
 6193 070c 00000000 		.4byte	0
 6194              	.LLST54:
 6195 0710 12000000 		.4byte	.LVL142
 6196 0714 14000000 		.4byte	.LVL143
 6197 0718 0500     		.2byte	0x5
 6198 071a 0C       		.byte	0xc
 6199 071b 3C000020 		.4byte	0x2000003c
 6200 071f 14000000 		.4byte	.LVL143
 6201 0723 16000000 		.4byte	.LVL144
 6202 0727 0200     		.2byte	0x2
 6203 0729 73       		.byte	0x73
 6204 072a 00       		.sleb128 0
 6205 072b 00000000 		.4byte	0
 6206 072f 00000000 		.4byte	0
 6207              	.LLST55:
 6208 0733 00000000 		.4byte	.LVL147
 6209 0737 04000000 		.4byte	.LVL148
 6210 073b 0100     		.2byte	0x1
 6211 073d 50       		.byte	0x50
 6212 073e 04000000 		.4byte	.LVL148
 6213 0742 10000000 		.4byte	.LFE39
 6214 0746 0400     		.2byte	0x4
 6215 0748 F3       		.byte	0xf3
 6216 0749 01       		.uleb128 0x1
 6217 074a 50       		.byte	0x50
 6218 074b 9F       		.byte	0x9f
 6219 074c 00000000 		.4byte	0
 6220 0750 00000000 		.4byte	0
 6221              	.LLST56:
 6222 0754 00000000 		.4byte	.LVL151
 6223 0758 06000000 		.4byte	.LVL152
 6224 075c 0100     		.2byte	0x1
 6225 075e 50       		.byte	0x50
 6226 075f 06000000 		.4byte	.LVL152
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 170


 6227 0763 10000000 		.4byte	.LFE45
 6228 0767 0400     		.2byte	0x4
 6229 0769 F3       		.byte	0xf3
 6230 076a 01       		.uleb128 0x1
 6231 076b 50       		.byte	0x50
 6232 076c 9F       		.byte	0x9f
 6233 076d 00000000 		.4byte	0
 6234 0771 00000000 		.4byte	0
 6235              	.LLST57:
 6236 0775 00000000 		.4byte	.LVL153
 6237 0779 04000000 		.4byte	.LVL154
 6238 077d 0100     		.2byte	0x1
 6239 077f 50       		.byte	0x50
 6240 0780 04000000 		.4byte	.LVL154
 6241 0784 0C000000 		.4byte	.LFE46
 6242 0788 0400     		.2byte	0x4
 6243 078a F3       		.byte	0xf3
 6244 078b 01       		.uleb128 0x1
 6245 078c 50       		.byte	0x50
 6246 078d 9F       		.byte	0x9f
 6247 078e 00000000 		.4byte	0
 6248 0792 00000000 		.4byte	0
 6249              	.LLST58:
 6250 0796 00000000 		.4byte	.LVL156
 6251 079a 08000000 		.4byte	.LVL157
 6252 079e 0100     		.2byte	0x1
 6253 07a0 50       		.byte	0x50
 6254 07a1 08000000 		.4byte	.LVL157
 6255 07a5 20000000 		.4byte	.LFE49
 6256 07a9 0400     		.2byte	0x4
 6257 07ab F3       		.byte	0xf3
 6258 07ac 01       		.uleb128 0x1
 6259 07ad 50       		.byte	0x50
 6260 07ae 9F       		.byte	0x9f
 6261 07af 00000000 		.4byte	0
 6262 07b3 00000000 		.4byte	0
 6263              	.LLST59:
 6264 07b7 0A000000 		.4byte	.LVL158
 6265 07bb 12000000 		.4byte	.LVL159
 6266 07bf 0100     		.2byte	0x1
 6267 07c1 53       		.byte	0x53
 6268 07c2 12000000 		.4byte	.LVL159
 6269 07c6 20000000 		.4byte	.LFE49
 6270 07ca 0100     		.2byte	0x1
 6271 07cc 50       		.byte	0x50
 6272 07cd 00000000 		.4byte	0
 6273 07d1 00000000 		.4byte	0
 6274              	.LLST60:
 6275 07d5 00000000 		.4byte	.LVL160
 6276 07d9 08000000 		.4byte	.LVL161
 6277 07dd 0100     		.2byte	0x1
 6278 07df 50       		.byte	0x50
 6279 07e0 08000000 		.4byte	.LVL161
 6280 07e4 20000000 		.4byte	.LFE50
 6281 07e8 0400     		.2byte	0x4
 6282 07ea F3       		.byte	0xf3
 6283 07eb 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 171


 6284 07ec 50       		.byte	0x50
 6285 07ed 9F       		.byte	0x9f
 6286 07ee 00000000 		.4byte	0
 6287 07f2 00000000 		.4byte	0
 6288              	.LLST61:
 6289 07f6 0A000000 		.4byte	.LVL162
 6290 07fa 12000000 		.4byte	.LVL163
 6291 07fe 0100     		.2byte	0x1
 6292 0800 53       		.byte	0x53
 6293 0801 12000000 		.4byte	.LVL163
 6294 0805 20000000 		.4byte	.LFE50
 6295 0809 0100     		.2byte	0x1
 6296 080b 50       		.byte	0x50
 6297 080c 00000000 		.4byte	0
 6298 0810 00000000 		.4byte	0
 6299              	.LLST62:
 6300 0814 00000000 		.4byte	.LVL164
 6301 0818 08000000 		.4byte	.LVL165
 6302 081c 0100     		.2byte	0x1
 6303 081e 50       		.byte	0x50
 6304 081f 08000000 		.4byte	.LVL165
 6305 0823 20000000 		.4byte	.LFE51
 6306 0827 0400     		.2byte	0x4
 6307 0829 F3       		.byte	0xf3
 6308 082a 01       		.uleb128 0x1
 6309 082b 50       		.byte	0x50
 6310 082c 9F       		.byte	0x9f
 6311 082d 00000000 		.4byte	0
 6312 0831 00000000 		.4byte	0
 6313              	.LLST63:
 6314 0835 0A000000 		.4byte	.LVL166
 6315 0839 12000000 		.4byte	.LVL167
 6316 083d 0100     		.2byte	0x1
 6317 083f 53       		.byte	0x53
 6318 0840 12000000 		.4byte	.LVL167
 6319 0844 20000000 		.4byte	.LFE51
 6320 0848 0100     		.2byte	0x1
 6321 084a 50       		.byte	0x50
 6322 084b 00000000 		.4byte	0
 6323 084f 00000000 		.4byte	0
 6324              	.LLST64:
 6325 0853 00000000 		.4byte	.LVL168
 6326 0857 0E000000 		.4byte	.LVL170
 6327 085b 0100     		.2byte	0x1
 6328 085d 50       		.byte	0x50
 6329 085e 0E000000 		.4byte	.LVL170
 6330 0862 10000000 		.4byte	.LVL171
 6331 0866 0400     		.2byte	0x4
 6332 0868 F3       		.byte	0xf3
 6333 0869 01       		.uleb128 0x1
 6334 086a 50       		.byte	0x50
 6335 086b 9F       		.byte	0x9f
 6336 086c 10000000 		.4byte	.LVL171
 6337 0870 12000000 		.4byte	.LVL172
 6338 0874 0100     		.2byte	0x1
 6339 0876 50       		.byte	0x50
 6340 0877 12000000 		.4byte	.LVL172
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 172


 6341 087b 26000000 		.4byte	.LVL176
 6342 087f 0400     		.2byte	0x4
 6343 0881 F3       		.byte	0xf3
 6344 0882 01       		.uleb128 0x1
 6345 0883 50       		.byte	0x50
 6346 0884 9F       		.byte	0x9f
 6347 0885 26000000 		.4byte	.LVL176
 6348 0889 28000000 		.4byte	.LVL177
 6349 088d 0100     		.2byte	0x1
 6350 088f 50       		.byte	0x50
 6351 0890 28000000 		.4byte	.LVL177
 6352 0894 2A000000 		.4byte	.LVL178
 6353 0898 0400     		.2byte	0x4
 6354 089a F3       		.byte	0xf3
 6355 089b 01       		.uleb128 0x1
 6356 089c 50       		.byte	0x50
 6357 089d 9F       		.byte	0x9f
 6358 089e 2A000000 		.4byte	.LVL178
 6359 08a2 2C000000 		.4byte	.LVL179
 6360 08a6 0100     		.2byte	0x1
 6361 08a8 50       		.byte	0x50
 6362 08a9 2C000000 		.4byte	.LVL179
 6363 08ad 40000000 		.4byte	.LFE52
 6364 08b1 0400     		.2byte	0x4
 6365 08b3 F3       		.byte	0xf3
 6366 08b4 01       		.uleb128 0x1
 6367 08b5 50       		.byte	0x50
 6368 08b6 9F       		.byte	0x9f
 6369 08b7 00000000 		.4byte	0
 6370 08bb 00000000 		.4byte	0
 6371              	.LLST65:
 6372 08bf 00000000 		.4byte	.LVL168
 6373 08c3 0E000000 		.4byte	.LVL170
 6374 08c7 0100     		.2byte	0x1
 6375 08c9 51       		.byte	0x51
 6376 08ca 0E000000 		.4byte	.LVL170
 6377 08ce 10000000 		.4byte	.LVL171
 6378 08d2 0400     		.2byte	0x4
 6379 08d4 F3       		.byte	0xf3
 6380 08d5 01       		.uleb128 0x1
 6381 08d6 51       		.byte	0x51
 6382 08d7 9F       		.byte	0x9f
 6383 08d8 10000000 		.4byte	.LVL171
 6384 08dc 18000000 		.4byte	.LVL173
 6385 08e0 0100     		.2byte	0x1
 6386 08e2 51       		.byte	0x51
 6387 08e3 18000000 		.4byte	.LVL173
 6388 08e7 26000000 		.4byte	.LVL176
 6389 08eb 0400     		.2byte	0x4
 6390 08ed F3       		.byte	0xf3
 6391 08ee 01       		.uleb128 0x1
 6392 08ef 51       		.byte	0x51
 6393 08f0 9F       		.byte	0x9f
 6394 08f1 26000000 		.4byte	.LVL176
 6395 08f5 40000000 		.4byte	.LFE52
 6396 08f9 0100     		.2byte	0x1
 6397 08fb 51       		.byte	0x51
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 173


 6398 08fc 00000000 		.4byte	0
 6399 0900 00000000 		.4byte	0
 6400              	.LLST66:
 6401 0904 1A000000 		.4byte	.LVL174
 6402 0908 22000000 		.4byte	.LVL175
 6403 090c 0100     		.2byte	0x1
 6404 090e 53       		.byte	0x53
 6405 090f 22000000 		.4byte	.LVL175
 6406 0913 26000000 		.4byte	.LVL176
 6407 0917 0100     		.2byte	0x1
 6408 0919 51       		.byte	0x51
 6409 091a 00000000 		.4byte	0
 6410 091e 00000000 		.4byte	0
 6411              	.LLST67:
 6412 0922 0C000000 		.4byte	.LVL169
 6413 0926 0E000000 		.4byte	.LVL170
 6414 092a 0200     		.2byte	0x2
 6415 092c 30       		.byte	0x30
 6416 092d 9F       		.byte	0x9f
 6417 092e 00000000 		.4byte	0
 6418 0932 00000000 		.4byte	0
 6419              		.section	.debug_aranges,"",%progbits
 6420 0000 B4010000 		.4byte	0x1b4
 6421 0004 0200     		.2byte	0x2
 6422 0006 00000000 		.4byte	.Ldebug_info0
 6423 000a 04       		.byte	0x4
 6424 000b 00       		.byte	0
 6425 000c 0000     		.2byte	0
 6426 000e 0000     		.2byte	0
 6427 0010 00000000 		.4byte	.LFB47
 6428 0014 28000000 		.4byte	.LFE47-.LFB47
 6429 0018 00000000 		.4byte	.LFB1
 6430 001c 14000000 		.4byte	.LFE1-.LFB1
 6431 0020 00000000 		.4byte	.LFB2
 6432 0024 24000000 		.4byte	.LFE2-.LFB2
 6433 0028 00000000 		.4byte	.LFB3
 6434 002c 04010000 		.4byte	.LFE3-.LFB3
 6435 0030 00000000 		.4byte	.LFB4
 6436 0034 14000000 		.4byte	.LFE4-.LFB4
 6437 0038 00000000 		.4byte	.LFB5
 6438 003c 10000000 		.4byte	.LFE5-.LFB5
 6439 0040 00000000 		.4byte	.LFB6
 6440 0044 20000000 		.4byte	.LFE6-.LFB6
 6441 0048 00000000 		.4byte	.LFB7
 6442 004c 18000000 		.4byte	.LFE7-.LFB7
 6443 0050 00000000 		.4byte	.LFB8
 6444 0054 28000000 		.4byte	.LFE8-.LFB8
 6445 0058 00000000 		.4byte	.LFB9
 6446 005c 90000000 		.4byte	.LFE9-.LFB9
 6447 0060 00000000 		.4byte	.LFB10
 6448 0064 50000000 		.4byte	.LFE10-.LFB10
 6449 0068 00000000 		.4byte	.LFB11
 6450 006c 20000000 		.4byte	.LFE11-.LFB11
 6451 0070 00000000 		.4byte	.LFB12
 6452 0074 10000000 		.4byte	.LFE12-.LFB12
 6453 0078 00000000 		.4byte	.LFB13
 6454 007c 0C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 174


 6455 0080 00000000 		.4byte	.LFB14
 6456 0084 14000000 		.4byte	.LFE14-.LFB14
 6457 0088 00000000 		.4byte	.LFB15
 6458 008c 10000000 		.4byte	.LFE15-.LFB15
 6459 0090 00000000 		.4byte	.LFB16
 6460 0094 0C000000 		.4byte	.LFE16-.LFB16
 6461 0098 00000000 		.4byte	.LFB17
 6462 009c 14000000 		.4byte	.LFE17-.LFB17
 6463 00a0 00000000 		.4byte	.LFB18
 6464 00a4 14000000 		.4byte	.LFE18-.LFB18
 6465 00a8 00000000 		.4byte	.LFB19
 6466 00ac 18000000 		.4byte	.LFE19-.LFB19
 6467 00b0 00000000 		.4byte	.LFB20
 6468 00b4 18000000 		.4byte	.LFE20-.LFB20
 6469 00b8 00000000 		.4byte	.LFB21
 6470 00bc 40000000 		.4byte	.LFE21-.LFB21
 6471 00c0 00000000 		.4byte	.LFB22
 6472 00c4 28000000 		.4byte	.LFE22-.LFB22
 6473 00c8 00000000 		.4byte	.LFB23
 6474 00cc 14000000 		.4byte	.LFE23-.LFB23
 6475 00d0 00000000 		.4byte	.LFB24
 6476 00d4 18000000 		.4byte	.LFE24-.LFB24
 6477 00d8 00000000 		.4byte	.LFB25
 6478 00dc 14000000 		.4byte	.LFE25-.LFB25
 6479 00e0 00000000 		.4byte	.LFB26
 6480 00e4 14000000 		.4byte	.LFE26-.LFB26
 6481 00e8 00000000 		.4byte	.LFB27
 6482 00ec 14000000 		.4byte	.LFE27-.LFB27
 6483 00f0 00000000 		.4byte	.LFB28
 6484 00f4 04000000 		.4byte	.LFE28-.LFB28
 6485 00f8 00000000 		.4byte	.LFB29
 6486 00fc 18000000 		.4byte	.LFE29-.LFB29
 6487 0100 00000000 		.4byte	.LFB30
 6488 0104 48000000 		.4byte	.LFE30-.LFB30
 6489 0108 00000000 		.4byte	.LFB31
 6490 010c 14000000 		.4byte	.LFE31-.LFB31
 6491 0110 00000000 		.4byte	.LFB32
 6492 0114 58000000 		.4byte	.LFE32-.LFB32
 6493 0118 00000000 		.4byte	.LFB33
 6494 011c 78000000 		.4byte	.LFE33-.LFB33
 6495 0120 00000000 		.4byte	.LFB34
 6496 0124 60000000 		.4byte	.LFE34-.LFB34
 6497 0128 00000000 		.4byte	.LFB35
 6498 012c 18000000 		.4byte	.LFE35-.LFB35
 6499 0130 00000000 		.4byte	.LFB36
 6500 0134 10000000 		.4byte	.LFE36-.LFB36
 6501 0138 00000000 		.4byte	.LFB37
 6502 013c 10000000 		.4byte	.LFE37-.LFB37
 6503 0140 00000000 		.4byte	.LFB38
 6504 0144 10000000 		.4byte	.LFE38-.LFB38
 6505 0148 00000000 		.4byte	.LFB39
 6506 014c 10000000 		.4byte	.LFE39-.LFB39
 6507 0150 00000000 		.4byte	.LFB40
 6508 0154 10000000 		.4byte	.LFE40-.LFB40
 6509 0158 00000000 		.4byte	.LFB41
 6510 015c 10000000 		.4byte	.LFE41-.LFB41
 6511 0160 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 175


 6512 0164 20000000 		.4byte	.LFE42-.LFB42
 6513 0168 00000000 		.4byte	.LFB43
 6514 016c 10000000 		.4byte	.LFE43-.LFB43
 6515 0170 00000000 		.4byte	.LFB44
 6516 0174 0C000000 		.4byte	.LFE44-.LFB44
 6517 0178 00000000 		.4byte	.LFB45
 6518 017c 10000000 		.4byte	.LFE45-.LFB45
 6519 0180 00000000 		.4byte	.LFB46
 6520 0184 0C000000 		.4byte	.LFE46-.LFB46
 6521 0188 00000000 		.4byte	.LFB48
 6522 018c 70000000 		.4byte	.LFE48-.LFB48
 6523 0190 00000000 		.4byte	.LFB49
 6524 0194 20000000 		.4byte	.LFE49-.LFB49
 6525 0198 00000000 		.4byte	.LFB50
 6526 019c 20000000 		.4byte	.LFE50-.LFB50
 6527 01a0 00000000 		.4byte	.LFB51
 6528 01a4 20000000 		.4byte	.LFE51-.LFB51
 6529 01a8 00000000 		.4byte	.LFB52
 6530 01ac 40000000 		.4byte	.LFE52-.LFB52
 6531 01b0 00000000 		.4byte	0
 6532 01b4 00000000 		.4byte	0
 6533              		.section	.debug_ranges,"",%progbits
 6534              	.Ldebug_ranges0:
 6535 0000 00000000 		.4byte	.LBB59
 6536 0004 06000000 		.4byte	.LBE59
 6537 0008 06000000 		.4byte	.LBB62
 6538 000c 0A000000 		.4byte	.LBE62
 6539 0010 00000000 		.4byte	0
 6540 0014 00000000 		.4byte	0
 6541 0018 0A000000 		.4byte	.LBB71
 6542 001c 0C000000 		.4byte	.LBE71
 6543 0020 0E000000 		.4byte	.LBB74
 6544 0024 14000000 		.4byte	.LBE74
 6545 0028 00000000 		.4byte	0
 6546 002c 00000000 		.4byte	0
 6547 0030 0A000000 		.4byte	.LBB115
 6548 0034 0E000000 		.4byte	.LBE115
 6549 0038 18000000 		.4byte	.LBB118
 6550 003c 1A000000 		.4byte	.LBE118
 6551 0040 00000000 		.4byte	0
 6552 0044 00000000 		.4byte	0
 6553 0048 1A000000 		.4byte	.LBB119
 6554 004c 22000000 		.4byte	.LBE119
 6555 0050 24000000 		.4byte	.LBB124
 6556 0054 26000000 		.4byte	.LBE124
 6557 0058 00000000 		.4byte	0
 6558 005c 00000000 		.4byte	0
 6559 0060 30000000 		.4byte	.LBB125
 6560 0064 32000000 		.4byte	.LBE125
 6561 0068 34000000 		.4byte	.LBB132
 6562 006c 36000000 		.4byte	.LBE132
 6563 0070 3C000000 		.4byte	.LBB136
 6564 0074 40000000 		.4byte	.LBE136
 6565 0078 00000000 		.4byte	0
 6566 007c 00000000 		.4byte	0
 6567 0080 32000000 		.4byte	.LBB129
 6568 0084 34000000 		.4byte	.LBE129
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 176


 6569 0088 36000000 		.4byte	.LBB133
 6570 008c 38000000 		.4byte	.LBE133
 6571 0090 00000000 		.4byte	0
 6572 0094 00000000 		.4byte	0
 6573 0098 44000000 		.4byte	.LBB137
 6574 009c 48000000 		.4byte	.LBE137
 6575 00a0 48000000 		.4byte	.LBB144
 6576 00a4 56000000 		.4byte	.LBE144
 6577 00a8 00000000 		.4byte	0
 6578 00ac 00000000 		.4byte	0
 6579 00b0 44000000 		.4byte	.LBB139
 6580 00b4 48000000 		.4byte	.LBE139
 6581 00b8 48000000 		.4byte	.LBB142
 6582 00bc 4E000000 		.4byte	.LBE142
 6583 00c0 00000000 		.4byte	0
 6584 00c4 00000000 		.4byte	0
 6585 00c8 06000000 		.4byte	.LBB157
 6586 00cc 08000000 		.4byte	.LBE157
 6587 00d0 12000000 		.4byte	.LBB161
 6588 00d4 14000000 		.4byte	.LBE161
 6589 00d8 14000000 		.4byte	.LBB162
 6590 00dc 16000000 		.4byte	.LBE162
 6591 00e0 00000000 		.4byte	0
 6592 00e4 00000000 		.4byte	0
 6593 00e8 16000000 		.4byte	.LBB163
 6594 00ec 1E000000 		.4byte	.LBE163
 6595 00f0 20000000 		.4byte	.LBB168
 6596 00f4 22000000 		.4byte	.LBE168
 6597 00f8 00000000 		.4byte	0
 6598 00fc 00000000 		.4byte	0
 6599 0100 2C000000 		.4byte	.LBB169
 6600 0104 2E000000 		.4byte	.LBE169
 6601 0108 30000000 		.4byte	.LBB176
 6602 010c 32000000 		.4byte	.LBE176
 6603 0110 38000000 		.4byte	.LBB180
 6604 0114 3C000000 		.4byte	.LBE180
 6605 0118 00000000 		.4byte	0
 6606 011c 00000000 		.4byte	0
 6607 0120 2E000000 		.4byte	.LBB173
 6608 0124 30000000 		.4byte	.LBE173
 6609 0128 32000000 		.4byte	.LBB177
 6610 012c 34000000 		.4byte	.LBE177
 6611 0130 00000000 		.4byte	0
 6612 0134 00000000 		.4byte	0
 6613 0138 00000000 		.4byte	.LBB181
 6614 013c 04000000 		.4byte	.LBE181
 6615 0140 04000000 		.4byte	.LBB184
 6616 0144 0A000000 		.4byte	.LBE184
 6617 0148 00000000 		.4byte	0
 6618 014c 00000000 		.4byte	0
 6619 0150 00000000 		.4byte	.LBB187
 6620 0154 02000000 		.4byte	.LBE187
 6621 0158 10000000 		.4byte	.LBB190
 6622 015c 20000000 		.4byte	.LBE190
 6623 0160 00000000 		.4byte	0
 6624 0164 00000000 		.4byte	0
 6625 0168 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 177


 6626 016c 28000000 		.4byte	.LFE47
 6627 0170 00000000 		.4byte	.LFB1
 6628 0174 14000000 		.4byte	.LFE1
 6629 0178 00000000 		.4byte	.LFB2
 6630 017c 24000000 		.4byte	.LFE2
 6631 0180 00000000 		.4byte	.LFB3
 6632 0184 04010000 		.4byte	.LFE3
 6633 0188 00000000 		.4byte	.LFB4
 6634 018c 14000000 		.4byte	.LFE4
 6635 0190 00000000 		.4byte	.LFB5
 6636 0194 10000000 		.4byte	.LFE5
 6637 0198 00000000 		.4byte	.LFB6
 6638 019c 20000000 		.4byte	.LFE6
 6639 01a0 00000000 		.4byte	.LFB7
 6640 01a4 18000000 		.4byte	.LFE7
 6641 01a8 00000000 		.4byte	.LFB8
 6642 01ac 28000000 		.4byte	.LFE8
 6643 01b0 00000000 		.4byte	.LFB9
 6644 01b4 90000000 		.4byte	.LFE9
 6645 01b8 00000000 		.4byte	.LFB10
 6646 01bc 50000000 		.4byte	.LFE10
 6647 01c0 00000000 		.4byte	.LFB11
 6648 01c4 20000000 		.4byte	.LFE11
 6649 01c8 00000000 		.4byte	.LFB12
 6650 01cc 10000000 		.4byte	.LFE12
 6651 01d0 00000000 		.4byte	.LFB13
 6652 01d4 0C000000 		.4byte	.LFE13
 6653 01d8 00000000 		.4byte	.LFB14
 6654 01dc 14000000 		.4byte	.LFE14
 6655 01e0 00000000 		.4byte	.LFB15
 6656 01e4 10000000 		.4byte	.LFE15
 6657 01e8 00000000 		.4byte	.LFB16
 6658 01ec 0C000000 		.4byte	.LFE16
 6659 01f0 00000000 		.4byte	.LFB17
 6660 01f4 14000000 		.4byte	.LFE17
 6661 01f8 00000000 		.4byte	.LFB18
 6662 01fc 14000000 		.4byte	.LFE18
 6663 0200 00000000 		.4byte	.LFB19
 6664 0204 18000000 		.4byte	.LFE19
 6665 0208 00000000 		.4byte	.LFB20
 6666 020c 18000000 		.4byte	.LFE20
 6667 0210 00000000 		.4byte	.LFB21
 6668 0214 40000000 		.4byte	.LFE21
 6669 0218 00000000 		.4byte	.LFB22
 6670 021c 28000000 		.4byte	.LFE22
 6671 0220 00000000 		.4byte	.LFB23
 6672 0224 14000000 		.4byte	.LFE23
 6673 0228 00000000 		.4byte	.LFB24
 6674 022c 18000000 		.4byte	.LFE24
 6675 0230 00000000 		.4byte	.LFB25
 6676 0234 14000000 		.4byte	.LFE25
 6677 0238 00000000 		.4byte	.LFB26
 6678 023c 14000000 		.4byte	.LFE26
 6679 0240 00000000 		.4byte	.LFB27
 6680 0244 14000000 		.4byte	.LFE27
 6681 0248 00000000 		.4byte	.LFB28
 6682 024c 04000000 		.4byte	.LFE28
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 178


 6683 0250 00000000 		.4byte	.LFB29
 6684 0254 18000000 		.4byte	.LFE29
 6685 0258 00000000 		.4byte	.LFB30
 6686 025c 48000000 		.4byte	.LFE30
 6687 0260 00000000 		.4byte	.LFB31
 6688 0264 14000000 		.4byte	.LFE31
 6689 0268 00000000 		.4byte	.LFB32
 6690 026c 58000000 		.4byte	.LFE32
 6691 0270 00000000 		.4byte	.LFB33
 6692 0274 78000000 		.4byte	.LFE33
 6693 0278 00000000 		.4byte	.LFB34
 6694 027c 60000000 		.4byte	.LFE34
 6695 0280 00000000 		.4byte	.LFB35
 6696 0284 18000000 		.4byte	.LFE35
 6697 0288 00000000 		.4byte	.LFB36
 6698 028c 10000000 		.4byte	.LFE36
 6699 0290 00000000 		.4byte	.LFB37
 6700 0294 10000000 		.4byte	.LFE37
 6701 0298 00000000 		.4byte	.LFB38
 6702 029c 10000000 		.4byte	.LFE38
 6703 02a0 00000000 		.4byte	.LFB39
 6704 02a4 10000000 		.4byte	.LFE39
 6705 02a8 00000000 		.4byte	.LFB40
 6706 02ac 10000000 		.4byte	.LFE40
 6707 02b0 00000000 		.4byte	.LFB41
 6708 02b4 10000000 		.4byte	.LFE41
 6709 02b8 00000000 		.4byte	.LFB42
 6710 02bc 20000000 		.4byte	.LFE42
 6711 02c0 00000000 		.4byte	.LFB43
 6712 02c4 10000000 		.4byte	.LFE43
 6713 02c8 00000000 		.4byte	.LFB44
 6714 02cc 0C000000 		.4byte	.LFE44
 6715 02d0 00000000 		.4byte	.LFB45
 6716 02d4 10000000 		.4byte	.LFE45
 6717 02d8 00000000 		.4byte	.LFB46
 6718 02dc 0C000000 		.4byte	.LFE46
 6719 02e0 00000000 		.4byte	.LFB48
 6720 02e4 70000000 		.4byte	.LFE48
 6721 02e8 00000000 		.4byte	.LFB49
 6722 02ec 20000000 		.4byte	.LFE49
 6723 02f0 00000000 		.4byte	.LFB50
 6724 02f4 20000000 		.4byte	.LFE50
 6725 02f8 00000000 		.4byte	.LFB51
 6726 02fc 20000000 		.4byte	.LFE51
 6727 0300 00000000 		.4byte	.LFB52
 6728 0304 40000000 		.4byte	.LFE52
 6729 0308 00000000 		.4byte	0
 6730 030c 00000000 		.4byte	0
 6731              		.section	.debug_line,"",%progbits
 6732              	.Ldebug_line0:
 6733 0000 76060000 		.section	.debug_str,"MS",%progbits,1
 6733      02006700 
 6733      00000201 
 6733      FB0E0D00 
 6733      01010101 
 6734              	.LASF40:
 6735 0000 72616D56 		.ascii	"ramVectorTable\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 179


 6735      6563746F 
 6735      72546162 
 6735      6C6500
 6736              	.LASF10:
 6737 000f 75696E74 		.ascii	"uint16\000"
 6737      313600
 6738              	.LASF67:
 6739 0016 696E7453 		.ascii	"intState\000"
 6739      74617465 
 6739      00
 6740              	.LASF49:
 6741 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6741      73436C6B 
 6741      57726974 
 6741      65486663 
 6741      6C6B4469 
 6742              	.LASF115:
 6743 0038 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6743      4320342E 
 6743      392E3320 
 6743      32303135 
 6743      30333033 
 6744 006b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 6744      20726576 
 6744      6973696F 
 6744      6E203232 
 6744      31323230 
 6745 009e 32202D66 		.ascii	"2 -ffunction-sections -finline-functions -ffat-lto-"
 6745      66756E63 
 6745      74696F6E 
 6745      2D736563 
 6745      74696F6E 
 6746 00d1 6F626A65 		.ascii	"objects\000"
 6746      63747300 
 6747              	.LASF39:
 6748 00d9 6F6C6449 		.ascii	"oldIsr\000"
 6748      737200
 6749              	.LASF92:
 6750 00e0 72657456 		.ascii	"retVal\000"
 6750      616C00
 6751              	.LASF66:
 6752 00e7 43794469 		.ascii	"CyDisableInts\000"
 6752      7361626C 
 6752      65496E74 
 6752      7300
 6753              	.LASF7:
 6754 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 6754      206C6F6E 
 6754      6720756E 
 6754      7369676E 
 6754      65642069 
 6755              	.LASF56:
 6756 010c 70617261 		.ascii	"parameters\000"
 6756      6D657465 
 6756      727300
 6757              	.LASF68:
 6758 0117 4379456E 		.ascii	"CyEnableInts\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 180


 6758      61626C65 
 6758      496E7473 
 6758      00
 6759              	.LASF101:
 6760 0124 696E7465 		.ascii	"interfaceNumber\000"
 6760      72666163 
 6760      654E756D 
 6760      62657200 
 6761              	.LASF81:
 6762 0134 4379536F 		.ascii	"CySoftwareReset\000"
 6762      66747761 
 6762      72655265 
 6762      73657400 
 6763              	.LASF32:
 6764 0144 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6764      73546963 
 6764      6B456E61 
 6764      626C6549 
 6764      6E746572 
 6765              	.LASF77:
 6766 015d 4379496E 		.ascii	"CyIntGetState\000"
 6766      74476574 
 6766      53746174 
 6766      6500
 6767              	.LASF6:
 6768 016b 6C6F6E67 		.ascii	"long long int\000"
 6768      206C6F6E 
 6768      6720696E 
 6768      7400
 6769              	.LASF0:
 6770 0179 7369676E 		.ascii	"signed char\000"
 6770      65642063 
 6770      68617200 
 6771              	.LASF22:
 6772 0185 66726571 		.ascii	"freq\000"
 6772      00
 6773              	.LASF82:
 6774 018a 43794465 		.ascii	"CyDelayFreq\000"
 6774      6C617946 
 6774      72657100 
 6775              	.LASF23:
 6776 0196 696E7465 		.ascii	"interruptState\000"
 6776      72727570 
 6776      74537461 
 6776      746500
 6777              	.LASF25:
 6778 01a5 6C664C69 		.ascii	"lfLimit\000"
 6778      6D697400 
 6779              	.LASF88:
 6780 01ad 43795379 		.ascii	"CySysTickGetReload\000"
 6780      73546963 
 6780      6B476574 
 6780      52656C6F 
 6780      616400
 6781              	.LASF35:
 6782 01c0 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6782      73436C6B 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 181


 6782      496D6F47 
 6782      65745763 
 6782      6F4C6F63 
 6783              	.LASF58:
 6784 01d6 77636F4C 		.ascii	"wcoLock\000"
 6784      6F636B00 
 6785              	.LASF4:
 6786 01de 6C6F6E67 		.ascii	"long int\000"
 6786      20696E74 
 6786      00
 6787              	.LASF78:
 6788 01e7 4379496E 		.ascii	"CyIntDisable\000"
 6788      74446973 
 6788      61626C65 
 6788      00
 6789              	.LASF57:
 6790 01f4 72656756 		.ascii	"regValues\000"
 6790      616C7565 
 6790      7300
 6791              	.LASF9:
 6792 01fe 75696E74 		.ascii	"uint8\000"
 6792      3800
 6793              	.LASF104:
 6794 0204 63796465 		.ascii	"cydelayFreqKhz\000"
 6794      6C617946 
 6794      7265714B 
 6794      687A00
 6795              	.LASF27:
 6796 0213 43794465 		.ascii	"CyDelayUs\000"
 6796      6C617955 
 6796      7300
 6797              	.LASF13:
 6798 021d 646F7562 		.ascii	"double\000"
 6798      6C6500
 6799              	.LASF75:
 6800 0224 73686966 		.ascii	"shift\000"
 6800      7400
 6801              	.LASF31:
 6802 022a 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6802      734C7664 
 6802      436C6561 
 6802      72496E74 
 6802      65727275 
 6803              	.LASF11:
 6804 0241 75696E74 		.ascii	"uint32\000"
 6804      333200
 6805              	.LASF69:
 6806 0248 6D61736B 		.ascii	"mask\000"
 6806      00
 6807              	.LASF63:
 6808 024d 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6808      73436C6B 
 6808      47657453 
 6808      7973636C 
 6808      6B536F75 
 6809              	.LASF21:
 6810 0265 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 182


 6810      73436C6B 
 6810      496D6F45 
 6810      6E61626C 
 6810      6557636F 
 6811              	.LASF76:
 6812 027e 4379496E 		.ascii	"CyIntGetPriority\000"
 6812      74476574 
 6812      5072696F 
 6812      72697479 
 6812      00
 6813              	.LASF106:
 6814 028f 63796465 		.ascii	"cydelay32kMs\000"
 6814      6C617933 
 6814      326B4D73 
 6814      00
 6815              	.LASF83:
 6816 029c 43795379 		.ascii	"CySysTickInit\000"
 6816      73546963 
 6816      6B496E69 
 6816      7400
 6817              	.LASF42:
 6818 02aa 76616C75 		.ascii	"value\000"
 6818      6500
 6819              	.LASF34:
 6820 02b0 636C6F63 		.ascii	"clockSource\000"
 6820      6B536F75 
 6820      72636500 
 6821              	.LASF94:
 6822 02bc 43794765 		.ascii	"CyGetUniqueId\000"
 6822      74556E69 
 6822      71756549 
 6822      6400
 6823              	.LASF36:
 6824 02ca 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6824      73546963 
 6824      6B476574 
 6824      436F756E 
 6824      74466C61 
 6825              	.LASF8:
 6826 02e0 756E7369 		.ascii	"unsigned int\000"
 6826      676E6564 
 6826      20696E74 
 6826      00
 6827              	.LASF43:
 6828 02ed 43795379 		.ascii	"CySysTickClear\000"
 6828      73546963 
 6828      6B436C65 
 6828      617200
 6829              	.LASF5:
 6830 02fc 6C6F6E67 		.ascii	"long unsigned int\000"
 6830      20756E73 
 6830      69676E65 
 6830      6420696E 
 6830      7400
 6831              	.LASF87:
 6832 030e 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6832      734C7664 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 183


 6832      47657449 
 6832      6E746572 
 6832      72757074 
 6833              	.LASF48:
 6834 0329 43795379 		.ascii	"CySysClkImoStop\000"
 6834      73436C6B 
 6834      496D6F53 
 6834      746F7000 
 6835              	.LASF111:
 6836 0339 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6836      74657243 
 6836      72697469 
 6836      63616C53 
 6836      65637469 
 6837              	.LASF79:
 6838 0350 4379496E 		.ascii	"CyIntSetPending\000"
 6838      74536574 
 6838      50656E64 
 6838      696E6700 
 6839              	.LASF93:
 6840 0360 43795379 		.ascii	"CySysTickGetCallback\000"
 6840      73546963 
 6840      6B476574 
 6840      43616C6C 
 6840      6261636B 
 6841              	.LASF64:
 6842 0375 43795379 		.ascii	"CySysGetResetReason\000"
 6842      73476574 
 6842      52657365 
 6842      74526561 
 6842      736F6E00 
 6843              	.LASF3:
 6844 0389 73686F72 		.ascii	"short unsigned int\000"
 6844      7420756E 
 6844      7369676E 
 6844      65642069 
 6844      6E7400
 6845              	.LASF24:
 6846 039c 72656754 		.ascii	"regTmp\000"
 6846      6D7000
 6847              	.LASF33:
 6848 03a3 43795379 		.ascii	"CySysTickSetClockSource\000"
 6848      73546963 
 6848      6B536574 
 6848      436C6F63 
 6848      6B536F75 
 6849              	.LASF71:
 6850 03bb 4379496E 		.ascii	"CyIntSetVector\000"
 6850      74536574 
 6850      56656374 
 6850      6F7200
 6851              	.LASF37:
 6852 03ca 6E756D62 		.ascii	"number\000"
 6852      657200
 6853              	.LASF74:
 6854 03d1 7072696F 		.ascii	"priority\000"
 6854      72697479 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 184


 6854      00
 6855              	.LASF55:
 6856 03da 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6856      73436C6B 
 6856      57726974 
 6856      65496D6F 
 6856      46726571 
 6857              	.LASF98:
 6858 03ef 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6858      73536574 
 6858      466C6173 
 6858      68416363 
 6858      65737341 
 6859              	.LASF119:
 6860 040e 4379496E 		.ascii	"CyIntSetSysVector\000"
 6860      74536574 
 6860      53797356 
 6860      6563746F 
 6860      7200
 6861              	.LASF30:
 6862 0420 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6862      73436C6B 
 6862      496D6F44 
 6862      69736162 
 6862      6C655763 
 6863              	.LASF16:
 6864 043a 72656733 		.ascii	"reg32\000"
 6864      3200
 6865              	.LASF84:
 6866 0440 43795379 		.ascii	"CySysTickStart\000"
 6866      73546963 
 6866      6B537461 
 6866      727400
 6867              	.LASF65:
 6868 044f 72657475 		.ascii	"returnStatus\000"
 6868      726E5374 
 6868      61747573 
 6868      00
 6869              	.LASF97:
 6870 045c 736F7572 		.ascii	"source\000"
 6870      636500
 6871              	.LASF18:
 6872 0463 73697A65 		.ascii	"sizetype\000"
 6872      74797065 
 6872      00
 6873              	.LASF107:
 6874 046c 43795379 		.ascii	"CySysTickInitVar\000"
 6874      73546963 
 6874      6B496E69 
 6874      74566172 
 6874      00
 6875              	.LASF100:
 6876 047d 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6876      73536574 
 6876      50657269 
 6876      70686572 
 6876      616C4163 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 185


 6877              	.LASF80:
 6878 04a1 4379496E 		.ascii	"CyIntClearPending\000"
 6878      74436C65 
 6878      61725065 
 6878      6E64696E 
 6878      6700
 6879              	.LASF38:
 6880 04b3 61646472 		.ascii	"address\000"
 6880      65737300 
 6881              	.LASF51:
 6882 04bb 73797363 		.ascii	"sysclkSource\000"
 6882      6C6B536F 
 6882      75726365 
 6882      00
 6883              	.LASF91:
 6884 04c8 66756E63 		.ascii	"function\000"
 6884      74696F6E 
 6884      00
 6885              	.LASF108:
 6886 04d1 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6886      6F467265 
 6886      714D687A 
 6886      32526567 
 6886      00
 6887              	.LASF89:
 6888 04e2 43795379 		.ascii	"CySysTickGetValue\000"
 6888      73546963 
 6888      6B476574 
 6888      56616C75 
 6888      6500
 6889              	.LASF103:
 6890 04f4 63796465 		.ascii	"cydelayFreqHz\000"
 6890      6C617946 
 6890      72657148 
 6890      7A00
 6891              	.LASF73:
 6892 0502 4379496E 		.ascii	"CyIntSetPriority\000"
 6892      74536574 
 6892      5072696F 
 6892      72697479 
 6892      00
 6893              	.LASF12:
 6894 0513 666C6F61 		.ascii	"float\000"
 6894      7400
 6895              	.LASF113:
 6896 0519 43794578 		.ascii	"CyExitCriticalSection\000"
 6896      69744372 
 6896      69746963 
 6896      616C5365 
 6896      6374696F 
 6897              	.LASF59:
 6898 052f 43795379 		.ascii	"CySysLvdEnable\000"
 6898      734C7664 
 6898      456E6162 
 6898      6C6500
 6899              	.LASF19:
 6900 053e 63795379 		.ascii	"cySysTickCallback\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 186


 6900      73546963 
 6900      6B43616C 
 6900      6C626163 
 6900      6B00
 6901              	.LASF72:
 6902 0550 4379496E 		.ascii	"CyIntGetVector\000"
 6902      74476574 
 6902      56656374 
 6902      6F7200
 6903              	.LASF47:
 6904 055f 6D696C6C 		.ascii	"milliseconds\000"
 6904      69736563 
 6904      6F6E6473 
 6904      00
 6905              	.LASF110:
 6906 056c 43794465 		.ascii	"CyDelayCycles\000"
 6906      6C617943 
 6906      79636C65 
 6906      7300
 6907              	.LASF15:
 6908 057a 72656738 		.ascii	"reg8\000"
 6908      00
 6909              	.LASF60:
 6910 057f 74687265 		.ascii	"threshold\000"
 6910      73686F6C 
 6910      6400
 6911              	.LASF20:
 6912 0589 43794861 		.ascii	"CyHalt\000"
 6912      6C7400
 6913              	.LASF96:
 6914 0590 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6914      73536574 
 6914      52616D41 
 6914      63636573 
 6914      73417262 
 6915              	.LASF1:
 6916 05ad 756E7369 		.ascii	"unsigned char\000"
 6916      676E6564 
 6916      20636861 
 6916      7200
 6917              	.LASF2:
 6918 05bb 73686F72 		.ascii	"short int\000"
 6918      7420696E 
 6918      7400
 6919              	.LASF44:
 6920 05c5 4379496E 		.ascii	"CyIntEnable\000"
 6920      74456E61 
 6920      626C6500 
 6921              	.LASF70:
 6922 05d1 4379496E 		.ascii	"CyIntGetSysVector\000"
 6922      74476574 
 6922      53797356 
 6922      6563746F 
 6922      7200
 6923              	.LASF53:
 6924 05e3 636C6B53 		.ascii	"clkSelect\000"
 6924      656C6563 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 187


 6924      7400
 6925              	.LASF28:
 6926 05ed 72656173 		.ascii	"reason\000"
 6926      6F6E00
 6927              	.LASF117:
 6928 05f4 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 6928      73657273 
 6928      5C676C65 
 6928      6E6E5C4F 
 6928      6E654472 
 6929 0622 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 6929      69737475 
 6929      72655F53 
 6929      656E736F 
 6929      725C4D6F 
 6930              	.LASF14:
 6931 064a 63686172 		.ascii	"char\000"
 6931      00
 6932              	.LASF109:
 6933 064f 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 6933      6F467265 
 6933      714D687A 
 6933      3244706C 
 6933      6C4F6666 
 6934              	.LASF17:
 6935 0667 63796973 		.ascii	"cyisraddress\000"
 6935      72616464 
 6935      72657373 
 6935      00
 6936              	.LASF45:
 6937 0674 43795379 		.ascii	"CySysTickEnable\000"
 6937      73546963 
 6937      6B456E61 
 6937      626C6500 
 6938              	.LASF52:
 6939 0684 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6939      73436C6B 
 6939      57726974 
 6939      65537973 
 6939      636C6B44 
 6940              	.LASF90:
 6941 069b 43795379 		.ascii	"CySysTickSetCallback\000"
 6941      73546963 
 6941      6B536574 
 6941      43616C6C 
 6941      6261636B 
 6942              	.LASF102:
 6943 06b0 43795379 		.ascii	"CySysTickCallbacks\000"
 6943      73546963 
 6943      6B43616C 
 6943      6C626163 
 6943      6B7300
 6944              	.LASF95:
 6945 06c3 756E6971 		.ascii	"uniqueId\000"
 6945      75654964 
 6945      00
 6946              	.LASF26:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 188


 6947 06cc 666C6173 		.ascii	"flashCtlReg\000"
 6947      6843746C 
 6947      52656700 
 6948              	.LASF46:
 6949 06d8 43794465 		.ascii	"CyDelay\000"
 6949      6C617900 
 6950              	.LASF86:
 6951 06e0 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6951      73546963 
 6951      6B446973 
 6951      61626C65 
 6951      496E7465 
 6952              	.LASF62:
 6953 06fa 43795379 		.ascii	"CySysLvdDisable\000"
 6953      734C7664 
 6953      44697361 
 6953      626C6500 
 6954              	.LASF105:
 6955 070a 63796465 		.ascii	"cydelayFreqMhz\000"
 6955      6C617946 
 6955      7265714D 
 6955      687A00
 6956              	.LASF114:
 6957 0719 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6957      73436C6B 
 6957      57636F45 
 6957      6E61626C 
 6957      656400
 6958              	.LASF99:
 6959 072c 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6959      73536574 
 6959      446D6163 
 6959      41636365 
 6959      73734172 
 6960              	.LASF85:
 6961 074a 43795379 		.ascii	"CySysTickStop\000"
 6961      73546963 
 6961      6B53746F 
 6961      7000
 6962              	.LASF54:
 6963 0758 64697669 		.ascii	"divider\000"
 6963      64657200 
 6964              	.LASF61:
 6965 0760 43795379 		.ascii	"CySysClkImoStart\000"
 6965      73436C6B 
 6965      496D6F53 
 6965      74617274 
 6965      00
 6966              	.LASF112:
 6967 0771 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6967      73466C61 
 6967      73685365 
 6967      74576169 
 6967      74437963 
 6968              	.LASF116:
 6969 0789 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6969      72617465 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccg9C0vu.s 			page 189


 6969      645F536F 
 6969      75726365 
 6969      5C50536F 
 6970              	.LASF29:
 6971 07a8 6D696372 		.ascii	"microseconds\000"
 6971      6F736563 
 6971      6F6E6473 
 6971      00
 6972              	.LASF50:
 6973 07b5 746D7052 		.ascii	"tmpReg\000"
 6973      656700
 6974              	.LASF41:
 6975 07bc 43795379 		.ascii	"CySysTickSetReload\000"
 6975      73546963 
 6975      6B536574 
 6975      52656C6F 
 6975      616400
 6976              	.LASF118:
 6977 07cf 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6977      73546963 
 6977      6B536572 
 6977      76696365 
 6977      43616C6C 
 6978              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
