ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_1_SCBCLK.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_1_SCBCLK_StartEx,"ax",%progbits
  18              		.align	2
  19              		.global	I2C_1_SCBCLK_StartEx
  20              		.code	16
  21              		.thumb_func
  22              		.type	I2C_1_SCBCLK_StartEx, %function
  23              	I2C_1_SCBCLK_StartEx:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\I2C_1_SCBCLK.c"
   1:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * File Name: I2C_1_SCBCLK.c
   3:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Version 2.20
   4:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
   5:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Description:
   6:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
   8:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Note:
   9:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  12:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** ********************************************************************************
  13:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  19:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #include "I2C_1_SCBCLK.h"
  21:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  22:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  24:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Function Name: I2C_1_SCBCLK_StartEx
  26:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** ********************************************************************************
  27:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  28:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Summary:
  29:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  31:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Parameters:
  32:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 2


  33:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *    clock is started.
  34:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  35:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Returns:
  36:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
  37:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  38:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** void I2C_1_SCBCLK_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28              	.LVL0:
  41:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     while((I2C_1_SCBCLK_CMD_REG & I2C_1_SCBCLK_CMD_ENABLE_MASK) != 0u)
  29              		.loc 1 42 0
  30 0000 044A     		ldr	r2, .L5
  31              	.L2:
  32              		.loc 1 42 0 is_stmt 0 discriminator 1
  33 0002 1368     		ldr	r3, [r2]
  34 0004 002B     		cmp	r3, #0
  35 0006 FCDB     		blt	.L2
  43:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     {
  44:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     }
  45:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     
  46:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     I2C_1_SCBCLK_CMD_REG =
  48:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)I2C_1_SCBCLK__DIV_ID << I2C_1_SCBCLK_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         (alignClkDiv << I2C_1_SCBCLK_CMD_PA_DIV_SHIFT) |
  36              		.loc 1 49 0 is_stmt 1
  37 0008 034B     		ldr	r3, .L5+4
  38 000a 0002     		lsl	r0, r0, #8
  39              	.LVL1:
  40 000c 1843     		orr	r0, r3
  47:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)I2C_1_SCBCLK__DIV_ID << I2C_1_SCBCLK_CMD_DIV_SHIFT)|
  41              		.loc 1 47 0
  42 000e 014B     		ldr	r3, .L5
  50:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         (uint32)I2C_1_SCBCLK_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** }
  43              		.loc 1 51 0
  44              		@ sp needed
  47:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)I2C_1_SCBCLK__DIV_ID << I2C_1_SCBCLK_CMD_DIV_SHIFT)|
  45              		.loc 1 47 0
  46 0010 1860     		str	r0, [r3]
  47              		.loc 1 51 0
  48 0012 7047     		bx	lr
  49              	.L6:
  50              		.align	2
  51              	.L5:
  52 0014 00000140 		.word	1073807360
  53 0018 40000080 		.word	-2147483584
  54              		.cfi_endproc
  55              	.LFE0:
  56              		.size	I2C_1_SCBCLK_StartEx, .-I2C_1_SCBCLK_StartEx
  57              		.section	.text.I2C_1_SCBCLK_Stop,"ax",%progbits
  58              		.align	2
  59              		.global	I2C_1_SCBCLK_Stop
  60              		.code	16
  61              		.thumb_func
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 3


  62              		.type	I2C_1_SCBCLK_Stop, %function
  63              	I2C_1_SCBCLK_Stop:
  64              	.LFB1:
  52:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  53:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #else
  54:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  55:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Function Name: I2C_1_SCBCLK_Start
  57:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** ********************************************************************************
  58:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  59:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Summary:
  60:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  62:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Parameters:
  63:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
  64:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  65:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Returns:
  66:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
  67:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  68:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  70:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** void I2C_1_SCBCLK_Start(void)
  71:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** {
  72:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     I2C_1_SCBCLK_ENABLE_REG |= I2C_1_SCBCLK__ENABLE_MASK;
  74:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** }
  75:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  76:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  78:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  79:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Function Name: I2C_1_SCBCLK_Stop
  81:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** ********************************************************************************
  82:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  83:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Summary:
  84:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  disabled.
  87:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  88:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Parameters:
  89:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
  90:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  91:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Returns:
  92:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
  93:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
  94:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** void I2C_1_SCBCLK_Stop(void)
  96:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** {
  65              		.loc 1 96 0
  66              		.cfi_startproc
  97:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
  99:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     while((I2C_1_SCBCLK_CMD_REG & I2C_1_SCBCLK_CMD_ENABLE_MASK) != 0u)
  67              		.loc 1 100 0
  68 0000 034A     		ldr	r2, .L10
  69              	.L8:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 4


  70              		.loc 1 100 0 is_stmt 0 discriminator 1
  71 0002 1368     		ldr	r3, [r2]
  72 0004 002B     		cmp	r3, #0
  73 0006 FCDB     		blt	.L8
 101:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     {
 102:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     }
 103:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     
 104:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     I2C_1_SCBCLK_CMD_REG =
  74              		.loc 1 105 0 is_stmt 1
  75 0008 024A     		ldr	r2, .L10+4
  76 000a 014B     		ldr	r3, .L10
 106:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)I2C_1_SCBCLK__DIV_ID << I2C_1_SCBCLK_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)I2C_1_SCBCLK_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 109:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #else
 110:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 111:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     I2C_1_SCBCLK_ENABLE_REG &= (uint32)(~I2C_1_SCBCLK__ENABLE_MASK);
 113:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     
 114:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** }
  77              		.loc 1 115 0
  78              		@ sp needed
 105:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)I2C_1_SCBCLK__DIV_ID << I2C_1_SCBCLK_CMD_DIV_SHIFT)|
  79              		.loc 1 105 0
  80 000c 1A60     		str	r2, [r3]
  81              		.loc 1 115 0
  82 000e 7047     		bx	lr
  83              	.L11:
  84              		.align	2
  85              	.L10:
  86 0010 00000140 		.word	1073807360
  87 0014 40000040 		.word	1073741888
  88              		.cfi_endproc
  89              	.LFE1:
  90              		.size	I2C_1_SCBCLK_Stop, .-I2C_1_SCBCLK_Stop
  91              		.section	.text.I2C_1_SCBCLK_SetFractionalDividerRegister,"ax",%progbits
  92              		.align	2
  93              		.global	I2C_1_SCBCLK_SetFractionalDividerRegister
  94              		.code	16
  95              		.thumb_func
  96              		.type	I2C_1_SCBCLK_SetFractionalDividerRegister, %function
  97              	I2C_1_SCBCLK_SetFractionalDividerRegister:
  98              	.LFB2:
 116:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 117:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 118:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Function Name: I2C_1_SCBCLK_SetFractionalDividerRegister
 120:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** ********************************************************************************
 121:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 122:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Summary:
 123:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 125:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Parameters:
 126:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 5


 128:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Returns:
 131:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
 132:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 133:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** void I2C_1_SCBCLK_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** {
  99              		.loc 1 135 0
 100              		.cfi_startproc
 101              	.LVL2:
 102 0000 10B5     		push	{r4, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 4, -8
 105              		.cfi_offset 14, -4
 136:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     
 139:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #if defined (I2C_1_SCBCLK__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     
 141:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     maskVal = I2C_1_SCBCLK_DIV_REG & 
 143:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_1_SCBCLK_DIV_INT_MASK | I2C_1_SCBCLK_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     regVal = maskVal |
 146:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  I2C_1_SCBCLK_DIV_INT_SHIFT) & I2C_1_SCBCLK_DIV_INT_MASK) |
 147:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)((uint32)clkFractional << I2C_1_SCBCLK_DIV_FRAC_SHIFT) & I2C_1_SCBCLK_DIV_FRAC_MAS
 106              		.loc 1 147 0
 107 0002 FF24     		mov	r4, #255
 108 0004 C900     		lsl	r1, r1, #3
 109              	.LVL3:
 110 0006 2140     		and	r1, r4
 146:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)((uint32)clkFractional << I2C_1_SCBCLK_DIV_FRAC_SHIFT) & I2C_1_SCBCLK_DIV_FRAC_MAS
 111              		.loc 1 146 0
 112 0008 0002     		lsl	r0, r0, #8
 113              	.LVL4:
 114 000a 0843     		orr	r0, r1
 142:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_1_SCBCLK_DIV_INT_MASK | I2C_1_SCBCLK_DIV_FRAC_MASK)); 
 115              		.loc 1 142 0
 116 000c 0721     		mov	r1, #7
 117 000e 034A     		ldr	r2, .L13
 148:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     
 149:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #else
 150:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     maskVal = I2C_1_SCBCLK_DIV_REG & (uint32)(~(uint32)I2C_1_SCBCLK__DIVIDER_MASK);
 152:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     
 155:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #endif /* I2C_1_SCBCLK__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 157:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     I2C_1_SCBCLK_DIV_REG = regVal;
 158:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** }
 118              		.loc 1 158 0
 119              		@ sp needed
 142:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****                     (uint32)(~(uint32)(I2C_1_SCBCLK_DIV_INT_MASK | I2C_1_SCBCLK_DIV_FRAC_MASK)); 
 120              		.loc 1 142 0
 121 0010 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 6


 122              	.LVL5:
 123 0012 1940     		and	r1, r3
 124              	.LVL6:
 145:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         ((uint32)((uint32)clkDivider <<  I2C_1_SCBCLK_DIV_INT_SHIFT) & I2C_1_SCBCLK_DIV_INT_MASK) |
 125              		.loc 1 145 0
 126 0014 0843     		orr	r0, r1
 127              	.LVL7:
 157:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** }
 128              		.loc 1 157 0
 129 0016 1060     		str	r0, [r2]
 130              		.loc 1 158 0
 131 0018 10BD     		pop	{r4, pc}
 132              	.L14:
 133 001a C046     		.align	2
 134              	.L13:
 135 001c 00030140 		.word	1073808128
 136              		.cfi_endproc
 137              	.LFE2:
 138              		.size	I2C_1_SCBCLK_SetFractionalDividerRegister, .-I2C_1_SCBCLK_SetFractionalDividerRegister
 139              		.section	.text.I2C_1_SCBCLK_GetDividerRegister,"ax",%progbits
 140              		.align	2
 141              		.global	I2C_1_SCBCLK_GetDividerRegister
 142              		.code	16
 143              		.thumb_func
 144              		.type	I2C_1_SCBCLK_GetDividerRegister, %function
 145              	I2C_1_SCBCLK_GetDividerRegister:
 146              	.LFB3:
 159:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 160:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 161:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Function Name: I2C_1_SCBCLK_GetDividerRegister
 163:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** ********************************************************************************
 164:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 165:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Summary:
 166:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 168:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Parameters:
 169:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
 170:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 171:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Returns:
 172:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 175:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** uint16 I2C_1_SCBCLK_GetDividerRegister(void)
 177:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** {
 147              		.loc 1 177 0
 148              		.cfi_startproc
 178:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     return (uint16)((I2C_1_SCBCLK_DIV_REG & I2C_1_SCBCLK_DIV_INT_MASK)
 149              		.loc 1 178 0
 150 0000 024B     		ldr	r3, .L16
 179:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         >> I2C_1_SCBCLK_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** }
 151              		.loc 1 180 0
 152              		@ sp needed
 178:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     return (uint16)((I2C_1_SCBCLK_DIV_REG & I2C_1_SCBCLK_DIV_INT_MASK)
 153              		.loc 1 178 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 7


 154 0002 1868     		ldr	r0, [r3]
 179:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         >> I2C_1_SCBCLK_DIV_INT_SHIFT);
 155              		.loc 1 179 0
 156 0004 000A     		lsr	r0, r0, #8
 178:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     return (uint16)((I2C_1_SCBCLK_DIV_REG & I2C_1_SCBCLK_DIV_INT_MASK)
 157              		.loc 1 178 0
 158 0006 80B2     		uxth	r0, r0
 159              		.loc 1 180 0
 160 0008 7047     		bx	lr
 161              	.L17:
 162 000a C046     		.align	2
 163              	.L16:
 164 000c 00030140 		.word	1073808128
 165              		.cfi_endproc
 166              	.LFE3:
 167              		.size	I2C_1_SCBCLK_GetDividerRegister, .-I2C_1_SCBCLK_GetDividerRegister
 168              		.section	.text.I2C_1_SCBCLK_GetFractionalDividerRegister,"ax",%progbits
 169              		.align	2
 170              		.global	I2C_1_SCBCLK_GetFractionalDividerRegister
 171              		.code	16
 172              		.thumb_func
 173              		.type	I2C_1_SCBCLK_GetFractionalDividerRegister, %function
 174              	I2C_1_SCBCLK_GetFractionalDividerRegister:
 175              	.LFB4:
 181:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 182:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** 
 183:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Function Name: I2C_1_SCBCLK_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** ********************************************************************************
 186:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 187:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Summary:
 188:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 190:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Parameters:
 191:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  None
 192:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 193:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** * Returns:
 194:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *
 197:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** uint8 I2C_1_SCBCLK_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** {
 176              		.loc 1 199 0
 177              		.cfi_startproc
 200:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #if defined (I2C_1_SCBCLK__FRAC_MASK)
 201:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     /* return fractional divider bits */
 202:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     return (uint8)((I2C_1_SCBCLK_DIV_REG & I2C_1_SCBCLK_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****         >> I2C_1_SCBCLK_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #else
 205:Generated_Source\PSoC4/I2C_1_SCBCLK.c ****     return 0u;
 206:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** #endif /* I2C_1_SCBCLK__FRAC_MASK */
 207:Generated_Source\PSoC4/I2C_1_SCBCLK.c **** }
 178              		.loc 1 207 0
 179 0000 0020     		mov	r0, #0
 180              		@ sp needed
 181 0002 7047     		bx	lr
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 8


 182              		.cfi_endproc
 183              	.LFE4:
 184              		.size	I2C_1_SCBCLK_GetFractionalDividerRegister, .-I2C_1_SCBCLK_GetFractionalDividerRegister
 185              		.text
 186              	.Letext0:
 187              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 188              		.section	.debug_info,"",%progbits
 189              	.Ldebug_info0:
 190 0000 62010000 		.4byte	0x162
 191 0004 0400     		.2byte	0x4
 192 0006 00000000 		.4byte	.Ldebug_abbrev0
 193 000a 04       		.byte	0x4
 194 000b 01       		.uleb128 0x1
 195 000c 41000000 		.4byte	.LASF25
 196 0010 01       		.byte	0x1
 197 0011 6B010000 		.4byte	.LASF26
 198 0015 3A020000 		.4byte	.LASF27
 199 0019 00000000 		.4byte	.Ldebug_ranges0+0
 200 001d 00000000 		.4byte	0
 201 0021 00000000 		.4byte	.Ldebug_line0
 202 0025 02       		.uleb128 0x2
 203 0026 01       		.byte	0x1
 204 0027 06       		.byte	0x6
 205 0028 90020000 		.4byte	.LASF0
 206 002c 02       		.uleb128 0x2
 207 002d 01       		.byte	0x1
 208 002e 08       		.byte	0x8
 209 002f E2000000 		.4byte	.LASF1
 210 0033 02       		.uleb128 0x2
 211 0034 02       		.byte	0x2
 212 0035 05       		.byte	0x5
 213 0036 21020000 		.4byte	.LASF2
 214 003a 02       		.uleb128 0x2
 215 003b 02       		.byte	0x2
 216 003c 07       		.byte	0x7
 217 003d 17010000 		.4byte	.LASF3
 218 0041 02       		.uleb128 0x2
 219 0042 04       		.byte	0x4
 220 0043 05       		.byte	0x5
 221 0044 31020000 		.4byte	.LASF4
 222 0048 02       		.uleb128 0x2
 223 0049 04       		.byte	0x4
 224 004a 07       		.byte	0x7
 225 004b 05010000 		.4byte	.LASF5
 226 004f 02       		.uleb128 0x2
 227 0050 08       		.byte	0x8
 228 0051 05       		.byte	0x5
 229 0052 E4010000 		.4byte	.LASF6
 230 0056 02       		.uleb128 0x2
 231 0057 08       		.byte	0x8
 232 0058 07       		.byte	0x7
 233 0059 BB010000 		.4byte	.LASF7
 234 005d 03       		.uleb128 0x3
 235 005e 04       		.byte	0x4
 236 005f 05       		.byte	0x5
 237 0060 696E7400 		.ascii	"int\000"
 238 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 9


 239 0065 04       		.byte	0x4
 240 0066 07       		.byte	0x7
 241 0067 0E000000 		.4byte	.LASF8
 242 006b 04       		.uleb128 0x4
 243 006c 2B020000 		.4byte	.LASF9
 244 0070 02       		.byte	0x2
 245 0071 9801     		.2byte	0x198
 246 0073 2C000000 		.4byte	0x2c
 247 0077 04       		.uleb128 0x4
 248 0078 5D010000 		.4byte	.LASF10
 249 007c 02       		.byte	0x2
 250 007d 9901     		.2byte	0x199
 251 007f 3A000000 		.4byte	0x3a
 252 0083 04       		.uleb128 0x4
 253 0084 64010000 		.4byte	.LASF11
 254 0088 02       		.byte	0x2
 255 0089 9A01     		.2byte	0x19a
 256 008b 48000000 		.4byte	0x48
 257 008f 02       		.uleb128 0x2
 258 0090 04       		.byte	0x4
 259 0091 04       		.byte	0x4
 260 0092 3B000000 		.4byte	.LASF12
 261 0096 02       		.uleb128 0x2
 262 0097 08       		.byte	0x8
 263 0098 04       		.byte	0x4
 264 0099 35010000 		.4byte	.LASF13
 265 009d 02       		.uleb128 0x2
 266 009e 01       		.byte	0x1
 267 009f 08       		.byte	0x8
 268 00a0 F2010000 		.4byte	.LASF14
 269 00a4 04       		.uleb128 0x4
 270 00a5 00000000 		.4byte	.LASF15
 271 00a9 02       		.byte	0x2
 272 00aa 4402     		.2byte	0x244
 273 00ac B0000000 		.4byte	0xb0
 274 00b0 05       		.uleb128 0x5
 275 00b1 83000000 		.4byte	0x83
 276 00b5 06       		.uleb128 0x6
 277 00b6 F0000000 		.4byte	.LASF16
 278 00ba 01       		.byte	0x1
 279 00bb 27       		.byte	0x27
 280 00bc 00000000 		.4byte	.LFB0
 281 00c0 1C000000 		.4byte	.LFE0-.LFB0
 282 00c4 01       		.uleb128 0x1
 283 00c5 9C       		.byte	0x9c
 284 00c6 DA000000 		.4byte	0xda
 285 00ca 07       		.uleb128 0x7
 286 00cb 43010000 		.4byte	.LASF18
 287 00cf 01       		.byte	0x1
 288 00d0 27       		.byte	0x27
 289 00d1 83000000 		.4byte	0x83
 290 00d5 00000000 		.4byte	.LLST0
 291 00d9 00       		.byte	0
 292 00da 08       		.uleb128 0x8
 293 00db D2010000 		.4byte	.LASF28
 294 00df 01       		.byte	0x1
 295 00e0 5F       		.byte	0x5f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 10


 296 00e1 00000000 		.4byte	.LFB1
 297 00e5 18000000 		.4byte	.LFE1-.LFB1
 298 00e9 01       		.uleb128 0x1
 299 00ea 9C       		.byte	0x9c
 300 00eb 06       		.uleb128 0x6
 301 00ec F7010000 		.4byte	.LASF17
 302 00f0 01       		.byte	0x1
 303 00f1 86       		.byte	0x86
 304 00f2 00000000 		.4byte	.LFB2
 305 00f6 20000000 		.4byte	.LFE2-.LFB2
 306 00fa 01       		.uleb128 0x1
 307 00fb 9C       		.byte	0x9c
 308 00fc 3B010000 		.4byte	0x13b
 309 0100 07       		.uleb128 0x7
 310 0101 2A010000 		.4byte	.LASF19
 311 0105 01       		.byte	0x1
 312 0106 86       		.byte	0x86
 313 0107 77000000 		.4byte	0x77
 314 010b 21000000 		.4byte	.LLST1
 315 010f 07       		.uleb128 0x7
 316 0110 4F010000 		.4byte	.LASF20
 317 0114 01       		.byte	0x1
 318 0115 86       		.byte	0x86
 319 0116 6B000000 		.4byte	0x6b
 320 011a 42000000 		.4byte	.LLST2
 321 011e 09       		.uleb128 0x9
 322 011f 06000000 		.4byte	.LASF21
 323 0123 01       		.byte	0x1
 324 0124 88       		.byte	0x88
 325 0125 83000000 		.4byte	0x83
 326 0129 63000000 		.4byte	.LLST3
 327 012d 0A       		.uleb128 0xa
 328 012e 3C010000 		.4byte	.LASF22
 329 0132 01       		.byte	0x1
 330 0133 89       		.byte	0x89
 331 0134 83000000 		.4byte	0x83
 332 0138 01       		.uleb128 0x1
 333 0139 50       		.byte	0x50
 334 013a 00       		.byte	0
 335 013b 0B       		.uleb128 0xb
 336 013c 1B000000 		.4byte	.LASF23
 337 0140 01       		.byte	0x1
 338 0141 B0       		.byte	0xb0
 339 0142 77000000 		.4byte	0x77
 340 0146 00000000 		.4byte	.LFB3
 341 014a 10000000 		.4byte	.LFE3-.LFB3
 342 014e 01       		.uleb128 0x1
 343 014f 9C       		.byte	0x9c
 344 0150 0B       		.uleb128 0xb
 345 0151 91010000 		.4byte	.LASF24
 346 0155 01       		.byte	0x1
 347 0156 C6       		.byte	0xc6
 348 0157 6B000000 		.4byte	0x6b
 349 015b 00000000 		.4byte	.LFB4
 350 015f 04000000 		.4byte	.LFE4-.LFB4
 351 0163 01       		.uleb128 0x1
 352 0164 9C       		.byte	0x9c
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 11


 353 0165 00       		.byte	0
 354              		.section	.debug_abbrev,"",%progbits
 355              	.Ldebug_abbrev0:
 356 0000 01       		.uleb128 0x1
 357 0001 11       		.uleb128 0x11
 358 0002 01       		.byte	0x1
 359 0003 25       		.uleb128 0x25
 360 0004 0E       		.uleb128 0xe
 361 0005 13       		.uleb128 0x13
 362 0006 0B       		.uleb128 0xb
 363 0007 03       		.uleb128 0x3
 364 0008 0E       		.uleb128 0xe
 365 0009 1B       		.uleb128 0x1b
 366 000a 0E       		.uleb128 0xe
 367 000b 55       		.uleb128 0x55
 368 000c 17       		.uleb128 0x17
 369 000d 11       		.uleb128 0x11
 370 000e 01       		.uleb128 0x1
 371 000f 10       		.uleb128 0x10
 372 0010 17       		.uleb128 0x17
 373 0011 00       		.byte	0
 374 0012 00       		.byte	0
 375 0013 02       		.uleb128 0x2
 376 0014 24       		.uleb128 0x24
 377 0015 00       		.byte	0
 378 0016 0B       		.uleb128 0xb
 379 0017 0B       		.uleb128 0xb
 380 0018 3E       		.uleb128 0x3e
 381 0019 0B       		.uleb128 0xb
 382 001a 03       		.uleb128 0x3
 383 001b 0E       		.uleb128 0xe
 384 001c 00       		.byte	0
 385 001d 00       		.byte	0
 386 001e 03       		.uleb128 0x3
 387 001f 24       		.uleb128 0x24
 388 0020 00       		.byte	0
 389 0021 0B       		.uleb128 0xb
 390 0022 0B       		.uleb128 0xb
 391 0023 3E       		.uleb128 0x3e
 392 0024 0B       		.uleb128 0xb
 393 0025 03       		.uleb128 0x3
 394 0026 08       		.uleb128 0x8
 395 0027 00       		.byte	0
 396 0028 00       		.byte	0
 397 0029 04       		.uleb128 0x4
 398 002a 16       		.uleb128 0x16
 399 002b 00       		.byte	0
 400 002c 03       		.uleb128 0x3
 401 002d 0E       		.uleb128 0xe
 402 002e 3A       		.uleb128 0x3a
 403 002f 0B       		.uleb128 0xb
 404 0030 3B       		.uleb128 0x3b
 405 0031 05       		.uleb128 0x5
 406 0032 49       		.uleb128 0x49
 407 0033 13       		.uleb128 0x13
 408 0034 00       		.byte	0
 409 0035 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 12


 410 0036 05       		.uleb128 0x5
 411 0037 35       		.uleb128 0x35
 412 0038 00       		.byte	0
 413 0039 49       		.uleb128 0x49
 414 003a 13       		.uleb128 0x13
 415 003b 00       		.byte	0
 416 003c 00       		.byte	0
 417 003d 06       		.uleb128 0x6
 418 003e 2E       		.uleb128 0x2e
 419 003f 01       		.byte	0x1
 420 0040 3F       		.uleb128 0x3f
 421 0041 19       		.uleb128 0x19
 422 0042 03       		.uleb128 0x3
 423 0043 0E       		.uleb128 0xe
 424 0044 3A       		.uleb128 0x3a
 425 0045 0B       		.uleb128 0xb
 426 0046 3B       		.uleb128 0x3b
 427 0047 0B       		.uleb128 0xb
 428 0048 27       		.uleb128 0x27
 429 0049 19       		.uleb128 0x19
 430 004a 11       		.uleb128 0x11
 431 004b 01       		.uleb128 0x1
 432 004c 12       		.uleb128 0x12
 433 004d 06       		.uleb128 0x6
 434 004e 40       		.uleb128 0x40
 435 004f 18       		.uleb128 0x18
 436 0050 9742     		.uleb128 0x2117
 437 0052 19       		.uleb128 0x19
 438 0053 01       		.uleb128 0x1
 439 0054 13       		.uleb128 0x13
 440 0055 00       		.byte	0
 441 0056 00       		.byte	0
 442 0057 07       		.uleb128 0x7
 443 0058 05       		.uleb128 0x5
 444 0059 00       		.byte	0
 445 005a 03       		.uleb128 0x3
 446 005b 0E       		.uleb128 0xe
 447 005c 3A       		.uleb128 0x3a
 448 005d 0B       		.uleb128 0xb
 449 005e 3B       		.uleb128 0x3b
 450 005f 0B       		.uleb128 0xb
 451 0060 49       		.uleb128 0x49
 452 0061 13       		.uleb128 0x13
 453 0062 02       		.uleb128 0x2
 454 0063 17       		.uleb128 0x17
 455 0064 00       		.byte	0
 456 0065 00       		.byte	0
 457 0066 08       		.uleb128 0x8
 458 0067 2E       		.uleb128 0x2e
 459 0068 00       		.byte	0
 460 0069 3F       		.uleb128 0x3f
 461 006a 19       		.uleb128 0x19
 462 006b 03       		.uleb128 0x3
 463 006c 0E       		.uleb128 0xe
 464 006d 3A       		.uleb128 0x3a
 465 006e 0B       		.uleb128 0xb
 466 006f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 13


 467 0070 0B       		.uleb128 0xb
 468 0071 27       		.uleb128 0x27
 469 0072 19       		.uleb128 0x19
 470 0073 11       		.uleb128 0x11
 471 0074 01       		.uleb128 0x1
 472 0075 12       		.uleb128 0x12
 473 0076 06       		.uleb128 0x6
 474 0077 40       		.uleb128 0x40
 475 0078 18       		.uleb128 0x18
 476 0079 9742     		.uleb128 0x2117
 477 007b 19       		.uleb128 0x19
 478 007c 00       		.byte	0
 479 007d 00       		.byte	0
 480 007e 09       		.uleb128 0x9
 481 007f 34       		.uleb128 0x34
 482 0080 00       		.byte	0
 483 0081 03       		.uleb128 0x3
 484 0082 0E       		.uleb128 0xe
 485 0083 3A       		.uleb128 0x3a
 486 0084 0B       		.uleb128 0xb
 487 0085 3B       		.uleb128 0x3b
 488 0086 0B       		.uleb128 0xb
 489 0087 49       		.uleb128 0x49
 490 0088 13       		.uleb128 0x13
 491 0089 02       		.uleb128 0x2
 492 008a 17       		.uleb128 0x17
 493 008b 00       		.byte	0
 494 008c 00       		.byte	0
 495 008d 0A       		.uleb128 0xa
 496 008e 34       		.uleb128 0x34
 497 008f 00       		.byte	0
 498 0090 03       		.uleb128 0x3
 499 0091 0E       		.uleb128 0xe
 500 0092 3A       		.uleb128 0x3a
 501 0093 0B       		.uleb128 0xb
 502 0094 3B       		.uleb128 0x3b
 503 0095 0B       		.uleb128 0xb
 504 0096 49       		.uleb128 0x49
 505 0097 13       		.uleb128 0x13
 506 0098 02       		.uleb128 0x2
 507 0099 18       		.uleb128 0x18
 508 009a 00       		.byte	0
 509 009b 00       		.byte	0
 510 009c 0B       		.uleb128 0xb
 511 009d 2E       		.uleb128 0x2e
 512 009e 00       		.byte	0
 513 009f 3F       		.uleb128 0x3f
 514 00a0 19       		.uleb128 0x19
 515 00a1 03       		.uleb128 0x3
 516 00a2 0E       		.uleb128 0xe
 517 00a3 3A       		.uleb128 0x3a
 518 00a4 0B       		.uleb128 0xb
 519 00a5 3B       		.uleb128 0x3b
 520 00a6 0B       		.uleb128 0xb
 521 00a7 27       		.uleb128 0x27
 522 00a8 19       		.uleb128 0x19
 523 00a9 49       		.uleb128 0x49
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 14


 524 00aa 13       		.uleb128 0x13
 525 00ab 11       		.uleb128 0x11
 526 00ac 01       		.uleb128 0x1
 527 00ad 12       		.uleb128 0x12
 528 00ae 06       		.uleb128 0x6
 529 00af 40       		.uleb128 0x40
 530 00b0 18       		.uleb128 0x18
 531 00b1 9742     		.uleb128 0x2117
 532 00b3 19       		.uleb128 0x19
 533 00b4 00       		.byte	0
 534 00b5 00       		.byte	0
 535 00b6 00       		.byte	0
 536              		.section	.debug_loc,"",%progbits
 537              	.Ldebug_loc0:
 538              	.LLST0:
 539 0000 00000000 		.4byte	.LVL0
 540 0004 0C000000 		.4byte	.LVL1
 541 0008 0100     		.2byte	0x1
 542 000a 50       		.byte	0x50
 543 000b 0C000000 		.4byte	.LVL1
 544 000f 1C000000 		.4byte	.LFE0
 545 0013 0400     		.2byte	0x4
 546 0015 F3       		.byte	0xf3
 547 0016 01       		.uleb128 0x1
 548 0017 50       		.byte	0x50
 549 0018 9F       		.byte	0x9f
 550 0019 00000000 		.4byte	0
 551 001d 00000000 		.4byte	0
 552              	.LLST1:
 553 0021 00000000 		.4byte	.LVL2
 554 0025 0A000000 		.4byte	.LVL4
 555 0029 0100     		.2byte	0x1
 556 002b 50       		.byte	0x50
 557 002c 0A000000 		.4byte	.LVL4
 558 0030 20000000 		.4byte	.LFE2
 559 0034 0400     		.2byte	0x4
 560 0036 F3       		.byte	0xf3
 561 0037 01       		.uleb128 0x1
 562 0038 50       		.byte	0x50
 563 0039 9F       		.byte	0x9f
 564 003a 00000000 		.4byte	0
 565 003e 00000000 		.4byte	0
 566              	.LLST2:
 567 0042 00000000 		.4byte	.LVL2
 568 0046 06000000 		.4byte	.LVL3
 569 004a 0100     		.2byte	0x1
 570 004c 51       		.byte	0x51
 571 004d 06000000 		.4byte	.LVL3
 572 0051 20000000 		.4byte	.LFE2
 573 0055 0400     		.2byte	0x4
 574 0057 F3       		.byte	0xf3
 575 0058 01       		.uleb128 0x1
 576 0059 51       		.byte	0x51
 577 005a 9F       		.byte	0x9f
 578 005b 00000000 		.4byte	0
 579 005f 00000000 		.4byte	0
 580              	.LLST3:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 15


 581 0063 12000000 		.4byte	.LVL5
 582 0067 14000000 		.4byte	.LVL6
 583 006b 0500     		.2byte	0x5
 584 006d 73       		.byte	0x73
 585 006e 00       		.sleb128 0
 586 006f 37       		.byte	0x37
 587 0070 1A       		.byte	0x1a
 588 0071 9F       		.byte	0x9f
 589 0072 14000000 		.4byte	.LVL6
 590 0076 20000000 		.4byte	.LFE2
 591 007a 0100     		.2byte	0x1
 592 007c 51       		.byte	0x51
 593 007d 00000000 		.4byte	0
 594 0081 00000000 		.4byte	0
 595              		.section	.debug_aranges,"",%progbits
 596 0000 3C000000 		.4byte	0x3c
 597 0004 0200     		.2byte	0x2
 598 0006 00000000 		.4byte	.Ldebug_info0
 599 000a 04       		.byte	0x4
 600 000b 00       		.byte	0
 601 000c 0000     		.2byte	0
 602 000e 0000     		.2byte	0
 603 0010 00000000 		.4byte	.LFB0
 604 0014 1C000000 		.4byte	.LFE0-.LFB0
 605 0018 00000000 		.4byte	.LFB1
 606 001c 18000000 		.4byte	.LFE1-.LFB1
 607 0020 00000000 		.4byte	.LFB2
 608 0024 20000000 		.4byte	.LFE2-.LFB2
 609 0028 00000000 		.4byte	.LFB3
 610 002c 10000000 		.4byte	.LFE3-.LFB3
 611 0030 00000000 		.4byte	.LFB4
 612 0034 04000000 		.4byte	.LFE4-.LFB4
 613 0038 00000000 		.4byte	0
 614 003c 00000000 		.4byte	0
 615              		.section	.debug_ranges,"",%progbits
 616              	.Ldebug_ranges0:
 617 0000 00000000 		.4byte	.LFB0
 618 0004 1C000000 		.4byte	.LFE0
 619 0008 00000000 		.4byte	.LFB1
 620 000c 18000000 		.4byte	.LFE1
 621 0010 00000000 		.4byte	.LFB2
 622 0014 20000000 		.4byte	.LFE2
 623 0018 00000000 		.4byte	.LFB3
 624 001c 10000000 		.4byte	.LFE3
 625 0020 00000000 		.4byte	.LFB4
 626 0024 04000000 		.4byte	.LFE4
 627 0028 00000000 		.4byte	0
 628 002c 00000000 		.4byte	0
 629              		.section	.debug_line,"",%progbits
 630              	.Ldebug_line0:
 631 0000 D4000000 		.section	.debug_str,"MS",%progbits,1
 631      02004900 
 631      00000201 
 631      FB0E0D00 
 631      01010101 
 632              	.LASF15:
 633 0000 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 16


 633      3200
 634              	.LASF21:
 635 0006 6D61736B 		.ascii	"maskVal\000"
 635      56616C00 
 636              	.LASF8:
 637 000e 756E7369 		.ascii	"unsigned int\000"
 637      676E6564 
 637      20696E74 
 637      00
 638              	.LASF23:
 639 001b 4932435F 		.ascii	"I2C_1_SCBCLK_GetDividerRegister\000"
 639      315F5343 
 639      42434C4B 
 639      5F476574 
 639      44697669 
 640              	.LASF12:
 641 003b 666C6F61 		.ascii	"float\000"
 641      7400
 642              	.LASF25:
 643 0041 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 643      4320342E 
 643      392E3320 
 643      32303135 
 643      30333033 
 644 0074 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 644      20726576 
 644      6973696F 
 644      6E203232 
 644      31323230 
 645 00a7 32202D66 		.ascii	"2 -ffunction-sections -finline-functions -ffat-lto-"
 645      66756E63 
 645      74696F6E 
 645      2D736563 
 645      74696F6E 
 646 00da 6F626A65 		.ascii	"objects\000"
 646      63747300 
 647              	.LASF1:
 648 00e2 756E7369 		.ascii	"unsigned char\000"
 648      676E6564 
 648      20636861 
 648      7200
 649              	.LASF16:
 650 00f0 4932435F 		.ascii	"I2C_1_SCBCLK_StartEx\000"
 650      315F5343 
 650      42434C4B 
 650      5F537461 
 650      72744578 
 651              	.LASF5:
 652 0105 6C6F6E67 		.ascii	"long unsigned int\000"
 652      20756E73 
 652      69676E65 
 652      6420696E 
 652      7400
 653              	.LASF3:
 654 0117 73686F72 		.ascii	"short unsigned int\000"
 654      7420756E 
 654      7369676E 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 17


 654      65642069 
 654      6E7400
 655              	.LASF19:
 656 012a 636C6B44 		.ascii	"clkDivider\000"
 656      69766964 
 656      657200
 657              	.LASF13:
 658 0135 646F7562 		.ascii	"double\000"
 658      6C6500
 659              	.LASF22:
 660 013c 72656756 		.ascii	"regVal\000"
 660      616C00
 661              	.LASF18:
 662 0143 616C6967 		.ascii	"alignClkDiv\000"
 662      6E436C6B 
 662      44697600 
 663              	.LASF20:
 664 014f 636C6B46 		.ascii	"clkFractional\000"
 664      72616374 
 664      696F6E61 
 664      6C00
 665              	.LASF10:
 666 015d 75696E74 		.ascii	"uint16\000"
 666      313600
 667              	.LASF11:
 668 0164 75696E74 		.ascii	"uint32\000"
 668      333200
 669              	.LASF26:
 670 016b 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2C_1_SCBCLK.c\000"
 670      72617465 
 670      645F536F 
 670      75726365 
 670      5C50536F 
 671              	.LASF24:
 672 0191 4932435F 		.ascii	"I2C_1_SCBCLK_GetFractionalDividerRegister\000"
 672      315F5343 
 672      42434C4B 
 672      5F476574 
 672      46726163 
 673              	.LASF7:
 674 01bb 6C6F6E67 		.ascii	"long long unsigned int\000"
 674      206C6F6E 
 674      6720756E 
 674      7369676E 
 674      65642069 
 675              	.LASF28:
 676 01d2 4932435F 		.ascii	"I2C_1_SCBCLK_Stop\000"
 676      315F5343 
 676      42434C4B 
 676      5F53746F 
 676      7000
 677              	.LASF6:
 678 01e4 6C6F6E67 		.ascii	"long long int\000"
 678      206C6F6E 
 678      6720696E 
 678      7400
 679              	.LASF14:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccIi6xfv.s 			page 18


 680 01f2 63686172 		.ascii	"char\000"
 680      00
 681              	.LASF17:
 682 01f7 4932435F 		.ascii	"I2C_1_SCBCLK_SetFractionalDividerRegister\000"
 682      315F5343 
 682      42434C4B 
 682      5F536574 
 682      46726163 
 683              	.LASF2:
 684 0221 73686F72 		.ascii	"short int\000"
 684      7420696E 
 684      7400
 685              	.LASF9:
 686 022b 75696E74 		.ascii	"uint8\000"
 686      3800
 687              	.LASF4:
 688 0231 6C6F6E67 		.ascii	"long int\000"
 688      20696E74 
 688      00
 689              	.LASF27:
 690 023a 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 690      73657273 
 690      5C676C65 
 690      6E6E5C4F 
 690      6E654472 
 691 0268 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 691      69737475 
 691      72655F53 
 691      656E736F 
 691      725C4D6F 
 692              	.LASF0:
 693 0290 7369676E 		.ascii	"signed char\000"
 693      65642063 
 693      68617200 
 694              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
