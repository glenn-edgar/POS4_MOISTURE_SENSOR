ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Manual_Switch.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Manual_Switch_Read,"ax",%progbits
  18              		.align	2
  19              		.global	Manual_Switch_Read
  20              		.code	16
  21              		.thumb_func
  22              		.type	Manual_Switch_Read, %function
  23              	Manual_Switch_Read:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\Manual_Switch.c"
   1:Generated_Source\PSoC4/Manual_Switch.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Manual_Switch.c **** * File Name: Manual_Switch.c  
   3:Generated_Source\PSoC4/Manual_Switch.c **** * Version 1.90
   4:Generated_Source\PSoC4/Manual_Switch.c **** *
   5:Generated_Source\PSoC4/Manual_Switch.c **** * Description:
   6:Generated_Source\PSoC4/Manual_Switch.c **** *  This file contains API to enable firmware to read the value of a Status 
   7:Generated_Source\PSoC4/Manual_Switch.c **** *  Register.
   8:Generated_Source\PSoC4/Manual_Switch.c **** *
   9:Generated_Source\PSoC4/Manual_Switch.c **** * Note:
  10:Generated_Source\PSoC4/Manual_Switch.c **** *
  11:Generated_Source\PSoC4/Manual_Switch.c **** ********************************************************************************
  12:Generated_Source\PSoC4/Manual_Switch.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/Manual_Switch.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC4/Manual_Switch.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC4/Manual_Switch.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/Manual_Switch.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/Manual_Switch.c **** 
  18:Generated_Source\PSoC4/Manual_Switch.c **** #include "Manual_Switch.h"
  19:Generated_Source\PSoC4/Manual_Switch.c **** 
  20:Generated_Source\PSoC4/Manual_Switch.c **** #if !defined(Manual_Switch_sts_sts_reg__REMOVED) /* Check for removal by optimization */
  21:Generated_Source\PSoC4/Manual_Switch.c **** 
  22:Generated_Source\PSoC4/Manual_Switch.c **** 
  23:Generated_Source\PSoC4/Manual_Switch.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/Manual_Switch.c **** * Function Name: Manual_Switch_Read
  25:Generated_Source\PSoC4/Manual_Switch.c **** ********************************************************************************
  26:Generated_Source\PSoC4/Manual_Switch.c **** *
  27:Generated_Source\PSoC4/Manual_Switch.c **** * Summary:
  28:Generated_Source\PSoC4/Manual_Switch.c **** *  Reads the current value assigned to the Status Register.
  29:Generated_Source\PSoC4/Manual_Switch.c **** *
  30:Generated_Source\PSoC4/Manual_Switch.c **** * Parameters:
  31:Generated_Source\PSoC4/Manual_Switch.c **** *  None.
  32:Generated_Source\PSoC4/Manual_Switch.c **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 2


  33:Generated_Source\PSoC4/Manual_Switch.c **** * Return:
  34:Generated_Source\PSoC4/Manual_Switch.c **** *  The current value in the Status Register.
  35:Generated_Source\PSoC4/Manual_Switch.c **** *
  36:Generated_Source\PSoC4/Manual_Switch.c **** *******************************************************************************/
  37:Generated_Source\PSoC4/Manual_Switch.c **** uint8 Manual_Switch_Read(void) 
  38:Generated_Source\PSoC4/Manual_Switch.c **** { 
  26              		.loc 1 38 0
  27              		.cfi_startproc
  39:Generated_Source\PSoC4/Manual_Switch.c ****     return Manual_Switch_Status;
  28              		.loc 1 39 0
  29 0000 014B     		ldr	r3, .L2
  30 0002 1878     		ldrb	r0, [r3]
  31 0004 C0B2     		uxtb	r0, r0
  40:Generated_Source\PSoC4/Manual_Switch.c **** }
  32              		.loc 1 40 0
  33              		@ sp needed
  34 0006 7047     		bx	lr
  35              	.L3:
  36              		.align	2
  37              	.L2:
  38 0008 63000F40 		.word	1074724963
  39              		.cfi_endproc
  40              	.LFE1:
  41              		.size	Manual_Switch_Read, .-Manual_Switch_Read
  42              		.section	.text.Manual_Switch_InterruptEnable,"ax",%progbits
  43              		.align	2
  44              		.global	Manual_Switch_InterruptEnable
  45              		.code	16
  46              		.thumb_func
  47              		.type	Manual_Switch_InterruptEnable, %function
  48              	Manual_Switch_InterruptEnable:
  49              	.LFB2:
  41:Generated_Source\PSoC4/Manual_Switch.c **** 
  42:Generated_Source\PSoC4/Manual_Switch.c **** 
  43:Generated_Source\PSoC4/Manual_Switch.c **** /*******************************************************************************
  44:Generated_Source\PSoC4/Manual_Switch.c **** * Function Name: Manual_Switch_InterruptEnable
  45:Generated_Source\PSoC4/Manual_Switch.c **** ********************************************************************************
  46:Generated_Source\PSoC4/Manual_Switch.c **** *
  47:Generated_Source\PSoC4/Manual_Switch.c **** * Summary:
  48:Generated_Source\PSoC4/Manual_Switch.c **** *  Enables the Status Register interrupt.
  49:Generated_Source\PSoC4/Manual_Switch.c **** *
  50:Generated_Source\PSoC4/Manual_Switch.c **** * Parameters:
  51:Generated_Source\PSoC4/Manual_Switch.c **** *  None.
  52:Generated_Source\PSoC4/Manual_Switch.c **** *
  53:Generated_Source\PSoC4/Manual_Switch.c **** * Return:
  54:Generated_Source\PSoC4/Manual_Switch.c **** *  None.
  55:Generated_Source\PSoC4/Manual_Switch.c **** *
  56:Generated_Source\PSoC4/Manual_Switch.c **** *******************************************************************************/
  57:Generated_Source\PSoC4/Manual_Switch.c **** void Manual_Switch_InterruptEnable(void) 
  58:Generated_Source\PSoC4/Manual_Switch.c **** {
  50              		.loc 1 58 0
  51              		.cfi_startproc
  52 0000 08B5     		push	{r3, lr}
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 3, -8
  55              		.cfi_offset 14, -4
  59:Generated_Source\PSoC4/Manual_Switch.c ****     uint8 interruptState;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 3


  60:Generated_Source\PSoC4/Manual_Switch.c ****     interruptState = CyEnterCriticalSection();
  56              		.loc 1 60 0
  57 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  58              	.LVL0:
  61:Generated_Source\PSoC4/Manual_Switch.c ****     Manual_Switch_Status_Aux_Ctrl |= Manual_Switch_STATUS_INTR_ENBL;
  59              		.loc 1 61 0
  60 0006 044A     		ldr	r2, .L5
  61 0008 1178     		ldrb	r1, [r2]
  62 000a 1023     		mov	r3, #16
  63 000c 0B43     		orr	r3, r1
  64 000e 1370     		strb	r3, [r2]
  62:Generated_Source\PSoC4/Manual_Switch.c ****     CyExitCriticalSection(interruptState);
  65              		.loc 1 62 0
  66 0010 FFF7FEFF 		bl	CyExitCriticalSection
  67              	.LVL1:
  63:Generated_Source\PSoC4/Manual_Switch.c **** }
  68              		.loc 1 63 0
  69              		@ sp needed
  70 0014 08BD     		pop	{r3, pc}
  71              	.L6:
  72 0016 C046     		.align	2
  73              	.L5:
  74 0018 93000F40 		.word	1074725011
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	Manual_Switch_InterruptEnable, .-Manual_Switch_InterruptEnable
  78              		.section	.text.Manual_Switch_InterruptDisable,"ax",%progbits
  79              		.align	2
  80              		.global	Manual_Switch_InterruptDisable
  81              		.code	16
  82              		.thumb_func
  83              		.type	Manual_Switch_InterruptDisable, %function
  84              	Manual_Switch_InterruptDisable:
  85              	.LFB3:
  64:Generated_Source\PSoC4/Manual_Switch.c **** 
  65:Generated_Source\PSoC4/Manual_Switch.c **** 
  66:Generated_Source\PSoC4/Manual_Switch.c **** /*******************************************************************************
  67:Generated_Source\PSoC4/Manual_Switch.c **** * Function Name: Manual_Switch_InterruptDisable
  68:Generated_Source\PSoC4/Manual_Switch.c **** ********************************************************************************
  69:Generated_Source\PSoC4/Manual_Switch.c **** *
  70:Generated_Source\PSoC4/Manual_Switch.c **** * Summary:
  71:Generated_Source\PSoC4/Manual_Switch.c **** *  Disables the Status Register interrupt.
  72:Generated_Source\PSoC4/Manual_Switch.c **** *
  73:Generated_Source\PSoC4/Manual_Switch.c **** * Parameters:
  74:Generated_Source\PSoC4/Manual_Switch.c **** *  None.
  75:Generated_Source\PSoC4/Manual_Switch.c **** *
  76:Generated_Source\PSoC4/Manual_Switch.c **** * Return:
  77:Generated_Source\PSoC4/Manual_Switch.c **** *  None.
  78:Generated_Source\PSoC4/Manual_Switch.c **** *
  79:Generated_Source\PSoC4/Manual_Switch.c **** *******************************************************************************/
  80:Generated_Source\PSoC4/Manual_Switch.c **** void Manual_Switch_InterruptDisable(void) 
  81:Generated_Source\PSoC4/Manual_Switch.c **** {
  86              		.loc 1 81 0
  87              		.cfi_startproc
  88 0000 08B5     		push	{r3, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 3, -8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 4


  91              		.cfi_offset 14, -4
  82:Generated_Source\PSoC4/Manual_Switch.c ****     uint8 interruptState;
  83:Generated_Source\PSoC4/Manual_Switch.c ****     interruptState = CyEnterCriticalSection();
  92              		.loc 1 83 0
  93 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL2:
  84:Generated_Source\PSoC4/Manual_Switch.c ****     Manual_Switch_Status_Aux_Ctrl &= (uint8)(~Manual_Switch_STATUS_INTR_ENBL);
  95              		.loc 1 84 0
  96 0006 044A     		ldr	r2, .L8
  97 0008 1378     		ldrb	r3, [r2]
  98 000a 1021     		mov	r1, #16
  99 000c 8B43     		bic	r3, r1
 100 000e 1370     		strb	r3, [r2]
  85:Generated_Source\PSoC4/Manual_Switch.c ****     CyExitCriticalSection(interruptState);
 101              		.loc 1 85 0
 102 0010 FFF7FEFF 		bl	CyExitCriticalSection
 103              	.LVL3:
  86:Generated_Source\PSoC4/Manual_Switch.c **** }
 104              		.loc 1 86 0
 105              		@ sp needed
 106 0014 08BD     		pop	{r3, pc}
 107              	.L9:
 108 0016 C046     		.align	2
 109              	.L8:
 110 0018 93000F40 		.word	1074725011
 111              		.cfi_endproc
 112              	.LFE3:
 113              		.size	Manual_Switch_InterruptDisable, .-Manual_Switch_InterruptDisable
 114              		.section	.text.Manual_Switch_WriteMask,"ax",%progbits
 115              		.align	2
 116              		.global	Manual_Switch_WriteMask
 117              		.code	16
 118              		.thumb_func
 119              		.type	Manual_Switch_WriteMask, %function
 120              	Manual_Switch_WriteMask:
 121              	.LFB4:
  87:Generated_Source\PSoC4/Manual_Switch.c **** 
  88:Generated_Source\PSoC4/Manual_Switch.c **** 
  89:Generated_Source\PSoC4/Manual_Switch.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/Manual_Switch.c **** * Function Name: Manual_Switch_WriteMask
  91:Generated_Source\PSoC4/Manual_Switch.c **** ********************************************************************************
  92:Generated_Source\PSoC4/Manual_Switch.c **** *
  93:Generated_Source\PSoC4/Manual_Switch.c **** * Summary:
  94:Generated_Source\PSoC4/Manual_Switch.c **** *  Writes the current mask value assigned to the Status Register.
  95:Generated_Source\PSoC4/Manual_Switch.c **** *
  96:Generated_Source\PSoC4/Manual_Switch.c **** * Parameters:
  97:Generated_Source\PSoC4/Manual_Switch.c **** *  mask:  Value to write into the mask register.
  98:Generated_Source\PSoC4/Manual_Switch.c **** *
  99:Generated_Source\PSoC4/Manual_Switch.c **** * Return:
 100:Generated_Source\PSoC4/Manual_Switch.c **** *  None.
 101:Generated_Source\PSoC4/Manual_Switch.c **** *
 102:Generated_Source\PSoC4/Manual_Switch.c **** *******************************************************************************/
 103:Generated_Source\PSoC4/Manual_Switch.c **** void Manual_Switch_WriteMask(uint8 mask) 
 104:Generated_Source\PSoC4/Manual_Switch.c **** {
 122              		.loc 1 104 0
 123              		.cfi_startproc
 124              	.LVL4:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 5


 105:Generated_Source\PSoC4/Manual_Switch.c ****     #if(Manual_Switch_INPUTS < 8u)
 106:Generated_Source\PSoC4/Manual_Switch.c ****     	mask &= ((uint8)(1u << Manual_Switch_INPUTS) - 1u);
 125              		.loc 1 106 0
 126 0000 0123     		mov	r3, #1
 127 0002 1840     		and	r0, r3
 128              	.LVL5:
 107:Generated_Source\PSoC4/Manual_Switch.c **** 	#endif /* End Manual_Switch_INPUTS < 8u */
 108:Generated_Source\PSoC4/Manual_Switch.c ****     Manual_Switch_Status_Mask = mask;
 129              		.loc 1 108 0
 130 0004 014B     		ldr	r3, .L11
 131 0006 1870     		strb	r0, [r3]
 109:Generated_Source\PSoC4/Manual_Switch.c **** }
 132              		.loc 1 109 0
 133              		@ sp needed
 134 0008 7047     		bx	lr
 135              	.L12:
 136 000a C046     		.align	2
 137              	.L11:
 138 000c 83000F40 		.word	1074724995
 139              		.cfi_endproc
 140              	.LFE4:
 141              		.size	Manual_Switch_WriteMask, .-Manual_Switch_WriteMask
 142              		.section	.text.Manual_Switch_ReadMask,"ax",%progbits
 143              		.align	2
 144              		.global	Manual_Switch_ReadMask
 145              		.code	16
 146              		.thumb_func
 147              		.type	Manual_Switch_ReadMask, %function
 148              	Manual_Switch_ReadMask:
 149              	.LFB5:
 110:Generated_Source\PSoC4/Manual_Switch.c **** 
 111:Generated_Source\PSoC4/Manual_Switch.c **** 
 112:Generated_Source\PSoC4/Manual_Switch.c **** /*******************************************************************************
 113:Generated_Source\PSoC4/Manual_Switch.c **** * Function Name: Manual_Switch_ReadMask
 114:Generated_Source\PSoC4/Manual_Switch.c **** ********************************************************************************
 115:Generated_Source\PSoC4/Manual_Switch.c **** *
 116:Generated_Source\PSoC4/Manual_Switch.c **** * Summary:
 117:Generated_Source\PSoC4/Manual_Switch.c **** *  Reads the current interrupt mask assigned to the Status Register.
 118:Generated_Source\PSoC4/Manual_Switch.c **** *
 119:Generated_Source\PSoC4/Manual_Switch.c **** * Parameters:
 120:Generated_Source\PSoC4/Manual_Switch.c **** *  None.
 121:Generated_Source\PSoC4/Manual_Switch.c **** *
 122:Generated_Source\PSoC4/Manual_Switch.c **** * Return:
 123:Generated_Source\PSoC4/Manual_Switch.c **** *  The value of the interrupt mask of the Status Register.
 124:Generated_Source\PSoC4/Manual_Switch.c **** *
 125:Generated_Source\PSoC4/Manual_Switch.c **** *******************************************************************************/
 126:Generated_Source\PSoC4/Manual_Switch.c **** uint8 Manual_Switch_ReadMask(void) 
 127:Generated_Source\PSoC4/Manual_Switch.c **** {
 150              		.loc 1 127 0
 151              		.cfi_startproc
 128:Generated_Source\PSoC4/Manual_Switch.c ****     return Manual_Switch_Status_Mask;
 152              		.loc 1 128 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1878     		ldrb	r0, [r3]
 155 0004 C0B2     		uxtb	r0, r0
 129:Generated_Source\PSoC4/Manual_Switch.c **** }
 156              		.loc 1 129 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 6


 157              		@ sp needed
 158 0006 7047     		bx	lr
 159              	.L15:
 160              		.align	2
 161              	.L14:
 162 0008 83000F40 		.word	1074724995
 163              		.cfi_endproc
 164              	.LFE5:
 165              		.size	Manual_Switch_ReadMask, .-Manual_Switch_ReadMask
 166              		.text
 167              	.Letext0:
 168              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 169              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 170              		.section	.debug_info,"",%progbits
 171              	.Ldebug_info0:
 172 0000 76010000 		.4byte	0x176
 173 0004 0400     		.2byte	0x4
 174 0006 00000000 		.4byte	.Ldebug_abbrev0
 175 000a 04       		.byte	0x4
 176 000b 01       		.uleb128 0x1
 177 000c B0000000 		.4byte	.LASF21
 178 0010 01       		.byte	0x1
 179 0011 09020000 		.4byte	.LASF22
 180 0015 56010000 		.4byte	.LASF23
 181 0019 00000000 		.4byte	.Ldebug_ranges0+0
 182 001d 00000000 		.4byte	0
 183 0021 00000000 		.4byte	.Ldebug_line0
 184 0025 02       		.uleb128 0x2
 185 0026 01       		.byte	0x1
 186 0027 06       		.byte	0x6
 187 0028 E7010000 		.4byte	.LASF0
 188 002c 02       		.uleb128 0x2
 189 002d 01       		.byte	0x1
 190 002e 08       		.byte	0x8
 191 002f B1010000 		.4byte	.LASF1
 192 0033 02       		.uleb128 0x2
 193 0034 02       		.byte	0x2
 194 0035 05       		.byte	0x5
 195 0036 4E020000 		.4byte	.LASF2
 196 003a 02       		.uleb128 0x2
 197 003b 02       		.byte	0x2
 198 003c 07       		.byte	0x7
 199 003d D4010000 		.4byte	.LASF3
 200 0041 02       		.uleb128 0x2
 201 0042 04       		.byte	0x4
 202 0043 05       		.byte	0x5
 203 0044 C4010000 		.4byte	.LASF4
 204 0048 02       		.uleb128 0x2
 205 0049 04       		.byte	0x4
 206 004a 07       		.byte	0x7
 207 004b 81000000 		.4byte	.LASF5
 208 004f 02       		.uleb128 0x2
 209 0050 08       		.byte	0x8
 210 0051 05       		.byte	0x5
 211 0052 00000000 		.4byte	.LASF6
 212 0056 02       		.uleb128 0x2
 213 0057 08       		.byte	0x8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 7


 214 0058 07       		.byte	0x7
 215 0059 93000000 		.4byte	.LASF7
 216 005d 03       		.uleb128 0x3
 217 005e 04       		.byte	0x4
 218 005f 05       		.byte	0x5
 219 0060 696E7400 		.ascii	"int\000"
 220 0064 02       		.uleb128 0x2
 221 0065 04       		.byte	0x4
 222 0066 07       		.byte	0x7
 223 0067 0E000000 		.4byte	.LASF8
 224 006b 04       		.uleb128 0x4
 225 006c 7B000000 		.4byte	.LASF12
 226 0070 02       		.byte	0x2
 227 0071 9801     		.2byte	0x198
 228 0073 2C000000 		.4byte	0x2c
 229 0077 02       		.uleb128 0x2
 230 0078 04       		.byte	0x4
 231 0079 04       		.byte	0x4
 232 007a AA000000 		.4byte	.LASF9
 233 007e 02       		.uleb128 0x2
 234 007f 08       		.byte	0x8
 235 0080 04       		.byte	0x4
 236 0081 CD010000 		.4byte	.LASF10
 237 0085 02       		.uleb128 0x2
 238 0086 01       		.byte	0x1
 239 0087 08       		.byte	0x8
 240 0088 BF010000 		.4byte	.LASF11
 241 008c 04       		.uleb128 0x4
 242 008d 58020000 		.4byte	.LASF13
 243 0091 02       		.byte	0x2
 244 0092 4202     		.2byte	0x242
 245 0094 98000000 		.4byte	0x98
 246 0098 05       		.uleb128 0x5
 247 0099 6B000000 		.4byte	0x6b
 248 009d 02       		.uleb128 0x2
 249 009e 04       		.byte	0x4
 250 009f 07       		.byte	0x7
 251 00a0 5D020000 		.4byte	.LASF14
 252 00a4 06       		.uleb128 0x6
 253 00a5 51000000 		.4byte	.LASF19
 254 00a9 01       		.byte	0x1
 255 00aa 25       		.byte	0x25
 256 00ab 6B000000 		.4byte	0x6b
 257 00af 00000000 		.4byte	.LFB1
 258 00b3 0C000000 		.4byte	.LFE1-.LFB1
 259 00b7 01       		.uleb128 0x1
 260 00b8 9C       		.byte	0x9c
 261 00b9 07       		.uleb128 0x7
 262 00ba 30020000 		.4byte	.LASF15
 263 00be 01       		.byte	0x1
 264 00bf 39       		.byte	0x39
 265 00c0 00000000 		.4byte	.LFB2
 266 00c4 1C000000 		.4byte	.LFE2-.LFB2
 267 00c8 01       		.uleb128 0x1
 268 00c9 9C       		.byte	0x9c
 269 00ca F0000000 		.4byte	0xf0
 270 00ce 08       		.uleb128 0x8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 8


 271 00cf 66020000 		.4byte	.LASF17
 272 00d3 01       		.byte	0x1
 273 00d4 3B       		.byte	0x3b
 274 00d5 6B000000 		.4byte	0x6b
 275 00d9 00000000 		.4byte	.LLST0
 276 00dd 09       		.uleb128 0x9
 277 00de 06000000 		.4byte	.LVL0
 278 00e2 61010000 		.4byte	0x161
 279 00e6 09       		.uleb128 0x9
 280 00e7 14000000 		.4byte	.LVL1
 281 00eb 6C010000 		.4byte	0x16c
 282 00ef 00       		.byte	0
 283 00f0 07       		.uleb128 0x7
 284 00f1 32000000 		.4byte	.LASF16
 285 00f5 01       		.byte	0x1
 286 00f6 50       		.byte	0x50
 287 00f7 00000000 		.4byte	.LFB3
 288 00fb 1C000000 		.4byte	.LFE3-.LFB3
 289 00ff 01       		.uleb128 0x1
 290 0100 9C       		.byte	0x9c
 291 0101 27010000 		.4byte	0x127
 292 0105 08       		.uleb128 0x8
 293 0106 66020000 		.4byte	.LASF17
 294 010a 01       		.byte	0x1
 295 010b 52       		.byte	0x52
 296 010c 6B000000 		.4byte	0x6b
 297 0110 13000000 		.4byte	.LLST1
 298 0114 09       		.uleb128 0x9
 299 0115 06000000 		.4byte	.LVL2
 300 0119 61010000 		.4byte	0x161
 301 011d 09       		.uleb128 0x9
 302 011e 14000000 		.4byte	.LVL3
 303 0122 6C010000 		.4byte	0x16c
 304 0126 00       		.byte	0
 305 0127 07       		.uleb128 0x7
 306 0128 3E010000 		.4byte	.LASF18
 307 012c 01       		.byte	0x1
 308 012d 67       		.byte	0x67
 309 012e 00000000 		.4byte	.LFB4
 310 0132 10000000 		.4byte	.LFE4-.LFB4
 311 0136 01       		.uleb128 0x1
 312 0137 9C       		.byte	0x9c
 313 0138 4C010000 		.4byte	0x14c
 314 013c 0A       		.uleb128 0xa
 315 013d AC010000 		.4byte	.LASF24
 316 0141 01       		.byte	0x1
 317 0142 67       		.byte	0x67
 318 0143 6B000000 		.4byte	0x6b
 319 0147 26000000 		.4byte	.LLST2
 320 014b 00       		.byte	0
 321 014c 06       		.uleb128 0x6
 322 014d 1B000000 		.4byte	.LASF20
 323 0151 01       		.byte	0x1
 324 0152 7E       		.byte	0x7e
 325 0153 6B000000 		.4byte	0x6b
 326 0157 00000000 		.4byte	.LFB5
 327 015b 0C000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 9


 328 015f 01       		.uleb128 0x1
 329 0160 9C       		.byte	0x9c
 330 0161 0B       		.uleb128 0xb
 331 0162 64000000 		.4byte	.LASF25
 332 0166 03       		.byte	0x3
 333 0167 E3       		.byte	0xe3
 334 0168 6B000000 		.4byte	0x6b
 335 016c 0C       		.uleb128 0xc
 336 016d F3010000 		.4byte	.LASF26
 337 0171 03       		.byte	0x3
 338 0172 E4       		.byte	0xe4
 339 0173 0D       		.uleb128 0xd
 340 0174 6B000000 		.4byte	0x6b
 341 0178 00       		.byte	0
 342 0179 00       		.byte	0
 343              		.section	.debug_abbrev,"",%progbits
 344              	.Ldebug_abbrev0:
 345 0000 01       		.uleb128 0x1
 346 0001 11       		.uleb128 0x11
 347 0002 01       		.byte	0x1
 348 0003 25       		.uleb128 0x25
 349 0004 0E       		.uleb128 0xe
 350 0005 13       		.uleb128 0x13
 351 0006 0B       		.uleb128 0xb
 352 0007 03       		.uleb128 0x3
 353 0008 0E       		.uleb128 0xe
 354 0009 1B       		.uleb128 0x1b
 355 000a 0E       		.uleb128 0xe
 356 000b 55       		.uleb128 0x55
 357 000c 17       		.uleb128 0x17
 358 000d 11       		.uleb128 0x11
 359 000e 01       		.uleb128 0x1
 360 000f 10       		.uleb128 0x10
 361 0010 17       		.uleb128 0x17
 362 0011 00       		.byte	0
 363 0012 00       		.byte	0
 364 0013 02       		.uleb128 0x2
 365 0014 24       		.uleb128 0x24
 366 0015 00       		.byte	0
 367 0016 0B       		.uleb128 0xb
 368 0017 0B       		.uleb128 0xb
 369 0018 3E       		.uleb128 0x3e
 370 0019 0B       		.uleb128 0xb
 371 001a 03       		.uleb128 0x3
 372 001b 0E       		.uleb128 0xe
 373 001c 00       		.byte	0
 374 001d 00       		.byte	0
 375 001e 03       		.uleb128 0x3
 376 001f 24       		.uleb128 0x24
 377 0020 00       		.byte	0
 378 0021 0B       		.uleb128 0xb
 379 0022 0B       		.uleb128 0xb
 380 0023 3E       		.uleb128 0x3e
 381 0024 0B       		.uleb128 0xb
 382 0025 03       		.uleb128 0x3
 383 0026 08       		.uleb128 0x8
 384 0027 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 10


 385 0028 00       		.byte	0
 386 0029 04       		.uleb128 0x4
 387 002a 16       		.uleb128 0x16
 388 002b 00       		.byte	0
 389 002c 03       		.uleb128 0x3
 390 002d 0E       		.uleb128 0xe
 391 002e 3A       		.uleb128 0x3a
 392 002f 0B       		.uleb128 0xb
 393 0030 3B       		.uleb128 0x3b
 394 0031 05       		.uleb128 0x5
 395 0032 49       		.uleb128 0x49
 396 0033 13       		.uleb128 0x13
 397 0034 00       		.byte	0
 398 0035 00       		.byte	0
 399 0036 05       		.uleb128 0x5
 400 0037 35       		.uleb128 0x35
 401 0038 00       		.byte	0
 402 0039 49       		.uleb128 0x49
 403 003a 13       		.uleb128 0x13
 404 003b 00       		.byte	0
 405 003c 00       		.byte	0
 406 003d 06       		.uleb128 0x6
 407 003e 2E       		.uleb128 0x2e
 408 003f 00       		.byte	0
 409 0040 3F       		.uleb128 0x3f
 410 0041 19       		.uleb128 0x19
 411 0042 03       		.uleb128 0x3
 412 0043 0E       		.uleb128 0xe
 413 0044 3A       		.uleb128 0x3a
 414 0045 0B       		.uleb128 0xb
 415 0046 3B       		.uleb128 0x3b
 416 0047 0B       		.uleb128 0xb
 417 0048 27       		.uleb128 0x27
 418 0049 19       		.uleb128 0x19
 419 004a 49       		.uleb128 0x49
 420 004b 13       		.uleb128 0x13
 421 004c 11       		.uleb128 0x11
 422 004d 01       		.uleb128 0x1
 423 004e 12       		.uleb128 0x12
 424 004f 06       		.uleb128 0x6
 425 0050 40       		.uleb128 0x40
 426 0051 18       		.uleb128 0x18
 427 0052 9742     		.uleb128 0x2117
 428 0054 19       		.uleb128 0x19
 429 0055 00       		.byte	0
 430 0056 00       		.byte	0
 431 0057 07       		.uleb128 0x7
 432 0058 2E       		.uleb128 0x2e
 433 0059 01       		.byte	0x1
 434 005a 3F       		.uleb128 0x3f
 435 005b 19       		.uleb128 0x19
 436 005c 03       		.uleb128 0x3
 437 005d 0E       		.uleb128 0xe
 438 005e 3A       		.uleb128 0x3a
 439 005f 0B       		.uleb128 0xb
 440 0060 3B       		.uleb128 0x3b
 441 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 11


 442 0062 27       		.uleb128 0x27
 443 0063 19       		.uleb128 0x19
 444 0064 11       		.uleb128 0x11
 445 0065 01       		.uleb128 0x1
 446 0066 12       		.uleb128 0x12
 447 0067 06       		.uleb128 0x6
 448 0068 40       		.uleb128 0x40
 449 0069 18       		.uleb128 0x18
 450 006a 9742     		.uleb128 0x2117
 451 006c 19       		.uleb128 0x19
 452 006d 01       		.uleb128 0x1
 453 006e 13       		.uleb128 0x13
 454 006f 00       		.byte	0
 455 0070 00       		.byte	0
 456 0071 08       		.uleb128 0x8
 457 0072 34       		.uleb128 0x34
 458 0073 00       		.byte	0
 459 0074 03       		.uleb128 0x3
 460 0075 0E       		.uleb128 0xe
 461 0076 3A       		.uleb128 0x3a
 462 0077 0B       		.uleb128 0xb
 463 0078 3B       		.uleb128 0x3b
 464 0079 0B       		.uleb128 0xb
 465 007a 49       		.uleb128 0x49
 466 007b 13       		.uleb128 0x13
 467 007c 02       		.uleb128 0x2
 468 007d 17       		.uleb128 0x17
 469 007e 00       		.byte	0
 470 007f 00       		.byte	0
 471 0080 09       		.uleb128 0x9
 472 0081 898201   		.uleb128 0x4109
 473 0084 00       		.byte	0
 474 0085 11       		.uleb128 0x11
 475 0086 01       		.uleb128 0x1
 476 0087 31       		.uleb128 0x31
 477 0088 13       		.uleb128 0x13
 478 0089 00       		.byte	0
 479 008a 00       		.byte	0
 480 008b 0A       		.uleb128 0xa
 481 008c 05       		.uleb128 0x5
 482 008d 00       		.byte	0
 483 008e 03       		.uleb128 0x3
 484 008f 0E       		.uleb128 0xe
 485 0090 3A       		.uleb128 0x3a
 486 0091 0B       		.uleb128 0xb
 487 0092 3B       		.uleb128 0x3b
 488 0093 0B       		.uleb128 0xb
 489 0094 49       		.uleb128 0x49
 490 0095 13       		.uleb128 0x13
 491 0096 02       		.uleb128 0x2
 492 0097 17       		.uleb128 0x17
 493 0098 00       		.byte	0
 494 0099 00       		.byte	0
 495 009a 0B       		.uleb128 0xb
 496 009b 2E       		.uleb128 0x2e
 497 009c 00       		.byte	0
 498 009d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 12


 499 009e 19       		.uleb128 0x19
 500 009f 03       		.uleb128 0x3
 501 00a0 0E       		.uleb128 0xe
 502 00a1 3A       		.uleb128 0x3a
 503 00a2 0B       		.uleb128 0xb
 504 00a3 3B       		.uleb128 0x3b
 505 00a4 0B       		.uleb128 0xb
 506 00a5 27       		.uleb128 0x27
 507 00a6 19       		.uleb128 0x19
 508 00a7 49       		.uleb128 0x49
 509 00a8 13       		.uleb128 0x13
 510 00a9 3C       		.uleb128 0x3c
 511 00aa 19       		.uleb128 0x19
 512 00ab 00       		.byte	0
 513 00ac 00       		.byte	0
 514 00ad 0C       		.uleb128 0xc
 515 00ae 2E       		.uleb128 0x2e
 516 00af 01       		.byte	0x1
 517 00b0 3F       		.uleb128 0x3f
 518 00b1 19       		.uleb128 0x19
 519 00b2 03       		.uleb128 0x3
 520 00b3 0E       		.uleb128 0xe
 521 00b4 3A       		.uleb128 0x3a
 522 00b5 0B       		.uleb128 0xb
 523 00b6 3B       		.uleb128 0x3b
 524 00b7 0B       		.uleb128 0xb
 525 00b8 27       		.uleb128 0x27
 526 00b9 19       		.uleb128 0x19
 527 00ba 3C       		.uleb128 0x3c
 528 00bb 19       		.uleb128 0x19
 529 00bc 00       		.byte	0
 530 00bd 00       		.byte	0
 531 00be 0D       		.uleb128 0xd
 532 00bf 05       		.uleb128 0x5
 533 00c0 00       		.byte	0
 534 00c1 49       		.uleb128 0x49
 535 00c2 13       		.uleb128 0x13
 536 00c3 00       		.byte	0
 537 00c4 00       		.byte	0
 538 00c5 00       		.byte	0
 539              		.section	.debug_loc,"",%progbits
 540              	.Ldebug_loc0:
 541              	.LLST0:
 542 0000 06000000 		.4byte	.LVL0
 543 0004 13000000 		.4byte	.LVL1-1
 544 0008 0100     		.2byte	0x1
 545 000a 50       		.byte	0x50
 546 000b 00000000 		.4byte	0
 547 000f 00000000 		.4byte	0
 548              	.LLST1:
 549 0013 06000000 		.4byte	.LVL2
 550 0017 13000000 		.4byte	.LVL3-1
 551 001b 0100     		.2byte	0x1
 552 001d 50       		.byte	0x50
 553 001e 00000000 		.4byte	0
 554 0022 00000000 		.4byte	0
 555              	.LLST2:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 13


 556 0026 00000000 		.4byte	.LVL4
 557 002a 04000000 		.4byte	.LVL5
 558 002e 0100     		.2byte	0x1
 559 0030 50       		.byte	0x50
 560 0031 04000000 		.4byte	.LVL5
 561 0035 10000000 		.4byte	.LFE4
 562 0039 0100     		.2byte	0x1
 563 003b 50       		.byte	0x50
 564 003c 00000000 		.4byte	0
 565 0040 00000000 		.4byte	0
 566              		.section	.debug_aranges,"",%progbits
 567 0000 3C000000 		.4byte	0x3c
 568 0004 0200     		.2byte	0x2
 569 0006 00000000 		.4byte	.Ldebug_info0
 570 000a 04       		.byte	0x4
 571 000b 00       		.byte	0
 572 000c 0000     		.2byte	0
 573 000e 0000     		.2byte	0
 574 0010 00000000 		.4byte	.LFB1
 575 0014 0C000000 		.4byte	.LFE1-.LFB1
 576 0018 00000000 		.4byte	.LFB2
 577 001c 1C000000 		.4byte	.LFE2-.LFB2
 578 0020 00000000 		.4byte	.LFB3
 579 0024 1C000000 		.4byte	.LFE3-.LFB3
 580 0028 00000000 		.4byte	.LFB4
 581 002c 10000000 		.4byte	.LFE4-.LFB4
 582 0030 00000000 		.4byte	.LFB5
 583 0034 0C000000 		.4byte	.LFE5-.LFB5
 584 0038 00000000 		.4byte	0
 585 003c 00000000 		.4byte	0
 586              		.section	.debug_ranges,"",%progbits
 587              	.Ldebug_ranges0:
 588 0000 00000000 		.4byte	.LFB1
 589 0004 0C000000 		.4byte	.LFE1
 590 0008 00000000 		.4byte	.LFB2
 591 000c 1C000000 		.4byte	.LFE2
 592 0010 00000000 		.4byte	.LFB3
 593 0014 1C000000 		.4byte	.LFE3
 594 0018 00000000 		.4byte	.LFB4
 595 001c 10000000 		.4byte	.LFE4
 596 0020 00000000 		.4byte	.LFB5
 597 0024 0C000000 		.4byte	.LFE5
 598 0028 00000000 		.4byte	0
 599 002c 00000000 		.4byte	0
 600              		.section	.debug_line,"",%progbits
 601              	.Ldebug_line0:
 602 0000 B8000000 		.section	.debug_str,"MS",%progbits,1
 602      02005500 
 602      00000201 
 602      FB0E0D00 
 602      01010101 
 603              	.LASF6:
 604 0000 6C6F6E67 		.ascii	"long long int\000"
 604      206C6F6E 
 604      6720696E 
 604      7400
 605              	.LASF8:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 14


 606 000e 756E7369 		.ascii	"unsigned int\000"
 606      676E6564 
 606      20696E74 
 606      00
 607              	.LASF20:
 608 001b 4D616E75 		.ascii	"Manual_Switch_ReadMask\000"
 608      616C5F53 
 608      77697463 
 608      685F5265 
 608      61644D61 
 609              	.LASF16:
 610 0032 4D616E75 		.ascii	"Manual_Switch_InterruptDisable\000"
 610      616C5F53 
 610      77697463 
 610      685F496E 
 610      74657272 
 611              	.LASF19:
 612 0051 4D616E75 		.ascii	"Manual_Switch_Read\000"
 612      616C5F53 
 612      77697463 
 612      685F5265 
 612      616400
 613              	.LASF25:
 614 0064 4379456E 		.ascii	"CyEnterCriticalSection\000"
 614      74657243 
 614      72697469 
 614      63616C53 
 614      65637469 
 615              	.LASF12:
 616 007b 75696E74 		.ascii	"uint8\000"
 616      3800
 617              	.LASF5:
 618 0081 6C6F6E67 		.ascii	"long unsigned int\000"
 618      20756E73 
 618      69676E65 
 618      6420696E 
 618      7400
 619              	.LASF7:
 620 0093 6C6F6E67 		.ascii	"long long unsigned int\000"
 620      206C6F6E 
 620      6720756E 
 620      7369676E 
 620      65642069 
 621              	.LASF9:
 622 00aa 666C6F61 		.ascii	"float\000"
 622      7400
 623              	.LASF21:
 624 00b0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 624      4320342E 
 624      392E3320 
 624      32303135 
 624      30333033 
 625 00e3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 625      20726576 
 625      6973696F 
 625      6E203232 
 625      31323230 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 15


 626 0116 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 626      66756E63 
 626      74696F6E 
 626      2D736563 
 626      74696F6E 
 627              	.LASF18:
 628 013e 4D616E75 		.ascii	"Manual_Switch_WriteMask\000"
 628      616C5F53 
 628      77697463 
 628      685F5772 
 628      6974654D 
 629              	.LASF23:
 630 0156 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 630      73657273 
 630      5C676C65 
 630      6E6E5C4F 
 630      6E654472 
 631 0184 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 631      69737475 
 631      72655F53 
 631      656E736F 
 631      725C4D6F 
 632              	.LASF24:
 633 01ac 6D61736B 		.ascii	"mask\000"
 633      00
 634              	.LASF1:
 635 01b1 756E7369 		.ascii	"unsigned char\000"
 635      676E6564 
 635      20636861 
 635      7200
 636              	.LASF11:
 637 01bf 63686172 		.ascii	"char\000"
 637      00
 638              	.LASF4:
 639 01c4 6C6F6E67 		.ascii	"long int\000"
 639      20696E74 
 639      00
 640              	.LASF10:
 641 01cd 646F7562 		.ascii	"double\000"
 641      6C6500
 642              	.LASF3:
 643 01d4 73686F72 		.ascii	"short unsigned int\000"
 643      7420756E 
 643      7369676E 
 643      65642069 
 643      6E7400
 644              	.LASF0:
 645 01e7 7369676E 		.ascii	"signed char\000"
 645      65642063 
 645      68617200 
 646              	.LASF26:
 647 01f3 43794578 		.ascii	"CyExitCriticalSection\000"
 647      69744372 
 647      69746963 
 647      616C5365 
 647      6374696F 
 648              	.LASF22:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cciHtvx2.s 			page 16


 649 0209 47656E65 		.ascii	"Generated_Source\\PSoC4\\Manual_Switch.c\000"
 649      72617465 
 649      645F536F 
 649      75726365 
 649      5C50536F 
 650              	.LASF15:
 651 0230 4D616E75 		.ascii	"Manual_Switch_InterruptEnable\000"
 651      616C5F53 
 651      77697463 
 651      685F496E 
 651      74657272 
 652              	.LASF2:
 653 024e 73686F72 		.ascii	"short int\000"
 653      7420696E 
 653      7400
 654              	.LASF13:
 655 0258 72656738 		.ascii	"reg8\000"
 655      00
 656              	.LASF14:
 657 025d 73697A65 		.ascii	"sizetype\000"
 657      74797065 
 657      00
 658              	.LASF17:
 659 0266 696E7465 		.ascii	"interruptState\000"
 659      72727570 
 659      74537461 
 659      746500
 660              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
