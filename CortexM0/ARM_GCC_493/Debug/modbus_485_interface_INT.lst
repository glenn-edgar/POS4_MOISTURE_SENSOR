ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"modbus_485_interface_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.modbus_485_interface_RXISR,"ax",%progbits
  18              		.align	2
  19              		.global	modbus_485_interface_RXISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	modbus_485_interface_RXISR, %function
  23              	modbus_485_interface_RXISR:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\modbus_485_interface_INT.c"
   1:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * File Name: modbus_485_interfaceINT.c
   3:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * Version 2.50
   4:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** *
   5:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** *
   8:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** ********************************************************************************
   9:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  15:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** #include "modbus_485_interface.h"
  16:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** #include "cyapicallbacks.h"
  17:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  18:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  19:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** /***************************************
  20:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** * Custom Declarations
  21:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** ***************************************/
  22:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  24:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** /* `#END` */
  25:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  26:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** #if (modbus_485_interface_RX_INTERRUPT_ENABLED && (modbus_485_interface_RX_ENABLED || modbus_485_in
  27:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     /*******************************************************************************
  28:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Function Name: modbus_485_interface_RXISR
  29:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     ********************************************************************************
  30:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
  31:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Summary:
  32:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 2


  33:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
  34:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Parameters:
  35:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  None.
  36:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
  37:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Return:
  38:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  None.
  39:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
  40:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Global Variables:
  41:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxBuffer - RAM buffer pointer for save received data.
  42:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxBufferWrite - cyclic index for write to rxBuffer,
  43:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     increments after each byte saved to buffer.
  44:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxBufferRead - cyclic index for read from rxBuffer,
  45:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     checked to detect overflow condition.
  46:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxBufferOverflow - software overflow flag. Set to one
  47:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     when modbus_485_interface_rxBufferWrite index overtakes
  48:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     modbus_485_interface_rxBufferRead index.
  49:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxBufferLoopDetect - additional variable to detect overflow.
  50:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     Set to one when modbus_485_interface_rxBufferWrite is equal to
  51:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *    modbus_485_interface_rxBufferRead
  52:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxAddressMode - this variable contains the Address mode,
  53:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxAddressDetected - set to 1 when correct address received,
  55:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
  58:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *******************************************************************************/
  59:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     CY_ISR(modbus_485_interface_RXISR)
  60:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     {
  26              		.loc 1 60 0
  27              		.cfi_startproc
  28              	.L6:
  61:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         uint8 readData;
  62:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         uint8 readStatus;
  63:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         uint8 increment_pointer = 0u;
  64:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  65:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #if(CY_PSOC3)
  66:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         uint8 int_en;
  67:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* (CY_PSOC3) */
  68:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  69:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #ifdef modbus_485_interface_RXISR_ENTRY_CALLBACK
  70:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         modbus_485_interface_RXISR_EntryCallback();
  71:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* modbus_485_interface_RXISR_ENTRY_CALLBACK */
  72:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  73:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* User code required at start of ISR */
  74:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#START modbus_485_interface_RXISR_START` */
  75:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  76:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#END` */
  77:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  78:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         int_en = EA;
  80:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         CyGlobalIntEnable;
  81:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* (CY_PSOC3) */
  82:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  83:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         do
  84:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         {
  85:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             /* Read receiver status register */
  86:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             readStatus = modbus_485_interface_RXSTATUS_REG;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 3


  29              		.loc 1 86 0
  30 0000 1A4B     		ldr	r3, .L7
  31 0002 1B78     		ldrb	r3, [r3]
  32 0004 DBB2     		uxtb	r3, r3
  33              	.LVL0:
  87:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             *  of the user code in modbus_485_interface_RXISR_ERROR` section. 
  89:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             */
  90:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             readData = readStatus;
  91:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
  92:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             if((readStatus & (modbus_485_interface_RX_STS_BREAK | 
  34              		.loc 1 92 0
  35 0006 1E22     		mov	r2, #30
  36 0008 1A42     		tst	r2, r3
  37 000a 04D0     		beq	.L2
  93:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             modbus_485_interface_RX_STS_PAR_ERROR |
  94:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             modbus_485_interface_RX_STS_STOP_ERROR | 
  95:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             modbus_485_interface_RX_STS_OVERRUN)) != 0u)
  96:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             {
  97:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 /* ERROR handling. */
  98:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 modbus_485_interface_errorStatus |= readStatus & ( modbus_485_interface_RX_STS_BREA
  38              		.loc 1 98 0
  39 000c 1848     		ldr	r0, .L7+4
  40 000e 1A40     		and	r2, r3
  41 0010 0178     		ldrb	r1, [r0]
  42 0012 0A43     		orr	r2, r1
  43 0014 0270     		strb	r2, [r0]
  44              	.L2:
  99:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                                                             modbus_485_interface_RX_STS_PAR_ERROR |
 100:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                                                             modbus_485_interface_RX_STS_STOP_ERROR 
 101:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                                                             modbus_485_interface_RX_STS_OVERRUN);
 102:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 /* `#START modbus_485_interface_RXISR_ERROR` */
 103:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 104:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 /* `#END` */
 105:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 
 106:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             #ifdef modbus_485_interface_RXISR_ERROR_CALLBACK
 107:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 modbus_485_interface_RXISR_ERROR_Callback();
 108:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             #endif /* modbus_485_interface_RXISR_ERROR_CALLBACK */
 109:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             }
 110:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             
 111:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             if((readStatus & modbus_485_interface_RX_STS_FIFO_NOTEMPTY) != 0u)
  45              		.loc 1 111 0
  46 0016 2022     		mov	r2, #32
  47 0018 1340     		and	r3, r2
  48              	.LVL1:
  49 001a 24D0     		beq	.L3
 112:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             {
 113:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 /* Read data from the RX data register */
 114:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 readData = modbus_485_interface_RXDATA_REG;
  50              		.loc 1 114 0
  51 001c 154A     		ldr	r2, .L7+8
  52 001e 1178     		ldrb	r1, [r2]
  53 0020 C9B2     		uxtb	r1, r1
  54              	.LVL2:
 115:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             #if (modbus_485_interface_RXHW_ADDRESS_ENABLED)
 116:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 if(modbus_485_interface_rxAddressMode == (uint8)modbus_485_interface__B_UART__AM_SW
 117:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 4


 118:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     if((readStatus & modbus_485_interface_RX_STS_MRKSPC) != 0u)
 119:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     {
 120:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         if ((readStatus & modbus_485_interface_RX_STS_ADDR_MATCH) != 0u)
 121:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         {
 122:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             modbus_485_interface_rxAddressDetected = 1u;
 123:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         }
 124:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         else
 125:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         {
 126:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             modbus_485_interface_rxAddressDetected = 0u;
 127:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         }
 128:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     }
 129:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     if(modbus_485_interface_rxAddressDetected != 0u)
 130:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     {   /* Store only addressed data */
 131:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         modbus_485_interface_rxBuffer[modbus_485_interface_rxBufferWrite] = readDat
 132:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         increment_pointer = 1u;
 133:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     }
 134:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 }
 135:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 else /* Without software addressing */
 136:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 {
 137:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     modbus_485_interface_rxBuffer[modbus_485_interface_rxBufferWrite] = readData;
 138:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     increment_pointer = 1u;
 139:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 }
 140:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             #else  /* Without addressing */
 141:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 modbus_485_interface_rxBuffer[modbus_485_interface_rxBufferWrite] = readData;
  55              		.loc 1 141 0
  56 0022 154A     		ldr	r2, .L7+12
  57 0024 1278     		ldrb	r2, [r2]
  58 0026 D2B2     		uxtb	r2, r2
  59 0028 1448     		ldr	r0, .L7+16
  60 002a 8154     		strb	r1, [r0, r2]
  61              	.LVL3:
 142:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 increment_pointer = 1u;
 143:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             #endif /* (modbus_485_interface_RXHW_ADDRESS_ENABLED) */
 144:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 145:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 if(increment_pointer != 0u)
 147:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 {
 148:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     if(modbus_485_interface_rxBufferLoopDetect != 0u)
  62              		.loc 1 148 0
  63 002c 144A     		ldr	r2, .L7+20
  64 002e 1278     		ldrb	r2, [r2]
  65 0030 002A     		cmp	r2, #0
  66 0032 02D0     		beq	.L4
 149:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         modbus_485_interface_rxBufferOverflow = 1u;
  67              		.loc 1 150 0
  68 0034 0121     		mov	r1, #1
  69              	.LVL4:
  70 0036 134A     		ldr	r2, .L7+24
  71 0038 1170     		strb	r1, [r2]
  72              	.L4:
 151:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     }
 152:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     /* Set next pointer. */
 153:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     modbus_485_interface_rxBufferWrite++;
  73              		.loc 1 153 0
  74 003a 0F49     		ldr	r1, .L7+12
  75 003c 0A78     		ldrb	r2, [r1]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 5


  76 003e 0132     		add	r2, r2, #1
  77 0040 D2B2     		uxtb	r2, r2
  78 0042 0A70     		strb	r2, [r1]
 154:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 155:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     /* Check pointer for a loop condition */
 156:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     if(modbus_485_interface_rxBufferWrite >= modbus_485_interface_RX_BUFFER_SIZE)
  79              		.loc 1 156 0
  80 0044 0A78     		ldrb	r2, [r1]
  81 0046 D2B2     		uxtb	r2, r2
  82 0048 0F2A     		cmp	r2, #15
  83 004a 02D9     		bls	.L5
 157:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     {
 158:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         modbus_485_interface_rxBufferWrite = 0u;
  84              		.loc 1 158 0
  85 004c 0021     		mov	r1, #0
  86 004e 0A4A     		ldr	r2, .L7+12
  87 0050 1170     		strb	r1, [r2]
  88              	.L5:
 159:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     }
 160:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 161:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     if(modbus_485_interface_rxBufferWrite == modbus_485_interface_rxBufferRead)
  89              		.loc 1 162 0
  90 0052 094A     		ldr	r2, .L7+12
  91 0054 1278     		ldrb	r2, [r2]
  92 0056 0C49     		ldr	r1, .L7+28
  93 0058 0978     		ldrb	r1, [r1]
  94 005a D2B2     		uxtb	r2, r2
  95 005c 8A42     		cmp	r2, r1
  96 005e 02D1     		bne	.L3
 163:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     {
 164:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         modbus_485_interface_rxBufferLoopDetect = 1u;
  97              		.loc 1 164 0
  98 0060 0121     		mov	r1, #1
  99 0062 074A     		ldr	r2, .L7+20
 100 0064 1170     		strb	r1, [r2]
 101              	.LVL5:
 102              	.L3:
 165:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         /* When Hardware Flow Control selected */
 166:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         #if (modbus_485_interface_FLOW_CONTROL != 0u)
 167:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             modbus_485_interface_RXSTATUS_MASK_REG  &= (uint8)~modbus_485_interface
 169:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             CyIntClearPending(modbus_485_interface_RX_VECT_NUM);
 170:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                         #endif /* (modbus_485_interface_FLOW_CONTROL != 0u) */
 172:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                     }
 173:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 }
 174:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             }
 175:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         }while((readStatus & modbus_485_interface_RX_STS_FIFO_NOTEMPTY) != 0u);
 103              		.loc 1 175 0
 104 0066 002B     		cmp	r3, #0
 105 0068 CAD1     		bne	.L6
 176:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 177:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* User code required at end of ISR (Optional) */
 178:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#START modbus_485_interface_RXISR_END` */
 179:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 180:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#END` */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 6


 181:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 182:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #ifdef modbus_485_interface_RXISR_EXIT_CALLBACK
 183:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         modbus_485_interface_RXISR_ExitCallback();
 184:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* modbus_485_interface_RXISR_EXIT_CALLBACK */
 185:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 186:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #if(CY_PSOC3)
 187:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         EA = int_en;
 188:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* (CY_PSOC3) */
 189:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     }
 106              		.loc 1 189 0
 107              		@ sp needed
 108 006a 7047     		bx	lr
 109              	.L8:
 110              		.align	2
 111              	.L7:
 112 006c 61000F40 		.word	1074724961
 113 0070 00000000 		.word	modbus_485_interface_errorStatus
 114 0074 41000F40 		.word	1074724929
 115 0078 00000000 		.word	modbus_485_interface_rxBufferWrite
 116 007c 00000000 		.word	modbus_485_interface_rxBuffer
 117 0080 00000000 		.word	modbus_485_interface_rxBufferLoopDetect
 118 0084 00000000 		.word	modbus_485_interface_rxBufferOverflow
 119 0088 00000000 		.word	modbus_485_interface_rxBufferRead
 120              		.cfi_endproc
 121              	.LFE1:
 122              		.size	modbus_485_interface_RXISR, .-modbus_485_interface_RXISR
 123              		.section	.text.modbus_485_interface_TXISR,"ax",%progbits
 124              		.align	2
 125              		.global	modbus_485_interface_TXISR
 126              		.code	16
 127              		.thumb_func
 128              		.type	modbus_485_interface_TXISR, %function
 129              	modbus_485_interface_TXISR:
 130              	.LFB2:
 190:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     
 191:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** #endif /* (modbus_485_interface_RX_INTERRUPT_ENABLED && (modbus_485_interface_RX_ENABLED || modbus_
 192:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 193:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 194:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** #if (modbus_485_interface_TX_INTERRUPT_ENABLED && modbus_485_interface_TX_ENABLED)
 195:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     /*******************************************************************************
 196:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Function Name: modbus_485_interface_TXISR
 197:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     ********************************************************************************
 198:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
 199:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Summary:
 200:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
 202:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Parameters:
 203:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  None.
 204:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
 205:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Return:
 206:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  None.
 207:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
 208:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     * Global Variables:
 209:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_txBuffer - RAM buffer pointer for transmit data from.
 210:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_txBufferRead - cyclic index for read and transmit data
 211:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *  modbus_485_interface_rxBufferWrite - cyclic index for write to txBuffer,
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 7


 213:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *     checked to detect available for transmission bytes.
 214:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *
 215:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     *******************************************************************************/
 216:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     CY_ISR(modbus_485_interface_TXISR)
 217:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     {
 131              		.loc 1 217 0
 132              		.cfi_startproc
 218:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #if(CY_PSOC3)
 219:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         uint8 int_en;
 220:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* (CY_PSOC3) */
 221:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 222:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #ifdef modbus_485_interface_TXISR_ENTRY_CALLBACK
 223:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         modbus_485_interface_TXISR_EntryCallback();
 224:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* modbus_485_interface_TXISR_ENTRY_CALLBACK */
 225:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 226:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* User code required at start of ISR */
 227:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#START modbus_485_interface_TXISR_START` */
 228:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 229:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#END` */
 230:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 231:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         int_en = EA;
 233:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         CyGlobalIntEnable;
 234:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* (CY_PSOC3) */
 235:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 236:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         while((modbus_485_interface_txBufferRead != modbus_485_interface_txBufferWrite) &&
 133              		.loc 1 236 0
 134 0000 13E0     		b	.L10
 135              	.L13:
 237:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****              ((modbus_485_interface_TXSTATUS_REG & modbus_485_interface_TX_STS_FIFO_FULL) == 0u))
 238:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         {
 239:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             /* Check pointer wrap around */
 240:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             if(modbus_485_interface_txBufferRead >= modbus_485_interface_TX_BUFFER_SIZE)
 136              		.loc 1 240 0
 137 0002 104B     		ldr	r3, .L14
 138 0004 1B78     		ldrb	r3, [r3]
 139 0006 DBB2     		uxtb	r3, r3
 140 0008 0F2B     		cmp	r3, #15
 141 000a 02D9     		bls	.L11
 241:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             {
 242:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****                 modbus_485_interface_txBufferRead = 0u;
 142              		.loc 1 242 0
 143 000c 0022     		mov	r2, #0
 144 000e 0D4B     		ldr	r3, .L14
 145 0010 1A70     		strb	r2, [r3]
 146              	.L11:
 243:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             }
 244:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 245:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             modbus_485_interface_TXDATA_REG = modbus_485_interface_txBuffer[modbus_485_interface_tx
 147              		.loc 1 245 0
 148 0012 0C4A     		ldr	r2, .L14
 149 0014 1378     		ldrb	r3, [r2]
 150 0016 DBB2     		uxtb	r3, r3
 151 0018 0B49     		ldr	r1, .L14+4
 152 001a CB5C     		ldrb	r3, [r1, r3]
 153 001c DBB2     		uxtb	r3, r3
 154 001e 0B49     		ldr	r1, .L14+8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 8


 155 0020 0B70     		strb	r3, [r1]
 246:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 247:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             /* Set next pointer */
 248:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****             modbus_485_interface_txBufferRead++;
 156              		.loc 1 248 0
 157 0022 1378     		ldrb	r3, [r2]
 158 0024 0133     		add	r3, r3, #1
 159 0026 DBB2     		uxtb	r3, r3
 160 0028 1370     		strb	r3, [r2]
 161              	.L10:
 236:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****              ((modbus_485_interface_TXSTATUS_REG & modbus_485_interface_TX_STS_FIFO_FULL) == 0u))
 162              		.loc 1 236 0
 163 002a 064B     		ldr	r3, .L14
 164 002c 1B78     		ldrb	r3, [r3]
 165 002e DBB2     		uxtb	r3, r3
 166 0030 074A     		ldr	r2, .L14+12
 167 0032 1278     		ldrb	r2, [r2]
 168 0034 9342     		cmp	r3, r2
 169 0036 03D0     		beq	.L9
 237:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         {
 170              		.loc 1 237 0 discriminator 1
 171 0038 064B     		ldr	r3, .L14+16
 172 003a 1B78     		ldrb	r3, [r3]
 236:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****              ((modbus_485_interface_TXSTATUS_REG & modbus_485_interface_TX_STS_FIFO_FULL) == 0u))
 173              		.loc 1 236 0 discriminator 1
 174 003c 5B07     		lsl	r3, r3, #29
 175 003e E0D5     		bpl	.L13
 176              	.L9:
 249:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         }
 250:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 251:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* User code required at end of ISR (Optional) */
 252:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#START modbus_485_interface_TXISR_END` */
 253:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 254:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         /* `#END` */
 255:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 256:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #ifdef modbus_485_interface_TXISR_EXIT_CALLBACK
 257:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         modbus_485_interface_TXISR_ExitCallback();
 258:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* modbus_485_interface_TXISR_EXIT_CALLBACK */
 259:.\Generated_Source\PSoC4/modbus_485_interface_INT.c **** 
 260:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #if(CY_PSOC3)
 261:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****         EA = int_en;
 262:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****     #endif /* (CY_PSOC3) */
 263:.\Generated_Source\PSoC4/modbus_485_interface_INT.c ****    }
 177              		.loc 1 263 0
 178              		@ sp needed
 179 0040 7047     		bx	lr
 180              	.L15:
 181 0042 C046     		.align	2
 182              	.L14:
 183 0044 00000000 		.word	modbus_485_interface_txBufferRead
 184 0048 00000000 		.word	modbus_485_interface_txBuffer
 185 004c 40000F40 		.word	1074724928
 186 0050 00000000 		.word	modbus_485_interface_txBufferWrite
 187 0054 63000F40 		.word	1074724963
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	modbus_485_interface_TXISR, .-modbus_485_interface_TXISR
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 9


 191              		.text
 192              	.Letext0:
 193              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 194              		.file 3 ".\\Generated_Source\\PSoC4\\modbus_485_interface.h"
 195              		.section	.debug_info,"",%progbits
 196              	.Ldebug_info0:
 197 0000 7B010000 		.4byte	0x17b
 198 0004 0400     		.2byte	0x4
 199 0006 00000000 		.4byte	.Ldebug_abbrev0
 200 000a 04       		.byte	0x4
 201 000b 01       		.uleb128 0x1
 202 000c 0E020000 		.4byte	.LASF27
 203 0010 01       		.byte	0x1
 204 0011 B4020000 		.4byte	.LASF28
 205 0015 E8020000 		.4byte	.LASF29
 206 0019 00000000 		.4byte	.Ldebug_ranges0+0
 207 001d 00000000 		.4byte	0
 208 0021 00000000 		.4byte	.Ldebug_line0
 209 0025 02       		.uleb128 0x2
 210 0026 01       		.byte	0x1
 211 0027 06       		.byte	0x6
 212 0028 3E030000 		.4byte	.LASF0
 213 002c 02       		.uleb128 0x2
 214 002d 01       		.byte	0x1
 215 002e 08       		.byte	0x8
 216 002f C3000000 		.4byte	.LASF1
 217 0033 02       		.uleb128 0x2
 218 0034 02       		.byte	0x2
 219 0035 05       		.byte	0x5
 220 0036 9C020000 		.4byte	.LASF2
 221 003a 02       		.uleb128 0x2
 222 003b 02       		.byte	0x2
 223 003c 07       		.byte	0x7
 224 003d 44000000 		.4byte	.LASF3
 225 0041 02       		.uleb128 0x2
 226 0042 04       		.byte	0x4
 227 0043 05       		.byte	0x5
 228 0044 A6020000 		.4byte	.LASF4
 229 0048 02       		.uleb128 0x2
 230 0049 04       		.byte	0x4
 231 004a 07       		.byte	0x7
 232 004b D6000000 		.4byte	.LASF5
 233 004f 02       		.uleb128 0x2
 234 0050 08       		.byte	0x8
 235 0051 05       		.byte	0x5
 236 0052 D0010000 		.4byte	.LASF6
 237 0056 02       		.uleb128 0x2
 238 0057 08       		.byte	0x8
 239 0058 07       		.byte	0x7
 240 0059 62010000 		.4byte	.LASF7
 241 005d 03       		.uleb128 0x3
 242 005e 04       		.byte	0x4
 243 005f 05       		.byte	0x5
 244 0060 696E7400 		.ascii	"int\000"
 245 0064 02       		.uleb128 0x2
 246 0065 04       		.byte	0x4
 247 0066 07       		.byte	0x7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 10


 248 0067 3A010000 		.4byte	.LASF8
 249 006b 04       		.uleb128 0x4
 250 006c E8000000 		.4byte	.LASF12
 251 0070 02       		.byte	0x2
 252 0071 9801     		.2byte	0x198
 253 0073 2C000000 		.4byte	0x2c
 254 0077 02       		.uleb128 0x2
 255 0078 04       		.byte	0x4
 256 0079 04       		.byte	0x4
 257 007a 23000000 		.4byte	.LASF9
 258 007e 02       		.uleb128 0x2
 259 007f 08       		.byte	0x8
 260 0080 04       		.byte	0x4
 261 0081 33010000 		.4byte	.LASF10
 262 0085 02       		.uleb128 0x2
 263 0086 01       		.byte	0x1
 264 0087 08       		.byte	0x8
 265 0088 AF020000 		.4byte	.LASF11
 266 008c 04       		.uleb128 0x4
 267 008d D1000000 		.4byte	.LASF13
 268 0091 02       		.byte	0x2
 269 0092 4202     		.2byte	0x242
 270 0094 98000000 		.4byte	0x98
 271 0098 05       		.uleb128 0x5
 272 0099 6B000000 		.4byte	0x6b
 273 009d 02       		.uleb128 0x2
 274 009e 04       		.byte	0x4
 275 009f 07       		.byte	0x7
 276 00a0 C7010000 		.4byte	.LASF14
 277 00a4 06       		.uleb128 0x6
 278 00a5 29000000 		.4byte	.LASF30
 279 00a9 01       		.byte	0x1
 280 00aa 3B       		.byte	0x3b
 281 00ab 00000000 		.4byte	.LFB1
 282 00af 8C000000 		.4byte	.LFE1-.LFB1
 283 00b3 01       		.uleb128 0x1
 284 00b4 9C       		.byte	0x9c
 285 00b5 E7000000 		.4byte	0xe7
 286 00b9 07       		.uleb128 0x7
 287 00ba 4A030000 		.4byte	.LASF15
 288 00be 01       		.byte	0x1
 289 00bf 3D       		.byte	0x3d
 290 00c0 6B000000 		.4byte	0x6b
 291 00c4 00000000 		.4byte	.LLST0
 292 00c8 07       		.uleb128 0x7
 293 00c9 9A000000 		.4byte	.LASF16
 294 00cd 01       		.byte	0x1
 295 00ce 3E       		.byte	0x3e
 296 00cf 6B000000 		.4byte	0x6b
 297 00d3 1E000000 		.4byte	.LLST1
 298 00d7 07       		.uleb128 0x7
 299 00d8 DE010000 		.4byte	.LASF17
 300 00dc 01       		.byte	0x1
 301 00dd 3F       		.byte	0x3f
 302 00de 6B000000 		.4byte	0x6b
 303 00e2 31000000 		.4byte	.LLST2
 304 00e6 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 11


 305 00e7 08       		.uleb128 0x8
 306 00e8 47010000 		.4byte	.LASF31
 307 00ec 01       		.byte	0x1
 308 00ed D8       		.byte	0xd8
 309 00ee 00000000 		.4byte	.LFB2
 310 00f2 58000000 		.4byte	.LFE2-.LFB2
 311 00f6 01       		.uleb128 0x1
 312 00f7 9C       		.byte	0x9c
 313 00f8 09       		.uleb128 0x9
 314 00f9 6B000000 		.4byte	0x6b
 315 00fd 08010000 		.4byte	0x108
 316 0101 0A       		.uleb128 0xa
 317 0102 9D000000 		.4byte	0x9d
 318 0106 0F       		.byte	0xf
 319 0107 00       		.byte	0
 320 0108 0B       		.uleb128 0xb
 321 0109 A5000000 		.4byte	.LASF18
 322 010d 03       		.byte	0x3
 323 010e 3801     		.2byte	0x138
 324 0110 14010000 		.4byte	0x114
 325 0114 05       		.uleb128 0x5
 326 0115 F8000000 		.4byte	0xf8
 327 0119 0B       		.uleb128 0xb
 328 011a 78000000 		.4byte	.LASF19
 329 011e 03       		.byte	0x3
 330 011f 3901     		.2byte	0x139
 331 0121 98000000 		.4byte	0x98
 332 0125 0B       		.uleb128 0xb
 333 0126 00000000 		.4byte	.LASF20
 334 012a 03       		.byte	0x3
 335 012b 3A01     		.2byte	0x13a
 336 012d 6B000000 		.4byte	0x6b
 337 0131 0B       		.uleb128 0xb
 338 0132 57000000 		.4byte	.LASF21
 339 0136 03       		.byte	0x3
 340 0137 3D01     		.2byte	0x13d
 341 0139 6B000000 		.4byte	0x6b
 342 013d 0B       		.uleb128 0xb
 343 013e F0010000 		.4byte	.LASF22
 344 0142 03       		.byte	0x3
 345 0143 3E01     		.2byte	0x13e
 346 0145 49010000 		.4byte	0x149
 347 0149 05       		.uleb128 0x5
 348 014a F8000000 		.4byte	0xf8
 349 014e 0B       		.uleb128 0xb
 350 014f 11010000 		.4byte	.LASF23
 351 0153 03       		.byte	0x3
 352 0154 3F01     		.2byte	0x13f
 353 0156 98000000 		.4byte	0x98
 354 015a 0B       		.uleb128 0xb
 355 015b EE000000 		.4byte	.LASF24
 356 015f 03       		.byte	0x3
 357 0160 4001     		.2byte	0x140
 358 0162 98000000 		.4byte	0x98
 359 0166 0B       		.uleb128 0xb
 360 0167 79010000 		.4byte	.LASF25
 361 016b 03       		.byte	0x3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 12


 362 016c 4101     		.2byte	0x141
 363 016e 98000000 		.4byte	0x98
 364 0172 0B       		.uleb128 0xb
 365 0173 A1010000 		.4byte	.LASF26
 366 0177 03       		.byte	0x3
 367 0178 4201     		.2byte	0x142
 368 017a 98000000 		.4byte	0x98
 369 017e 00       		.byte	0
 370              		.section	.debug_abbrev,"",%progbits
 371              	.Ldebug_abbrev0:
 372 0000 01       		.uleb128 0x1
 373 0001 11       		.uleb128 0x11
 374 0002 01       		.byte	0x1
 375 0003 25       		.uleb128 0x25
 376 0004 0E       		.uleb128 0xe
 377 0005 13       		.uleb128 0x13
 378 0006 0B       		.uleb128 0xb
 379 0007 03       		.uleb128 0x3
 380 0008 0E       		.uleb128 0xe
 381 0009 1B       		.uleb128 0x1b
 382 000a 0E       		.uleb128 0xe
 383 000b 55       		.uleb128 0x55
 384 000c 17       		.uleb128 0x17
 385 000d 11       		.uleb128 0x11
 386 000e 01       		.uleb128 0x1
 387 000f 10       		.uleb128 0x10
 388 0010 17       		.uleb128 0x17
 389 0011 00       		.byte	0
 390 0012 00       		.byte	0
 391 0013 02       		.uleb128 0x2
 392 0014 24       		.uleb128 0x24
 393 0015 00       		.byte	0
 394 0016 0B       		.uleb128 0xb
 395 0017 0B       		.uleb128 0xb
 396 0018 3E       		.uleb128 0x3e
 397 0019 0B       		.uleb128 0xb
 398 001a 03       		.uleb128 0x3
 399 001b 0E       		.uleb128 0xe
 400 001c 00       		.byte	0
 401 001d 00       		.byte	0
 402 001e 03       		.uleb128 0x3
 403 001f 24       		.uleb128 0x24
 404 0020 00       		.byte	0
 405 0021 0B       		.uleb128 0xb
 406 0022 0B       		.uleb128 0xb
 407 0023 3E       		.uleb128 0x3e
 408 0024 0B       		.uleb128 0xb
 409 0025 03       		.uleb128 0x3
 410 0026 08       		.uleb128 0x8
 411 0027 00       		.byte	0
 412 0028 00       		.byte	0
 413 0029 04       		.uleb128 0x4
 414 002a 16       		.uleb128 0x16
 415 002b 00       		.byte	0
 416 002c 03       		.uleb128 0x3
 417 002d 0E       		.uleb128 0xe
 418 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 13


 419 002f 0B       		.uleb128 0xb
 420 0030 3B       		.uleb128 0x3b
 421 0031 05       		.uleb128 0x5
 422 0032 49       		.uleb128 0x49
 423 0033 13       		.uleb128 0x13
 424 0034 00       		.byte	0
 425 0035 00       		.byte	0
 426 0036 05       		.uleb128 0x5
 427 0037 35       		.uleb128 0x35
 428 0038 00       		.byte	0
 429 0039 49       		.uleb128 0x49
 430 003a 13       		.uleb128 0x13
 431 003b 00       		.byte	0
 432 003c 00       		.byte	0
 433 003d 06       		.uleb128 0x6
 434 003e 2E       		.uleb128 0x2e
 435 003f 01       		.byte	0x1
 436 0040 3F       		.uleb128 0x3f
 437 0041 19       		.uleb128 0x19
 438 0042 03       		.uleb128 0x3
 439 0043 0E       		.uleb128 0xe
 440 0044 3A       		.uleb128 0x3a
 441 0045 0B       		.uleb128 0xb
 442 0046 3B       		.uleb128 0x3b
 443 0047 0B       		.uleb128 0xb
 444 0048 27       		.uleb128 0x27
 445 0049 19       		.uleb128 0x19
 446 004a 11       		.uleb128 0x11
 447 004b 01       		.uleb128 0x1
 448 004c 12       		.uleb128 0x12
 449 004d 06       		.uleb128 0x6
 450 004e 40       		.uleb128 0x40
 451 004f 18       		.uleb128 0x18
 452 0050 9742     		.uleb128 0x2117
 453 0052 19       		.uleb128 0x19
 454 0053 01       		.uleb128 0x1
 455 0054 13       		.uleb128 0x13
 456 0055 00       		.byte	0
 457 0056 00       		.byte	0
 458 0057 07       		.uleb128 0x7
 459 0058 34       		.uleb128 0x34
 460 0059 00       		.byte	0
 461 005a 03       		.uleb128 0x3
 462 005b 0E       		.uleb128 0xe
 463 005c 3A       		.uleb128 0x3a
 464 005d 0B       		.uleb128 0xb
 465 005e 3B       		.uleb128 0x3b
 466 005f 0B       		.uleb128 0xb
 467 0060 49       		.uleb128 0x49
 468 0061 13       		.uleb128 0x13
 469 0062 02       		.uleb128 0x2
 470 0063 17       		.uleb128 0x17
 471 0064 00       		.byte	0
 472 0065 00       		.byte	0
 473 0066 08       		.uleb128 0x8
 474 0067 2E       		.uleb128 0x2e
 475 0068 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 14


 476 0069 3F       		.uleb128 0x3f
 477 006a 19       		.uleb128 0x19
 478 006b 03       		.uleb128 0x3
 479 006c 0E       		.uleb128 0xe
 480 006d 3A       		.uleb128 0x3a
 481 006e 0B       		.uleb128 0xb
 482 006f 3B       		.uleb128 0x3b
 483 0070 0B       		.uleb128 0xb
 484 0071 27       		.uleb128 0x27
 485 0072 19       		.uleb128 0x19
 486 0073 11       		.uleb128 0x11
 487 0074 01       		.uleb128 0x1
 488 0075 12       		.uleb128 0x12
 489 0076 06       		.uleb128 0x6
 490 0077 40       		.uleb128 0x40
 491 0078 18       		.uleb128 0x18
 492 0079 9742     		.uleb128 0x2117
 493 007b 19       		.uleb128 0x19
 494 007c 00       		.byte	0
 495 007d 00       		.byte	0
 496 007e 09       		.uleb128 0x9
 497 007f 01       		.uleb128 0x1
 498 0080 01       		.byte	0x1
 499 0081 49       		.uleb128 0x49
 500 0082 13       		.uleb128 0x13
 501 0083 01       		.uleb128 0x1
 502 0084 13       		.uleb128 0x13
 503 0085 00       		.byte	0
 504 0086 00       		.byte	0
 505 0087 0A       		.uleb128 0xa
 506 0088 21       		.uleb128 0x21
 507 0089 00       		.byte	0
 508 008a 49       		.uleb128 0x49
 509 008b 13       		.uleb128 0x13
 510 008c 2F       		.uleb128 0x2f
 511 008d 0B       		.uleb128 0xb
 512 008e 00       		.byte	0
 513 008f 00       		.byte	0
 514 0090 0B       		.uleb128 0xb
 515 0091 34       		.uleb128 0x34
 516 0092 00       		.byte	0
 517 0093 03       		.uleb128 0x3
 518 0094 0E       		.uleb128 0xe
 519 0095 3A       		.uleb128 0x3a
 520 0096 0B       		.uleb128 0xb
 521 0097 3B       		.uleb128 0x3b
 522 0098 05       		.uleb128 0x5
 523 0099 49       		.uleb128 0x49
 524 009a 13       		.uleb128 0x13
 525 009b 3F       		.uleb128 0x3f
 526 009c 19       		.uleb128 0x19
 527 009d 3C       		.uleb128 0x3c
 528 009e 19       		.uleb128 0x19
 529 009f 00       		.byte	0
 530 00a0 00       		.byte	0
 531 00a1 00       		.byte	0
 532              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 15


 533              	.Ldebug_loc0:
 534              	.LLST0:
 535 0000 06000000 		.4byte	.LVL0
 536 0004 1A000000 		.4byte	.LVL1
 537 0008 0100     		.2byte	0x1
 538 000a 53       		.byte	0x53
 539 000b 22000000 		.4byte	.LVL2
 540 000f 36000000 		.4byte	.LVL4
 541 0013 0100     		.2byte	0x1
 542 0015 51       		.byte	0x51
 543 0016 00000000 		.4byte	0
 544 001a 00000000 		.4byte	0
 545              	.LLST1:
 546 001e 06000000 		.4byte	.LVL0
 547 0022 1A000000 		.4byte	.LVL1
 548 0026 0100     		.2byte	0x1
 549 0028 53       		.byte	0x53
 550 0029 00000000 		.4byte	0
 551 002d 00000000 		.4byte	0
 552              	.LLST2:
 553 0031 2C000000 		.4byte	.LVL3
 554 0035 66000000 		.4byte	.LVL5
 555 0039 0200     		.2byte	0x2
 556 003b 31       		.byte	0x31
 557 003c 9F       		.byte	0x9f
 558 003d 00000000 		.4byte	0
 559 0041 00000000 		.4byte	0
 560              		.section	.debug_aranges,"",%progbits
 561 0000 24000000 		.4byte	0x24
 562 0004 0200     		.2byte	0x2
 563 0006 00000000 		.4byte	.Ldebug_info0
 564 000a 04       		.byte	0x4
 565 000b 00       		.byte	0
 566 000c 0000     		.2byte	0
 567 000e 0000     		.2byte	0
 568 0010 00000000 		.4byte	.LFB1
 569 0014 8C000000 		.4byte	.LFE1-.LFB1
 570 0018 00000000 		.4byte	.LFB2
 571 001c 58000000 		.4byte	.LFE2-.LFB2
 572 0020 00000000 		.4byte	0
 573 0024 00000000 		.4byte	0
 574              		.section	.debug_ranges,"",%progbits
 575              	.Ldebug_ranges0:
 576 0000 00000000 		.4byte	.LFB1
 577 0004 8C000000 		.4byte	.LFE1
 578 0008 00000000 		.4byte	.LFB2
 579 000c 58000000 		.4byte	.LFE2
 580 0010 00000000 		.4byte	0
 581 0014 00000000 		.4byte	0
 582              		.section	.debug_line,"",%progbits
 583              	.Ldebug_line0:
 584 0000 C5000000 		.section	.debug_str,"MS",%progbits,1
 584      02007100 
 584      00000201 
 584      FB0E0D00 
 584      01010101 
 585              	.LASF20:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 16


 586 0000 6D6F6462 		.ascii	"modbus_485_interface_txBufferWrite\000"
 586      75735F34 
 586      38355F69 
 586      6E746572 
 586      66616365 
 587              	.LASF9:
 588 0023 666C6F61 		.ascii	"float\000"
 588      7400
 589              	.LASF30:
 590 0029 6D6F6462 		.ascii	"modbus_485_interface_RXISR\000"
 590      75735F34 
 590      38355F69 
 590      6E746572 
 590      66616365 
 591              	.LASF3:
 592 0044 73686F72 		.ascii	"short unsigned int\000"
 592      7420756E 
 592      7369676E 
 592      65642069 
 592      6E7400
 593              	.LASF21:
 594 0057 6D6F6462 		.ascii	"modbus_485_interface_errorStatus\000"
 594      75735F34 
 594      38355F69 
 594      6E746572 
 594      66616365 
 595              	.LASF19:
 596 0078 6D6F6462 		.ascii	"modbus_485_interface_txBufferRead\000"
 596      75735F34 
 596      38355F69 
 596      6E746572 
 596      66616365 
 597              	.LASF16:
 598 009a 72656164 		.ascii	"readStatus\000"
 598      53746174 
 598      757300
 599              	.LASF18:
 600 00a5 6D6F6462 		.ascii	"modbus_485_interface_txBuffer\000"
 600      75735F34 
 600      38355F69 
 600      6E746572 
 600      66616365 
 601              	.LASF1:
 602 00c3 756E7369 		.ascii	"unsigned char\000"
 602      676E6564 
 602      20636861 
 602      7200
 603              	.LASF13:
 604 00d1 72656738 		.ascii	"reg8\000"
 604      00
 605              	.LASF5:
 606 00d6 6C6F6E67 		.ascii	"long unsigned int\000"
 606      20756E73 
 606      69676E65 
 606      6420696E 
 606      7400
 607              	.LASF12:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 17


 608 00e8 75696E74 		.ascii	"uint8\000"
 608      3800
 609              	.LASF24:
 610 00ee 6D6F6462 		.ascii	"modbus_485_interface_rxBufferWrite\000"
 610      75735F34 
 610      38355F69 
 610      6E746572 
 610      66616365 
 611              	.LASF23:
 612 0111 6D6F6462 		.ascii	"modbus_485_interface_rxBufferRead\000"
 612      75735F34 
 612      38355F69 
 612      6E746572 
 612      66616365 
 613              	.LASF10:
 614 0133 646F7562 		.ascii	"double\000"
 614      6C6500
 615              	.LASF8:
 616 013a 756E7369 		.ascii	"unsigned int\000"
 616      676E6564 
 616      20696E74 
 616      00
 617              	.LASF31:
 618 0147 6D6F6462 		.ascii	"modbus_485_interface_TXISR\000"
 618      75735F34 
 618      38355F69 
 618      6E746572 
 618      66616365 
 619              	.LASF7:
 620 0162 6C6F6E67 		.ascii	"long long unsigned int\000"
 620      206C6F6E 
 620      6720756E 
 620      7369676E 
 620      65642069 
 621              	.LASF25:
 622 0179 6D6F6462 		.ascii	"modbus_485_interface_rxBufferLoopDetect\000"
 622      75735F34 
 622      38355F69 
 622      6E746572 
 622      66616365 
 623              	.LASF26:
 624 01a1 6D6F6462 		.ascii	"modbus_485_interface_rxBufferOverflow\000"
 624      75735F34 
 624      38355F69 
 624      6E746572 
 624      66616365 
 625              	.LASF14:
 626 01c7 73697A65 		.ascii	"sizetype\000"
 626      74797065 
 626      00
 627              	.LASF6:
 628 01d0 6C6F6E67 		.ascii	"long long int\000"
 628      206C6F6E 
 628      6720696E 
 628      7400
 629              	.LASF17:
 630 01de 696E6372 		.ascii	"increment_pointer\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 18


 630      656D656E 
 630      745F706F 
 630      696E7465 
 630      7200
 631              	.LASF22:
 632 01f0 6D6F6462 		.ascii	"modbus_485_interface_rxBuffer\000"
 632      75735F34 
 632      38355F69 
 632      6E746572 
 632      66616365 
 633              	.LASF27:
 634 020e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 634      4320342E 
 634      392E3320 
 634      32303135 
 634      30333033 
 635 0241 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 635      20726576 
 635      6973696F 
 635      6E203232 
 635      31323230 
 636 0274 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 636      66756E63 
 636      74696F6E 
 636      2D736563 
 636      74696F6E 
 637              	.LASF2:
 638 029c 73686F72 		.ascii	"short int\000"
 638      7420696E 
 638      7400
 639              	.LASF4:
 640 02a6 6C6F6E67 		.ascii	"long int\000"
 640      20696E74 
 640      00
 641              	.LASF11:
 642 02af 63686172 		.ascii	"char\000"
 642      00
 643              	.LASF28:
 644 02b4 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\modbus_485_interface_IN"
 644      6E657261 
 644      7465645F 
 644      536F7572 
 644      63655C50 
 645 02e4 542E6300 		.ascii	"T.c\000"
 646              	.LASF29:
 647 02e8 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 647      73657273 
 647      5C676C65 
 647      6E6E5C4F 
 647      6E654472 
 648 0316 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 648      69737475 
 648      72655F53 
 648      656E736F 
 648      725C4D6F 
 649              	.LASF0:
 650 033e 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccwV1Vng.s 			page 19


 650      65642063 
 650      68617200 
 651              	.LASF15:
 652 034a 72656164 		.ascii	"readData\000"
 652      44617461 
 652      00
 653              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
