ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_1_Start,"ax",%progbits
  18              		.align	2
  19              		.global	UART_1_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_1_Start, %function
  23              	UART_1_Start:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\UART_1.c"
   1:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC4/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/UART_1.c **** *
   5:Generated_Source\PSoC4/UART_1.c **** * Description:
   6:Generated_Source\PSoC4/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/UART_1.c **** *
   8:Generated_Source\PSoC4/UART_1.c **** * Note:
   9:Generated_Source\PSoC4/UART_1.c **** *
  10:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC4/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/UART_1.c **** 
  17:Generated_Source\PSoC4/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/UART_1.c **** 
  22:Generated_Source\PSoC4/UART_1.c **** 
  23:Generated_Source\PSoC4/UART_1.c **** /***************************************
  24:Generated_Source\PSoC4/UART_1.c **** * Global data allocation
  25:Generated_Source\PSoC4/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC4/UART_1.c **** 
  27:Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC4/UART_1.c **** 
  29:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 2


  33:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC4/UART_1.c **** 
  35:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC4/UART_1.c **** 
  48:Generated_Source\PSoC4/UART_1.c **** 
  49:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC4/UART_1.c **** *
  53:Generated_Source\PSoC4/UART_1.c **** * Summary:
  54:Generated_Source\PSoC4/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC4/UART_1.c **** *
  59:Generated_Source\PSoC4/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC4/UART_1.c **** *  None.
  61:Generated_Source\PSoC4/UART_1.c **** *
  62:Generated_Source\PSoC4/UART_1.c **** * Return:
  63:Generated_Source\PSoC4/UART_1.c **** *  None.
  64:Generated_Source\PSoC4/UART_1.c **** *
  65:Generated_Source\PSoC4/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC4/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC4/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC4/UART_1.c **** *
  72:Generated_Source\PSoC4/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC4/UART_1.c **** *  No.
  74:Generated_Source\PSoC4/UART_1.c **** *
  75:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC4/UART_1.c **** {
  26              		.loc 1 77 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  78:Generated_Source\PSoC4/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/UART_1.c ****     if(UART_1_initVar == 0u)
  32              		.loc 1 79 0
  33 0002 174B     		ldr	r3, .L4
  34 0004 1A78     		ldrb	r2, [r3]
  35 0006 002A     		cmp	r2, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 3


  36 0008 10D1     		bne	.L2
  37              	.LBB22:
  38              	.LBB23:
  80:Generated_Source\PSoC4/UART_1.c ****     {
  81:Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
  82:Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
  83:Generated_Source\PSoC4/UART_1.c ****     }
  84:Generated_Source\PSoC4/UART_1.c **** 
  85:Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
  86:Generated_Source\PSoC4/UART_1.c **** }
  87:Generated_Source\PSoC4/UART_1.c **** 
  88:Generated_Source\PSoC4/UART_1.c **** 
  89:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC4/UART_1.c **** *
  93:Generated_Source\PSoC4/UART_1.c **** * Summary:
  94:Generated_Source\PSoC4/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC4/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC4/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/UART_1.c **** *
  99:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC4/UART_1.c **** *  None.
 101:Generated_Source\PSoC4/UART_1.c **** *
 102:Generated_Source\PSoC4/UART_1.c **** * Return:
 103:Generated_Source\PSoC4/UART_1.c **** *  None.
 104:Generated_Source\PSoC4/UART_1.c **** *
 105:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC4/UART_1.c **** {
 108:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC4/UART_1.c **** 
 110:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC4/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/UART_1.c **** 
 117:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/UART_1.c **** 
 123:Generated_Source\PSoC4/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  39              		.loc 1 124 0
  40 000a 7221     		mov	r1, #114
  41 000c 154A     		ldr	r2, .L4+4
  42 000e 1170     		strb	r1, [r2]
 125:Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  43              		.loc 1 126 0
  44 0010 154A     		ldr	r2, .L4+8
  45 0012 5239     		sub	r1, r1, #82
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 4


  46 0014 1170     		strb	r1, [r2]
 127:Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC4/UART_1.c **** 
 129:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/UART_1.c **** 
 136:Generated_Source\PSoC4/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  47              		.loc 1 138 0
  48 0016 154A     		ldr	r2, .L4+12
  49 0018 1A39     		sub	r1, r1, #26
  50 001a 1170     		strb	r1, [r2]
 139:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  51              		.loc 1 139 0
  52 001c 144A     		ldr	r2, .L4+16
  53 001e 4131     		add	r1, r1, #65
  54 0020 1170     		strb	r1, [r2]
 140:Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/UART_1.c ****         #else
 142:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/UART_1.c **** 
 146:Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/UART_1.c ****         #else
 150:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  55              		.loc 1 150 0
  56 0022 144A     		ldr	r2, .L4+20
  57 0024 3D39     		sub	r1, r1, #61
  58 0026 1170     		strb	r1, [r2]
  59              	.LBE23:
  60              	.LBE22:
  82:Generated_Source\PSoC4/UART_1.c ****     }
  61              		.loc 1 82 0
  62 0028 0122     		mov	r2, #1
  63 002a 1A70     		strb	r2, [r3]
  64              	.L2:
  65              	.LBB24:
  66              	.LBB25:
 151:Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/UART_1.c **** 
 153:Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC4/UART_1.c **** 
 155:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC4/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/UART_1.c **** }
 161:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 5


 162:Generated_Source\PSoC4/UART_1.c **** 
 163:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC4/UART_1.c **** *
 167:Generated_Source\PSoC4/UART_1.c **** * Summary:
 168:Generated_Source\PSoC4/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC4/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC4/UART_1.c **** *  operation.
 172:Generated_Source\PSoC4/UART_1.c **** 
 173:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC4/UART_1.c **** *  None.
 175:Generated_Source\PSoC4/UART_1.c **** *
 176:Generated_Source\PSoC4/UART_1.c **** * Return:
 177:Generated_Source\PSoC4/UART_1.c **** *  None.
 178:Generated_Source\PSoC4/UART_1.c **** *
 179:Generated_Source\PSoC4/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC4/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/UART_1.c **** *
 182:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC4/UART_1.c **** {
 185:Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  67              		.loc 1 186 0
  68 002c FFF7FEFF 		bl	CyEnterCriticalSection
  69              	.LVL0:
 187:Generated_Source\PSoC4/UART_1.c **** 
 188:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC4/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
  70              		.loc 1 190 0
  71 0030 2023     		mov	r3, #32
  72 0032 114A     		ldr	r2, .L4+24
 186:Generated_Source\PSoC4/UART_1.c **** 
  73              		.loc 1 186 0
  74 0034 041C     		mov	r4, r0
  75              	.LVL1:
  76              		.loc 1 190 0
  77 0036 1178     		ldrb	r1, [r2]
 191:Generated_Source\PSoC4/UART_1.c **** 
 192:Generated_Source\PSoC4/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:Generated_Source\PSoC4/UART_1.c **** 
 195:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC4/UART_1.c **** 
 198:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC4/UART_1.c **** 
 204:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC4/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 6


 207:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC4/UART_1.c **** 
 210:Generated_Source\PSoC4/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 212:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/UART_1.c **** 
 218:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
  78              		.loc 1 219 0
  79 0038 FF20     		mov	r0, #255
 190:Generated_Source\PSoC4/UART_1.c **** 
  80              		.loc 1 190 0
  81 003a 0B43     		orr	r3, r1
  82 003c 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC4/UART_1.c **** 
  83              		.loc 1 193 0
  84 003e 1023     		mov	r3, #16
  85 0040 0E49     		ldr	r1, .L4+28
  86              	.LBE25:
  87              	.LBE24:
  86:Generated_Source\PSoC4/UART_1.c **** 
  88              		.loc 1 86 0
  89              		@ sp needed
  90              	.LBB27:
  91              	.LBB26:
 193:Generated_Source\PSoC4/UART_1.c **** 
  92              		.loc 1 193 0
  93 0042 0A78     		ldrb	r2, [r1]
  94 0044 1A43     		orr	r2, r3
  95 0046 D2B2     		uxtb	r2, r2
  96 0048 0A70     		strb	r2, [r1]
 211:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
  97              		.loc 1 211 0
  98 004a 0D4A     		ldr	r2, .L4+32
  99 004c 1178     		ldrb	r1, [r2]
 100 004e 0B43     		orr	r3, r1
 101 0050 DBB2     		uxtb	r3, r3
 102 0052 1370     		strb	r3, [r2]
 103              		.loc 1 219 0
 104 0054 FFF7FEFF 		bl	UART_1_IntClock_StartEx
 105              	.LVL2:
 220:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC4/UART_1.c **** 
 222:Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 106              		.loc 1 222 0
 107 0058 201C     		mov	r0, r4
 108 005a FFF7FEFF 		bl	CyExitCriticalSection
 109              	.LVL3:
 110              	.LVL4:
 111              	.LBE26:
 112              	.LBE27:
  86:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 7


 113              		.loc 1 86 0
 114 005e 10BD     		pop	{r4, pc}
 115              	.L5:
 116              		.align	2
 117              	.L4:
 118 0060 00000000 		.word	.LANCHOR0
 119 0064 81000F40 		.word	1074724993
 120 0068 80000F40 		.word	1074724992
 121 006c 23000F40 		.word	1074724899
 122 0070 33000F40 		.word	1074724915
 123 0074 82000F40 		.word	1074724994
 124 0078 91000F40 		.word	1074725009
 125 007c 90000F40 		.word	1074725008
 126 0080 92000F40 		.word	1074725010
 127              		.cfi_endproc
 128              	.LFE1:
 129              		.size	UART_1_Start, .-UART_1_Start
 130              		.section	.text.UART_1_Init,"ax",%progbits
 131              		.align	2
 132              		.global	UART_1_Init
 133              		.code	16
 134              		.thumb_func
 135              		.type	UART_1_Init, %function
 136              	UART_1_Init:
 137              	.LFB2:
 107:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 138              		.loc 1 107 0
 139              		.cfi_startproc
 124:Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 140              		.loc 1 124 0
 141 0000 7222     		mov	r2, #114
 142 0002 074B     		ldr	r3, .L7
 160:Generated_Source\PSoC4/UART_1.c **** 
 143              		.loc 1 160 0
 144              		@ sp needed
 124:Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 145              		.loc 1 124 0
 146 0004 1A70     		strb	r2, [r3]
 126:Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 147              		.loc 1 126 0
 148 0006 074B     		ldr	r3, .L7+4
 149 0008 523A     		sub	r2, r2, #82
 150 000a 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 151              		.loc 1 138 0
 152 000c 064B     		ldr	r3, .L7+8
 153 000e 1A3A     		sub	r2, r2, #26
 154 0010 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 155              		.loc 1 139 0
 156 0012 064B     		ldr	r3, .L7+12
 157 0014 4132     		add	r2, r2, #65
 158 0016 1A70     		strb	r2, [r3]
 150:Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 159              		.loc 1 150 0
 160 0018 054B     		ldr	r3, .L7+16
 161 001a 3D3A     		sub	r2, r2, #61
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 8


 162 001c 1A70     		strb	r2, [r3]
 160:Generated_Source\PSoC4/UART_1.c **** 
 163              		.loc 1 160 0
 164 001e 7047     		bx	lr
 165              	.L8:
 166              		.align	2
 167              	.L7:
 168 0020 81000F40 		.word	1074724993
 169 0024 80000F40 		.word	1074724992
 170 0028 23000F40 		.word	1074724899
 171 002c 33000F40 		.word	1074724915
 172 0030 82000F40 		.word	1074724994
 173              		.cfi_endproc
 174              	.LFE2:
 175              		.size	UART_1_Init, .-UART_1_Init
 176              		.section	.text.UART_1_Enable,"ax",%progbits
 177              		.align	2
 178              		.global	UART_1_Enable
 179              		.code	16
 180              		.thumb_func
 181              		.type	UART_1_Enable, %function
 182              	UART_1_Enable:
 183              	.LFB3:
 184:Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 184              		.loc 1 184 0
 185              		.cfi_startproc
 186 0000 10B5     		push	{r4, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 4, -8
 189              		.cfi_offset 14, -4
 186:Generated_Source\PSoC4/UART_1.c **** 
 190              		.loc 1 186 0
 191 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 192              	.LVL5:
 190:Generated_Source\PSoC4/UART_1.c **** 
 193              		.loc 1 190 0
 194 0006 2023     		mov	r3, #32
 195 0008 0B4A     		ldr	r2, .L10
 186:Generated_Source\PSoC4/UART_1.c **** 
 196              		.loc 1 186 0
 197 000a 041C     		mov	r4, r0
 198              	.LVL6:
 190:Generated_Source\PSoC4/UART_1.c **** 
 199              		.loc 1 190 0
 200 000c 1178     		ldrb	r1, [r2]
 219:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 201              		.loc 1 219 0
 202 000e FF20     		mov	r0, #255
 190:Generated_Source\PSoC4/UART_1.c **** 
 203              		.loc 1 190 0
 204 0010 0B43     		orr	r3, r1
 205 0012 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC4/UART_1.c **** 
 206              		.loc 1 193 0
 207 0014 1023     		mov	r3, #16
 208 0016 0949     		ldr	r1, .L10+4
 223:Generated_Source\PSoC4/UART_1.c **** }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 9


 209              		.loc 1 223 0
 210              		@ sp needed
 193:Generated_Source\PSoC4/UART_1.c **** 
 211              		.loc 1 193 0
 212 0018 0A78     		ldrb	r2, [r1]
 213 001a 1A43     		orr	r2, r3
 214 001c D2B2     		uxtb	r2, r2
 215 001e 0A70     		strb	r2, [r1]
 211:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 216              		.loc 1 211 0
 217 0020 074A     		ldr	r2, .L10+8
 218 0022 1178     		ldrb	r1, [r2]
 219 0024 0B43     		orr	r3, r1
 220 0026 DBB2     		uxtb	r3, r3
 221 0028 1370     		strb	r3, [r2]
 219:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 222              		.loc 1 219 0
 223 002a FFF7FEFF 		bl	UART_1_IntClock_StartEx
 224              	.LVL7:
 222:Generated_Source\PSoC4/UART_1.c **** }
 225              		.loc 1 222 0
 226 002e 201C     		mov	r0, r4
 227 0030 FFF7FEFF 		bl	CyExitCriticalSection
 228              	.LVL8:
 229              	.LVL9:
 230              		.loc 1 223 0
 231 0034 10BD     		pop	{r4, pc}
 232              	.L11:
 233 0036 C046     		.align	2
 234              	.L10:
 235 0038 91000F40 		.word	1074725009
 236 003c 90000F40 		.word	1074725008
 237 0040 92000F40 		.word	1074725010
 238              		.cfi_endproc
 239              	.LFE3:
 240              		.size	UART_1_Enable, .-UART_1_Enable
 241              		.section	.text.UART_1_Stop,"ax",%progbits
 242              		.align	2
 243              		.global	UART_1_Stop
 244              		.code	16
 245              		.thumb_func
 246              		.type	UART_1_Stop, %function
 247              	UART_1_Stop:
 248              	.LFB4:
 224:Generated_Source\PSoC4/UART_1.c **** 
 225:Generated_Source\PSoC4/UART_1.c **** 
 226:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC4/UART_1.c **** *
 230:Generated_Source\PSoC4/UART_1.c **** * Summary:
 231:Generated_Source\PSoC4/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/UART_1.c **** *
 233:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC4/UART_1.c **** *  None.
 235:Generated_Source\PSoC4/UART_1.c **** *
 236:Generated_Source\PSoC4/UART_1.c **** * Return:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 10


 237:Generated_Source\PSoC4/UART_1.c **** *  None.
 238:Generated_Source\PSoC4/UART_1.c **** *
 239:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC4/UART_1.c **** {
 249              		.loc 1 241 0
 250              		.cfi_startproc
 251 0000 10B5     		push	{r4, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 242:Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 255              		.loc 1 243 0
 256 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 257              	.LVL10:
 244:Generated_Source\PSoC4/UART_1.c **** 
 245:Generated_Source\PSoC4/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 258              		.loc 1 247 0
 259 0006 2021     		mov	r1, #32
 260 0008 094A     		ldr	r2, .L13
 243:Generated_Source\PSoC4/UART_1.c **** 
 261              		.loc 1 243 0
 262 000a 041C     		mov	r4, r0
 263              	.LVL11:
 264              		.loc 1 247 0
 265 000c 1378     		ldrb	r3, [r2]
 248:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC4/UART_1.c **** 
 250:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC4/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC4/UART_1.c **** 
 256:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/UART_1.c **** 
 260:Generated_Source\PSoC4/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:Generated_Source\PSoC4/UART_1.c **** 
 264:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC4/UART_1.c **** 
 269:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 271:Generated_Source\PSoC4/UART_1.c **** 
 272:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 274:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 11


 276:Generated_Source\PSoC4/UART_1.c **** 
 277:Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 278:Generated_Source\PSoC4/UART_1.c **** }
 266              		.loc 1 278 0
 267              		@ sp needed
 247:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268              		.loc 1 247 0
 269 000e 8B43     		bic	r3, r1
 270 0010 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 271              		.loc 1 257 0
 272 0012 FFF7FEFF 		bl	UART_1_IntClock_Stop
 273              	.LVL12:
 262:Generated_Source\PSoC4/UART_1.c **** 
 274              		.loc 1 262 0
 275 0016 1021     		mov	r1, #16
 276 0018 064A     		ldr	r2, .L13+4
 277:Generated_Source\PSoC4/UART_1.c **** }
 277              		.loc 1 277 0
 278 001a 201C     		mov	r0, r4
 262:Generated_Source\PSoC4/UART_1.c **** 
 279              		.loc 1 262 0
 280 001c 1378     		ldrb	r3, [r2]
 281 001e 8B43     		bic	r3, r1
 282 0020 1370     		strb	r3, [r2]
 270:Generated_Source\PSoC4/UART_1.c **** 
 283              		.loc 1 270 0
 284 0022 054A     		ldr	r2, .L13+8
 285 0024 1378     		ldrb	r3, [r2]
 286 0026 8B43     		bic	r3, r1
 287 0028 1370     		strb	r3, [r2]
 277:Generated_Source\PSoC4/UART_1.c **** }
 288              		.loc 1 277 0
 289 002a FFF7FEFF 		bl	CyExitCriticalSection
 290              	.LVL13:
 291              	.LVL14:
 292              		.loc 1 278 0
 293 002e 10BD     		pop	{r4, pc}
 294              	.L14:
 295              		.align	2
 296              	.L13:
 297 0030 91000F40 		.word	1074725009
 298 0034 90000F40 		.word	1074725008
 299 0038 92000F40 		.word	1074725010
 300              		.cfi_endproc
 301              	.LFE4:
 302              		.size	UART_1_Stop, .-UART_1_Stop
 303              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 304              		.align	2
 305              		.global	UART_1_ReadControlRegister
 306              		.code	16
 307              		.thumb_func
 308              		.type	UART_1_ReadControlRegister, %function
 309              	UART_1_ReadControlRegister:
 310              	.LFB5:
 279:Generated_Source\PSoC4/UART_1.c **** 
 280:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 12


 281:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC4/UART_1.c **** *
 285:Generated_Source\PSoC4/UART_1.c **** * Summary:
 286:Generated_Source\PSoC4/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/UART_1.c **** *
 288:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC4/UART_1.c **** *  None.
 290:Generated_Source\PSoC4/UART_1.c **** *
 291:Generated_Source\PSoC4/UART_1.c **** * Return:
 292:Generated_Source\PSoC4/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/UART_1.c **** *
 294:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/UART_1.c **** {
 311              		.loc 1 296 0
 312              		.cfi_startproc
 297:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/UART_1.c ****         return(0u);
 299:Generated_Source\PSoC4/UART_1.c ****     #else
 300:Generated_Source\PSoC4/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/UART_1.c **** }
 313              		.loc 1 302 0
 314 0000 0020     		mov	r0, #0
 315              		@ sp needed
 316 0002 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE5:
 319              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 320              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 321              		.align	2
 322              		.global	UART_1_WriteControlRegister
 323              		.code	16
 324              		.thumb_func
 325              		.type	UART_1_WriteControlRegister, %function
 326              	UART_1_WriteControlRegister:
 327              	.LFB6:
 303:Generated_Source\PSoC4/UART_1.c **** 
 304:Generated_Source\PSoC4/UART_1.c **** 
 305:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC4/UART_1.c **** *
 309:Generated_Source\PSoC4/UART_1.c **** * Summary:
 310:Generated_Source\PSoC4/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC4/UART_1.c **** *
 312:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC4/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC4/UART_1.c **** *
 315:Generated_Source\PSoC4/UART_1.c **** * Return:
 316:Generated_Source\PSoC4/UART_1.c **** *  None.
 317:Generated_Source\PSoC4/UART_1.c **** *
 318:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/UART_1.c **** {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 13


 328              		.loc 1 320 0
 329              		.cfi_startproc
 330              	.LVL15:
 321:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC4/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC4/UART_1.c ****         {
 324:Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/UART_1.c ****         }
 326:Generated_Source\PSoC4/UART_1.c ****     #else
 327:Generated_Source\PSoC4/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/UART_1.c **** }
 331              		.loc 1 329 0
 332              		@ sp needed
 333 0000 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE6:
 336              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 337 0002 C046     		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 338              		.align	2
 339              		.global	UART_1_SetRxInterruptMode
 340              		.code	16
 341              		.thumb_func
 342              		.type	UART_1_SetRxInterruptMode, %function
 343              	UART_1_SetRxInterruptMode:
 344              	.LFB7:
 330:Generated_Source\PSoC4/UART_1.c **** 
 331:Generated_Source\PSoC4/UART_1.c **** 
 332:Generated_Source\PSoC4/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/UART_1.c ****     *
 337:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC4/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/UART_1.c ****     *
 340:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC4/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC4/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/UART_1.c ****     *
 352:Generated_Source\PSoC4/UART_1.c ****     * Return:
 353:Generated_Source\PSoC4/UART_1.c ****     *  None.
 354:Generated_Source\PSoC4/UART_1.c ****     *
 355:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/UART_1.c ****     *
 358:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/UART_1.c ****     {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 14


 345              		.loc 1 360 0
 346              		.cfi_startproc
 347              	.LVL16:
 361:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 348              		.loc 1 361 0
 349 0000 014B     		ldr	r3, .L18
 362:Generated_Source\PSoC4/UART_1.c ****     }
 350              		.loc 1 362 0
 351              		@ sp needed
 361:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 352              		.loc 1 361 0
 353 0002 1870     		strb	r0, [r3]
 354              		.loc 1 362 0
 355 0004 7047     		bx	lr
 356              	.L19:
 357 0006 C046     		.align	2
 358              	.L18:
 359 0008 80000F40 		.word	1074724992
 360              		.cfi_endproc
 361              	.LFE7:
 362              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 363              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 364              		.align	2
 365              		.global	UART_1_ReadRxData
 366              		.code	16
 367              		.thumb_func
 368              		.type	UART_1_ReadRxData, %function
 369              	UART_1_ReadRxData:
 370              	.LFB8:
 363:Generated_Source\PSoC4/UART_1.c **** 
 364:Generated_Source\PSoC4/UART_1.c **** 
 365:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/UART_1.c ****     *
 369:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC4/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/UART_1.c ****     *
 373:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC4/UART_1.c ****     *  None.
 375:Generated_Source\PSoC4/UART_1.c ****     *
 376:Generated_Source\PSoC4/UART_1.c ****     * Return:
 377:Generated_Source\PSoC4/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC4/UART_1.c ****     *
 379:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/UART_1.c ****     *
 388:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC4/UART_1.c ****     *  No.
 390:Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 15


 391:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC4/UART_1.c ****     {
 371              		.loc 1 393 0
 372              		.cfi_startproc
 394:Generated_Source\PSoC4/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/UART_1.c **** 
 396:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/UART_1.c **** 
 398:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/UART_1.c **** 
 401:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC4/UART_1.c **** 
 404:Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC4/UART_1.c **** 
 407:Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC4/UART_1.c ****         {
 409:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC4/UART_1.c **** 
 412:Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC4/UART_1.c ****             {
 414:Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC4/UART_1.c ****             }
 416:Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC4/UART_1.c **** 
 419:Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC4/UART_1.c ****             {
 421:Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC4/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC4/UART_1.c ****                             */
 430:Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/UART_1.c ****                         }
 432:Generated_Source\PSoC4/UART_1.c ****                     #else
 433:Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC4/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/UART_1.c ****             }
 437:Generated_Source\PSoC4/UART_1.c ****         }
 438:Generated_Source\PSoC4/UART_1.c ****         else
 439:Generated_Source\PSoC4/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC4/UART_1.c ****         }
 442:Generated_Source\PSoC4/UART_1.c **** 
 443:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC4/UART_1.c **** 
 445:Generated_Source\PSoC4/UART_1.c ****     #else
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 16


 446:Generated_Source\PSoC4/UART_1.c **** 
 447:Generated_Source\PSoC4/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 373              		.loc 1 448 0
 374 0000 014B     		ldr	r3, .L21
 449:Generated_Source\PSoC4/UART_1.c **** 
 450:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/UART_1.c **** 
 452:Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC4/UART_1.c ****     }
 375              		.loc 1 453 0
 376              		@ sp needed
 448:Generated_Source\PSoC4/UART_1.c **** 
 377              		.loc 1 448 0
 378 0002 1878     		ldrb	r0, [r3]
 379 0004 C0B2     		uxtb	r0, r0
 380              	.LVL17:
 381              		.loc 1 453 0
 382 0006 7047     		bx	lr
 383              	.L22:
 384              		.align	2
 385              	.L21:
 386 0008 41000F40 		.word	1074724929
 387              		.cfi_endproc
 388              	.LFE8:
 389              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 390              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 391              		.align	2
 392              		.global	UART_1_ReadRxStatus
 393              		.code	16
 394              		.thumb_func
 395              		.type	UART_1_ReadRxStatus, %function
 396              	UART_1_ReadRxStatus:
 397              	.LFB9:
 454:Generated_Source\PSoC4/UART_1.c **** 
 455:Generated_Source\PSoC4/UART_1.c **** 
 456:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/UART_1.c ****     *
 460:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC4/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC4/UART_1.c ****     *
 464:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC4/UART_1.c ****     *  None.
 466:Generated_Source\PSoC4/UART_1.c ****     *
 467:Generated_Source\PSoC4/UART_1.c ****     * Return:
 468:Generated_Source\PSoC4/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/UART_1.c ****     *
 470:Generated_Source\PSoC4/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC4/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC4/UART_1.c ****     *
 476:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 17


 477:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC4/UART_1.c ****     *
 484:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/UART_1.c ****     {
 398              		.loc 1 486 0
 399              		.cfi_startproc
 487:Generated_Source\PSoC4/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC4/UART_1.c **** 
 489:Generated_Source\PSoC4/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:Generated_Source\PSoC4/UART_1.c **** 
 491:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC4/UART_1.c ****         {
 494:Generated_Source\PSoC4/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC4/UART_1.c ****         }
 497:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC4/UART_1.c **** 
 499:Generated_Source\PSoC4/UART_1.c ****         return(status);
 400              		.loc 1 499 0
 401 0000 7F20     		mov	r0, #127
 489:Generated_Source\PSoC4/UART_1.c **** 
 402              		.loc 1 489 0
 403 0002 024B     		ldr	r3, .L24
 500:Generated_Source\PSoC4/UART_1.c ****     }
 404              		.loc 1 500 0
 405              		@ sp needed
 489:Generated_Source\PSoC4/UART_1.c **** 
 406              		.loc 1 489 0
 407 0004 1B78     		ldrb	r3, [r3]
 408              	.LVL18:
 499:Generated_Source\PSoC4/UART_1.c ****     }
 409              		.loc 1 499 0
 410 0006 1840     		and	r0, r3
 411              		.loc 1 500 0
 412 0008 7047     		bx	lr
 413              	.L25:
 414 000a C046     		.align	2
 415              	.L24:
 416 000c 60000F40 		.word	1074724960
 417              		.cfi_endproc
 418              	.LFE9:
 419              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 420              		.section	.text.UART_1_GetChar,"ax",%progbits
 421              		.align	2
 422              		.global	UART_1_GetChar
 423              		.code	16
 424              		.thumb_func
 425              		.type	UART_1_GetChar, %function
 426              	UART_1_GetChar:
 427              	.LFB10:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 18


 501:Generated_Source\PSoC4/UART_1.c **** 
 502:Generated_Source\PSoC4/UART_1.c **** 
 503:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/UART_1.c ****     *
 507:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC4/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC4/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/UART_1.c ****     *
 512:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC4/UART_1.c ****     *  None.
 514:Generated_Source\PSoC4/UART_1.c ****     *
 515:Generated_Source\PSoC4/UART_1.c ****     * Return:
 516:Generated_Source\PSoC4/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/UART_1.c ****     *
 519:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/UART_1.c ****     *
 528:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC4/UART_1.c ****     *  No.
 530:Generated_Source\PSoC4/UART_1.c ****     *
 531:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC4/UART_1.c ****     {
 428              		.loc 1 533 0
 429              		.cfi_startproc
 430              	.LVL19:
 534:Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC4/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/UART_1.c **** 
 537:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/UART_1.c **** 
 541:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC4/UART_1.c **** 
 544:Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC4/UART_1.c **** 
 547:Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC4/UART_1.c ****         {
 549:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC4/UART_1.c ****             {
 553:Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC4/UART_1.c ****             }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 19


 555:Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC4/UART_1.c **** 
 558:Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC4/UART_1.c ****             {
 560:Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/UART_1.c ****                             */
 569:Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/UART_1.c ****                         }
 571:Generated_Source\PSoC4/UART_1.c ****                     #else
 572:Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC4/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/UART_1.c ****             }
 576:Generated_Source\PSoC4/UART_1.c **** 
 577:Generated_Source\PSoC4/UART_1.c ****         }
 578:Generated_Source\PSoC4/UART_1.c ****         else
 579:Generated_Source\PSoC4/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC4/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC4/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC4/UART_1.c ****                 {
 587:Generated_Source\PSoC4/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC4/UART_1.c ****                 }
 589:Generated_Source\PSoC4/UART_1.c ****             }
 590:Generated_Source\PSoC4/UART_1.c ****         }
 591:Generated_Source\PSoC4/UART_1.c **** 
 592:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC4/UART_1.c **** 
 594:Generated_Source\PSoC4/UART_1.c ****     #else
 595:Generated_Source\PSoC4/UART_1.c **** 
 596:Generated_Source\PSoC4/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 431              		.loc 1 596 0
 432 0000 074B     		ldr	r3, .L32
 534:Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 433              		.loc 1 534 0
 434 0002 0020     		mov	r0, #0
 435              		.loc 1 596 0
 436 0004 1B78     		ldrb	r3, [r3]
 437 0006 DBB2     		uxtb	r3, r3
 438              	.LVL20:
 597:Generated_Source\PSoC4/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 439              		.loc 1 597 0
 440 0008 9A06     		lsl	r2, r3, #26
 441 000a 07D5     		bpl	.L27
 598:Generated_Source\PSoC4/UART_1.c ****         {
 599:Generated_Source\PSoC4/UART_1.c ****             /* Read received data from FIFO */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 20


 600:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 442              		.loc 1 600 0
 443 000c 054A     		ldr	r2, .L32+4
 444 000e 1078     		ldrb	r0, [r2]
 445              	.LVL21:
 601:Generated_Source\PSoC4/UART_1.c **** 
 602:Generated_Source\PSoC4/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 446              		.loc 1 603 0
 447 0010 1E22     		mov	r2, #30
 448 0012 1340     		and	r3, r2
 449              	.LVL22:
 604:Generated_Source\PSoC4/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC4/UART_1.c ****             {
 606:Generated_Source\PSoC4/UART_1.c ****                 rxData = 0u;
 450              		.loc 1 606 0
 451 0014 5A42     		neg	r2, r3
 452 0016 5A41     		adc	r2, r2, r3
 453 0018 5242     		neg	r2, r2
 454 001a 1040     		and	r0, r2
 455              	.LVL23:
 456              	.L27:
 607:Generated_Source\PSoC4/UART_1.c ****             }
 608:Generated_Source\PSoC4/UART_1.c ****         }
 609:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/UART_1.c **** 
 611:Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC4/UART_1.c ****     }
 457              		.loc 1 612 0
 458              		@ sp needed
 459 001c 7047     		bx	lr
 460              	.L33:
 461 001e C046     		.align	2
 462              	.L32:
 463 0020 60000F40 		.word	1074724960
 464 0024 41000F40 		.word	1074724929
 465              		.cfi_endproc
 466              	.LFE10:
 467              		.size	UART_1_GetChar, .-UART_1_GetChar
 468              		.section	.text.UART_1_GetByte,"ax",%progbits
 469              		.align	2
 470              		.global	UART_1_GetByte
 471              		.code	16
 472              		.thumb_func
 473              		.type	UART_1_GetByte, %function
 474              	UART_1_GetByte:
 475              	.LFB11:
 613:Generated_Source\PSoC4/UART_1.c **** 
 614:Generated_Source\PSoC4/UART_1.c **** 
 615:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/UART_1.c ****     *
 619:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC4/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 21


 623:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC4/UART_1.c ****     *  None.
 625:Generated_Source\PSoC4/UART_1.c ****     *
 626:Generated_Source\PSoC4/UART_1.c ****     * Return:
 627:Generated_Source\PSoC4/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/UART_1.c ****     *
 630:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC4/UART_1.c ****     *  No.
 632:Generated_Source\PSoC4/UART_1.c ****     *
 633:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC4/UART_1.c ****     {
 476              		.loc 1 635 0
 477              		.cfi_startproc
 636:Generated_Source\PSoC4/UART_1.c ****         
 637:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC4/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC4/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC4/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC4/UART_1.c ****     #else
 646:Generated_Source\PSoC4/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 478              		.loc 1 646 0
 479 0000 7F20     		mov	r0, #127
 480              	.LBB28:
 481              	.LBB29:
 489:Generated_Source\PSoC4/UART_1.c **** 
 482              		.loc 1 489 0
 483 0002 044B     		ldr	r3, .L35
 484              	.LBE29:
 485              	.LBE28:
 486              	.LBB31:
 487              	.LBB32:
 448:Generated_Source\PSoC4/UART_1.c **** 
 488              		.loc 1 448 0
 489 0004 044A     		ldr	r2, .L35+4
 490              	.LBE32:
 491              	.LBE31:
 492              	.LBB34:
 493              	.LBB30:
 489:Generated_Source\PSoC4/UART_1.c **** 
 494              		.loc 1 489 0
 495 0006 1B78     		ldrb	r3, [r3]
 496              	.LVL24:
 497              	.LBE30:
 498              	.LBE34:
 499              	.LBB35:
 500              	.LBB33:
 448:Generated_Source\PSoC4/UART_1.c **** 
 501              		.loc 1 448 0
 502 0008 1278     		ldrb	r2, [r2]
 503              	.LVL25:
 504              	.LBE33:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 22


 505              	.LBE35:
 506              		.loc 1 646 0
 507 000a 1840     		and	r0, r3
 508 000c 0002     		lsl	r0, r0, #8
 509 000e 1043     		orr	r0, r2
 647:Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC4/UART_1.c ****         
 649:Generated_Source\PSoC4/UART_1.c ****     }
 510              		.loc 1 649 0
 511              		@ sp needed
 512 0010 7047     		bx	lr
 513              	.L36:
 514 0012 C046     		.align	2
 515              	.L35:
 516 0014 60000F40 		.word	1074724960
 517 0018 41000F40 		.word	1074724929
 518              		.cfi_endproc
 519              	.LFE11:
 520              		.size	UART_1_GetByte, .-UART_1_GetByte
 521              		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 522              		.align	2
 523              		.global	UART_1_GetRxBufferSize
 524              		.code	16
 525              		.thumb_func
 526              		.type	UART_1_GetRxBufferSize, %function
 527              	UART_1_GetRxBufferSize:
 528              	.LFB12:
 650:Generated_Source\PSoC4/UART_1.c **** 
 651:Generated_Source\PSoC4/UART_1.c **** 
 652:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/UART_1.c ****     *
 656:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/UART_1.c ****     *    account.
 663:Generated_Source\PSoC4/UART_1.c ****     *
 664:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC4/UART_1.c ****     *  None.
 666:Generated_Source\PSoC4/UART_1.c ****     *
 667:Generated_Source\PSoC4/UART_1.c ****     * Return:
 668:Generated_Source\PSoC4/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC4/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/UART_1.c ****     *
 671:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/UART_1.c ****     *
 676:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC4/UART_1.c ****     *  No.
 678:Generated_Source\PSoC4/UART_1.c ****     *
 679:Generated_Source\PSoC4/UART_1.c ****     * Theory:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 23


 680:Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/UART_1.c ****     *
 682:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/UART_1.c ****                                                             
 685:Generated_Source\PSoC4/UART_1.c ****     {
 529              		.loc 1 685 0
 530              		.cfi_startproc
 686:Generated_Source\PSoC4/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC4/UART_1.c **** 
 688:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/UART_1.c **** 
 690:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC4/UART_1.c **** 
 693:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC4/UART_1.c ****         {
 695:Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC4/UART_1.c ****             {
 697:Generated_Source\PSoC4/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC4/UART_1.c ****             }
 699:Generated_Source\PSoC4/UART_1.c ****             else
 700:Generated_Source\PSoC4/UART_1.c ****             {
 701:Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC4/UART_1.c ****             }
 703:Generated_Source\PSoC4/UART_1.c ****         }
 704:Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC4/UART_1.c ****         {
 706:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC4/UART_1.c ****         }
 708:Generated_Source\PSoC4/UART_1.c ****         else
 709:Generated_Source\PSoC4/UART_1.c ****         {
 710:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC4/UART_1.c ****         }
 712:Generated_Source\PSoC4/UART_1.c **** 
 713:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC4/UART_1.c **** 
 715:Generated_Source\PSoC4/UART_1.c ****     #else
 716:Generated_Source\PSoC4/UART_1.c **** 
 717:Generated_Source\PSoC4/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 531              		.loc 1 718 0
 532 0000 024B     		ldr	r3, .L38
 719:Generated_Source\PSoC4/UART_1.c **** 
 720:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/UART_1.c **** 
 722:Generated_Source\PSoC4/UART_1.c ****         return(size);
 723:Generated_Source\PSoC4/UART_1.c ****     }
 533              		.loc 1 723 0
 534              		@ sp needed
 718:Generated_Source\PSoC4/UART_1.c **** 
 535              		.loc 1 718 0
 536 0002 1878     		ldrb	r0, [r3]
 537              	.LVL26:
 538 0004 8006     		lsl	r0, r0, #26
 539              	.LVL27:
 722:Generated_Source\PSoC4/UART_1.c ****     }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 24


 540              		.loc 1 722 0
 541 0006 C00F     		lsr	r0, r0, #31
 542              		.loc 1 723 0
 543 0008 7047     		bx	lr
 544              	.L39:
 545 000a C046     		.align	2
 546              	.L38:
 547 000c 60000F40 		.word	1074724960
 548              		.cfi_endproc
 549              	.LFE12:
 550              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 551              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 552              		.align	2
 553              		.global	UART_1_ClearRxBuffer
 554              		.code	16
 555              		.thumb_func
 556              		.type	UART_1_ClearRxBuffer, %function
 557              	UART_1_ClearRxBuffer:
 558              	.LFB13:
 724:Generated_Source\PSoC4/UART_1.c **** 
 725:Generated_Source\PSoC4/UART_1.c **** 
 726:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/UART_1.c ****     *
 730:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC4/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC4/UART_1.c ****     *
 733:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC4/UART_1.c ****     *  None.
 735:Generated_Source\PSoC4/UART_1.c ****     *
 736:Generated_Source\PSoC4/UART_1.c ****     * Return:
 737:Generated_Source\PSoC4/UART_1.c ****     *  None.
 738:Generated_Source\PSoC4/UART_1.c ****     *
 739:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/UART_1.c ****     *
 745:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC4/UART_1.c ****     *  No.
 747:Generated_Source\PSoC4/UART_1.c ****     *
 748:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/UART_1.c ****     *
 753:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/UART_1.c ****     *
 756:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/UART_1.c ****     {
 559              		.loc 1 758 0
 560              		.cfi_startproc
 561 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 25


 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 3, -8
 564              		.cfi_offset 14, -4
 759:Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/UART_1.c **** 
 761:Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 565              		.loc 1 762 0
 566 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 567              	.LVL28:
 763:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 568              		.loc 1 763 0
 569 0006 0122     		mov	r2, #1
 570 0008 054B     		ldr	r3, .L41
 764:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC4/UART_1.c **** 
 767:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/UART_1.c **** 
 769:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC4/UART_1.c **** 
 772:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC4/UART_1.c **** 
 777:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC4/UART_1.c **** 
 779:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/UART_1.c **** 
 781:Generated_Source\PSoC4/UART_1.c ****     }
 571              		.loc 1 781 0
 572              		@ sp needed
 763:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 573              		.loc 1 763 0
 574 000a 1978     		ldrb	r1, [r3]
 575 000c 0A43     		orr	r2, r1
 764:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 576              		.loc 1 764 0
 577 000e 0121     		mov	r1, #1
 763:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 578              		.loc 1 763 0
 579 0010 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 580              		.loc 1 764 0
 581 0012 1A78     		ldrb	r2, [r3]
 582 0014 8A43     		bic	r2, r1
 583 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC4/UART_1.c **** 
 584              		.loc 1 765 0
 585 0018 FFF7FEFF 		bl	CyExitCriticalSection
 586              	.LVL29:
 587              		.loc 1 781 0
 588 001c 08BD     		pop	{r3, pc}
 589              	.L42:
 590 001e C046     		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 26


 591              	.L41:
 592 0020 91000F40 		.word	1074725009
 593              		.cfi_endproc
 594              	.LFE13:
 595              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 596              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 597              		.align	2
 598              		.global	UART_1_SetRxAddressMode
 599              		.code	16
 600              		.thumb_func
 601              		.type	UART_1_SetRxAddressMode, %function
 602              	UART_1_SetRxAddressMode:
 603              	.LFB14:
 782:Generated_Source\PSoC4/UART_1.c **** 
 783:Generated_Source\PSoC4/UART_1.c **** 
 784:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/UART_1.c ****     *
 788:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC4/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC4/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC4/UART_1.c ****     *
 792:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC4/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/UART_1.c ****     *
 804:Generated_Source\PSoC4/UART_1.c ****     * Return:
 805:Generated_Source\PSoC4/UART_1.c ****     *  None.
 806:Generated_Source\PSoC4/UART_1.c ****     *
 807:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC4/UART_1.c ****     *
 812:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/UART_1.c ****                                                         
 815:Generated_Source\PSoC4/UART_1.c ****     {
 604              		.loc 1 815 0
 605              		.cfi_startproc
 606              	.LVL30:
 816:Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/UART_1.c ****                 {
 820:Generated_Source\PSoC4/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/UART_1.c ****                 }
 822:Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 27


 823:Generated_Source\PSoC4/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/UART_1.c **** 
 828:Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC4/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC4/UART_1.c ****             {
 837:Generated_Source\PSoC4/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/UART_1.c ****             }
 839:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC4/UART_1.c ****     }
 607              		.loc 1 840 0
 608              		@ sp needed
 609 0000 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE14:
 612              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 613 0002 C046     		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 614              		.align	2
 615              		.global	UART_1_SetRxAddress1
 616              		.code	16
 617              		.thumb_func
 618              		.type	UART_1_SetRxAddress1, %function
 619              	UART_1_SetRxAddress1:
 620              	.LFB15:
 841:Generated_Source\PSoC4/UART_1.c **** 
 842:Generated_Source\PSoC4/UART_1.c **** 
 843:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/UART_1.c ****     *
 847:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC4/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/UART_1.c ****     *
 850:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC4/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/UART_1.c ****     *
 853:Generated_Source\PSoC4/UART_1.c ****     * Return:
 854:Generated_Source\PSoC4/UART_1.c ****     *  None.
 855:Generated_Source\PSoC4/UART_1.c ****     *
 856:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/UART_1.c ****     {
 621              		.loc 1 858 0
 622              		.cfi_startproc
 623              	.LVL31:
 859:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 624              		.loc 1 859 0
 625 0000 014B     		ldr	r3, .L45
 860:Generated_Source\PSoC4/UART_1.c ****     }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 28


 626              		.loc 1 860 0
 627              		@ sp needed
 859:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 628              		.loc 1 859 0
 629 0002 1870     		strb	r0, [r3]
 630              		.loc 1 860 0
 631 0004 7047     		bx	lr
 632              	.L46:
 633 0006 C046     		.align	2
 634              	.L45:
 635 0008 21000F40 		.word	1074724897
 636              		.cfi_endproc
 637              	.LFE15:
 638              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 639              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 640              		.align	2
 641              		.global	UART_1_SetRxAddress2
 642              		.code	16
 643              		.thumb_func
 644              		.type	UART_1_SetRxAddress2, %function
 645              	UART_1_SetRxAddress2:
 646              	.LFB16:
 861:Generated_Source\PSoC4/UART_1.c **** 
 862:Generated_Source\PSoC4/UART_1.c **** 
 863:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/UART_1.c ****     *
 867:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC4/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/UART_1.c ****     *
 870:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC4/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/UART_1.c ****     *
 873:Generated_Source\PSoC4/UART_1.c ****     * Return:
 874:Generated_Source\PSoC4/UART_1.c ****     *  None.
 875:Generated_Source\PSoC4/UART_1.c ****     *
 876:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/UART_1.c ****     {
 647              		.loc 1 878 0
 648              		.cfi_startproc
 649              	.LVL32:
 879:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 650              		.loc 1 879 0
 651 0000 014B     		ldr	r3, .L48
 880:Generated_Source\PSoC4/UART_1.c ****     }
 652              		.loc 1 880 0
 653              		@ sp needed
 879:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 654              		.loc 1 879 0
 655 0002 1870     		strb	r0, [r3]
 656              		.loc 1 880 0
 657 0004 7047     		bx	lr
 658              	.L49:
 659 0006 C046     		.align	2
 660              	.L48:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 29


 661 0008 31000F40 		.word	1074724913
 662              		.cfi_endproc
 663              	.LFE16:
 664              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 665              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 666              		.align	2
 667              		.global	UART_1_SetTxInterruptMode
 668              		.code	16
 669              		.thumb_func
 670              		.type	UART_1_SetTxInterruptMode, %function
 671              	UART_1_SetTxInterruptMode:
 672              	.LFB17:
 881:Generated_Source\PSoC4/UART_1.c **** 
 882:Generated_Source\PSoC4/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC4/UART_1.c **** 
 884:Generated_Source\PSoC4/UART_1.c **** 
 885:Generated_Source\PSoC4/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC4/UART_1.c ****     *
 890:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC4/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC4/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC4/UART_1.c ****     *
 894:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC4/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC4/UART_1.c ****     *
 901:Generated_Source\PSoC4/UART_1.c ****     * Return:
 902:Generated_Source\PSoC4/UART_1.c ****     *  None.
 903:Generated_Source\PSoC4/UART_1.c ****     *
 904:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC4/UART_1.c ****     *
 907:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC4/UART_1.c ****     {
 673              		.loc 1 909 0
 674              		.cfi_startproc
 675              	.LVL33:
 910:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 676              		.loc 1 910 0
 677 0000 014B     		ldr	r3, .L51
 911:Generated_Source\PSoC4/UART_1.c ****     }
 678              		.loc 1 911 0
 679              		@ sp needed
 910:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 680              		.loc 1 910 0
 681 0002 1870     		strb	r0, [r3]
 682              		.loc 1 911 0
 683 0004 7047     		bx	lr
 684              	.L52:
 685 0006 C046     		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 30


 686              	.L51:
 687 0008 82000F40 		.word	1074724994
 688              		.cfi_endproc
 689              	.LFE17:
 690              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 691              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 692              		.align	2
 693              		.global	UART_1_WriteTxData
 694              		.code	16
 695              		.thumb_func
 696              		.type	UART_1_WriteTxData, %function
 697              	UART_1_WriteTxData:
 698              	.LFB18:
 912:Generated_Source\PSoC4/UART_1.c **** 
 913:Generated_Source\PSoC4/UART_1.c **** 
 914:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC4/UART_1.c ****     *
 918:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC4/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC4/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC4/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC4/UART_1.c ****     *
 923:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC4/UART_1.c ****     *
 926:Generated_Source\PSoC4/UART_1.c ****     * Return:
 927:Generated_Source\PSoC4/UART_1.c ****     * None.
 928:Generated_Source\PSoC4/UART_1.c ****     *
 929:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC4/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC4/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC4/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC4/UART_1.c ****     *
 938:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC4/UART_1.c ****     *  No.
 940:Generated_Source\PSoC4/UART_1.c ****     *
 941:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC4/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC4/UART_1.c ****     {
 699              		.loc 1 943 0
 700              		.cfi_startproc
 701              	.LVL34:
 944:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 702              		.loc 1 945 0
 703 0000 034B     		ldr	r3, .L58
 704 0002 1B78     		ldrb	r3, [r3]
 705 0004 002B     		cmp	r3, #0
 706 0006 01D0     		beq	.L53
 946:Generated_Source\PSoC4/UART_1.c ****         {
 947:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 31


 948:Generated_Source\PSoC4/UART_1.c **** 
 949:Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC4/UART_1.c **** 
 952:Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC4/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC4/UART_1.c ****             {
 955:Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC4/UART_1.c ****             }
 958:Generated_Source\PSoC4/UART_1.c ****             else
 959:Generated_Source\PSoC4/UART_1.c ****             {
 960:Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC4/UART_1.c ****                 {
 962:Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC4/UART_1.c ****                 }
 964:Generated_Source\PSoC4/UART_1.c **** 
 965:Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC4/UART_1.c **** 
 967:Generated_Source\PSoC4/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC4/UART_1.c ****             }
 970:Generated_Source\PSoC4/UART_1.c **** 
 971:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC4/UART_1.c **** 
 973:Generated_Source\PSoC4/UART_1.c ****         #else
 974:Generated_Source\PSoC4/UART_1.c **** 
 975:Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 707              		.loc 1 976 0
 708 0008 024B     		ldr	r3, .L58+4
 709 000a 1870     		strb	r0, [r3]
 710              	.L53:
 977:Generated_Source\PSoC4/UART_1.c **** 
 978:Generated_Source\PSoC4/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC4/UART_1.c ****         }
 980:Generated_Source\PSoC4/UART_1.c ****     }
 711              		.loc 1 980 0
 712              		@ sp needed
 713 000c 7047     		bx	lr
 714              	.L59:
 715 000e C046     		.align	2
 716              	.L58:
 717 0010 00000000 		.word	.LANCHOR0
 718 0014 42000F40 		.word	1074724930
 719              		.cfi_endproc
 720              	.LFE18:
 721              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 722              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 723              		.align	2
 724              		.global	UART_1_ReadTxStatus
 725              		.code	16
 726              		.thumb_func
 727              		.type	UART_1_ReadTxStatus, %function
 728              	UART_1_ReadTxStatus:
 729              	.LFB19:
 981:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 32


 982:Generated_Source\PSoC4/UART_1.c **** 
 983:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC4/UART_1.c ****     *
 987:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC4/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC4/UART_1.c ****     *
 990:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC4/UART_1.c ****     *  None.
 992:Generated_Source\PSoC4/UART_1.c ****     *
 993:Generated_Source\PSoC4/UART_1.c ****     * Return:
 994:Generated_Source\PSoC4/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC4/UART_1.c ****     *
 996:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC4/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC4/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC4/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC4/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC4/UART_1.c ****     *
1002:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC4/UART_1.c ****     {
 730              		.loc 1 1004 0
 731              		.cfi_startproc
1005:Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 732              		.loc 1 1005 0
 733 0000 014B     		ldr	r3, .L61
1006:Generated_Source\PSoC4/UART_1.c ****     }
 734              		.loc 1 1006 0
 735              		@ sp needed
1005:Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 736              		.loc 1 1005 0
 737 0002 1878     		ldrb	r0, [r3]
 738 0004 C0B2     		uxtb	r0, r0
 739              		.loc 1 1006 0
 740 0006 7047     		bx	lr
 741              	.L62:
 742              		.align	2
 743              	.L61:
 744 0008 62000F40 		.word	1074724962
 745              		.cfi_endproc
 746              	.LFE19:
 747              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 748              		.section	.text.UART_1_PutChar,"ax",%progbits
 749              		.align	2
 750              		.global	UART_1_PutChar
 751              		.code	16
 752              		.thumb_func
 753              		.type	UART_1_PutChar, %function
 754              	UART_1_PutChar:
 755              	.LFB20:
1007:Generated_Source\PSoC4/UART_1.c **** 
1008:Generated_Source\PSoC4/UART_1.c **** 
1009:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 33


1012:Generated_Source\PSoC4/UART_1.c ****     *
1013:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC4/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC4/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC4/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC4/UART_1.c ****     *
1018:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC4/UART_1.c ****     *
1021:Generated_Source\PSoC4/UART_1.c ****     * Return:
1022:Generated_Source\PSoC4/UART_1.c ****     *  None.
1023:Generated_Source\PSoC4/UART_1.c ****     *
1024:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC4/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC4/UART_1.c ****     *
1034:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC4/UART_1.c ****     *  No.
1036:Generated_Source\PSoC4/UART_1.c ****     *
1037:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC4/UART_1.c ****     *
1040:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC4/UART_1.c ****     {
 756              		.loc 1 1042 0
 757              		.cfi_startproc
 758              	.LVL35:
1043:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC4/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC4/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC4/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC4/UART_1.c ****         */
1048:Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC4/UART_1.c **** 
1051:Generated_Source\PSoC4/UART_1.c ****         do
1052:Generated_Source\PSoC4/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC4/UART_1.c **** 
1054:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC4/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC4/UART_1.c **** 
1059:Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC4/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC4/UART_1.c **** 
1062:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC4/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 34


1066:Generated_Source\PSoC4/UART_1.c ****         }
1067:Generated_Source\PSoC4/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC4/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC4/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC4/UART_1.c **** 
1071:Generated_Source\PSoC4/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC4/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC4/UART_1.c ****         {
1074:Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC4/UART_1.c ****         }
1077:Generated_Source\PSoC4/UART_1.c ****         else
1078:Generated_Source\PSoC4/UART_1.c ****         {
1079:Generated_Source\PSoC4/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC4/UART_1.c ****             {
1081:Generated_Source\PSoC4/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC4/UART_1.c ****             }
1083:Generated_Source\PSoC4/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC4/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC4/UART_1.c **** 
1087:Generated_Source\PSoC4/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC4/UART_1.c **** 
1092:Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC4/UART_1.c **** 
1094:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC4/UART_1.c **** 
1098:Generated_Source\PSoC4/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC4/UART_1.c ****             {
1100:Generated_Source\PSoC4/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC4/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC4/UART_1.c ****             }
1103:Generated_Source\PSoC4/UART_1.c ****         }
1104:Generated_Source\PSoC4/UART_1.c **** 
1105:Generated_Source\PSoC4/UART_1.c ****     #else
1106:Generated_Source\PSoC4/UART_1.c **** 
1107:Generated_Source\PSoC4/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 759              		.loc 1 1107 0
 760 0000 0422     		mov	r2, #4
 761 0002 0349     		ldr	r1, .L66
 762              	.L64:
 763              		.loc 1 1107 0 is_stmt 0 discriminator 1
 764 0004 0B78     		ldrb	r3, [r1]
 765 0006 1A42     		tst	r2, r3
 766 0008 FCD1     		bne	.L64
1108:Generated_Source\PSoC4/UART_1.c ****         {
1109:Generated_Source\PSoC4/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC4/UART_1.c ****         }
1111:Generated_Source\PSoC4/UART_1.c **** 
1112:Generated_Source\PSoC4/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 767              		.loc 1 1113 0 is_stmt 1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 35


 768 000a 024B     		ldr	r3, .L66+4
1114:Generated_Source\PSoC4/UART_1.c **** 
1115:Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC4/UART_1.c ****     }
 769              		.loc 1 1116 0
 770              		@ sp needed
1113:Generated_Source\PSoC4/UART_1.c **** 
 771              		.loc 1 1113 0
 772 000c 1870     		strb	r0, [r3]
 773              		.loc 1 1116 0
 774 000e 7047     		bx	lr
 775              	.L67:
 776              		.align	2
 777              	.L66:
 778 0010 62000F40 		.word	1074724962
 779 0014 42000F40 		.word	1074724930
 780              		.cfi_endproc
 781              	.LFE20:
 782              		.size	UART_1_PutChar, .-UART_1_PutChar
 783              		.section	.text.UART_1_PutString,"ax",%progbits
 784              		.align	2
 785              		.global	UART_1_PutString
 786              		.code	16
 787              		.thumb_func
 788              		.type	UART_1_PutString, %function
 789              	UART_1_PutString:
 790              	.LFB21:
1117:Generated_Source\PSoC4/UART_1.c **** 
1118:Generated_Source\PSoC4/UART_1.c **** 
1119:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC4/UART_1.c ****     *
1123:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC4/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC4/UART_1.c ****     *
1126:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC4/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC4/UART_1.c ****     *
1129:Generated_Source\PSoC4/UART_1.c ****     * Return:
1130:Generated_Source\PSoC4/UART_1.c ****     *  None.
1131:Generated_Source\PSoC4/UART_1.c ****     *
1132:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC4/UART_1.c ****     *
1136:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC4/UART_1.c ****     *  No.
1138:Generated_Source\PSoC4/UART_1.c ****     *
1139:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC4/UART_1.c ****     *
1144:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC4/UART_1.c ****     {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 36


 791              		.loc 1 1146 0
 792              		.cfi_startproc
 793              	.LVL36:
 794 0000 70B5     		push	{r4, r5, r6, lr}
 795              		.cfi_def_cfa_offset 16
 796              		.cfi_offset 4, -16
 797              		.cfi_offset 5, -12
 798              		.cfi_offset 6, -8
 799              		.cfi_offset 14, -4
1147:Generated_Source\PSoC4/UART_1.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC4/UART_1.c **** 
1149:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 800              		.loc 1 1150 0
 801 0002 0A4B     		ldr	r3, .L78
 802 0004 1B78     		ldrb	r3, [r3]
 803 0006 002B     		cmp	r3, #0
 804 0008 0FD0     		beq	.L68
1151:Generated_Source\PSoC4/UART_1.c ****         {
1152:Generated_Source\PSoC4/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC4/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 805              		.loc 1 1153 0
 806 000a 0578     		ldrb	r5, [r0]
 807 000c 002D     		cmp	r5, #0
 808 000e 0CD0     		beq	.L68
 809 0010 0024     		mov	r4, #0
 810              	.LBB36:
 811              	.LBB37:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 812              		.loc 1 1107 0
 813 0012 0422     		mov	r2, #4
 814 0014 0649     		ldr	r1, .L78+4
1113:Generated_Source\PSoC4/UART_1.c **** 
 815              		.loc 1 1113 0
 816 0016 074E     		ldr	r6, .L78+8
 817              	.LVL37:
 818              	.L71:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 819              		.loc 1 1107 0
 820 0018 0B78     		ldrb	r3, [r1]
 821 001a 1A42     		tst	r2, r3
 822 001c FCD1     		bne	.L71
 823              	.LBE37:
 824              	.LBE36:
1154:Generated_Source\PSoC4/UART_1.c ****             {
1155:Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
1156:Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 825              		.loc 1 1156 0
 826 001e 0134     		add	r4, r4, #1
 827              	.LBB39:
 828              	.LBB38:
1113:Generated_Source\PSoC4/UART_1.c **** 
 829              		.loc 1 1113 0
 830 0020 3570     		strb	r5, [r6]
 831              	.LBE38:
 832              	.LBE39:
 833              		.loc 1 1156 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 37


 834 0022 A4B2     		uxth	r4, r4
 835              	.LVL38:
1153:Generated_Source\PSoC4/UART_1.c ****             {
 836              		.loc 1 1153 0
 837 0024 055D     		ldrb	r5, [r0, r4]
 838 0026 002D     		cmp	r5, #0
 839 0028 F6D1     		bne	.L71
 840              	.LVL39:
 841              	.L68:
1157:Generated_Source\PSoC4/UART_1.c ****             }
1158:Generated_Source\PSoC4/UART_1.c ****         }
1159:Generated_Source\PSoC4/UART_1.c ****     }
 842              		.loc 1 1159 0
 843              		@ sp needed
 844 002a 70BD     		pop	{r4, r5, r6, pc}
 845              	.L79:
 846              		.align	2
 847              	.L78:
 848 002c 00000000 		.word	.LANCHOR0
 849 0030 62000F40 		.word	1074724962
 850 0034 42000F40 		.word	1074724930
 851              		.cfi_endproc
 852              	.LFE21:
 853              		.size	UART_1_PutString, .-UART_1_PutString
 854              		.section	.text.UART_1_PutArray,"ax",%progbits
 855              		.align	2
 856              		.global	UART_1_PutArray
 857              		.code	16
 858              		.thumb_func
 859              		.type	UART_1_PutArray, %function
 860              	UART_1_PutArray:
 861              	.LFB22:
1160:Generated_Source\PSoC4/UART_1.c **** 
1161:Generated_Source\PSoC4/UART_1.c **** 
1162:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC4/UART_1.c ****     *
1166:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC4/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC4/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC4/UART_1.c ****     *
1170:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC4/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC4/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC4/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC4/UART_1.c ****     *
1175:Generated_Source\PSoC4/UART_1.c ****     * Return:
1176:Generated_Source\PSoC4/UART_1.c ****     *  None.
1177:Generated_Source\PSoC4/UART_1.c ****     *
1178:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC4/UART_1.c ****     *
1182:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC4/UART_1.c ****     *  No.
1184:Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 38


1185:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC4/UART_1.c ****     *
1190:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC4/UART_1.c ****                                                                     
1193:Generated_Source\PSoC4/UART_1.c ****     {
 862              		.loc 1 1193 0
 863              		.cfi_startproc
 864              	.LVL40:
 865 0000 70B5     		push	{r4, r5, r6, lr}
 866              		.cfi_def_cfa_offset 16
 867              		.cfi_offset 4, -16
 868              		.cfi_offset 5, -12
 869              		.cfi_offset 6, -8
 870              		.cfi_offset 14, -4
1194:Generated_Source\PSoC4/UART_1.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC4/UART_1.c **** 
1196:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 871              		.loc 1 1197 0
 872 0002 0B4B     		ldr	r3, .L90
 873 0004 1B78     		ldrb	r3, [r3]
 874 0006 002B     		cmp	r3, #0
 875 0008 10D0     		beq	.L80
1198:Generated_Source\PSoC4/UART_1.c ****         {
1199:Generated_Source\PSoC4/UART_1.c ****             while(bufIndex < byteCount)
 876              		.loc 1 1199 0
 877 000a 0029     		cmp	r1, #0
 878 000c 0ED0     		beq	.L80
 879              	.LBB40:
 880              	.LBB41:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 881              		.loc 1 1107 0
 882 000e 0422     		mov	r2, #4
 883 0010 4D1E     		sub	r5, r1, #1
 884 0012 EDB2     		uxtb	r5, r5
 885 0014 0135     		add	r5, r5, #1
 886 0016 0749     		ldr	r1, .L90+4
 887              	.LVL41:
1113:Generated_Source\PSoC4/UART_1.c **** 
 888              		.loc 1 1113 0
 889 0018 074E     		ldr	r6, .L90+8
 890 001a 4519     		add	r5, r0, r5
 891              	.LVL42:
 892              	.L84:
 893              	.LBE41:
 894              	.LBE40:
1200:Generated_Source\PSoC4/UART_1.c ****             {
1201:Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 895              		.loc 1 1201 0
 896 001c 0478     		ldrb	r4, [r0]
 897              	.LVL43:
 898              	.L83:
 899              	.LBB43:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 39


 900              	.LBB42:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 901              		.loc 1 1107 0
 902 001e 0B78     		ldrb	r3, [r1]
 903 0020 1A42     		tst	r2, r3
 904 0022 FCD1     		bne	.L83
 905 0024 0130     		add	r0, r0, #1
 906              	.LVL44:
1113:Generated_Source\PSoC4/UART_1.c **** 
 907              		.loc 1 1113 0
 908 0026 3470     		strb	r4, [r6]
 909              	.LBE42:
 910              	.LBE43:
1199:Generated_Source\PSoC4/UART_1.c ****             {
 911              		.loc 1 1199 0
 912 0028 A842     		cmp	r0, r5
 913 002a F7D1     		bne	.L84
 914              	.LVL45:
 915              	.L80:
1202:Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
1203:Generated_Source\PSoC4/UART_1.c ****             }
1204:Generated_Source\PSoC4/UART_1.c ****         }
1205:Generated_Source\PSoC4/UART_1.c ****     }
 916              		.loc 1 1205 0
 917              		@ sp needed
 918 002c 70BD     		pop	{r4, r5, r6, pc}
 919              	.L91:
 920 002e C046     		.align	2
 921              	.L90:
 922 0030 00000000 		.word	.LANCHOR0
 923 0034 62000F40 		.word	1074724962
 924 0038 42000F40 		.word	1074724930
 925              		.cfi_endproc
 926              	.LFE22:
 927              		.size	UART_1_PutArray, .-UART_1_PutArray
 928              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 929              		.align	2
 930              		.global	UART_1_PutCRLF
 931              		.code	16
 932              		.thumb_func
 933              		.type	UART_1_PutCRLF, %function
 934              	UART_1_PutCRLF:
 935              	.LFB23:
1206:Generated_Source\PSoC4/UART_1.c **** 
1207:Generated_Source\PSoC4/UART_1.c **** 
1208:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC4/UART_1.c ****     *
1212:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC4/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC4/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC4/UART_1.c ****     *
1216:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC4/UART_1.c ****     *
1219:Generated_Source\PSoC4/UART_1.c ****     * Return:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 40


1220:Generated_Source\PSoC4/UART_1.c ****     *  None.
1221:Generated_Source\PSoC4/UART_1.c ****     *
1222:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC4/UART_1.c ****     *
1226:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC4/UART_1.c ****     *  No.
1228:Generated_Source\PSoC4/UART_1.c ****     *
1229:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC4/UART_1.c ****     {
 936              		.loc 1 1231 0
 937              		.cfi_startproc
 938              	.LVL46:
1232:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 939              		.loc 1 1233 0
 940 0000 0D4B     		ldr	r3, .L104
 941 0002 1B78     		ldrb	r3, [r3]
 942 0004 002B     		cmp	r3, #0
 943 0006 16D0     		beq	.L92
 944              	.LBB44:
 945              	.LBB45:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 946              		.loc 1 1107 0
 947 0008 0422     		mov	r2, #4
 948 000a 0C49     		ldr	r1, .L104+4
 949              	.L99:
 950 000c 0B78     		ldrb	r3, [r1]
 951 000e 1A42     		tst	r2, r3
 952 0010 FCD1     		bne	.L99
 953              	.LBE45:
 954              	.LBE44:
 955              	.LBB48:
 956              	.LBB49:
 957 0012 0422     		mov	r2, #4
 958              	.LBE49:
 959              	.LBE48:
 960              	.LBB53:
 961              	.LBB46:
1113:Generated_Source\PSoC4/UART_1.c **** 
 962              		.loc 1 1113 0
 963 0014 0A4B     		ldr	r3, .L104+8
 964              	.LBE46:
 965              	.LBE53:
 966              	.LBB54:
 967              	.LBB50:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 968              		.loc 1 1107 0
 969 0016 0949     		ldr	r1, .L104+4
 970              	.LBE50:
 971              	.LBE54:
 972              	.LBB55:
 973              	.LBB47:
1113:Generated_Source\PSoC4/UART_1.c **** 
 974              		.loc 1 1113 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 41


 975 0018 1870     		strb	r0, [r3]
 976              	.LVL47:
 977              	.L95:
 978              	.LBE47:
 979              	.LBE55:
 980              	.LBB56:
 981              	.LBB51:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 982              		.loc 1 1107 0
 983 001a 0B78     		ldrb	r3, [r1]
 984 001c 1A42     		tst	r2, r3
 985 001e FCD1     		bne	.L95
1113:Generated_Source\PSoC4/UART_1.c **** 
 986              		.loc 1 1113 0
 987 0020 0D22     		mov	r2, #13
 988 0022 074B     		ldr	r3, .L104+8
 989              	.LBE51:
 990              	.LBE56:
 991              	.LBB57:
 992              	.LBB58:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 993              		.loc 1 1107 0
 994 0024 0549     		ldr	r1, .L104+4
 995              	.LBE58:
 996              	.LBE57:
 997              	.LBB60:
 998              	.LBB52:
1113:Generated_Source\PSoC4/UART_1.c **** 
 999              		.loc 1 1113 0
 1000 0026 1A70     		strb	r2, [r3]
 1001              	.LVL48:
 1002              	.LBE52:
 1003              	.LBE60:
 1004              	.LBB61:
 1005              	.LBB59:
1107:Generated_Source\PSoC4/UART_1.c ****         {
 1006              		.loc 1 1107 0
 1007 0028 093A     		sub	r2, r2, #9
 1008              	.L96:
 1009 002a 0B78     		ldrb	r3, [r1]
 1010 002c 1A42     		tst	r2, r3
 1011 002e FCD1     		bne	.L96
1113:Generated_Source\PSoC4/UART_1.c **** 
 1012              		.loc 1 1113 0
 1013 0030 0A22     		mov	r2, #10
 1014 0032 034B     		ldr	r3, .L104+8
 1015 0034 1A70     		strb	r2, [r3]
 1016              	.LVL49:
 1017              	.L92:
 1018              	.LBE59:
 1019              	.LBE61:
1234:Generated_Source\PSoC4/UART_1.c ****         {
1235:Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(txDataByte);
1236:Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Du);
1237:Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Au);
1238:Generated_Source\PSoC4/UART_1.c ****         }
1239:Generated_Source\PSoC4/UART_1.c ****     }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 42


 1020              		.loc 1 1239 0
 1021              		@ sp needed
 1022 0036 7047     		bx	lr
 1023              	.L105:
 1024              		.align	2
 1025              	.L104:
 1026 0038 00000000 		.word	.LANCHOR0
 1027 003c 62000F40 		.word	1074724962
 1028 0040 42000F40 		.word	1074724930
 1029              		.cfi_endproc
 1030              	.LFE23:
 1031              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 1032              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1033              		.align	2
 1034              		.global	UART_1_GetTxBufferSize
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	UART_1_GetTxBufferSize, %function
 1038              	UART_1_GetTxBufferSize:
 1039              	.LFB24:
1240:Generated_Source\PSoC4/UART_1.c **** 
1241:Generated_Source\PSoC4/UART_1.c **** 
1242:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC4/UART_1.c ****     *
1246:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC4/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC4/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC4/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC4/UART_1.c ****     *
1255:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC4/UART_1.c ****     *  None.
1257:Generated_Source\PSoC4/UART_1.c ****     *
1258:Generated_Source\PSoC4/UART_1.c ****     * Return:
1259:Generated_Source\PSoC4/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC4/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC4/UART_1.c ****     *
1262:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC4/UART_1.c ****     *
1266:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC4/UART_1.c ****     *  No.
1268:Generated_Source\PSoC4/UART_1.c ****     *
1269:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC4/UART_1.c ****     *
1272:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC4/UART_1.c ****                                                             
1275:Generated_Source\PSoC4/UART_1.c ****     {
 1040              		.loc 1 1275 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 43


 1041              		.cfi_startproc
1276:Generated_Source\PSoC4/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC4/UART_1.c **** 
1278:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC4/UART_1.c **** 
1280:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC4/UART_1.c **** 
1283:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC4/UART_1.c ****         {
1285:Generated_Source\PSoC4/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC4/UART_1.c ****         }
1287:Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC4/UART_1.c ****         {
1289:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC4/UART_1.c ****         }
1291:Generated_Source\PSoC4/UART_1.c ****         else
1292:Generated_Source\PSoC4/UART_1.c ****         {
1293:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC4/UART_1.c ****         }
1296:Generated_Source\PSoC4/UART_1.c **** 
1297:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC4/UART_1.c **** 
1299:Generated_Source\PSoC4/UART_1.c ****     #else
1300:Generated_Source\PSoC4/UART_1.c **** 
1301:Generated_Source\PSoC4/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 1042              		.loc 1 1301 0
 1043 0000 064B     		ldr	r3, .L110
1302:Generated_Source\PSoC4/UART_1.c **** 
1303:Generated_Source\PSoC4/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC4/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC4/UART_1.c ****         {
1306:Generated_Source\PSoC4/UART_1.c ****             size = UART_1_FIFO_LENGTH;
 1044              		.loc 1 1306 0
 1045 0002 0420     		mov	r0, #4
1301:Generated_Source\PSoC4/UART_1.c **** 
 1046              		.loc 1 1301 0
 1047 0004 1B78     		ldrb	r3, [r3]
 1048 0006 DBB2     		uxtb	r3, r3
 1049              	.LVL50:
1304:Generated_Source\PSoC4/UART_1.c ****         {
 1050              		.loc 1 1304 0
 1051 0008 5A07     		lsl	r2, r3, #29
 1052 000a 00D5     		bpl	.L109
 1053              	.LVL51:
 1054              	.L107:
1307:Generated_Source\PSoC4/UART_1.c ****         }
1308:Generated_Source\PSoC4/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC4/UART_1.c ****         {
1310:Generated_Source\PSoC4/UART_1.c ****             size = 0u;
1311:Generated_Source\PSoC4/UART_1.c ****         }
1312:Generated_Source\PSoC4/UART_1.c ****         else
1313:Generated_Source\PSoC4/UART_1.c ****         {
1314:Generated_Source\PSoC4/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC4/UART_1.c ****             size = 1u;
1316:Generated_Source\PSoC4/UART_1.c ****         }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 44


1317:Generated_Source\PSoC4/UART_1.c **** 
1318:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC4/UART_1.c **** 
1320:Generated_Source\PSoC4/UART_1.c ****     return(size);
1321:Generated_Source\PSoC4/UART_1.c ****     }
 1055              		.loc 1 1321 0
 1056              		@ sp needed
 1057 000c 7047     		bx	lr
 1058              	.LVL52:
 1059              	.L109:
1308:Generated_Source\PSoC4/UART_1.c ****         {
 1060              		.loc 1 1308 0
 1061 000e 0120     		mov	r0, #1
 1062 0010 5B08     		lsr	r3, r3, #1
 1063              	.LVL53:
 1064 0012 4340     		eor	r3, r0
 1065 0014 0120     		mov	r0, #1
 1066 0016 1840     		and	r0, r3
 1067 0018 F8E7     		b	.L107
 1068              	.L111:
 1069 001a C046     		.align	2
 1070              	.L110:
 1071 001c 62000F40 		.word	1074724962
 1072              		.cfi_endproc
 1073              	.LFE24:
 1074              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1075              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 1076              		.align	2
 1077              		.global	UART_1_ClearTxBuffer
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	UART_1_ClearTxBuffer, %function
 1081              	UART_1_ClearTxBuffer:
 1082              	.LFB25:
1322:Generated_Source\PSoC4/UART_1.c **** 
1323:Generated_Source\PSoC4/UART_1.c **** 
1324:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC4/UART_1.c ****     *
1328:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC4/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC4/UART_1.c ****     *
1331:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC4/UART_1.c ****     *  None.
1333:Generated_Source\PSoC4/UART_1.c ****     *
1334:Generated_Source\PSoC4/UART_1.c ****     * Return:
1335:Generated_Source\PSoC4/UART_1.c ****     *  None.
1336:Generated_Source\PSoC4/UART_1.c ****     *
1337:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC4/UART_1.c ****     *
1341:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC4/UART_1.c ****     *  No.
1343:Generated_Source\PSoC4/UART_1.c ****     *
1344:Generated_Source\PSoC4/UART_1.c ****     * Theory:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 45


1345:Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC4/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC4/UART_1.c ****     *
1349:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC4/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC4/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC4/UART_1.c ****     *
1353:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC4/UART_1.c ****     {
 1083              		.loc 1 1355 0
 1084              		.cfi_startproc
 1085 0000 08B5     		push	{r3, lr}
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 3, -8
 1088              		.cfi_offset 14, -4
1356:Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC4/UART_1.c **** 
1358:Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1089              		.loc 1 1358 0
 1090 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1091              	.LVL54:
1359:Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 1092              		.loc 1 1360 0
 1093 0006 0122     		mov	r2, #1
 1094 0008 054B     		ldr	r3, .L113
1361:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
1362:Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC4/UART_1.c **** 
1364:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC4/UART_1.c **** 
1366:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC4/UART_1.c **** 
1369:Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC4/UART_1.c **** 
1372:Generated_Source\PSoC4/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC4/UART_1.c **** 
1375:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC4/UART_1.c ****     }
 1095              		.loc 1 1376 0
 1096              		@ sp needed
1360:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1097              		.loc 1 1360 0
 1098 000a 1978     		ldrb	r1, [r3]
 1099 000c 0A43     		orr	r2, r1
1361:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1100              		.loc 1 1361 0
 1101 000e 0121     		mov	r1, #1
1360:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1102              		.loc 1 1360 0
 1103 0010 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 46


 1104              		.loc 1 1361 0
 1105 0012 1A78     		ldrb	r2, [r3]
 1106 0014 8A43     		bic	r2, r1
 1107 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC4/UART_1.c **** 
 1108              		.loc 1 1362 0
 1109 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1110              	.LVL55:
 1111              		.loc 1 1376 0
 1112 001c 08BD     		pop	{r3, pc}
 1113              	.L114:
 1114 001e C046     		.align	2
 1115              	.L113:
 1116 0020 92000F40 		.word	1074725010
 1117              		.cfi_endproc
 1118              	.LFE25:
 1119              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1120              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1121              		.align	2
 1122              		.global	UART_1_SendBreak
 1123              		.code	16
 1124              		.thumb_func
 1125              		.type	UART_1_SendBreak, %function
 1126              	UART_1_SendBreak:
 1127              	.LFB26:
1377:Generated_Source\PSoC4/UART_1.c **** 
1378:Generated_Source\PSoC4/UART_1.c **** 
1379:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC4/UART_1.c ****     *
1383:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC4/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC4/UART_1.c ****     *
1386:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC4/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC4/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC4/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC4/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC4/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC4/UART_1.c ****     *
1398:Generated_Source\PSoC4/UART_1.c ****     * Return:
1399:Generated_Source\PSoC4/UART_1.c ****     *  None.
1400:Generated_Source\PSoC4/UART_1.c ****     *
1401:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC4/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC4/UART_1.c ****     *
1406:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC4/UART_1.c ****     *  No.
1408:Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 47


1409:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC4/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC4/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC4/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC4/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC4/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC4/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC4/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC4/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC4/UART_1.c ****     *     operation
1419:Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC4/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC4/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC4/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC4/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC4/UART_1.c ****     *
1432:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC4/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC4/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC4/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC4/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC4/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC4/UART_1.c ****     *
1439:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC4/UART_1.c ****     {
 1128              		.loc 1 1441 0
 1129              		.cfi_startproc
 1130              	.LVL56:
 1131 0000 30B5     		push	{r4, r5, lr}
 1132              		.cfi_def_cfa_offset 12
 1133              		.cfi_offset 4, -12
 1134              		.cfi_offset 5, -8
 1135              		.cfi_offset 14, -4
1442:Generated_Source\PSoC4/UART_1.c **** 
1443:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1136              		.loc 1 1444 0
 1137 0002 154C     		ldr	r4, .L138
 1138 0004 2378     		ldrb	r3, [r4]
 1139 0006 002B     		cmp	r3, #0
 1140 0008 19D0     		beq	.L115
 1141              	.LBB62:
1445:Generated_Source\PSoC4/UART_1.c ****         {
1446:Generated_Source\PSoC4/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC4/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC4/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC4/UART_1.c **** 
1450:Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 48


1452:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC4/UART_1.c ****             {
1455:Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC4/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC4/UART_1.c **** 
1461:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC4/UART_1.c ****                 {
1463:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC4/UART_1.c ****                 }
1465:Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC4/UART_1.c ****             }
1467:Generated_Source\PSoC4/UART_1.c **** 
1468:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC4/UART_1.c ****             {
1471:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC4/UART_1.c ****                 {
1473:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC4/UART_1.c ****                 }
1475:Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC4/UART_1.c ****             }
1477:Generated_Source\PSoC4/UART_1.c **** 
1478:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC4/UART_1.c ****             {
1482:Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC4/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC4/UART_1.c ****             }
1485:Generated_Source\PSoC4/UART_1.c **** 
1486:Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC4/UART_1.c **** 
1488:Generated_Source\PSoC4/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC4/UART_1.c **** 
1490:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 1142              		.loc 1 1490 0
 1143 000a 0028     		cmp	r0, #0
 1144 000c 18D1     		bne	.L137
 1145              	.L118:
1491:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC4/UART_1.c ****             {
1493:Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC4/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC4/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC4/UART_1.c **** 
1500:Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 1146              		.loc 1 1501 0
 1147 000e 134B     		ldr	r3, .L138+4
1502:Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 49


1503:Generated_Source\PSoC4/UART_1.c ****                 #else
1504:Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC4/UART_1.c **** 
1508:Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1510:Generated_Source\PSoC4/UART_1.c **** 
1511:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC4/UART_1.c ****                 {
1513:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1148              		.loc 1 1513 0
 1149 0010 1349     		ldr	r1, .L138+8
1501:Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1150              		.loc 1 1501 0
 1151 0012 1A78     		ldrb	r2, [r3]
 1152 0014 6270     		strb	r2, [r4, #1]
1502:Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1153              		.loc 1 1502 0
 1154 0016 6722     		mov	r2, #103
 1155 0018 1A70     		strb	r2, [r3]
1509:Generated_Source\PSoC4/UART_1.c **** 
 1156              		.loc 1 1509 0
 1157 001a 0022     		mov	r2, #0
 1158 001c 114B     		ldr	r3, .L138+12
 1159 001e 1A70     		strb	r2, [r3]
1514:Generated_Source\PSoC4/UART_1.c ****                 }
1515:Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1160              		.loc 1 1515 0
 1161 0020 0232     		add	r2, r2, #2
 1162              	.L120:
1513:Generated_Source\PSoC4/UART_1.c ****                 }
 1163              		.loc 1 1513 0 discriminator 1
 1164 0022 0B78     		ldrb	r3, [r1]
 1165              	.LVL57:
 1166              		.loc 1 1515 0 discriminator 1
 1167 0024 1A42     		tst	r2, r3
 1168 0026 FCD1     		bne	.L120
1516:Generated_Source\PSoC4/UART_1.c ****             }
1517:Generated_Source\PSoC4/UART_1.c **** 
1518:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1169              		.loc 1 1518 0
 1170 0028 0223     		mov	r3, #2
 1171              	.LVL58:
 1172 002a 021C     		mov	r2, r0
 1173 002c 9A43     		bic	r2, r3
 1174 002e 012A     		cmp	r2, #1
 1175 0030 0AD0     		beq	.L121
 1176              	.L125:
1519:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC4/UART_1.c ****             {
1521:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC4/UART_1.c ****                 {
1523:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1524:Generated_Source\PSoC4/UART_1.c ****                 }
1525:Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC4/UART_1.c ****             }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 50


1527:Generated_Source\PSoC4/UART_1.c **** 
1528:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1177              		.loc 1 1528 0
 1178 0032 0138     		sub	r0, r0, #1
 1179              	.LVL59:
 1180 0034 0228     		cmp	r0, #2
 1181 0036 02D8     		bhi	.L115
1529:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1530:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC4/UART_1.c ****             {
1532:Generated_Source\PSoC4/UART_1.c **** 
1533:Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1182              		.loc 1 1534 0
 1183 0038 6278     		ldrb	r2, [r4, #1]
 1184 003a 084B     		ldr	r3, .L138+4
 1185 003c 1A70     		strb	r2, [r3]
 1186              	.L115:
 1187              	.LBE62:
1535:Generated_Source\PSoC4/UART_1.c ****             #else
1536:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC4/UART_1.c **** 
1539:Generated_Source\PSoC4/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC4/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC4/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC4/UART_1.c ****             }
1545:Generated_Source\PSoC4/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC4/UART_1.c ****         }
1547:Generated_Source\PSoC4/UART_1.c ****     }
 1188              		.loc 1 1547 0
 1189              		@ sp needed
 1190 003e 30BD     		pop	{r4, r5, pc}
 1191              	.LVL60:
 1192              	.L137:
 1193              	.LBB63:
1490:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
 1194              		.loc 1 1490 0 discriminator 1
 1195 0040 0328     		cmp	r0, #3
 1196 0042 E4D0     		beq	.L118
1518:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
 1197              		.loc 1 1518 0
 1198 0044 0128     		cmp	r0, #1
 1199 0046 F4D1     		bne	.L125
 1200              	.L121:
1525:Generated_Source\PSoC4/UART_1.c ****             }
 1201              		.loc 1 1525 0
 1202 0048 0122     		mov	r2, #1
1523:Generated_Source\PSoC4/UART_1.c ****                 }
 1203              		.loc 1 1523 0
 1204 004a 0549     		ldr	r1, .L138+8
 1205              	.L124:
1525:Generated_Source\PSoC4/UART_1.c ****             }
 1206              		.loc 1 1525 0 discriminator 1
 1207 004c 151C     		mov	r5, r2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 51


1523:Generated_Source\PSoC4/UART_1.c ****                 }
 1208              		.loc 1 1523 0 discriminator 1
 1209 004e 0B78     		ldrb	r3, [r1]
 1210              	.LVL61:
1525:Generated_Source\PSoC4/UART_1.c ****             }
 1211              		.loc 1 1525 0 discriminator 1
 1212 0050 9D43     		bic	r5, r3
 1213 0052 FBD1     		bne	.L124
 1214 0054 EDE7     		b	.L125
 1215              	.L139:
 1216 0056 C046     		.align	2
 1217              	.L138:
 1218 0058 00000000 		.word	.LANCHOR0
 1219 005c 33000F40 		.word	1074724915
 1220 0060 62000F40 		.word	1074724962
 1221 0064 42000F40 		.word	1074724930
 1222              	.LBE63:
 1223              		.cfi_endproc
 1224              	.LFE26:
 1225              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1226              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1227              		.align	2
 1228              		.global	UART_1_SetTxAddressMode
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	UART_1_SetTxAddressMode, %function
 1232              	UART_1_SetTxAddressMode:
 1233              	.LFB27:
1548:Generated_Source\PSoC4/UART_1.c **** 
1549:Generated_Source\PSoC4/UART_1.c **** 
1550:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC4/UART_1.c ****     *
1554:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC4/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC4/UART_1.c ****     *
1557:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC4/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC4/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC4/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC4/UART_1.c ****     *
1564:Generated_Source\PSoC4/UART_1.c ****     * Return:
1565:Generated_Source\PSoC4/UART_1.c ****     *  None.
1566:Generated_Source\PSoC4/UART_1.c ****     *
1567:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC4/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC4/UART_1.c ****     *  register.
1570:Generated_Source\PSoC4/UART_1.c ****     *
1571:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC4/UART_1.c ****     {
 1234              		.loc 1 1573 0
 1235              		.cfi_startproc
 1236              	.LVL62:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 52


1574:Generated_Source\PSoC4/UART_1.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC4/UART_1.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC4/UART_1.c ****         {
1577:Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:Generated_Source\PSoC4/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC4/UART_1.c ****         }
1582:Generated_Source\PSoC4/UART_1.c ****         else
1583:Generated_Source\PSoC4/UART_1.c ****         {
1584:Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:Generated_Source\PSoC4/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC4/UART_1.c ****         }
1589:Generated_Source\PSoC4/UART_1.c ****     }
 1237              		.loc 1 1589 0
 1238              		@ sp needed
 1239 0000 7047     		bx	lr
 1240              		.cfi_endproc
 1241              	.LFE27:
 1242              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1243              		.global	UART_1_initVar
 1244 0002 C046     		.bss
 1245              		.set	.LANCHOR0,. + 0
 1246              		.type	UART_1_initVar, %object
 1247              		.size	UART_1_initVar, 1
 1248              	UART_1_initVar:
 1249 0000 00       		.space	1
 1250              		.type	txPeriod.4898, %object
 1251              		.size	txPeriod.4898, 1
 1252              	txPeriod.4898:
 1253 0001 00       		.space	1
 1254              		.text
 1255              	.Letext0:
 1256              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1257              		.file 3 "Generated_Source\\PSoC4\\UART_1_IntClock.h"
 1258              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 1259              		.section	.debug_info,"",%progbits
 1260              	.Ldebug_info0:
 1261 0000 26070000 		.4byte	0x726
 1262 0004 0400     		.2byte	0x4
 1263 0006 00000000 		.4byte	.Ldebug_abbrev0
 1264 000a 04       		.byte	0x4
 1265 000b 01       		.uleb128 0x1
 1266 000c 4C000000 		.4byte	.LASF64
 1267 0010 01       		.byte	0x1
 1268 0011 FC010000 		.4byte	.LASF65
 1269 0015 01040000 		.4byte	.LASF66
 1270 0019 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 1271 001d 00000000 		.4byte	0
 1272 0021 00000000 		.4byte	.Ldebug_line0
 1273 0025 02       		.uleb128 0x2
 1274 0026 01       		.byte	0x1
 1275 0027 06       		.byte	0x6
 1276 0028 53010000 		.4byte	.LASF0
 1277 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 53


 1278 002d 01       		.byte	0x1
 1279 002e 08       		.byte	0x8
 1280 002f B4030000 		.4byte	.LASF1
 1281 0033 02       		.uleb128 0x2
 1282 0034 02       		.byte	0x2
 1283 0035 05       		.byte	0x5
 1284 0036 C2030000 		.4byte	.LASF2
 1285 003a 02       		.uleb128 0x2
 1286 003b 02       		.byte	0x2
 1287 003c 07       		.byte	0x7
 1288 003d 73020000 		.4byte	.LASF3
 1289 0041 02       		.uleb128 0x2
 1290 0042 04       		.byte	0x4
 1291 0043 05       		.byte	0x5
 1292 0044 8F010000 		.4byte	.LASF4
 1293 0048 02       		.uleb128 0x2
 1294 0049 04       		.byte	0x4
 1295 004a 07       		.byte	0x7
 1296 004b 45020000 		.4byte	.LASF5
 1297 004f 02       		.uleb128 0x2
 1298 0050 08       		.byte	0x8
 1299 0051 05       		.byte	0x5
 1300 0052 45010000 		.4byte	.LASF6
 1301 0056 02       		.uleb128 0x2
 1302 0057 08       		.byte	0x8
 1303 0058 07       		.byte	0x7
 1304 0059 17010000 		.4byte	.LASF7
 1305 005d 03       		.uleb128 0x3
 1306 005e 04       		.byte	0x4
 1307 005f 05       		.byte	0x5
 1308 0060 696E7400 		.ascii	"int\000"
 1309 0064 02       		.uleb128 0x2
 1310 0065 04       		.byte	0x4
 1311 0066 07       		.byte	0x7
 1312 0067 24020000 		.4byte	.LASF8
 1313 006b 04       		.uleb128 0x4
 1314 006c A5010000 		.4byte	.LASF9
 1315 0070 02       		.byte	0x2
 1316 0071 9801     		.2byte	0x198
 1317 0073 2C000000 		.4byte	0x2c
 1318 0077 04       		.uleb128 0x4
 1319 0078 00000000 		.4byte	.LASF10
 1320 007c 02       		.byte	0x2
 1321 007d 9901     		.2byte	0x199
 1322 007f 3A000000 		.4byte	0x3a
 1323 0083 04       		.uleb128 0x4
 1324 0084 D3010000 		.4byte	.LASF11
 1325 0088 02       		.byte	0x2
 1326 0089 9A01     		.2byte	0x19a
 1327 008b 48000000 		.4byte	0x48
 1328 008f 02       		.uleb128 0x2
 1329 0090 04       		.byte	0x4
 1330 0091 04       		.byte	0x4
 1331 0092 6B030000 		.4byte	.LASF12
 1332 0096 02       		.uleb128 0x2
 1333 0097 08       		.byte	0x8
 1334 0098 04       		.byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 54


 1335 0099 AB010000 		.4byte	.LASF13
 1336 009d 04       		.uleb128 0x4
 1337 009e 7A040000 		.4byte	.LASF14
 1338 00a2 02       		.byte	0x2
 1339 00a3 A901     		.2byte	0x1a9
 1340 00a5 A9000000 		.4byte	0xa9
 1341 00a9 02       		.uleb128 0x2
 1342 00aa 01       		.byte	0x1
 1343 00ab 08       		.byte	0x8
 1344 00ac 75040000 		.4byte	.LASF15
 1345 00b0 04       		.uleb128 0x4
 1346 00b1 AF030000 		.4byte	.LASF16
 1347 00b5 02       		.byte	0x2
 1348 00b6 4202     		.2byte	0x242
 1349 00b8 BC000000 		.4byte	0xbc
 1350 00bc 05       		.uleb128 0x5
 1351 00bd 6B000000 		.4byte	0x6b
 1352 00c1 02       		.uleb128 0x2
 1353 00c2 04       		.byte	0x4
 1354 00c3 07       		.byte	0x7
 1355 00c4 0D030000 		.4byte	.LASF17
 1356 00c8 06       		.uleb128 0x6
 1357 00c9 80040000 		.4byte	.LASF62
 1358 00cd 01       		.byte	0x1
 1359 00ce 6A       		.byte	0x6a
 1360 00cf 01       		.byte	0x1
 1361 00d0 07       		.uleb128 0x7
 1362 00d1 A4040000 		.4byte	.LASF18
 1363 00d5 01       		.byte	0x1
 1364 00d6 E501     		.2byte	0x1e5
 1365 00d8 6B000000 		.4byte	0x6b
 1366 00dc 01       		.byte	0x1
 1367 00dd EE000000 		.4byte	0xee
 1368 00e1 08       		.uleb128 0x8
 1369 00e2 9D040000 		.4byte	.LASF20
 1370 00e6 01       		.byte	0x1
 1371 00e7 E701     		.2byte	0x1e7
 1372 00e9 6B000000 		.4byte	0x6b
 1373 00ed 00       		.byte	0
 1374 00ee 07       		.uleb128 0x7
 1375 00ef 05010000 		.4byte	.LASF19
 1376 00f3 01       		.byte	0x1
 1377 00f4 8801     		.2byte	0x188
 1378 00f6 6B000000 		.4byte	0x6b
 1379 00fa 01       		.byte	0x1
 1380 00fb 0C010000 		.4byte	0x10c
 1381 00ff 08       		.uleb128 0x8
 1382 0100 6E040000 		.4byte	.LASF21
 1383 0104 01       		.byte	0x1
 1384 0105 8A01     		.2byte	0x18a
 1385 0107 6B000000 		.4byte	0x6b
 1386 010b 00       		.byte	0
 1387 010c 09       		.uleb128 0x9
 1388 010d 3D000000 		.4byte	.LASF22
 1389 0111 01       		.byte	0x1
 1390 0112 1104     		.2byte	0x411
 1391 0114 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 55


 1392 0115 26010000 		.4byte	0x126
 1393 0119 0A       		.uleb128 0xa
 1394 011a 32000000 		.4byte	.LASF44
 1395 011e 01       		.byte	0x1
 1396 011f 1104     		.2byte	0x411
 1397 0121 6B000000 		.4byte	0x6b
 1398 0125 00       		.byte	0
 1399 0126 0B       		.uleb128 0xb
 1400 0127 86020000 		.4byte	.LASF23
 1401 012b 01       		.byte	0x1
 1402 012c B7       		.byte	0xb7
 1403 012d 01       		.byte	0x1
 1404 012e 3E010000 		.4byte	0x13e
 1405 0132 0C       		.uleb128 0xc
 1406 0133 8C040000 		.4byte	.LASF24
 1407 0137 01       		.byte	0x1
 1408 0138 B9       		.byte	0xb9
 1409 0139 6B000000 		.4byte	0x6b
 1410 013d 00       		.byte	0
 1411 013e 0D       		.uleb128 0xd
 1412 013f 98010000 		.4byte	.LASF25
 1413 0143 01       		.byte	0x1
 1414 0144 4C       		.byte	0x4c
 1415 0145 00000000 		.4byte	.LFB1
 1416 0149 84000000 		.4byte	.LFE1-.LFB1
 1417 014d 01       		.uleb128 0x1
 1418 014e 9C       		.byte	0x9c
 1419 014f AF010000 		.4byte	0x1af
 1420 0153 0E       		.uleb128 0xe
 1421 0154 C8000000 		.4byte	0xc8
 1422 0158 0A000000 		.4byte	.LBB22
 1423 015c 1E000000 		.4byte	.LBE22-.LBB22
 1424 0160 01       		.byte	0x1
 1425 0161 51       		.byte	0x51
 1426 0162 0F       		.uleb128 0xf
 1427 0163 26010000 		.4byte	0x126
 1428 0167 2C000000 		.4byte	.LBB24
 1429 016b 00000000 		.4byte	.Ldebug_ranges0+0
 1430 016f 01       		.byte	0x1
 1431 0170 55       		.byte	0x55
 1432 0171 10       		.uleb128 0x10
 1433 0172 00000000 		.4byte	.Ldebug_ranges0+0
 1434 0176 11       		.uleb128 0x11
 1435 0177 32010000 		.4byte	0x132
 1436 017b 00000000 		.4byte	.LLST0
 1437 017f 12       		.uleb128 0x12
 1438 0180 30000000 		.4byte	.LVL0
 1439 0184 F5060000 		.4byte	0x6f5
 1440 0188 13       		.uleb128 0x13
 1441 0189 58000000 		.4byte	.LVL2
 1442 018d 00070000 		.4byte	0x700
 1443 0191 9C010000 		.4byte	0x19c
 1444 0195 14       		.uleb128 0x14
 1445 0196 01       		.uleb128 0x1
 1446 0197 50       		.byte	0x50
 1447 0198 02       		.uleb128 0x2
 1448 0199 08       		.byte	0x8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 56


 1449 019a FF       		.byte	0xff
 1450 019b 00       		.byte	0
 1451 019c 15       		.uleb128 0x15
 1452 019d 5E000000 		.4byte	.LVL3
 1453 01a1 11070000 		.4byte	0x711
 1454 01a5 14       		.uleb128 0x14
 1455 01a6 01       		.uleb128 0x1
 1456 01a7 50       		.byte	0x50
 1457 01a8 02       		.uleb128 0x2
 1458 01a9 74       		.byte	0x74
 1459 01aa 00       		.sleb128 0
 1460 01ab 00       		.byte	0
 1461 01ac 00       		.byte	0
 1462 01ad 00       		.byte	0
 1463 01ae 00       		.byte	0
 1464 01af 16       		.uleb128 0x16
 1465 01b0 C8000000 		.4byte	0xc8
 1466 01b4 00000000 		.4byte	.LFB2
 1467 01b8 34000000 		.4byte	.LFE2-.LFB2
 1468 01bc 01       		.uleb128 0x1
 1469 01bd 9C       		.byte	0x9c
 1470 01be 17       		.uleb128 0x17
 1471 01bf 26010000 		.4byte	0x126
 1472 01c3 00000000 		.4byte	.LFB3
 1473 01c7 44000000 		.4byte	.LFE3-.LFB3
 1474 01cb 01       		.uleb128 0x1
 1475 01cc 9C       		.byte	0x9c
 1476 01cd 08020000 		.4byte	0x208
 1477 01d1 11       		.uleb128 0x11
 1478 01d2 32010000 		.4byte	0x132
 1479 01d6 13000000 		.4byte	.LLST1
 1480 01da 12       		.uleb128 0x12
 1481 01db 06000000 		.4byte	.LVL5
 1482 01df F5060000 		.4byte	0x6f5
 1483 01e3 13       		.uleb128 0x13
 1484 01e4 2E000000 		.4byte	.LVL7
 1485 01e8 00070000 		.4byte	0x700
 1486 01ec F7010000 		.4byte	0x1f7
 1487 01f0 14       		.uleb128 0x14
 1488 01f1 01       		.uleb128 0x1
 1489 01f2 50       		.byte	0x50
 1490 01f3 02       		.uleb128 0x2
 1491 01f4 08       		.byte	0x8
 1492 01f5 FF       		.byte	0xff
 1493 01f6 00       		.byte	0
 1494 01f7 15       		.uleb128 0x15
 1495 01f8 34000000 		.4byte	.LVL8
 1496 01fc 11070000 		.4byte	0x711
 1497 0200 14       		.uleb128 0x14
 1498 0201 01       		.uleb128 0x1
 1499 0202 50       		.byte	0x50
 1500 0203 02       		.uleb128 0x2
 1501 0204 74       		.byte	0x74
 1502 0205 00       		.sleb128 0
 1503 0206 00       		.byte	0
 1504 0207 00       		.byte	0
 1505 0208 0D       		.uleb128 0xd
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 57


 1506 0209 D7020000 		.4byte	.LASF26
 1507 020d 01       		.byte	0x1
 1508 020e F0       		.byte	0xf0
 1509 020f 00000000 		.4byte	.LFB4
 1510 0213 3C000000 		.4byte	.LFE4-.LFB4
 1511 0217 01       		.uleb128 0x1
 1512 0218 9C       		.byte	0x9c
 1513 0219 4F020000 		.4byte	0x24f
 1514 021d 18       		.uleb128 0x18
 1515 021e 8C040000 		.4byte	.LASF24
 1516 0222 01       		.byte	0x1
 1517 0223 F2       		.byte	0xf2
 1518 0224 6B000000 		.4byte	0x6b
 1519 0228 26000000 		.4byte	.LLST2
 1520 022c 12       		.uleb128 0x12
 1521 022d 06000000 		.4byte	.LVL10
 1522 0231 F5060000 		.4byte	0x6f5
 1523 0235 12       		.uleb128 0x12
 1524 0236 16000000 		.4byte	.LVL12
 1525 023a 22070000 		.4byte	0x722
 1526 023e 15       		.uleb128 0x15
 1527 023f 2E000000 		.4byte	.LVL13
 1528 0243 11070000 		.4byte	0x711
 1529 0247 14       		.uleb128 0x14
 1530 0248 01       		.uleb128 0x1
 1531 0249 50       		.byte	0x50
 1532 024a 02       		.uleb128 0x2
 1533 024b 74       		.byte	0x74
 1534 024c 00       		.sleb128 0
 1535 024d 00       		.byte	0
 1536 024e 00       		.byte	0
 1537 024f 19       		.uleb128 0x19
 1538 0250 BC020000 		.4byte	.LASF45
 1539 0254 01       		.byte	0x1
 1540 0255 2701     		.2byte	0x127
 1541 0257 6B000000 		.4byte	0x6b
 1542 025b 00000000 		.4byte	.LFB5
 1543 025f 04000000 		.4byte	.LFE5-.LFB5
 1544 0263 01       		.uleb128 0x1
 1545 0264 9C       		.byte	0x9c
 1546 0265 1A       		.uleb128 0x1a
 1547 0266 CC030000 		.4byte	.LASF27
 1548 026a 01       		.byte	0x1
 1549 026b 3F01     		.2byte	0x13f
 1550 026d 00000000 		.4byte	.LFB6
 1551 0271 02000000 		.4byte	.LFE6-.LFB6
 1552 0275 01       		.uleb128 0x1
 1553 0276 9C       		.byte	0x9c
 1554 0277 8A020000 		.4byte	0x28a
 1555 027b 1B       		.uleb128 0x1b
 1556 027c DA010000 		.4byte	.LASF29
 1557 0280 01       		.byte	0x1
 1558 0281 3F01     		.2byte	0x13f
 1559 0283 6B000000 		.4byte	0x6b
 1560 0287 01       		.uleb128 0x1
 1561 0288 50       		.byte	0x50
 1562 0289 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 58


 1563 028a 1A       		.uleb128 0x1a
 1564 028b E2010000 		.4byte	.LASF28
 1565 028f 01       		.byte	0x1
 1566 0290 6701     		.2byte	0x167
 1567 0292 00000000 		.4byte	.LFB7
 1568 0296 0C000000 		.4byte	.LFE7-.LFB7
 1569 029a 01       		.uleb128 0x1
 1570 029b 9C       		.byte	0x9c
 1571 029c AF020000 		.4byte	0x2af
 1572 02a0 1B       		.uleb128 0x1b
 1573 02a1 B5020000 		.4byte	.LASF30
 1574 02a5 01       		.byte	0x1
 1575 02a6 6701     		.2byte	0x167
 1576 02a8 6B000000 		.4byte	0x6b
 1577 02ac 01       		.uleb128 0x1
 1578 02ad 50       		.byte	0x50
 1579 02ae 00       		.byte	0
 1580 02af 17       		.uleb128 0x17
 1581 02b0 EE000000 		.4byte	0xee
 1582 02b4 00000000 		.4byte	.LFB8
 1583 02b8 0C000000 		.4byte	.LFE8-.LFB8
 1584 02bc 01       		.uleb128 0x1
 1585 02bd 9C       		.byte	0x9c
 1586 02be CA020000 		.4byte	0x2ca
 1587 02c2 1C       		.uleb128 0x1c
 1588 02c3 FF000000 		.4byte	0xff
 1589 02c7 01       		.uleb128 0x1
 1590 02c8 50       		.byte	0x50
 1591 02c9 00       		.byte	0
 1592 02ca 17       		.uleb128 0x17
 1593 02cb D0000000 		.4byte	0xd0
 1594 02cf 00000000 		.4byte	.LFB9
 1595 02d3 10000000 		.4byte	.LFE9-.LFB9
 1596 02d7 01       		.uleb128 0x1
 1597 02d8 9C       		.byte	0x9c
 1598 02d9 EA020000 		.4byte	0x2ea
 1599 02dd 1C       		.uleb128 0x1c
 1600 02de E1000000 		.4byte	0xe1
 1601 02e2 06       		.uleb128 0x6
 1602 02e3 73       		.byte	0x73
 1603 02e4 00       		.sleb128 0
 1604 02e5 08       		.byte	0x8
 1605 02e6 7F       		.byte	0x7f
 1606 02e7 1A       		.byte	0x1a
 1607 02e8 9F       		.byte	0x9f
 1608 02e9 00       		.byte	0
 1609 02ea 1D       		.uleb128 0x1d
 1610 02eb B8040000 		.4byte	.LASF32
 1611 02ef 01       		.byte	0x1
 1612 02f0 1402     		.2byte	0x214
 1613 02f2 6B000000 		.4byte	0x6b
 1614 02f6 00000000 		.4byte	.LFB10
 1615 02fa 28000000 		.4byte	.LFE10-.LFB10
 1616 02fe 01       		.uleb128 0x1
 1617 02ff 9C       		.byte	0x9c
 1618 0300 25030000 		.4byte	0x325
 1619 0304 1E       		.uleb128 0x1e
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 59


 1620 0305 6E040000 		.4byte	.LASF21
 1621 0309 01       		.byte	0x1
 1622 030a 1602     		.2byte	0x216
 1623 030c 6B000000 		.4byte	0x6b
 1624 0310 39000000 		.4byte	.LLST3
 1625 0314 1E       		.uleb128 0x1e
 1626 0315 48030000 		.4byte	.LASF31
 1627 0319 01       		.byte	0x1
 1628 031a 1702     		.2byte	0x217
 1629 031c 6B000000 		.4byte	0x6b
 1630 0320 58000000 		.4byte	.LLST4
 1631 0324 00       		.byte	0
 1632 0325 1D       		.uleb128 0x1d
 1633 0326 E3020000 		.4byte	.LASF33
 1634 032a 01       		.byte	0x1
 1635 032b 7A02     		.2byte	0x27a
 1636 032d 77000000 		.4byte	0x77
 1637 0331 00000000 		.4byte	.LFB11
 1638 0335 1C000000 		.4byte	.LFE11-.LFB11
 1639 0339 01       		.uleb128 0x1
 1640 033a 9C       		.byte	0x9c
 1641 033b 85030000 		.4byte	0x385
 1642 033f 1F       		.uleb128 0x1f
 1643 0340 D0000000 		.4byte	0xd0
 1644 0344 02000000 		.4byte	.LBB28
 1645 0348 18000000 		.4byte	.Ldebug_ranges0+0x18
 1646 034c 01       		.byte	0x1
 1647 034d 8602     		.2byte	0x286
 1648 034f 66030000 		.4byte	0x366
 1649 0353 10       		.uleb128 0x10
 1650 0354 18000000 		.4byte	.Ldebug_ranges0+0x18
 1651 0358 1C       		.uleb128 0x1c
 1652 0359 E1000000 		.4byte	0xe1
 1653 035d 06       		.uleb128 0x6
 1654 035e 73       		.byte	0x73
 1655 035f 00       		.sleb128 0
 1656 0360 08       		.byte	0x8
 1657 0361 7F       		.byte	0x7f
 1658 0362 1A       		.byte	0x1a
 1659 0363 9F       		.byte	0x9f
 1660 0364 00       		.byte	0
 1661 0365 00       		.byte	0
 1662 0366 20       		.uleb128 0x20
 1663 0367 EE000000 		.4byte	0xee
 1664 036b 04000000 		.4byte	.LBB31
 1665 036f 30000000 		.4byte	.Ldebug_ranges0+0x30
 1666 0373 01       		.byte	0x1
 1667 0374 8602     		.2byte	0x286
 1668 0376 10       		.uleb128 0x10
 1669 0377 30000000 		.4byte	.Ldebug_ranges0+0x30
 1670 037b 1C       		.uleb128 0x1c
 1671 037c FF000000 		.4byte	0xff
 1672 0380 01       		.uleb128 0x1
 1673 0381 52       		.byte	0x52
 1674 0382 00       		.byte	0
 1675 0383 00       		.byte	0
 1676 0384 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 60


 1677 0385 1D       		.uleb128 0x1d
 1678 0386 57040000 		.4byte	.LASF34
 1679 038a 01       		.byte	0x1
 1680 038b AB02     		.2byte	0x2ab
 1681 038d 6B000000 		.4byte	0x6b
 1682 0391 00000000 		.4byte	.LFB12
 1683 0395 10000000 		.4byte	.LFE12-.LFB12
 1684 0399 01       		.uleb128 0x1
 1685 039a 9C       		.byte	0x9c
 1686 039b B0030000 		.4byte	0x3b0
 1687 039f 1E       		.uleb128 0x1e
 1688 03a0 6E020000 		.4byte	.LASF35
 1689 03a4 01       		.byte	0x1
 1690 03a5 AE02     		.2byte	0x2ae
 1691 03a7 6B000000 		.4byte	0x6b
 1692 03ab 6B000000 		.4byte	.LLST5
 1693 03af 00       		.byte	0
 1694 03b0 1A       		.uleb128 0x1a
 1695 03b1 82030000 		.4byte	.LASF36
 1696 03b5 01       		.byte	0x1
 1697 03b6 F502     		.2byte	0x2f5
 1698 03b8 00000000 		.4byte	.LFB13
 1699 03bc 24000000 		.4byte	.LFE13-.LFB13
 1700 03c0 01       		.uleb128 0x1
 1701 03c1 9C       		.byte	0x9c
 1702 03c2 E9030000 		.4byte	0x3e9
 1703 03c6 1E       		.uleb128 0x1e
 1704 03c7 8C040000 		.4byte	.LASF24
 1705 03cb 01       		.byte	0x1
 1706 03cc F702     		.2byte	0x2f7
 1707 03ce 6B000000 		.4byte	0x6b
 1708 03d2 87000000 		.4byte	.LLST6
 1709 03d6 12       		.uleb128 0x12
 1710 03d7 06000000 		.4byte	.LVL28
 1711 03db F5060000 		.4byte	0x6f5
 1712 03df 12       		.uleb128 0x12
 1713 03e0 1C000000 		.4byte	.LVL29
 1714 03e4 11070000 		.4byte	0x711
 1715 03e8 00       		.byte	0
 1716 03e9 1A       		.uleb128 0x1a
 1717 03ea 97030000 		.4byte	.LASF37
 1718 03ee 01       		.byte	0x1
 1719 03ef 2D03     		.2byte	0x32d
 1720 03f1 00000000 		.4byte	.LFB14
 1721 03f5 02000000 		.4byte	.LFE14-.LFB14
 1722 03f9 01       		.uleb128 0x1
 1723 03fa 9C       		.byte	0x9c
 1724 03fb 0E040000 		.4byte	0x40e
 1725 03ff 1B       		.uleb128 0x1b
 1726 0400 B2010000 		.4byte	.LASF38
 1727 0404 01       		.byte	0x1
 1728 0405 2D03     		.2byte	0x32d
 1729 0407 6B000000 		.4byte	0x6b
 1730 040b 01       		.uleb128 0x1
 1731 040c 50       		.byte	0x50
 1732 040d 00       		.byte	0
 1733 040e 1A       		.uleb128 0x1a
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 61


 1734 040f 16030000 		.4byte	.LASF39
 1735 0413 01       		.byte	0x1
 1736 0414 5903     		.2byte	0x359
 1737 0416 00000000 		.4byte	.LFB15
 1738 041a 0C000000 		.4byte	.LFE15-.LFB15
 1739 041e 01       		.uleb128 0x1
 1740 041f 9C       		.byte	0x9c
 1741 0420 33040000 		.4byte	0x433
 1742 0424 1B       		.uleb128 0x1b
 1743 0425 40030000 		.4byte	.LASF40
 1744 0429 01       		.byte	0x1
 1745 042a 5903     		.2byte	0x359
 1746 042c 6B000000 		.4byte	0x6b
 1747 0430 01       		.uleb128 0x1
 1748 0431 50       		.byte	0x50
 1749 0432 00       		.byte	0
 1750 0433 1A       		.uleb128 0x1a
 1751 0434 2B030000 		.4byte	.LASF41
 1752 0438 01       		.byte	0x1
 1753 0439 6D03     		.2byte	0x36d
 1754 043b 00000000 		.4byte	.LFB16
 1755 043f 0C000000 		.4byte	.LFE16-.LFB16
 1756 0443 01       		.uleb128 0x1
 1757 0444 9C       		.byte	0x9c
 1758 0445 58040000 		.4byte	0x458
 1759 0449 1B       		.uleb128 0x1b
 1760 044a 40030000 		.4byte	.LASF40
 1761 044e 01       		.byte	0x1
 1762 044f 6D03     		.2byte	0x36d
 1763 0451 6B000000 		.4byte	0x6b
 1764 0455 01       		.uleb128 0x1
 1765 0456 50       		.byte	0x50
 1766 0457 00       		.byte	0
 1767 0458 1A       		.uleb128 0x1a
 1768 0459 51030000 		.4byte	.LASF42
 1769 045d 01       		.byte	0x1
 1770 045e 8C03     		.2byte	0x38c
 1771 0460 00000000 		.4byte	.LFB17
 1772 0464 0C000000 		.4byte	.LFE17-.LFB17
 1773 0468 01       		.uleb128 0x1
 1774 0469 9C       		.byte	0x9c
 1775 046a 7D040000 		.4byte	0x47d
 1776 046e 1B       		.uleb128 0x1b
 1777 046f B5020000 		.4byte	.LASF30
 1778 0473 01       		.byte	0x1
 1779 0474 8C03     		.2byte	0x38c
 1780 0476 6B000000 		.4byte	0x6b
 1781 047a 01       		.uleb128 0x1
 1782 047b 50       		.byte	0x50
 1783 047c 00       		.byte	0
 1784 047d 1A       		.uleb128 0x1a
 1785 047e F2020000 		.4byte	.LASF43
 1786 0482 01       		.byte	0x1
 1787 0483 AE03     		.2byte	0x3ae
 1788 0485 00000000 		.4byte	.LFB18
 1789 0489 18000000 		.4byte	.LFE18-.LFB18
 1790 048d 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 62


 1791 048e 9C       		.byte	0x9c
 1792 048f A2040000 		.4byte	0x4a2
 1793 0493 1B       		.uleb128 0x1b
 1794 0494 32000000 		.4byte	.LASF44
 1795 0498 01       		.byte	0x1
 1796 0499 AE03     		.2byte	0x3ae
 1797 049b 6B000000 		.4byte	0x6b
 1798 049f 01       		.uleb128 0x1
 1799 04a0 50       		.byte	0x50
 1800 04a1 00       		.byte	0
 1801 04a2 19       		.uleb128 0x19
 1802 04a3 31020000 		.4byte	.LASF46
 1803 04a7 01       		.byte	0x1
 1804 04a8 EB03     		.2byte	0x3eb
 1805 04aa 6B000000 		.4byte	0x6b
 1806 04ae 00000000 		.4byte	.LFB19
 1807 04b2 0C000000 		.4byte	.LFE19-.LFB19
 1808 04b6 01       		.uleb128 0x1
 1809 04b7 9C       		.byte	0x9c
 1810 04b8 17       		.uleb128 0x17
 1811 04b9 0C010000 		.4byte	0x10c
 1812 04bd 00000000 		.4byte	.LFB20
 1813 04c1 18000000 		.4byte	.LFE20-.LFB20
 1814 04c5 01       		.uleb128 0x1
 1815 04c6 9C       		.byte	0x9c
 1816 04c7 D3040000 		.4byte	0x4d3
 1817 04cb 21       		.uleb128 0x21
 1818 04cc 19010000 		.4byte	0x119
 1819 04d0 01       		.uleb128 0x1
 1820 04d1 50       		.byte	0x50
 1821 04d2 00       		.byte	0
 1822 04d3 1A       		.uleb128 0x1a
 1823 04d4 71030000 		.4byte	.LASF47
 1824 04d8 01       		.byte	0x1
 1825 04d9 7904     		.2byte	0x479
 1826 04db 00000000 		.4byte	.LFB21
 1827 04df 38000000 		.4byte	.LFE21-.LFB21
 1828 04e3 01       		.uleb128 0x1
 1829 04e4 9C       		.byte	0x9c
 1830 04e5 1E050000 		.4byte	0x51e
 1831 04e9 1B       		.uleb128 0x1b
 1832 04ea ED000000 		.4byte	.LASF48
 1833 04ee 01       		.byte	0x1
 1834 04ef 7904     		.2byte	0x479
 1835 04f1 1E050000 		.4byte	0x51e
 1836 04f5 01       		.uleb128 0x1
 1837 04f6 50       		.byte	0x50
 1838 04f7 1E       		.uleb128 0x1e
 1839 04f8 94020000 		.4byte	.LASF49
 1840 04fc 01       		.byte	0x1
 1841 04fd 7B04     		.2byte	0x47b
 1842 04ff 77000000 		.4byte	0x77
 1843 0503 9A000000 		.4byte	.LLST7
 1844 0507 20       		.uleb128 0x20
 1845 0508 0C010000 		.4byte	0x10c
 1846 050c 12000000 		.4byte	.LBB36
 1847 0510 48000000 		.4byte	.Ldebug_ranges0+0x48
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 63


 1848 0514 01       		.byte	0x1
 1849 0515 8304     		.2byte	0x483
 1850 0517 22       		.uleb128 0x22
 1851 0518 19010000 		.4byte	0x119
 1852 051c 00       		.byte	0
 1853 051d 00       		.byte	0
 1854 051e 23       		.uleb128 0x23
 1855 051f 04       		.byte	0x4
 1856 0520 24050000 		.4byte	0x524
 1857 0524 24       		.uleb128 0x24
 1858 0525 9D000000 		.4byte	0x9d
 1859 0529 1A       		.uleb128 0x1a
 1860 052a C7040000 		.4byte	.LASF50
 1861 052e 01       		.byte	0x1
 1862 052f A704     		.2byte	0x4a7
 1863 0531 00000000 		.4byte	.LFB22
 1864 0535 3C000000 		.4byte	.LFE22-.LFB22
 1865 0539 01       		.uleb128 0x1
 1866 053a 9C       		.byte	0x9c
 1867 053b 8A050000 		.4byte	0x58a
 1868 053f 25       		.uleb128 0x25
 1869 0540 ED000000 		.4byte	.LASF48
 1870 0544 01       		.byte	0x1
 1871 0545 A704     		.2byte	0x4a7
 1872 0547 8A050000 		.4byte	0x58a
 1873 054b B9000000 		.4byte	.LLST8
 1874 054f 25       		.uleb128 0x25
 1875 0550 F7030000 		.4byte	.LASF51
 1876 0554 01       		.byte	0x1
 1877 0555 A704     		.2byte	0x4a7
 1878 0557 6B000000 		.4byte	0x6b
 1879 055b DA000000 		.4byte	.LLST9
 1880 055f 1E       		.uleb128 0x1e
 1881 0560 94020000 		.4byte	.LASF49
 1882 0564 01       		.byte	0x1
 1883 0565 AA04     		.2byte	0x4aa
 1884 0567 6B000000 		.4byte	0x6b
 1885 056b FB000000 		.4byte	.LLST10
 1886 056f 20       		.uleb128 0x20
 1887 0570 0C010000 		.4byte	0x10c
 1888 0574 0E000000 		.4byte	.LBB40
 1889 0578 60000000 		.4byte	.Ldebug_ranges0+0x60
 1890 057c 01       		.byte	0x1
 1891 057d B104     		.2byte	0x4b1
 1892 057f 26       		.uleb128 0x26
 1893 0580 19010000 		.4byte	0x119
 1894 0584 20010000 		.4byte	.LLST11
 1895 0588 00       		.byte	0
 1896 0589 00       		.byte	0
 1897 058a 23       		.uleb128 0x23
 1898 058b 04       		.byte	0x4
 1899 058c 90050000 		.4byte	0x590
 1900 0590 24       		.uleb128 0x24
 1901 0591 6B000000 		.4byte	0x6b
 1902 0595 1A       		.uleb128 0x1a
 1903 0596 68010000 		.4byte	.LASF52
 1904 059a 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 64


 1905 059b CE04     		.2byte	0x4ce
 1906 059d 00000000 		.4byte	.LFB23
 1907 05a1 44000000 		.4byte	.LFE23-.LFB23
 1908 05a5 01       		.uleb128 0x1
 1909 05a6 9C       		.byte	0x9c
 1910 05a7 0C060000 		.4byte	0x60c
 1911 05ab 1B       		.uleb128 0x1b
 1912 05ac 32000000 		.4byte	.LASF44
 1913 05b0 01       		.byte	0x1
 1914 05b1 CE04     		.2byte	0x4ce
 1915 05b3 6B000000 		.4byte	0x6b
 1916 05b7 01       		.uleb128 0x1
 1917 05b8 50       		.byte	0x50
 1918 05b9 1F       		.uleb128 0x1f
 1919 05ba 0C010000 		.4byte	0x10c
 1920 05be 08000000 		.4byte	.LBB44
 1921 05c2 78000000 		.4byte	.Ldebug_ranges0+0x78
 1922 05c6 01       		.byte	0x1
 1923 05c7 D304     		.2byte	0x4d3
 1924 05c9 D3050000 		.4byte	0x5d3
 1925 05cd 22       		.uleb128 0x22
 1926 05ce 19010000 		.4byte	0x119
 1927 05d2 00       		.byte	0
 1928 05d3 1F       		.uleb128 0x1f
 1929 05d4 0C010000 		.4byte	0x10c
 1930 05d8 12000000 		.4byte	.LBB48
 1931 05dc 98000000 		.4byte	.Ldebug_ranges0+0x98
 1932 05e0 01       		.byte	0x1
 1933 05e1 D404     		.2byte	0x4d4
 1934 05e3 F1050000 		.4byte	0x5f1
 1935 05e7 26       		.uleb128 0x26
 1936 05e8 19010000 		.4byte	0x119
 1937 05ec 33010000 		.4byte	.LLST12
 1938 05f0 00       		.byte	0
 1939 05f1 20       		.uleb128 0x20
 1940 05f2 0C010000 		.4byte	0x10c
 1941 05f6 24000000 		.4byte	.LBB57
 1942 05fa C0000000 		.4byte	.Ldebug_ranges0+0xc0
 1943 05fe 01       		.byte	0x1
 1944 05ff D504     		.2byte	0x4d5
 1945 0601 26       		.uleb128 0x26
 1946 0602 19010000 		.4byte	0x119
 1947 0606 47010000 		.4byte	.LLST13
 1948 060a 00       		.byte	0
 1949 060b 00       		.byte	0
 1950 060c 1D       		.uleb128 0x1d
 1951 060d 2E010000 		.4byte	.LASF53
 1952 0611 01       		.byte	0x1
 1953 0612 F904     		.2byte	0x4f9
 1954 0614 6B000000 		.4byte	0x6b
 1955 0618 00000000 		.4byte	.LFB24
 1956 061c 20000000 		.4byte	.LFE24-.LFB24
 1957 0620 01       		.uleb128 0x1
 1958 0621 9C       		.byte	0x9c
 1959 0622 37060000 		.4byte	0x637
 1960 0626 1E       		.uleb128 0x1e
 1961 0627 6E020000 		.4byte	.LASF35
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 65


 1962 062b 01       		.byte	0x1
 1963 062c FC04     		.2byte	0x4fc
 1964 062e 6B000000 		.4byte	0x6b
 1965 0632 5B010000 		.4byte	.LLST14
 1966 0636 00       		.byte	0
 1967 0637 1A       		.uleb128 0x1a
 1968 0638 07000000 		.4byte	.LASF54
 1969 063c 01       		.byte	0x1
 1970 063d 4A05     		.2byte	0x54a
 1971 063f 00000000 		.4byte	.LFB25
 1972 0643 24000000 		.4byte	.LFE25-.LFB25
 1973 0647 01       		.uleb128 0x1
 1974 0648 9C       		.byte	0x9c
 1975 0649 70060000 		.4byte	0x670
 1976 064d 1E       		.uleb128 0x1e
 1977 064e 8C040000 		.4byte	.LASF24
 1978 0652 01       		.byte	0x1
 1979 0653 4C05     		.2byte	0x54c
 1980 0655 6B000000 		.4byte	0x6b
 1981 0659 84010000 		.4byte	.LLST15
 1982 065d 12       		.uleb128 0x12
 1983 065e 06000000 		.4byte	.LVL54
 1984 0662 F5060000 		.4byte	0x6f5
 1985 0666 12       		.uleb128 0x12
 1986 0667 1C000000 		.4byte	.LVL55
 1987 066b 11070000 		.4byte	0x711
 1988 066f 00       		.byte	0
 1989 0670 1A       		.uleb128 0x1a
 1990 0671 F4000000 		.4byte	.LASF55
 1991 0675 01       		.byte	0x1
 1992 0676 A005     		.2byte	0x5a0
 1993 0678 00000000 		.4byte	.LFB26
 1994 067c 68000000 		.4byte	.LFE26-.LFB26
 1995 0680 01       		.uleb128 0x1
 1996 0681 9C       		.byte	0x9c
 1997 0682 BF060000 		.4byte	0x6bf
 1998 0686 25       		.uleb128 0x25
 1999 0687 1C020000 		.4byte	.LASF56
 2000 068b 01       		.byte	0x1
 2001 068c A005     		.2byte	0x5a0
 2002 068e 6B000000 		.4byte	0x6b
 2003 0692 97010000 		.4byte	.LLST16
 2004 0696 10       		.uleb128 0x10
 2005 0697 D8000000 		.4byte	.Ldebug_ranges0+0xd8
 2006 069b 1E       		.uleb128 0x1e
 2007 069c 05030000 		.4byte	.LASF57
 2008 06a0 01       		.byte	0x1
 2009 06a1 A805     		.2byte	0x5a8
 2010 06a3 6B000000 		.4byte	0x6b
 2011 06a7 C3010000 		.4byte	.LLST17
 2012 06ab 27       		.uleb128 0x27
 2013 06ac 5F010000 		.4byte	.LASF58
 2014 06b0 01       		.byte	0x1
 2015 06b1 D005     		.2byte	0x5d0
 2016 06b3 6B000000 		.4byte	0x6b
 2017 06b7 05       		.uleb128 0x5
 2018 06b8 03       		.byte	0x3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 66


 2019 06b9 01000000 		.4byte	txPeriod.4898
 2020 06bd 00       		.byte	0
 2021 06be 00       		.byte	0
 2022 06bf 1A       		.uleb128 0x1a
 2023 06c0 9D020000 		.4byte	.LASF59
 2024 06c4 01       		.byte	0x1
 2025 06c5 2406     		.2byte	0x624
 2026 06c7 00000000 		.4byte	.LFB27
 2027 06cb 02000000 		.4byte	.LFE27-.LFB27
 2028 06cf 01       		.uleb128 0x1
 2029 06d0 9C       		.byte	0x9c
 2030 06d1 E4060000 		.4byte	0x6e4
 2031 06d5 1B       		.uleb128 0x1b
 2032 06d6 B2010000 		.4byte	.LASF38
 2033 06da 01       		.byte	0x1
 2034 06db 2406     		.2byte	0x624
 2035 06dd 6B000000 		.4byte	0x6b
 2036 06e1 01       		.uleb128 0x1
 2037 06e2 50       		.byte	0x50
 2038 06e3 00       		.byte	0
 2039 06e4 28       		.uleb128 0x28
 2040 06e5 E8030000 		.4byte	.LASF67
 2041 06e9 01       		.byte	0x1
 2042 06ea 1B       		.byte	0x1b
 2043 06eb 6B000000 		.4byte	0x6b
 2044 06ef 05       		.uleb128 0x5
 2045 06f0 03       		.byte	0x3
 2046 06f1 00000000 		.4byte	UART_1_initVar
 2047 06f5 29       		.uleb128 0x29
 2048 06f6 57020000 		.4byte	.LASF68
 2049 06fa 04       		.byte	0x4
 2050 06fb E3       		.byte	0xe3
 2051 06fc 6B000000 		.4byte	0x6b
 2052 0700 2A       		.uleb128 0x2a
 2053 0701 77010000 		.4byte	.LASF60
 2054 0705 03       		.byte	0x3
 2055 0706 1D       		.byte	0x1d
 2056 0707 11070000 		.4byte	0x711
 2057 070b 2B       		.uleb128 0x2b
 2058 070c 83000000 		.4byte	0x83
 2059 0710 00       		.byte	0
 2060 0711 2A       		.uleb128 0x2a
 2061 0712 1C000000 		.4byte	.LASF61
 2062 0716 04       		.byte	0x4
 2063 0717 E4       		.byte	0xe4
 2064 0718 22070000 		.4byte	0x722
 2065 071c 2B       		.uleb128 0x2b
 2066 071d 6B000000 		.4byte	0x6b
 2067 0721 00       		.byte	0
 2068 0722 2C       		.uleb128 0x2c
 2069 0723 BE010000 		.4byte	.LASF63
 2070 0727 03       		.byte	0x3
 2071 0728 27       		.byte	0x27
 2072 0729 00       		.byte	0
 2073              		.section	.debug_abbrev,"",%progbits
 2074              	.Ldebug_abbrev0:
 2075 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 67


 2076 0001 11       		.uleb128 0x11
 2077 0002 01       		.byte	0x1
 2078 0003 25       		.uleb128 0x25
 2079 0004 0E       		.uleb128 0xe
 2080 0005 13       		.uleb128 0x13
 2081 0006 0B       		.uleb128 0xb
 2082 0007 03       		.uleb128 0x3
 2083 0008 0E       		.uleb128 0xe
 2084 0009 1B       		.uleb128 0x1b
 2085 000a 0E       		.uleb128 0xe
 2086 000b 55       		.uleb128 0x55
 2087 000c 17       		.uleb128 0x17
 2088 000d 11       		.uleb128 0x11
 2089 000e 01       		.uleb128 0x1
 2090 000f 10       		.uleb128 0x10
 2091 0010 17       		.uleb128 0x17
 2092 0011 00       		.byte	0
 2093 0012 00       		.byte	0
 2094 0013 02       		.uleb128 0x2
 2095 0014 24       		.uleb128 0x24
 2096 0015 00       		.byte	0
 2097 0016 0B       		.uleb128 0xb
 2098 0017 0B       		.uleb128 0xb
 2099 0018 3E       		.uleb128 0x3e
 2100 0019 0B       		.uleb128 0xb
 2101 001a 03       		.uleb128 0x3
 2102 001b 0E       		.uleb128 0xe
 2103 001c 00       		.byte	0
 2104 001d 00       		.byte	0
 2105 001e 03       		.uleb128 0x3
 2106 001f 24       		.uleb128 0x24
 2107 0020 00       		.byte	0
 2108 0021 0B       		.uleb128 0xb
 2109 0022 0B       		.uleb128 0xb
 2110 0023 3E       		.uleb128 0x3e
 2111 0024 0B       		.uleb128 0xb
 2112 0025 03       		.uleb128 0x3
 2113 0026 08       		.uleb128 0x8
 2114 0027 00       		.byte	0
 2115 0028 00       		.byte	0
 2116 0029 04       		.uleb128 0x4
 2117 002a 16       		.uleb128 0x16
 2118 002b 00       		.byte	0
 2119 002c 03       		.uleb128 0x3
 2120 002d 0E       		.uleb128 0xe
 2121 002e 3A       		.uleb128 0x3a
 2122 002f 0B       		.uleb128 0xb
 2123 0030 3B       		.uleb128 0x3b
 2124 0031 05       		.uleb128 0x5
 2125 0032 49       		.uleb128 0x49
 2126 0033 13       		.uleb128 0x13
 2127 0034 00       		.byte	0
 2128 0035 00       		.byte	0
 2129 0036 05       		.uleb128 0x5
 2130 0037 35       		.uleb128 0x35
 2131 0038 00       		.byte	0
 2132 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 68


 2133 003a 13       		.uleb128 0x13
 2134 003b 00       		.byte	0
 2135 003c 00       		.byte	0
 2136 003d 06       		.uleb128 0x6
 2137 003e 2E       		.uleb128 0x2e
 2138 003f 00       		.byte	0
 2139 0040 3F       		.uleb128 0x3f
 2140 0041 19       		.uleb128 0x19
 2141 0042 03       		.uleb128 0x3
 2142 0043 0E       		.uleb128 0xe
 2143 0044 3A       		.uleb128 0x3a
 2144 0045 0B       		.uleb128 0xb
 2145 0046 3B       		.uleb128 0x3b
 2146 0047 0B       		.uleb128 0xb
 2147 0048 27       		.uleb128 0x27
 2148 0049 19       		.uleb128 0x19
 2149 004a 20       		.uleb128 0x20
 2150 004b 0B       		.uleb128 0xb
 2151 004c 00       		.byte	0
 2152 004d 00       		.byte	0
 2153 004e 07       		.uleb128 0x7
 2154 004f 2E       		.uleb128 0x2e
 2155 0050 01       		.byte	0x1
 2156 0051 3F       		.uleb128 0x3f
 2157 0052 19       		.uleb128 0x19
 2158 0053 03       		.uleb128 0x3
 2159 0054 0E       		.uleb128 0xe
 2160 0055 3A       		.uleb128 0x3a
 2161 0056 0B       		.uleb128 0xb
 2162 0057 3B       		.uleb128 0x3b
 2163 0058 05       		.uleb128 0x5
 2164 0059 27       		.uleb128 0x27
 2165 005a 19       		.uleb128 0x19
 2166 005b 49       		.uleb128 0x49
 2167 005c 13       		.uleb128 0x13
 2168 005d 20       		.uleb128 0x20
 2169 005e 0B       		.uleb128 0xb
 2170 005f 01       		.uleb128 0x1
 2171 0060 13       		.uleb128 0x13
 2172 0061 00       		.byte	0
 2173 0062 00       		.byte	0
 2174 0063 08       		.uleb128 0x8
 2175 0064 34       		.uleb128 0x34
 2176 0065 00       		.byte	0
 2177 0066 03       		.uleb128 0x3
 2178 0067 0E       		.uleb128 0xe
 2179 0068 3A       		.uleb128 0x3a
 2180 0069 0B       		.uleb128 0xb
 2181 006a 3B       		.uleb128 0x3b
 2182 006b 05       		.uleb128 0x5
 2183 006c 49       		.uleb128 0x49
 2184 006d 13       		.uleb128 0x13
 2185 006e 00       		.byte	0
 2186 006f 00       		.byte	0
 2187 0070 09       		.uleb128 0x9
 2188 0071 2E       		.uleb128 0x2e
 2189 0072 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 69


 2190 0073 3F       		.uleb128 0x3f
 2191 0074 19       		.uleb128 0x19
 2192 0075 03       		.uleb128 0x3
 2193 0076 0E       		.uleb128 0xe
 2194 0077 3A       		.uleb128 0x3a
 2195 0078 0B       		.uleb128 0xb
 2196 0079 3B       		.uleb128 0x3b
 2197 007a 05       		.uleb128 0x5
 2198 007b 27       		.uleb128 0x27
 2199 007c 19       		.uleb128 0x19
 2200 007d 20       		.uleb128 0x20
 2201 007e 0B       		.uleb128 0xb
 2202 007f 01       		.uleb128 0x1
 2203 0080 13       		.uleb128 0x13
 2204 0081 00       		.byte	0
 2205 0082 00       		.byte	0
 2206 0083 0A       		.uleb128 0xa
 2207 0084 05       		.uleb128 0x5
 2208 0085 00       		.byte	0
 2209 0086 03       		.uleb128 0x3
 2210 0087 0E       		.uleb128 0xe
 2211 0088 3A       		.uleb128 0x3a
 2212 0089 0B       		.uleb128 0xb
 2213 008a 3B       		.uleb128 0x3b
 2214 008b 05       		.uleb128 0x5
 2215 008c 49       		.uleb128 0x49
 2216 008d 13       		.uleb128 0x13
 2217 008e 00       		.byte	0
 2218 008f 00       		.byte	0
 2219 0090 0B       		.uleb128 0xb
 2220 0091 2E       		.uleb128 0x2e
 2221 0092 01       		.byte	0x1
 2222 0093 3F       		.uleb128 0x3f
 2223 0094 19       		.uleb128 0x19
 2224 0095 03       		.uleb128 0x3
 2225 0096 0E       		.uleb128 0xe
 2226 0097 3A       		.uleb128 0x3a
 2227 0098 0B       		.uleb128 0xb
 2228 0099 3B       		.uleb128 0x3b
 2229 009a 0B       		.uleb128 0xb
 2230 009b 27       		.uleb128 0x27
 2231 009c 19       		.uleb128 0x19
 2232 009d 20       		.uleb128 0x20
 2233 009e 0B       		.uleb128 0xb
 2234 009f 01       		.uleb128 0x1
 2235 00a0 13       		.uleb128 0x13
 2236 00a1 00       		.byte	0
 2237 00a2 00       		.byte	0
 2238 00a3 0C       		.uleb128 0xc
 2239 00a4 34       		.uleb128 0x34
 2240 00a5 00       		.byte	0
 2241 00a6 03       		.uleb128 0x3
 2242 00a7 0E       		.uleb128 0xe
 2243 00a8 3A       		.uleb128 0x3a
 2244 00a9 0B       		.uleb128 0xb
 2245 00aa 3B       		.uleb128 0x3b
 2246 00ab 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 70


 2247 00ac 49       		.uleb128 0x49
 2248 00ad 13       		.uleb128 0x13
 2249 00ae 00       		.byte	0
 2250 00af 00       		.byte	0
 2251 00b0 0D       		.uleb128 0xd
 2252 00b1 2E       		.uleb128 0x2e
 2253 00b2 01       		.byte	0x1
 2254 00b3 3F       		.uleb128 0x3f
 2255 00b4 19       		.uleb128 0x19
 2256 00b5 03       		.uleb128 0x3
 2257 00b6 0E       		.uleb128 0xe
 2258 00b7 3A       		.uleb128 0x3a
 2259 00b8 0B       		.uleb128 0xb
 2260 00b9 3B       		.uleb128 0x3b
 2261 00ba 0B       		.uleb128 0xb
 2262 00bb 27       		.uleb128 0x27
 2263 00bc 19       		.uleb128 0x19
 2264 00bd 11       		.uleb128 0x11
 2265 00be 01       		.uleb128 0x1
 2266 00bf 12       		.uleb128 0x12
 2267 00c0 06       		.uleb128 0x6
 2268 00c1 40       		.uleb128 0x40
 2269 00c2 18       		.uleb128 0x18
 2270 00c3 9742     		.uleb128 0x2117
 2271 00c5 19       		.uleb128 0x19
 2272 00c6 01       		.uleb128 0x1
 2273 00c7 13       		.uleb128 0x13
 2274 00c8 00       		.byte	0
 2275 00c9 00       		.byte	0
 2276 00ca 0E       		.uleb128 0xe
 2277 00cb 1D       		.uleb128 0x1d
 2278 00cc 00       		.byte	0
 2279 00cd 31       		.uleb128 0x31
 2280 00ce 13       		.uleb128 0x13
 2281 00cf 11       		.uleb128 0x11
 2282 00d0 01       		.uleb128 0x1
 2283 00d1 12       		.uleb128 0x12
 2284 00d2 06       		.uleb128 0x6
 2285 00d3 58       		.uleb128 0x58
 2286 00d4 0B       		.uleb128 0xb
 2287 00d5 59       		.uleb128 0x59
 2288 00d6 0B       		.uleb128 0xb
 2289 00d7 00       		.byte	0
 2290 00d8 00       		.byte	0
 2291 00d9 0F       		.uleb128 0xf
 2292 00da 1D       		.uleb128 0x1d
 2293 00db 01       		.byte	0x1
 2294 00dc 31       		.uleb128 0x31
 2295 00dd 13       		.uleb128 0x13
 2296 00de 52       		.uleb128 0x52
 2297 00df 01       		.uleb128 0x1
 2298 00e0 55       		.uleb128 0x55
 2299 00e1 17       		.uleb128 0x17
 2300 00e2 58       		.uleb128 0x58
 2301 00e3 0B       		.uleb128 0xb
 2302 00e4 59       		.uleb128 0x59
 2303 00e5 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 71


 2304 00e6 00       		.byte	0
 2305 00e7 00       		.byte	0
 2306 00e8 10       		.uleb128 0x10
 2307 00e9 0B       		.uleb128 0xb
 2308 00ea 01       		.byte	0x1
 2309 00eb 55       		.uleb128 0x55
 2310 00ec 17       		.uleb128 0x17
 2311 00ed 00       		.byte	0
 2312 00ee 00       		.byte	0
 2313 00ef 11       		.uleb128 0x11
 2314 00f0 34       		.uleb128 0x34
 2315 00f1 00       		.byte	0
 2316 00f2 31       		.uleb128 0x31
 2317 00f3 13       		.uleb128 0x13
 2318 00f4 02       		.uleb128 0x2
 2319 00f5 17       		.uleb128 0x17
 2320 00f6 00       		.byte	0
 2321 00f7 00       		.byte	0
 2322 00f8 12       		.uleb128 0x12
 2323 00f9 898201   		.uleb128 0x4109
 2324 00fc 00       		.byte	0
 2325 00fd 11       		.uleb128 0x11
 2326 00fe 01       		.uleb128 0x1
 2327 00ff 31       		.uleb128 0x31
 2328 0100 13       		.uleb128 0x13
 2329 0101 00       		.byte	0
 2330 0102 00       		.byte	0
 2331 0103 13       		.uleb128 0x13
 2332 0104 898201   		.uleb128 0x4109
 2333 0107 01       		.byte	0x1
 2334 0108 11       		.uleb128 0x11
 2335 0109 01       		.uleb128 0x1
 2336 010a 31       		.uleb128 0x31
 2337 010b 13       		.uleb128 0x13
 2338 010c 01       		.uleb128 0x1
 2339 010d 13       		.uleb128 0x13
 2340 010e 00       		.byte	0
 2341 010f 00       		.byte	0
 2342 0110 14       		.uleb128 0x14
 2343 0111 8A8201   		.uleb128 0x410a
 2344 0114 00       		.byte	0
 2345 0115 02       		.uleb128 0x2
 2346 0116 18       		.uleb128 0x18
 2347 0117 9142     		.uleb128 0x2111
 2348 0119 18       		.uleb128 0x18
 2349 011a 00       		.byte	0
 2350 011b 00       		.byte	0
 2351 011c 15       		.uleb128 0x15
 2352 011d 898201   		.uleb128 0x4109
 2353 0120 01       		.byte	0x1
 2354 0121 11       		.uleb128 0x11
 2355 0122 01       		.uleb128 0x1
 2356 0123 31       		.uleb128 0x31
 2357 0124 13       		.uleb128 0x13
 2358 0125 00       		.byte	0
 2359 0126 00       		.byte	0
 2360 0127 16       		.uleb128 0x16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 72


 2361 0128 2E       		.uleb128 0x2e
 2362 0129 00       		.byte	0
 2363 012a 31       		.uleb128 0x31
 2364 012b 13       		.uleb128 0x13
 2365 012c 11       		.uleb128 0x11
 2366 012d 01       		.uleb128 0x1
 2367 012e 12       		.uleb128 0x12
 2368 012f 06       		.uleb128 0x6
 2369 0130 40       		.uleb128 0x40
 2370 0131 18       		.uleb128 0x18
 2371 0132 9742     		.uleb128 0x2117
 2372 0134 19       		.uleb128 0x19
 2373 0135 00       		.byte	0
 2374 0136 00       		.byte	0
 2375 0137 17       		.uleb128 0x17
 2376 0138 2E       		.uleb128 0x2e
 2377 0139 01       		.byte	0x1
 2378 013a 31       		.uleb128 0x31
 2379 013b 13       		.uleb128 0x13
 2380 013c 11       		.uleb128 0x11
 2381 013d 01       		.uleb128 0x1
 2382 013e 12       		.uleb128 0x12
 2383 013f 06       		.uleb128 0x6
 2384 0140 40       		.uleb128 0x40
 2385 0141 18       		.uleb128 0x18
 2386 0142 9742     		.uleb128 0x2117
 2387 0144 19       		.uleb128 0x19
 2388 0145 01       		.uleb128 0x1
 2389 0146 13       		.uleb128 0x13
 2390 0147 00       		.byte	0
 2391 0148 00       		.byte	0
 2392 0149 18       		.uleb128 0x18
 2393 014a 34       		.uleb128 0x34
 2394 014b 00       		.byte	0
 2395 014c 03       		.uleb128 0x3
 2396 014d 0E       		.uleb128 0xe
 2397 014e 3A       		.uleb128 0x3a
 2398 014f 0B       		.uleb128 0xb
 2399 0150 3B       		.uleb128 0x3b
 2400 0151 0B       		.uleb128 0xb
 2401 0152 49       		.uleb128 0x49
 2402 0153 13       		.uleb128 0x13
 2403 0154 02       		.uleb128 0x2
 2404 0155 17       		.uleb128 0x17
 2405 0156 00       		.byte	0
 2406 0157 00       		.byte	0
 2407 0158 19       		.uleb128 0x19
 2408 0159 2E       		.uleb128 0x2e
 2409 015a 00       		.byte	0
 2410 015b 3F       		.uleb128 0x3f
 2411 015c 19       		.uleb128 0x19
 2412 015d 03       		.uleb128 0x3
 2413 015e 0E       		.uleb128 0xe
 2414 015f 3A       		.uleb128 0x3a
 2415 0160 0B       		.uleb128 0xb
 2416 0161 3B       		.uleb128 0x3b
 2417 0162 05       		.uleb128 0x5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 73


 2418 0163 27       		.uleb128 0x27
 2419 0164 19       		.uleb128 0x19
 2420 0165 49       		.uleb128 0x49
 2421 0166 13       		.uleb128 0x13
 2422 0167 11       		.uleb128 0x11
 2423 0168 01       		.uleb128 0x1
 2424 0169 12       		.uleb128 0x12
 2425 016a 06       		.uleb128 0x6
 2426 016b 40       		.uleb128 0x40
 2427 016c 18       		.uleb128 0x18
 2428 016d 9742     		.uleb128 0x2117
 2429 016f 19       		.uleb128 0x19
 2430 0170 00       		.byte	0
 2431 0171 00       		.byte	0
 2432 0172 1A       		.uleb128 0x1a
 2433 0173 2E       		.uleb128 0x2e
 2434 0174 01       		.byte	0x1
 2435 0175 3F       		.uleb128 0x3f
 2436 0176 19       		.uleb128 0x19
 2437 0177 03       		.uleb128 0x3
 2438 0178 0E       		.uleb128 0xe
 2439 0179 3A       		.uleb128 0x3a
 2440 017a 0B       		.uleb128 0xb
 2441 017b 3B       		.uleb128 0x3b
 2442 017c 05       		.uleb128 0x5
 2443 017d 27       		.uleb128 0x27
 2444 017e 19       		.uleb128 0x19
 2445 017f 11       		.uleb128 0x11
 2446 0180 01       		.uleb128 0x1
 2447 0181 12       		.uleb128 0x12
 2448 0182 06       		.uleb128 0x6
 2449 0183 40       		.uleb128 0x40
 2450 0184 18       		.uleb128 0x18
 2451 0185 9742     		.uleb128 0x2117
 2452 0187 19       		.uleb128 0x19
 2453 0188 01       		.uleb128 0x1
 2454 0189 13       		.uleb128 0x13
 2455 018a 00       		.byte	0
 2456 018b 00       		.byte	0
 2457 018c 1B       		.uleb128 0x1b
 2458 018d 05       		.uleb128 0x5
 2459 018e 00       		.byte	0
 2460 018f 03       		.uleb128 0x3
 2461 0190 0E       		.uleb128 0xe
 2462 0191 3A       		.uleb128 0x3a
 2463 0192 0B       		.uleb128 0xb
 2464 0193 3B       		.uleb128 0x3b
 2465 0194 05       		.uleb128 0x5
 2466 0195 49       		.uleb128 0x49
 2467 0196 13       		.uleb128 0x13
 2468 0197 02       		.uleb128 0x2
 2469 0198 18       		.uleb128 0x18
 2470 0199 00       		.byte	0
 2471 019a 00       		.byte	0
 2472 019b 1C       		.uleb128 0x1c
 2473 019c 34       		.uleb128 0x34
 2474 019d 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 74


 2475 019e 31       		.uleb128 0x31
 2476 019f 13       		.uleb128 0x13
 2477 01a0 02       		.uleb128 0x2
 2478 01a1 18       		.uleb128 0x18
 2479 01a2 00       		.byte	0
 2480 01a3 00       		.byte	0
 2481 01a4 1D       		.uleb128 0x1d
 2482 01a5 2E       		.uleb128 0x2e
 2483 01a6 01       		.byte	0x1
 2484 01a7 3F       		.uleb128 0x3f
 2485 01a8 19       		.uleb128 0x19
 2486 01a9 03       		.uleb128 0x3
 2487 01aa 0E       		.uleb128 0xe
 2488 01ab 3A       		.uleb128 0x3a
 2489 01ac 0B       		.uleb128 0xb
 2490 01ad 3B       		.uleb128 0x3b
 2491 01ae 05       		.uleb128 0x5
 2492 01af 27       		.uleb128 0x27
 2493 01b0 19       		.uleb128 0x19
 2494 01b1 49       		.uleb128 0x49
 2495 01b2 13       		.uleb128 0x13
 2496 01b3 11       		.uleb128 0x11
 2497 01b4 01       		.uleb128 0x1
 2498 01b5 12       		.uleb128 0x12
 2499 01b6 06       		.uleb128 0x6
 2500 01b7 40       		.uleb128 0x40
 2501 01b8 18       		.uleb128 0x18
 2502 01b9 9742     		.uleb128 0x2117
 2503 01bb 19       		.uleb128 0x19
 2504 01bc 01       		.uleb128 0x1
 2505 01bd 13       		.uleb128 0x13
 2506 01be 00       		.byte	0
 2507 01bf 00       		.byte	0
 2508 01c0 1E       		.uleb128 0x1e
 2509 01c1 34       		.uleb128 0x34
 2510 01c2 00       		.byte	0
 2511 01c3 03       		.uleb128 0x3
 2512 01c4 0E       		.uleb128 0xe
 2513 01c5 3A       		.uleb128 0x3a
 2514 01c6 0B       		.uleb128 0xb
 2515 01c7 3B       		.uleb128 0x3b
 2516 01c8 05       		.uleb128 0x5
 2517 01c9 49       		.uleb128 0x49
 2518 01ca 13       		.uleb128 0x13
 2519 01cb 02       		.uleb128 0x2
 2520 01cc 17       		.uleb128 0x17
 2521 01cd 00       		.byte	0
 2522 01ce 00       		.byte	0
 2523 01cf 1F       		.uleb128 0x1f
 2524 01d0 1D       		.uleb128 0x1d
 2525 01d1 01       		.byte	0x1
 2526 01d2 31       		.uleb128 0x31
 2527 01d3 13       		.uleb128 0x13
 2528 01d4 52       		.uleb128 0x52
 2529 01d5 01       		.uleb128 0x1
 2530 01d6 55       		.uleb128 0x55
 2531 01d7 17       		.uleb128 0x17
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 75


 2532 01d8 58       		.uleb128 0x58
 2533 01d9 0B       		.uleb128 0xb
 2534 01da 59       		.uleb128 0x59
 2535 01db 05       		.uleb128 0x5
 2536 01dc 01       		.uleb128 0x1
 2537 01dd 13       		.uleb128 0x13
 2538 01de 00       		.byte	0
 2539 01df 00       		.byte	0
 2540 01e0 20       		.uleb128 0x20
 2541 01e1 1D       		.uleb128 0x1d
 2542 01e2 01       		.byte	0x1
 2543 01e3 31       		.uleb128 0x31
 2544 01e4 13       		.uleb128 0x13
 2545 01e5 52       		.uleb128 0x52
 2546 01e6 01       		.uleb128 0x1
 2547 01e7 55       		.uleb128 0x55
 2548 01e8 17       		.uleb128 0x17
 2549 01e9 58       		.uleb128 0x58
 2550 01ea 0B       		.uleb128 0xb
 2551 01eb 59       		.uleb128 0x59
 2552 01ec 05       		.uleb128 0x5
 2553 01ed 00       		.byte	0
 2554 01ee 00       		.byte	0
 2555 01ef 21       		.uleb128 0x21
 2556 01f0 05       		.uleb128 0x5
 2557 01f1 00       		.byte	0
 2558 01f2 31       		.uleb128 0x31
 2559 01f3 13       		.uleb128 0x13
 2560 01f4 02       		.uleb128 0x2
 2561 01f5 18       		.uleb128 0x18
 2562 01f6 00       		.byte	0
 2563 01f7 00       		.byte	0
 2564 01f8 22       		.uleb128 0x22
 2565 01f9 05       		.uleb128 0x5
 2566 01fa 00       		.byte	0
 2567 01fb 31       		.uleb128 0x31
 2568 01fc 13       		.uleb128 0x13
 2569 01fd 00       		.byte	0
 2570 01fe 00       		.byte	0
 2571 01ff 23       		.uleb128 0x23
 2572 0200 0F       		.uleb128 0xf
 2573 0201 00       		.byte	0
 2574 0202 0B       		.uleb128 0xb
 2575 0203 0B       		.uleb128 0xb
 2576 0204 49       		.uleb128 0x49
 2577 0205 13       		.uleb128 0x13
 2578 0206 00       		.byte	0
 2579 0207 00       		.byte	0
 2580 0208 24       		.uleb128 0x24
 2581 0209 26       		.uleb128 0x26
 2582 020a 00       		.byte	0
 2583 020b 49       		.uleb128 0x49
 2584 020c 13       		.uleb128 0x13
 2585 020d 00       		.byte	0
 2586 020e 00       		.byte	0
 2587 020f 25       		.uleb128 0x25
 2588 0210 05       		.uleb128 0x5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 76


 2589 0211 00       		.byte	0
 2590 0212 03       		.uleb128 0x3
 2591 0213 0E       		.uleb128 0xe
 2592 0214 3A       		.uleb128 0x3a
 2593 0215 0B       		.uleb128 0xb
 2594 0216 3B       		.uleb128 0x3b
 2595 0217 05       		.uleb128 0x5
 2596 0218 49       		.uleb128 0x49
 2597 0219 13       		.uleb128 0x13
 2598 021a 02       		.uleb128 0x2
 2599 021b 17       		.uleb128 0x17
 2600 021c 00       		.byte	0
 2601 021d 00       		.byte	0
 2602 021e 26       		.uleb128 0x26
 2603 021f 05       		.uleb128 0x5
 2604 0220 00       		.byte	0
 2605 0221 31       		.uleb128 0x31
 2606 0222 13       		.uleb128 0x13
 2607 0223 02       		.uleb128 0x2
 2608 0224 17       		.uleb128 0x17
 2609 0225 00       		.byte	0
 2610 0226 00       		.byte	0
 2611 0227 27       		.uleb128 0x27
 2612 0228 34       		.uleb128 0x34
 2613 0229 00       		.byte	0
 2614 022a 03       		.uleb128 0x3
 2615 022b 0E       		.uleb128 0xe
 2616 022c 3A       		.uleb128 0x3a
 2617 022d 0B       		.uleb128 0xb
 2618 022e 3B       		.uleb128 0x3b
 2619 022f 05       		.uleb128 0x5
 2620 0230 49       		.uleb128 0x49
 2621 0231 13       		.uleb128 0x13
 2622 0232 02       		.uleb128 0x2
 2623 0233 18       		.uleb128 0x18
 2624 0234 00       		.byte	0
 2625 0235 00       		.byte	0
 2626 0236 28       		.uleb128 0x28
 2627 0237 34       		.uleb128 0x34
 2628 0238 00       		.byte	0
 2629 0239 03       		.uleb128 0x3
 2630 023a 0E       		.uleb128 0xe
 2631 023b 3A       		.uleb128 0x3a
 2632 023c 0B       		.uleb128 0xb
 2633 023d 3B       		.uleb128 0x3b
 2634 023e 0B       		.uleb128 0xb
 2635 023f 49       		.uleb128 0x49
 2636 0240 13       		.uleb128 0x13
 2637 0241 3F       		.uleb128 0x3f
 2638 0242 19       		.uleb128 0x19
 2639 0243 02       		.uleb128 0x2
 2640 0244 18       		.uleb128 0x18
 2641 0245 00       		.byte	0
 2642 0246 00       		.byte	0
 2643 0247 29       		.uleb128 0x29
 2644 0248 2E       		.uleb128 0x2e
 2645 0249 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 77


 2646 024a 3F       		.uleb128 0x3f
 2647 024b 19       		.uleb128 0x19
 2648 024c 03       		.uleb128 0x3
 2649 024d 0E       		.uleb128 0xe
 2650 024e 3A       		.uleb128 0x3a
 2651 024f 0B       		.uleb128 0xb
 2652 0250 3B       		.uleb128 0x3b
 2653 0251 0B       		.uleb128 0xb
 2654 0252 27       		.uleb128 0x27
 2655 0253 19       		.uleb128 0x19
 2656 0254 49       		.uleb128 0x49
 2657 0255 13       		.uleb128 0x13
 2658 0256 3C       		.uleb128 0x3c
 2659 0257 19       		.uleb128 0x19
 2660 0258 00       		.byte	0
 2661 0259 00       		.byte	0
 2662 025a 2A       		.uleb128 0x2a
 2663 025b 2E       		.uleb128 0x2e
 2664 025c 01       		.byte	0x1
 2665 025d 3F       		.uleb128 0x3f
 2666 025e 19       		.uleb128 0x19
 2667 025f 03       		.uleb128 0x3
 2668 0260 0E       		.uleb128 0xe
 2669 0261 3A       		.uleb128 0x3a
 2670 0262 0B       		.uleb128 0xb
 2671 0263 3B       		.uleb128 0x3b
 2672 0264 0B       		.uleb128 0xb
 2673 0265 27       		.uleb128 0x27
 2674 0266 19       		.uleb128 0x19
 2675 0267 3C       		.uleb128 0x3c
 2676 0268 19       		.uleb128 0x19
 2677 0269 01       		.uleb128 0x1
 2678 026a 13       		.uleb128 0x13
 2679 026b 00       		.byte	0
 2680 026c 00       		.byte	0
 2681 026d 2B       		.uleb128 0x2b
 2682 026e 05       		.uleb128 0x5
 2683 026f 00       		.byte	0
 2684 0270 49       		.uleb128 0x49
 2685 0271 13       		.uleb128 0x13
 2686 0272 00       		.byte	0
 2687 0273 00       		.byte	0
 2688 0274 2C       		.uleb128 0x2c
 2689 0275 2E       		.uleb128 0x2e
 2690 0276 00       		.byte	0
 2691 0277 3F       		.uleb128 0x3f
 2692 0278 19       		.uleb128 0x19
 2693 0279 03       		.uleb128 0x3
 2694 027a 0E       		.uleb128 0xe
 2695 027b 3A       		.uleb128 0x3a
 2696 027c 0B       		.uleb128 0xb
 2697 027d 3B       		.uleb128 0x3b
 2698 027e 0B       		.uleb128 0xb
 2699 027f 27       		.uleb128 0x27
 2700 0280 19       		.uleb128 0x19
 2701 0281 3C       		.uleb128 0x3c
 2702 0282 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 78


 2703 0283 00       		.byte	0
 2704 0284 00       		.byte	0
 2705 0285 00       		.byte	0
 2706              		.section	.debug_loc,"",%progbits
 2707              	.Ldebug_loc0:
 2708              	.LLST0:
 2709 0000 36000000 		.4byte	.LVL1
 2710 0004 5E000000 		.4byte	.LVL4
 2711 0008 0100     		.2byte	0x1
 2712 000a 54       		.byte	0x54
 2713 000b 00000000 		.4byte	0
 2714 000f 00000000 		.4byte	0
 2715              	.LLST1:
 2716 0013 0C000000 		.4byte	.LVL6
 2717 0017 34000000 		.4byte	.LVL9
 2718 001b 0100     		.2byte	0x1
 2719 001d 54       		.byte	0x54
 2720 001e 00000000 		.4byte	0
 2721 0022 00000000 		.4byte	0
 2722              	.LLST2:
 2723 0026 0C000000 		.4byte	.LVL11
 2724 002a 2E000000 		.4byte	.LVL14
 2725 002e 0100     		.2byte	0x1
 2726 0030 54       		.byte	0x54
 2727 0031 00000000 		.4byte	0
 2728 0035 00000000 		.4byte	0
 2729              	.LLST3:
 2730 0039 00000000 		.4byte	.LVL19
 2731 003d 10000000 		.4byte	.LVL21
 2732 0041 0200     		.2byte	0x2
 2733 0043 30       		.byte	0x30
 2734 0044 9F       		.byte	0x9f
 2735 0045 10000000 		.4byte	.LVL21
 2736 0049 28000000 		.4byte	.LFE10
 2737 004d 0100     		.2byte	0x1
 2738 004f 50       		.byte	0x50
 2739 0050 00000000 		.4byte	0
 2740 0054 00000000 		.4byte	0
 2741              	.LLST4:
 2742 0058 08000000 		.4byte	.LVL20
 2743 005c 14000000 		.4byte	.LVL22
 2744 0060 0100     		.2byte	0x1
 2745 0062 53       		.byte	0x53
 2746 0063 00000000 		.4byte	0
 2747 0067 00000000 		.4byte	0
 2748              	.LLST5:
 2749 006b 04000000 		.4byte	.LVL26
 2750 006f 06000000 		.4byte	.LVL27
 2751 0073 0A00     		.2byte	0xa
 2752 0075 70       		.byte	0x70
 2753 0076 00       		.sleb128 0
 2754 0077 08       		.byte	0x8
 2755 0078 20       		.byte	0x20
 2756 0079 1A       		.byte	0x1a
 2757 007a 48       		.byte	0x48
 2758 007b 24       		.byte	0x24
 2759 007c 30       		.byte	0x30
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 79


 2760 007d 2E       		.byte	0x2e
 2761 007e 9F       		.byte	0x9f
 2762 007f 00000000 		.4byte	0
 2763 0083 00000000 		.4byte	0
 2764              	.LLST6:
 2765 0087 06000000 		.4byte	.LVL28
 2766 008b 1B000000 		.4byte	.LVL29-1
 2767 008f 0100     		.2byte	0x1
 2768 0091 50       		.byte	0x50
 2769 0092 00000000 		.4byte	0
 2770 0096 00000000 		.4byte	0
 2771              	.LLST7:
 2772 009a 00000000 		.4byte	.LVL36
 2773 009e 18000000 		.4byte	.LVL37
 2774 00a2 0200     		.2byte	0x2
 2775 00a4 30       		.byte	0x30
 2776 00a5 9F       		.byte	0x9f
 2777 00a6 24000000 		.4byte	.LVL38
 2778 00aa 2A000000 		.4byte	.LVL39
 2779 00ae 0100     		.2byte	0x1
 2780 00b0 54       		.byte	0x54
 2781 00b1 00000000 		.4byte	0
 2782 00b5 00000000 		.4byte	0
 2783              	.LLST8:
 2784 00b9 00000000 		.4byte	.LVL40
 2785 00bd 1C000000 		.4byte	.LVL42
 2786 00c1 0100     		.2byte	0x1
 2787 00c3 50       		.byte	0x50
 2788 00c4 1C000000 		.4byte	.LVL42
 2789 00c8 3C000000 		.4byte	.LFE22
 2790 00cc 0400     		.2byte	0x4
 2791 00ce F3       		.byte	0xf3
 2792 00cf 01       		.uleb128 0x1
 2793 00d0 50       		.byte	0x50
 2794 00d1 9F       		.byte	0x9f
 2795 00d2 00000000 		.4byte	0
 2796 00d6 00000000 		.4byte	0
 2797              	.LLST9:
 2798 00da 00000000 		.4byte	.LVL40
 2799 00de 18000000 		.4byte	.LVL41
 2800 00e2 0100     		.2byte	0x1
 2801 00e4 51       		.byte	0x51
 2802 00e5 18000000 		.4byte	.LVL41
 2803 00e9 3C000000 		.4byte	.LFE22
 2804 00ed 0400     		.2byte	0x4
 2805 00ef F3       		.byte	0xf3
 2806 00f0 01       		.uleb128 0x1
 2807 00f1 51       		.byte	0x51
 2808 00f2 9F       		.byte	0x9f
 2809 00f3 00000000 		.4byte	0
 2810 00f7 00000000 		.4byte	0
 2811              	.LLST10:
 2812 00fb 00000000 		.4byte	.LVL40
 2813 00ff 1C000000 		.4byte	.LVL42
 2814 0103 0200     		.2byte	0x2
 2815 0105 30       		.byte	0x30
 2816 0106 9F       		.byte	0x9f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 80


 2817 0107 1C000000 		.4byte	.LVL42
 2818 010b 26000000 		.4byte	.LVL44
 2819 010f 0700     		.2byte	0x7
 2820 0111 70       		.byte	0x70
 2821 0112 00       		.sleb128 0
 2822 0113 F3       		.byte	0xf3
 2823 0114 01       		.uleb128 0x1
 2824 0115 50       		.byte	0x50
 2825 0116 1C       		.byte	0x1c
 2826 0117 9F       		.byte	0x9f
 2827 0118 00000000 		.4byte	0
 2828 011c 00000000 		.4byte	0
 2829              	.LLST11:
 2830 0120 1E000000 		.4byte	.LVL43
 2831 0124 2C000000 		.4byte	.LVL45
 2832 0128 0100     		.2byte	0x1
 2833 012a 54       		.byte	0x54
 2834 012b 00000000 		.4byte	0
 2835 012f 00000000 		.4byte	0
 2836              	.LLST12:
 2837 0133 1A000000 		.4byte	.LVL47
 2838 0137 36000000 		.4byte	.LVL49
 2839 013b 0200     		.2byte	0x2
 2840 013d 3D       		.byte	0x3d
 2841 013e 9F       		.byte	0x9f
 2842 013f 00000000 		.4byte	0
 2843 0143 00000000 		.4byte	0
 2844              	.LLST13:
 2845 0147 28000000 		.4byte	.LVL48
 2846 014b 36000000 		.4byte	.LVL49
 2847 014f 0200     		.2byte	0x2
 2848 0151 3A       		.byte	0x3a
 2849 0152 9F       		.byte	0x9f
 2850 0153 00000000 		.4byte	0
 2851 0157 00000000 		.4byte	0
 2852              	.LLST14:
 2853 015b 08000000 		.4byte	.LVL50
 2854 015f 0C000000 		.4byte	.LVL51
 2855 0163 0100     		.2byte	0x1
 2856 0165 53       		.byte	0x53
 2857 0166 0C000000 		.4byte	.LVL51
 2858 016a 0E000000 		.4byte	.LVL52
 2859 016e 0100     		.2byte	0x1
 2860 0170 50       		.byte	0x50
 2861 0171 0E000000 		.4byte	.LVL52
 2862 0175 12000000 		.4byte	.LVL53
 2863 0179 0100     		.2byte	0x1
 2864 017b 53       		.byte	0x53
 2865 017c 00000000 		.4byte	0
 2866 0180 00000000 		.4byte	0
 2867              	.LLST15:
 2868 0184 06000000 		.4byte	.LVL54
 2869 0188 1B000000 		.4byte	.LVL55-1
 2870 018c 0100     		.2byte	0x1
 2871 018e 50       		.byte	0x50
 2872 018f 00000000 		.4byte	0
 2873 0193 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 81


 2874              	.LLST16:
 2875 0197 00000000 		.4byte	.LVL56
 2876 019b 34000000 		.4byte	.LVL59
 2877 019f 0100     		.2byte	0x1
 2878 01a1 50       		.byte	0x50
 2879 01a2 34000000 		.4byte	.LVL59
 2880 01a6 40000000 		.4byte	.LVL60
 2881 01aa 0400     		.2byte	0x4
 2882 01ac F3       		.byte	0xf3
 2883 01ad 01       		.uleb128 0x1
 2884 01ae 50       		.byte	0x50
 2885 01af 9F       		.byte	0x9f
 2886 01b0 40000000 		.4byte	.LVL60
 2887 01b4 68000000 		.4byte	.LFE26
 2888 01b8 0100     		.2byte	0x1
 2889 01ba 50       		.byte	0x50
 2890 01bb 00000000 		.4byte	0
 2891 01bf 00000000 		.4byte	0
 2892              	.LLST17:
 2893 01c3 24000000 		.4byte	.LVL57
 2894 01c7 2A000000 		.4byte	.LVL58
 2895 01cb 0100     		.2byte	0x1
 2896 01cd 53       		.byte	0x53
 2897 01ce 50000000 		.4byte	.LVL61
 2898 01d2 68000000 		.4byte	.LFE26
 2899 01d6 0100     		.2byte	0x1
 2900 01d8 53       		.byte	0x53
 2901 01d9 00000000 		.4byte	0
 2902 01dd 00000000 		.4byte	0
 2903              		.section	.debug_aranges,"",%progbits
 2904 0000 EC000000 		.4byte	0xec
 2905 0004 0200     		.2byte	0x2
 2906 0006 00000000 		.4byte	.Ldebug_info0
 2907 000a 04       		.byte	0x4
 2908 000b 00       		.byte	0
 2909 000c 0000     		.2byte	0
 2910 000e 0000     		.2byte	0
 2911 0010 00000000 		.4byte	.LFB1
 2912 0014 84000000 		.4byte	.LFE1-.LFB1
 2913 0018 00000000 		.4byte	.LFB2
 2914 001c 34000000 		.4byte	.LFE2-.LFB2
 2915 0020 00000000 		.4byte	.LFB3
 2916 0024 44000000 		.4byte	.LFE3-.LFB3
 2917 0028 00000000 		.4byte	.LFB4
 2918 002c 3C000000 		.4byte	.LFE4-.LFB4
 2919 0030 00000000 		.4byte	.LFB5
 2920 0034 04000000 		.4byte	.LFE5-.LFB5
 2921 0038 00000000 		.4byte	.LFB6
 2922 003c 02000000 		.4byte	.LFE6-.LFB6
 2923 0040 00000000 		.4byte	.LFB7
 2924 0044 0C000000 		.4byte	.LFE7-.LFB7
 2925 0048 00000000 		.4byte	.LFB8
 2926 004c 0C000000 		.4byte	.LFE8-.LFB8
 2927 0050 00000000 		.4byte	.LFB9
 2928 0054 10000000 		.4byte	.LFE9-.LFB9
 2929 0058 00000000 		.4byte	.LFB10
 2930 005c 28000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 82


 2931 0060 00000000 		.4byte	.LFB11
 2932 0064 1C000000 		.4byte	.LFE11-.LFB11
 2933 0068 00000000 		.4byte	.LFB12
 2934 006c 10000000 		.4byte	.LFE12-.LFB12
 2935 0070 00000000 		.4byte	.LFB13
 2936 0074 24000000 		.4byte	.LFE13-.LFB13
 2937 0078 00000000 		.4byte	.LFB14
 2938 007c 02000000 		.4byte	.LFE14-.LFB14
 2939 0080 00000000 		.4byte	.LFB15
 2940 0084 0C000000 		.4byte	.LFE15-.LFB15
 2941 0088 00000000 		.4byte	.LFB16
 2942 008c 0C000000 		.4byte	.LFE16-.LFB16
 2943 0090 00000000 		.4byte	.LFB17
 2944 0094 0C000000 		.4byte	.LFE17-.LFB17
 2945 0098 00000000 		.4byte	.LFB18
 2946 009c 18000000 		.4byte	.LFE18-.LFB18
 2947 00a0 00000000 		.4byte	.LFB19
 2948 00a4 0C000000 		.4byte	.LFE19-.LFB19
 2949 00a8 00000000 		.4byte	.LFB20
 2950 00ac 18000000 		.4byte	.LFE20-.LFB20
 2951 00b0 00000000 		.4byte	.LFB21
 2952 00b4 38000000 		.4byte	.LFE21-.LFB21
 2953 00b8 00000000 		.4byte	.LFB22
 2954 00bc 3C000000 		.4byte	.LFE22-.LFB22
 2955 00c0 00000000 		.4byte	.LFB23
 2956 00c4 44000000 		.4byte	.LFE23-.LFB23
 2957 00c8 00000000 		.4byte	.LFB24
 2958 00cc 20000000 		.4byte	.LFE24-.LFB24
 2959 00d0 00000000 		.4byte	.LFB25
 2960 00d4 24000000 		.4byte	.LFE25-.LFB25
 2961 00d8 00000000 		.4byte	.LFB26
 2962 00dc 68000000 		.4byte	.LFE26-.LFB26
 2963 00e0 00000000 		.4byte	.LFB27
 2964 00e4 02000000 		.4byte	.LFE27-.LFB27
 2965 00e8 00000000 		.4byte	0
 2966 00ec 00000000 		.4byte	0
 2967              		.section	.debug_ranges,"",%progbits
 2968              	.Ldebug_ranges0:
 2969 0000 2C000000 		.4byte	.LBB24
 2970 0004 42000000 		.4byte	.LBE24
 2971 0008 42000000 		.4byte	.LBB27
 2972 000c 5E000000 		.4byte	.LBE27
 2973 0010 00000000 		.4byte	0
 2974 0014 00000000 		.4byte	0
 2975 0018 02000000 		.4byte	.LBB28
 2976 001c 04000000 		.4byte	.LBE28
 2977 0020 06000000 		.4byte	.LBB34
 2978 0024 08000000 		.4byte	.LBE34
 2979 0028 00000000 		.4byte	0
 2980 002c 00000000 		.4byte	0
 2981 0030 04000000 		.4byte	.LBB31
 2982 0034 06000000 		.4byte	.LBE31
 2983 0038 08000000 		.4byte	.LBB35
 2984 003c 0A000000 		.4byte	.LBE35
 2985 0040 00000000 		.4byte	0
 2986 0044 00000000 		.4byte	0
 2987 0048 12000000 		.4byte	.LBB36
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 83


 2988 004c 1E000000 		.4byte	.LBE36
 2989 0050 20000000 		.4byte	.LBB39
 2990 0054 22000000 		.4byte	.LBE39
 2991 0058 00000000 		.4byte	0
 2992 005c 00000000 		.4byte	0
 2993 0060 0E000000 		.4byte	.LBB40
 2994 0064 1C000000 		.4byte	.LBE40
 2995 0068 1E000000 		.4byte	.LBB43
 2996 006c 28000000 		.4byte	.LBE43
 2997 0070 00000000 		.4byte	0
 2998 0074 00000000 		.4byte	0
 2999 0078 08000000 		.4byte	.LBB44
 3000 007c 12000000 		.4byte	.LBE44
 3001 0080 14000000 		.4byte	.LBB53
 3002 0084 16000000 		.4byte	.LBE53
 3003 0088 18000000 		.4byte	.LBB55
 3004 008c 1A000000 		.4byte	.LBE55
 3005 0090 00000000 		.4byte	0
 3006 0094 00000000 		.4byte	0
 3007 0098 12000000 		.4byte	.LBB48
 3008 009c 14000000 		.4byte	.LBE48
 3009 00a0 16000000 		.4byte	.LBB54
 3010 00a4 18000000 		.4byte	.LBE54
 3011 00a8 1A000000 		.4byte	.LBB56
 3012 00ac 24000000 		.4byte	.LBE56
 3013 00b0 26000000 		.4byte	.LBB60
 3014 00b4 28000000 		.4byte	.LBE60
 3015 00b8 00000000 		.4byte	0
 3016 00bc 00000000 		.4byte	0
 3017 00c0 24000000 		.4byte	.LBB57
 3018 00c4 26000000 		.4byte	.LBE57
 3019 00c8 28000000 		.4byte	.LBB61
 3020 00cc 36000000 		.4byte	.LBE61
 3021 00d0 00000000 		.4byte	0
 3022 00d4 00000000 		.4byte	0
 3023 00d8 0A000000 		.4byte	.LBB62
 3024 00dc 3E000000 		.4byte	.LBE62
 3025 00e0 40000000 		.4byte	.LBB63
 3026 00e4 68000000 		.4byte	.LBE63
 3027 00e8 00000000 		.4byte	0
 3028 00ec 00000000 		.4byte	0
 3029 00f0 00000000 		.4byte	.LFB1
 3030 00f4 84000000 		.4byte	.LFE1
 3031 00f8 00000000 		.4byte	.LFB2
 3032 00fc 34000000 		.4byte	.LFE2
 3033 0100 00000000 		.4byte	.LFB3
 3034 0104 44000000 		.4byte	.LFE3
 3035 0108 00000000 		.4byte	.LFB4
 3036 010c 3C000000 		.4byte	.LFE4
 3037 0110 00000000 		.4byte	.LFB5
 3038 0114 04000000 		.4byte	.LFE5
 3039 0118 00000000 		.4byte	.LFB6
 3040 011c 02000000 		.4byte	.LFE6
 3041 0120 00000000 		.4byte	.LFB7
 3042 0124 0C000000 		.4byte	.LFE7
 3043 0128 00000000 		.4byte	.LFB8
 3044 012c 0C000000 		.4byte	.LFE8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 84


 3045 0130 00000000 		.4byte	.LFB9
 3046 0134 10000000 		.4byte	.LFE9
 3047 0138 00000000 		.4byte	.LFB10
 3048 013c 28000000 		.4byte	.LFE10
 3049 0140 00000000 		.4byte	.LFB11
 3050 0144 1C000000 		.4byte	.LFE11
 3051 0148 00000000 		.4byte	.LFB12
 3052 014c 10000000 		.4byte	.LFE12
 3053 0150 00000000 		.4byte	.LFB13
 3054 0154 24000000 		.4byte	.LFE13
 3055 0158 00000000 		.4byte	.LFB14
 3056 015c 02000000 		.4byte	.LFE14
 3057 0160 00000000 		.4byte	.LFB15
 3058 0164 0C000000 		.4byte	.LFE15
 3059 0168 00000000 		.4byte	.LFB16
 3060 016c 0C000000 		.4byte	.LFE16
 3061 0170 00000000 		.4byte	.LFB17
 3062 0174 0C000000 		.4byte	.LFE17
 3063 0178 00000000 		.4byte	.LFB18
 3064 017c 18000000 		.4byte	.LFE18
 3065 0180 00000000 		.4byte	.LFB19
 3066 0184 0C000000 		.4byte	.LFE19
 3067 0188 00000000 		.4byte	.LFB20
 3068 018c 18000000 		.4byte	.LFE20
 3069 0190 00000000 		.4byte	.LFB21
 3070 0194 38000000 		.4byte	.LFE21
 3071 0198 00000000 		.4byte	.LFB22
 3072 019c 3C000000 		.4byte	.LFE22
 3073 01a0 00000000 		.4byte	.LFB23
 3074 01a4 44000000 		.4byte	.LFE23
 3075 01a8 00000000 		.4byte	.LFB24
 3076 01ac 20000000 		.4byte	.LFE24
 3077 01b0 00000000 		.4byte	.LFB25
 3078 01b4 24000000 		.4byte	.LFE25
 3079 01b8 00000000 		.4byte	.LFB26
 3080 01bc 68000000 		.4byte	.LFE26
 3081 01c0 00000000 		.4byte	.LFB27
 3082 01c4 02000000 		.4byte	.LFE27
 3083 01c8 00000000 		.4byte	0
 3084 01cc 00000000 		.4byte	0
 3085              		.section	.debug_line,"",%progbits
 3086              	.Ldebug_line0:
 3087 0000 A6030000 		.section	.debug_str,"MS",%progbits,1
 3087      02006300 
 3087      00000201 
 3087      FB0E0D00 
 3087      01010101 
 3088              	.LASF10:
 3089 0000 75696E74 		.ascii	"uint16\000"
 3089      313600
 3090              	.LASF54:
 3091 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 3091      5F315F43 
 3091      6C656172 
 3091      54784275 
 3091      66666572 
 3092              	.LASF61:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 85


 3093 001c 43794578 		.ascii	"CyExitCriticalSection\000"
 3093      69744372 
 3093      69746963 
 3093      616C5365 
 3093      6374696F 
 3094              	.LASF44:
 3095 0032 74784461 		.ascii	"txDataByte\000"
 3095      74614279 
 3095      746500
 3096              	.LASF22:
 3097 003d 55415254 		.ascii	"UART_1_PutChar\000"
 3097      5F315F50 
 3097      75744368 
 3097      617200
 3098              	.LASF64:
 3099 004c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3099      4320342E 
 3099      392E3320 
 3099      32303135 
 3099      30333033 
 3100 007f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3100      20726576 
 3100      6973696F 
 3100      6E203232 
 3100      31323230 
 3101 00b2 32202D66 		.ascii	"2 -ffunction-sections -finline-functions -ffat-lto-"
 3101      66756E63 
 3101      74696F6E 
 3101      2D736563 
 3101      74696F6E 
 3102 00e5 6F626A65 		.ascii	"objects\000"
 3102      63747300 
 3103              	.LASF48:
 3104 00ed 73747269 		.ascii	"string\000"
 3104      6E6700
 3105              	.LASF55:
 3106 00f4 55415254 		.ascii	"UART_1_SendBreak\000"
 3106      5F315F53 
 3106      656E6442 
 3106      7265616B 
 3106      00
 3107              	.LASF19:
 3108 0105 55415254 		.ascii	"UART_1_ReadRxData\000"
 3108      5F315F52 
 3108      65616452 
 3108      78446174 
 3108      6100
 3109              	.LASF7:
 3110 0117 6C6F6E67 		.ascii	"long long unsigned int\000"
 3110      206C6F6E 
 3110      6720756E 
 3110      7369676E 
 3110      65642069 
 3111              	.LASF53:
 3112 012e 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 3112      5F315F47 
 3112      65745478 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 86


 3112      42756666 
 3112      65725369 
 3113              	.LASF6:
 3114 0145 6C6F6E67 		.ascii	"long long int\000"
 3114      206C6F6E 
 3114      6720696E 
 3114      7400
 3115              	.LASF0:
 3116 0153 7369676E 		.ascii	"signed char\000"
 3116      65642063 
 3116      68617200 
 3117              	.LASF58:
 3118 015f 74785065 		.ascii	"txPeriod\000"
 3118      72696F64 
 3118      00
 3119              	.LASF52:
 3120 0168 55415254 		.ascii	"UART_1_PutCRLF\000"
 3120      5F315F50 
 3120      75744352 
 3120      4C4600
 3121              	.LASF60:
 3122 0177 55415254 		.ascii	"UART_1_IntClock_StartEx\000"
 3122      5F315F49 
 3122      6E74436C 
 3122      6F636B5F 
 3122      53746172 
 3123              	.LASF4:
 3124 018f 6C6F6E67 		.ascii	"long int\000"
 3124      20696E74 
 3124      00
 3125              	.LASF25:
 3126 0198 55415254 		.ascii	"UART_1_Start\000"
 3126      5F315F53 
 3126      74617274 
 3126      00
 3127              	.LASF9:
 3128 01a5 75696E74 		.ascii	"uint8\000"
 3128      3800
 3129              	.LASF13:
 3130 01ab 646F7562 		.ascii	"double\000"
 3130      6C6500
 3131              	.LASF38:
 3132 01b2 61646472 		.ascii	"addressMode\000"
 3132      6573734D 
 3132      6F646500 
 3133              	.LASF63:
 3134 01be 55415254 		.ascii	"UART_1_IntClock_Stop\000"
 3134      5F315F49 
 3134      6E74436C 
 3134      6F636B5F 
 3134      53746F70 
 3135              	.LASF11:
 3136 01d3 75696E74 		.ascii	"uint32\000"
 3136      333200
 3137              	.LASF29:
 3138 01da 636F6E74 		.ascii	"control\000"
 3138      726F6C00 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 87


 3139              	.LASF28:
 3140 01e2 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 3140      5F315F53 
 3140      65745278 
 3140      496E7465 
 3140      72727570 
 3141              	.LASF65:
 3142 01fc 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_1.c\000"
 3142      72617465 
 3142      645F536F 
 3142      75726365 
 3142      5C50536F 
 3143              	.LASF56:
 3144 021c 7265744D 		.ascii	"retMode\000"
 3144      6F646500 
 3145              	.LASF8:
 3146 0224 756E7369 		.ascii	"unsigned int\000"
 3146      676E6564 
 3146      20696E74 
 3146      00
 3147              	.LASF46:
 3148 0231 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 3148      5F315F52 
 3148      65616454 
 3148      78537461 
 3148      74757300 
 3149              	.LASF5:
 3150 0245 6C6F6E67 		.ascii	"long unsigned int\000"
 3150      20756E73 
 3150      69676E65 
 3150      6420696E 
 3150      7400
 3151              	.LASF68:
 3152 0257 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3152      74657243 
 3152      72697469 
 3152      63616C53 
 3152      65637469 
 3153              	.LASF35:
 3154 026e 73697A65 		.ascii	"size\000"
 3154      00
 3155              	.LASF3:
 3156 0273 73686F72 		.ascii	"short unsigned int\000"
 3156      7420756E 
 3156      7369676E 
 3156      65642069 
 3156      6E7400
 3157              	.LASF23:
 3158 0286 55415254 		.ascii	"UART_1_Enable\000"
 3158      5F315F45 
 3158      6E61626C 
 3158      6500
 3159              	.LASF49:
 3160 0294 62756649 		.ascii	"bufIndex\000"
 3160      6E646578 
 3160      00
 3161              	.LASF59:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 88


 3162 029d 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 3162      5F315F53 
 3162      65745478 
 3162      41646472 
 3162      6573734D 
 3163              	.LASF30:
 3164 02b5 696E7453 		.ascii	"intSrc\000"
 3164      726300
 3165              	.LASF45:
 3166 02bc 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 3166      5F315F52 
 3166      65616443 
 3166      6F6E7472 
 3166      6F6C5265 
 3167              	.LASF26:
 3168 02d7 55415254 		.ascii	"UART_1_Stop\000"
 3168      5F315F53 
 3168      746F7000 
 3169              	.LASF33:
 3170 02e3 55415254 		.ascii	"UART_1_GetByte\000"
 3170      5F315F47 
 3170      65744279 
 3170      746500
 3171              	.LASF43:
 3172 02f2 55415254 		.ascii	"UART_1_WriteTxData\000"
 3172      5F315F57 
 3172      72697465 
 3172      54784461 
 3172      746100
 3173              	.LASF57:
 3174 0305 746D7053 		.ascii	"tmpStat\000"
 3174      74617400 
 3175              	.LASF17:
 3176 030d 73697A65 		.ascii	"sizetype\000"
 3176      74797065 
 3176      00
 3177              	.LASF39:
 3178 0316 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 3178      5F315F53 
 3178      65745278 
 3178      41646472 
 3178      65737331 
 3179              	.LASF41:
 3180 032b 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 3180      5F315F53 
 3180      65745278 
 3180      41646472 
 3180      65737332 
 3181              	.LASF40:
 3182 0340 61646472 		.ascii	"address\000"
 3182      65737300 
 3183              	.LASF31:
 3184 0348 72785374 		.ascii	"rxStatus\000"
 3184      61747573 
 3184      00
 3185              	.LASF42:
 3186 0351 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 89


 3186      5F315F53 
 3186      65745478 
 3186      496E7465 
 3186      72727570 
 3187              	.LASF12:
 3188 036b 666C6F61 		.ascii	"float\000"
 3188      7400
 3189              	.LASF47:
 3190 0371 55415254 		.ascii	"UART_1_PutString\000"
 3190      5F315F50 
 3190      75745374 
 3190      72696E67 
 3190      00
 3191              	.LASF36:
 3192 0382 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 3192      5F315F43 
 3192      6C656172 
 3192      52784275 
 3192      66666572 
 3193              	.LASF37:
 3194 0397 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 3194      5F315F53 
 3194      65745278 
 3194      41646472 
 3194      6573734D 
 3195              	.LASF16:
 3196 03af 72656738 		.ascii	"reg8\000"
 3196      00
 3197              	.LASF1:
 3198 03b4 756E7369 		.ascii	"unsigned char\000"
 3198      676E6564 
 3198      20636861 
 3198      7200
 3199              	.LASF2:
 3200 03c2 73686F72 		.ascii	"short int\000"
 3200      7420696E 
 3200      7400
 3201              	.LASF27:
 3202 03cc 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 3202      5F315F57 
 3202      72697465 
 3202      436F6E74 
 3202      726F6C52 
 3203              	.LASF67:
 3204 03e8 55415254 		.ascii	"UART_1_initVar\000"
 3204      5F315F69 
 3204      6E697456 
 3204      617200
 3205              	.LASF51:
 3206 03f7 62797465 		.ascii	"byteCount\000"
 3206      436F756E 
 3206      7400
 3207              	.LASF66:
 3208 0401 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 3208      73657273 
 3208      5C676C65 
 3208      6E6E5C4F 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc1XABAq.s 			page 90


 3208      6E654472 
 3209 042f 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 3209      69737475 
 3209      72655F53 
 3209      656E736F 
 3209      725C4D6F 
 3210              	.LASF34:
 3211 0457 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 3211      5F315F47 
 3211      65745278 
 3211      42756666 
 3211      65725369 
 3212              	.LASF21:
 3213 046e 72784461 		.ascii	"rxData\000"
 3213      746100
 3214              	.LASF15:
 3215 0475 63686172 		.ascii	"char\000"
 3215      00
 3216              	.LASF14:
 3217 047a 63686172 		.ascii	"char8\000"
 3217      3800
 3218              	.LASF62:
 3219 0480 55415254 		.ascii	"UART_1_Init\000"
 3219      5F315F49 
 3219      6E697400 
 3220              	.LASF24:
 3221 048c 656E6162 		.ascii	"enableInterrupts\000"
 3221      6C65496E 
 3221      74657272 
 3221      75707473 
 3221      00
 3222              	.LASF20:
 3223 049d 73746174 		.ascii	"status\000"
 3223      757300
 3224              	.LASF18:
 3225 04a4 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 3225      5F315F52 
 3225      65616452 
 3225      78537461 
 3225      74757300 
 3226              	.LASF32:
 3227 04b8 55415254 		.ascii	"UART_1_GetChar\000"
 3227      5F315F47 
 3227      65744368 
 3227      617200
 3228              	.LASF50:
 3229 04c7 55415254 		.ascii	"UART_1_PutArray\000"
 3229      5F315F50 
 3229      75744172 
 3229      72617900 
 3230              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
