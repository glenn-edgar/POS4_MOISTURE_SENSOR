ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RTC_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RTC_1_IsBitSet,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	RTC_1_IsBitSet, %function
  22              	RTC_1_IsBitSet:
  23              	.LFB1:
  24              		.file 1 "Generated_Source\\PSoC4\\RTC_1.h"
   1:Generated_Source\PSoC4/RTC_1.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC_1.h **** * \file Name: RTC_1.h
   3:Generated_Source\PSoC4/RTC_1.h **** * \version 1.10
   4:Generated_Source\PSoC4/RTC_1.h **** *
   5:Generated_Source\PSoC4/RTC_1.h **** * \brief
   6:Generated_Source\PSoC4/RTC_1.h **** *  This file provides constants and parameter values for the RTC_P4 Component.
   7:Generated_Source\PSoC4/RTC_1.h **** *
   8:Generated_Source\PSoC4/RTC_1.h **** ********************************************************************************
   9:Generated_Source\PSoC4/RTC_1.h **** * Copyright 2015-2016, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/RTC_1.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC4/RTC_1.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC4/RTC_1.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
  14:Generated_Source\PSoC4/RTC_1.h **** 
  15:Generated_Source\PSoC4/RTC_1.h **** #if !defined(CY_RTC_P4_RTC_1_H)
  16:Generated_Source\PSoC4/RTC_1.h **** #define CY_RTC_P4_RTC_1_H
  17:Generated_Source\PSoC4/RTC_1.h **** 
  18:Generated_Source\PSoC4/RTC_1.h **** #include <cytypes.h>
  19:Generated_Source\PSoC4/RTC_1.h **** #include <CyLib.h>
  20:Generated_Source\PSoC4/RTC_1.h **** 
  21:Generated_Source\PSoC4/RTC_1.h **** 
  22:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
  23:Generated_Source\PSoC4/RTC_1.h **** *    Data types definition
  24:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
  25:Generated_Source\PSoC4/RTC_1.h **** 
  26:Generated_Source\PSoC4/RTC_1.h **** typedef enum
  27:Generated_Source\PSoC4/RTC_1.h **** {
  28:Generated_Source\PSoC4/RTC_1.h ****     RTC_1_DST_DATE_RELATIVE = 0u,
  29:Generated_Source\PSoC4/RTC_1.h ****     RTC_1_DST_DATE_FIXED = 1u
  30:Generated_Source\PSoC4/RTC_1.h **** }RTC_1_DST_DATETYPE_ENUM;
  31:Generated_Source\PSoC4/RTC_1.h **** 
  32:Generated_Source\PSoC4/RTC_1.h **** /**
  33:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_structures
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 2


  34:Generated_Source\PSoC4/RTC_1.h **** * @{
  35:Generated_Source\PSoC4/RTC_1.h **** */
  36:Generated_Source\PSoC4/RTC_1.h **** 
  37:Generated_Source\PSoC4/RTC_1.h **** /**
  38:Generated_Source\PSoC4/RTC_1.h **** * This is the data structure that is used to save the current time and date 
  39:Generated_Source\PSoC4/RTC_1.h **** * (RTC_currentTimeDate), and Alarm time and date (RTC_alarmCfgTimeDate).
  40:Generated_Source\PSoC4/RTC_1.h **** */
  41:Generated_Source\PSoC4/RTC_1.h **** typedef struct
  42:Generated_Source\PSoC4/RTC_1.h **** {
  43:Generated_Source\PSoC4/RTC_1.h ****     uint32 time;
  44:Generated_Source\PSoC4/RTC_1.h ****     uint32 date;
  45:Generated_Source\PSoC4/RTC_1.h ****     uint32 dayOfWeek;
  46:Generated_Source\PSoC4/RTC_1.h ****     uint32 status;
  47:Generated_Source\PSoC4/RTC_1.h **** }RTC_1_DATE_TIME;
  48:Generated_Source\PSoC4/RTC_1.h **** 
  49:Generated_Source\PSoC4/RTC_1.h **** /**
  50:Generated_Source\PSoC4/RTC_1.h **** * This is the data structure that is used to save time and date values for 
  51:Generated_Source\PSoC4/RTC_1.h **** * Daylight Savings Time Start and Stop (RTC_dstTimeDateStart and 
  52:Generated_Source\PSoC4/RTC_1.h **** * RTC_dstTimeDateStop).
  53:Generated_Source\PSoC4/RTC_1.h **** */
  54:Generated_Source\PSoC4/RTC_1.h **** typedef struct
  55:Generated_Source\PSoC4/RTC_1.h **** {
  56:Generated_Source\PSoC4/RTC_1.h ****     uint32 hour;
  57:Generated_Source\PSoC4/RTC_1.h ****     uint32 dayOfWeek;
  58:Generated_Source\PSoC4/RTC_1.h ****     uint32 dayOfMonth;
  59:Generated_Source\PSoC4/RTC_1.h ****     uint32 weekOfMonth;
  60:Generated_Source\PSoC4/RTC_1.h ****     uint32 month;
  61:Generated_Source\PSoC4/RTC_1.h ****     uint8  timeFormat;
  62:Generated_Source\PSoC4/RTC_1.h **** }RTC_1_DST_TIME;
  63:Generated_Source\PSoC4/RTC_1.h **** 
  64:Generated_Source\PSoC4/RTC_1.h **** /** @} structures */
  65:Generated_Source\PSoC4/RTC_1.h **** 
  66:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
  67:Generated_Source\PSoC4/RTC_1.h **** *    Enumerated Types and Parameters
  68:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
  69:Generated_Source\PSoC4/RTC_1.h **** /* Time Format setting constants */
  70:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__HOUR_12 1
  71:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__HOUR_24 0
  72:Generated_Source\PSoC4/RTC_1.h **** 
  73:Generated_Source\PSoC4/RTC_1.h **** /*  Date Format setting constants */
  74:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MM_DD_YYYY 0
  75:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__DD_MM_YYYY 1
  76:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__YYYY_MM_DD 2
  77:Generated_Source\PSoC4/RTC_1.h **** 
  78:Generated_Source\PSoC4/RTC_1.h **** /* Date Type setting constants */
  79:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__RELATIVE 0
  80:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FIXED 1
  81:Generated_Source\PSoC4/RTC_1.h **** 
  82:Generated_Source\PSoC4/RTC_1.h **** /* DST Hour setting constants */
  83:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0000 0
  84:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0100 1
  85:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0200 2
  86:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0300 3
  87:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0400 4
  88:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0500 5
  89:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0600 6
  90:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0700 7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 3


  91:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0800 8
  92:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H0900 9
  93:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1000 10
  94:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1100 11
  95:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1200 12
  96:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1300 13
  97:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1400 14
  98:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1500 15
  99:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1600 16
 100:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1700 17
 101:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1800 18
 102:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H1900 19
 103:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2000 20
 104:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2100 21
 105:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2200 22
 106:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__H2300 23
 107:Generated_Source\PSoC4/RTC_1.h **** 
 108:Generated_Source\PSoC4/RTC_1.h **** /* DST DayOfWeek setting constants */
 109:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SUNDAY 1
 110:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MONDAY 2
 111:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__TUESDAY 3
 112:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__WEDNESDAY 4
 113:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__THURSDAY 5
 114:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FRIDAY 6
 115:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SATURDAY 7
 116:Generated_Source\PSoC4/RTC_1.h **** 
 117:Generated_Source\PSoC4/RTC_1.h **** /* DST Month setting constants */
 118:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__JAN 1
 119:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FEB 2
 120:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MAR 3
 121:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__APR 4
 122:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__MAY 5
 123:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__JUN 6
 124:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__JUL 7
 125:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__AUG 8
 126:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SEP 9
 127:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__OCT 10
 128:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__NOV 11
 129:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__DEC 12
 130:Generated_Source\PSoC4/RTC_1.h **** 
 131:Generated_Source\PSoC4/RTC_1.h **** /* DST WeekOfMonth setting constants */
 132:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FIRST 1
 133:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__SECOND 2
 134:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__THIRD 3
 135:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FOURTH 4
 136:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__FIFTH 5
 137:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1__LAST 6
 138:Generated_Source\PSoC4/RTC_1.h **** 
 139:Generated_Source\PSoC4/RTC_1.h **** 
 140:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DATA_FORMAT     (0u)
 141:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_TIME_FORMAT     (0u)
 142:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_UPDATE_MODE     (0u)
 143:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_SECOND          (0u)
 144:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_MINUTE          (0u)
 145:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_HOUR            (0u)
 146:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DAY             (1u)
 147:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_MONTH           (1u)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 4


 148:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_YEAR            (1970u)
 149:Generated_Source\PSoC4/RTC_1.h **** 
 150:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_ALARM_STATUS    (1u)
 151:Generated_Source\PSoC4/RTC_1.h **** 
 152:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STATUS      (1u)
 153:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_DATE_TYPE   (0u)
 154:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_MONTH (3uL)
 155:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_WOM   (6uL)
 156:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_DOM   (22uL)
 157:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_DOW   (1uL)
 158:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_START_HRS   (0uL)
 159:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_MONTH  (10uL)
 160:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_DOM    (22uL)
 161:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_DOW    (1uL)
 162:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_WOM    (6uL)
 163:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_INITIAL_DST_STOP_HRS    (0uL)
 164:Generated_Source\PSoC4/RTC_1.h **** 
 165:Generated_Source\PSoC4/RTC_1.h **** /* Day of week definitions */
 166:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SUNDAY     (RTC_1__SUNDAY)
 167:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MONDAY     (RTC_1__MONDAY)
 168:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_TUESDAY    (RTC_1__TUESDAY)
 169:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_WEDNESDAY  (RTC_1__WEDNESDAY)
 170:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_THURSDAY   (RTC_1__THURSDAY)
 171:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FRIDAY     (RTC_1__FRIDAY)
 172:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SATURDAY   (RTC_1__SATURDAY)
 173:Generated_Source\PSoC4/RTC_1.h **** 
 174:Generated_Source\PSoC4/RTC_1.h **** /* DST WeekOfMonth setting constants definitions */
 175:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FIRST      (RTC_1__FIRST)
 176:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECOND     (RTC_1__SECOND)
 177:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_THIRD      (RTC_1__THIRD)
 178:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FOURTH     (RTC_1__FOURTH)
 179:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FIFTH      (RTC_1__FIFTH)
 180:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_LAST       (RTC_1__LAST)
 181:Generated_Source\PSoC4/RTC_1.h **** 
 182:Generated_Source\PSoC4/RTC_1.h **** /* Month definitions */
 183:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_JANUARY    (RTC_1__JAN)
 184:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_FEBRUARY   (RTC_1__FEB)
 185:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MARCH      (RTC_1__MAR)
 186:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_APRIL      (RTC_1__APR)
 187:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MAY        (RTC_1__MAY)
 188:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_JUNE       (RTC_1__JUN)
 189:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_JULY       (RTC_1__JUL)
 190:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_AUGUST     (RTC_1__AUG)
 191:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SEPTEMBER  (RTC_1__SEP)
 192:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_OCTOBER    (RTC_1__OCT)
 193:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_NOVEMBER   (RTC_1__NOV)
 194:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DECEMBER   (RTC_1__DEC)
 195:Generated_Source\PSoC4/RTC_1.h **** 
 196:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_PER_WEEK       (7u)
 197:Generated_Source\PSoC4/RTC_1.h **** 
 198:Generated_Source\PSoC4/RTC_1.h **** /* Number of days in month definitions */
 199:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_JANUARY     (31u)
 200:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_FEBRUARY    (28u)
 201:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_MARCH       (31u)
 202:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_APRIL       (30u)
 203:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_MAY         (31u)
 204:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_JUNE        (30u)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 5


 205:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_JULY        (31u)
 206:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_AUGUST      (31u)
 207:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_SEPTEMBER   (30u)
 208:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_OCTOBER     (31u)
 209:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_NOVEMBER    (30u)
 210:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAYS_IN_DECEMBER    (31u)
 211:Generated_Source\PSoC4/RTC_1.h **** 
 212:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MONTHS_PER_YEAR     (12uL)
 213:Generated_Source\PSoC4/RTC_1.h **** 
 214:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_PER_DAY       (24uL)
 215:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_PER_HALF_DAY  (12uL)
 216:Generated_Source\PSoC4/RTC_1.h **** 
 217:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_MINUTE  (60uL)
 218:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_HOUR    (3600uL)
 219:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_DAY     (24uL * 3600uL)
 220:Generated_Source\PSoC4/RTC_1.h **** 
 221:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_LEAP_YEAR    (366uL * 24uL * 3600uL)
 222:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_PER_NONLEAP_YEAR (365uL * 24uL * 3600uL)
 223:Generated_Source\PSoC4/RTC_1.h **** 
 224:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_UNIX_TIME_PM   ((12uL * 3600uL) + 1uL)
 225:Generated_Source\PSoC4/RTC_1.h **** 
 226:Generated_Source\PSoC4/RTC_1.h **** /* AM/PM status definitions */
 227:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_AM                 (0u)
 228:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_PM                 (1u)
 229:Generated_Source\PSoC4/RTC_1.h **** 
 230:Generated_Source\PSoC4/RTC_1.h **** /* Time format definitions */
 231:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_12_HOURS_FORMAT    (RTC_1__HOUR_12)
 232:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_24_HOURS_FORMAT    (RTC_1__HOUR_24)
 233:Generated_Source\PSoC4/RTC_1.h **** 
 234:Generated_Source\PSoC4/RTC_1.h **** /* UNIX time begins in 1970 year.  */
 235:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_YEAR_0             (1970u)
 236:Generated_Source\PSoC4/RTC_1.h **** 
 237:Generated_Source\PSoC4/RTC_1.h **** /* Definition of date register fields */
 238:Generated_Source\PSoC4/RTC_1.h **** #if(RTC_1_INITIAL_DATA_FORMAT == RTC_1__MM_DD_YYYY)
 239:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_MONTH_OFFSET   (28u)
 240:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_MONTH_OFFSET      (24u)
 241:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_DAY_OFFSET     (20u)
 242:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_DAY_OFFSET        (16u)
 243:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_1000_YEAR_OFFSET  (12u)
 244:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_100_YEAR_OFFSET   (8u)
 245:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_YEAR_OFFSET    (4u)
 246:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_YEAR_OFFSET       (0u)
 247:Generated_Source\PSoC4/RTC_1.h **** #elif(RTC_1_INITIAL_DATA_FORMAT == RTC_1__DD_MM_YYYY)
 248:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_MONTH_OFFSET   (20u)
 249:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_MONTH_OFFSET      (16u)
 250:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_DAY_OFFSET     (28u)
 251:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_DAY_OFFSET        (24u)
 252:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_1000_YEAR_OFFSET  (12u)
 253:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_100_YEAR_OFFSET   (8u)
 254:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_YEAR_OFFSET    (4u)
 255:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_YEAR_OFFSET       (0u)
 256:Generated_Source\PSoC4/RTC_1.h **** #else
 257:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_MONTH_OFFSET   (12u)
 258:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_MONTH_OFFSET      (8u)
 259:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_DAY_OFFSET     (4u)
 260:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_DAY_OFFSET        (0u)
 261:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_1000_YEAR_OFFSET  (28u)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 6


 262:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_100_YEAR_OFFSET   (24u)
 263:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_10_YEAR_OFFSET    (20u)
 264:Generated_Source\PSoC4/RTC_1.h ****     #define RTC_1_YEAR_OFFSET       (16u)
 265:Generated_Source\PSoC4/RTC_1.h **** #endif /* (RTC_1_INITIAL_DATA_FORMAT == RTC_1__MM_DD_YYYY) */
 266:Generated_Source\PSoC4/RTC_1.h **** 
 267:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_MONTH_MASK          (0x00000001uL << RTC_1_10_MONTH_OFFSET)
 268:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MONTH_MASK             (0x0000000FuL << RTC_1_MONTH_OFFSET)
 269:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_DAY_MASK            (0x00000003uL << RTC_1_10_DAY_OFFSET)
 270:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_DAY_MASK               (0x0000000FuL << RTC_1_DAY_OFFSET)
 271:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_1000_YEAR_MASK         (0x00000003uL << RTC_1_1000_YEAR_OFFSET)
 272:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_100_YEAR_MASK          (0x0000000FuL << RTC_1_100_YEAR_OFFSET)
 273:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_YEAR_MASK           (0x0000000FuL << RTC_1_10_YEAR_OFFSET)
 274:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_YEAR_MASK              (0x0000000FuL << RTC_1_YEAR_OFFSET)
 275:Generated_Source\PSoC4/RTC_1.h **** 
 276:Generated_Source\PSoC4/RTC_1.h **** #define  RTC_1_MONTH_FULL_MASK       (RTC_1_10_MONTH_MASK  | RTC_1_MONTH_MASK)
 277:Generated_Source\PSoC4/RTC_1.h **** #define  RTC_1_DAY_FULL_MASK         (RTC_1_10_DAY_MASK    | RTC_1_DAY_MASK)
 278:Generated_Source\PSoC4/RTC_1.h **** #define  RTC_1_YEAR_FULL_MASK        (RTC_1_1000_YEAR_MASK | RTC_1_100_YEAR_MASK |\
 279:Generated_Source\PSoC4/RTC_1.h ****                                                  RTC_1_10_YEAR_MASK   | RTC_1_YEAR_MASK)
 280:Generated_Source\PSoC4/RTC_1.h **** 
 281:Generated_Source\PSoC4/RTC_1.h **** 
 282:Generated_Source\PSoC4/RTC_1.h **** /* Definition of time register fields */
 283:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_TIME_FORMAT_OFFSET     (23u)
 284:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_PERIOD_OF_DAY_OFFSET   (22u)
 285:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_HOURS_OFFSET        (20u)
 286:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_OFFSET           (16u)
 287:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_MINUTES_OFFSET      (12u)
 288:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MINUTES_OFFSET         (8u)
 289:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_SECONDS_OFFSET      (4u)
 290:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_OFFSET         (0u)
 291:Generated_Source\PSoC4/RTC_1.h **** 
 292:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_TIME_FORMAT_MASK       (0x00000001uL << RTC_1_TIME_FORMAT_OFFSET)
 293:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_PERIOD_OF_DAY_MASK     (0x00000001uL << RTC_1_PERIOD_OF_DAY_OFFSET)
 294:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_HOURS_MASK          (0x00000003uL << RTC_1_10_HOURS_OFFSET)
 295:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_MASK             (0x0000000FuL << RTC_1_HOURS_OFFSET)
 296:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_MINUTES_MASK        (0x00000007uL << RTC_1_10_MINUTES_OFFSET)
 297:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MINUTES_MASK           (0x0000000FuL << RTC_1_MINUTES_OFFSET)
 298:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_10_SECONDS_MASK        (0x00000007uL << RTC_1_10_SECONDS_OFFSET)
 299:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_MASK           (0x0000000FuL << RTC_1_SECONDS_OFFSET)
 300:Generated_Source\PSoC4/RTC_1.h **** 
 301:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_HOURS_FULL_MASK        (RTC_1_10_HOURS_MASK   | RTC_1_HOURS_MASK)
 302:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_MINUTES_FULL_MASK      (RTC_1_10_MINUTES_MASK | RTC_1_MINUTES_MASK)
 303:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_SECONDS_FULL_MASK      (RTC_1_10_SECONDS_MASK | RTC_1_SECONDS_MASK)
 304:Generated_Source\PSoC4/RTC_1.h **** 
 305:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_SEC_MASK         (0x00000001uL)
 306:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_MIN_MASK         (0x00000002uL)
 307:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_HOUR_MASK        (0x00000004uL)
 308:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_DAYOFWEEK_MASK   (0x00000008uL)
 309:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_DAYOFMONTH_MASK  (0x00000010uL)
 310:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_MONTH_MASK       (0x00000020uL)
 311:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_ALARM_YEAR_MASK        (0x00000040uL)
 312:Generated_Source\PSoC4/RTC_1.h **** 
 313:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_DST_OFFSET      (1u)
 314:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_ALARM_OFFSET    (2u)
 315:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_LY_OFFSET       (3u)
 316:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_AM_PM_OFFSET    (4u)
 317:Generated_Source\PSoC4/RTC_1.h **** 
 318:Generated_Source\PSoC4/RTC_1.h **** /* Definition of the RTC status values. */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 7


 319:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_DST             (1uL << RTC_1_STATUS_DST_OFFSET)
 320:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_LY              (1uL << RTC_1_STATUS_LY_OFFSET)
 321:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_STATUS_AM_PM           (1uL << RTC_1_STATUS_AM_PM_OFFSET)
 322:Generated_Source\PSoC4/RTC_1.h **** 
 323:Generated_Source\PSoC4/RTC_1.h **** /* Number of bits per one BCD digit. */
 324:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_BCD_NUMBER_SIZE        (4u)
 325:Generated_Source\PSoC4/RTC_1.h **** #define RTC_1_BCD_ONE_DIGIT_MASK     (0x0000000FuL)
 326:Generated_Source\PSoC4/RTC_1.h **** 
 327:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 328:Generated_Source\PSoC4/RTC_1.h **** *    Function Prototypes
 329:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 330:Generated_Source\PSoC4/RTC_1.h **** /**
 331:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_api
 332:Generated_Source\PSoC4/RTC_1.h **** * @{
 333:Generated_Source\PSoC4/RTC_1.h **** */
 334:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Start(void);
 335:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Stop(void);
 336:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Init(void);
 337:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetUnixTime(uint64 unixTime);
 338:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_GetUnixTime(void);
 339:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetPeriod(uint32 ticks, uint32 refOneSecTicks);
 340:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetPeriod(void);
 341:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetRefOneSec(void);
 342:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetDateAndTime(uint32 inputTime, uint32 inputDate);
 343:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_GetDateAndTime(RTC_1_DATE_TIME* dateTime);
 344:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetTime(void);
 345:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetDate(void);
 346:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetAlarmDateAndTime(const RTC_1_DATE_TIME* alarmTime);
 347:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_GetAlarmDateAndTime(RTC_1_DATE_TIME* alarmTimeDate);
 348:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetAlarmMask(uint32 mask);
 349:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetAlarmMask(void);
 350:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_ReadStatus(void);
 351:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_GetAlarmStatus(void);
 352:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_ClearAlarmStatus(void);
 353:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetDSTStartTime(const RTC_1_DST_TIME* dstStartTime,
 354:Generated_Source\PSoC4/RTC_1.h ****                                               RTC_1_DST_DATETYPE_ENUM type);
 355:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_SetDSTStopTime(const RTC_1_DST_TIME* dstStopTime,
 356:Generated_Source\PSoC4/RTC_1.h ****                                              RTC_1_DST_DATETYPE_ENUM type);
 357:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_ConvertBCDToDec(uint32 bcdNum);
 358:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_ConvertDecToBCD(uint32 decNum);
 359:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_Update(void);
 360:Generated_Source\PSoC4/RTC_1.h **** void*  RTC_1_SetAlarmHandler(void (*CallbackFunction)(void));
 361:Generated_Source\PSoC4/RTC_1.h **** 
 362:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_ConstructDate(uint32 month, uint32 day, uint32 year);
 363:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint32 min, uin
 364:Generated_Source\PSoC4/RTC_1.h **** /** @} api */
 365:Generated_Source\PSoC4/RTC_1.h **** 
 366:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetTimeFormat(uint32 inputTime);
 367:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetTimeFormat(uint32 inputTime, uint32 timeFormat);
 368:Generated_Source\PSoC4/RTC_1.h **** 
 369:Generated_Source\PSoC4/RTC_1.h **** /**
 370:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_api
 371:Generated_Source\PSoC4/RTC_1.h **** * @{
 372:Generated_Source\PSoC4/RTC_1.h **** */
 373:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_LeapYear(uint32 year);
 374:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_IsBitSet(uint32 var, uint32 mask);
 375:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetSecond(uint32 inputTime);
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 8


 376:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetMinutes(uint32 inputTime);
 377:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetHours(uint32 inputTime);
 378:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetAmPm(uint32 inputTime);
 379:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetDay(uint32 date);
 380:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetMonth(uint32 date);
 381:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetYear(uint32 date);
 382:Generated_Source\PSoC4/RTC_1.h **** /** @} api */
 383:Generated_Source\PSoC4/RTC_1.h **** 
 384:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetSecond(uint32 inputTime, uint32 inputSecond);
 385:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetMinutes(uint32 inputTime, uint32 inputMinute);
 386:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetHours(uint32 inputTime, uint32 inputHours);
 387:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetAmPm(uint32 inputTime, uint32 periodOfDay);
 388:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetDay(uint32 inputDate, uint32 inputDay);
 389:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetMonth(uint32 inputDate, uint32 inputMonth);
 390:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_SetYear(uint32 inputDate, uint32 inputYear);
 391:Generated_Source\PSoC4/RTC_1.h **** 
 392:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_ConstructUnixAlarmTime(const RTC_1_DATE_TIME* alarmTime, uint8 alarmCfgMask);
 393:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_GetDstUnixTime(const RTC_1_DST_TIME* dstTime);
 394:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask);
 395:Generated_Source\PSoC4/RTC_1.h **** 
 396:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextMinSec(uint32 curVal);
 397:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextHour(uint32 curVal);
 398:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 alarmCfgMask)
 399:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextMonth(uint32 curMonth);
 400:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetNextYear(uint32 curYear);
 401:Generated_Source\PSoC4/RTC_1.h **** static uint32 RTC_1_GetDayOfWeek(uint32 day, uint32 month, uint32 year);
 402:Generated_Source\PSoC4/RTC_1.h **** 
 403:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_DaysInMonth(uint32 month, uint32 year);
 404:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_DaysBeforeMonth(uint32 month, uint32 year);
 405:Generated_Source\PSoC4/RTC_1.h **** 
 406:Generated_Source\PSoC4/RTC_1.h **** /**
 407:Generated_Source\PSoC4/RTC_1.h **** * \addtogroup group_api
 408:Generated_Source\PSoC4/RTC_1.h **** * @{
 409:Generated_Source\PSoC4/RTC_1.h **** */
 410:Generated_Source\PSoC4/RTC_1.h **** void   RTC_1_UnixToDateTime(RTC_1_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat);
 411:Generated_Source\PSoC4/RTC_1.h **** uint64 RTC_1_DateTimeToUnix(uint32 inputDate, uint32 inputTime);
 412:Generated_Source\PSoC4/RTC_1.h **** /** @} api */
 413:Generated_Source\PSoC4/RTC_1.h **** 
 414:Generated_Source\PSoC4/RTC_1.h **** uint32 RTC_1_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year);
 415:Generated_Source\PSoC4/RTC_1.h **** 
 416:Generated_Source\PSoC4/RTC_1.h **** 
 417:Generated_Source\PSoC4/RTC_1.h **** #if defined(CYDEV_RTC_SOURCE_WDT)
 418:Generated_Source\PSoC4/RTC_1.h ****     #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE))
 419:Generated_Source\PSoC4/RTC_1.h ****         static void RTC_1_CySysRtcSetCallback(uint32 wdtNumber);
 420:Generated_Source\PSoC4/RTC_1.h ****         static void RTC_1_CySysRtcResetCallback(uint32 wdtNumber);
 421:Generated_Source\PSoC4/RTC_1.h ****     #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE)) */
 422:Generated_Source\PSoC4/RTC_1.h **** #endif /* (CYDEV_RTC_SOURCE_WDT) */
 423:Generated_Source\PSoC4/RTC_1.h **** 
 424:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 425:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_IsBitSet
 426:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 427:Generated_Source\PSoC4/RTC_1.h **** *
 428:Generated_Source\PSoC4/RTC_1.h **** * \brief
 429:Generated_Source\PSoC4/RTC_1.h **** *  Checks the state of a bit passed through parameter.
 430:Generated_Source\PSoC4/RTC_1.h **** *
 431:Generated_Source\PSoC4/RTC_1.h **** * \param
 432:Generated_Source\PSoC4/RTC_1.h **** *  var The variable to be checked.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 9


 433:Generated_Source\PSoC4/RTC_1.h **** * \param
 434:Generated_Source\PSoC4/RTC_1.h **** *  mask The mask for a bit to be checked.
 435:Generated_Source\PSoC4/RTC_1.h **** *
 436:Generated_Source\PSoC4/RTC_1.h **** * \return
 437:Generated_Source\PSoC4/RTC_1.h **** *  0u - Bit is not set.
 438:Generated_Source\PSoC4/RTC_1.h **** * \return
 439:Generated_Source\PSoC4/RTC_1.h **** *  1u - Bit is set.
 440:Generated_Source\PSoC4/RTC_1.h **** *
 441:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 442:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_IsBitSet(uint32 var, uint32 mask)
 443:Generated_Source\PSoC4/RTC_1.h **** {
  25              		.loc 1 443 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 7860     		str	r0, [r7, #4]
  36 0008 3960     		str	r1, [r7]
 444:Generated_Source\PSoC4/RTC_1.h ****     return ((mask == (var & mask)) ? 1Lu : 0Lu);
  37              		.loc 1 444 0
  38 000a 7B68     		ldr	r3, [r7, #4]
  39 000c 3A68     		ldr	r2, [r7]
  40 000e 1A40     		and	r2, r3
  41 0010 3B68     		ldr	r3, [r7]
  42 0012 9A42     		cmp	r2, r3
  43 0014 01D1     		bne	.L2
  44              		.loc 1 444 0 is_stmt 0 discriminator 1
  45 0016 0123     		mov	r3, #1
  46 0018 00E0     		b	.L3
  47              	.L2:
  48              		.loc 1 444 0 discriminator 2
  49 001a 0023     		mov	r3, #0
  50              	.L3:
 445:Generated_Source\PSoC4/RTC_1.h **** }
  51              		.loc 1 445 0 is_stmt 1 discriminator 4
  52 001c 181C     		mov	r0, r3
  53 001e BD46     		mov	sp, r7
  54 0020 02B0     		add	sp, sp, #8
  55              		@ sp needed
  56 0022 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE1:
  59              		.size	RTC_1_IsBitSet, .-RTC_1_IsBitSet
  60              		.global	__aeabi_uidivmod
  61              		.section	.text.RTC_1_LeapYear,"ax",%progbits
  62              		.align	2
  63              		.code	16
  64              		.thumb_func
  65              		.type	RTC_1_LeapYear, %function
  66              	RTC_1_LeapYear:
  67              	.LFB2:
 446:Generated_Source\PSoC4/RTC_1.h **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 10


 447:Generated_Source\PSoC4/RTC_1.h **** 
 448:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 449:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_LeapYear
 450:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 451:Generated_Source\PSoC4/RTC_1.h **** *
 452:Generated_Source\PSoC4/RTC_1.h **** * \brief
 453:Generated_Source\PSoC4/RTC_1.h **** * Checks whether the year passed through the parameter is
 454:Generated_Source\PSoC4/RTC_1.h **** * leap or no.
 455:Generated_Source\PSoC4/RTC_1.h **** *
 456:Generated_Source\PSoC4/RTC_1.h **** * \param
 457:Generated_Source\PSoC4/RTC_1.h **** *  year The year to be checked.
 458:Generated_Source\PSoC4/RTC_1.h **** *
 459:Generated_Source\PSoC4/RTC_1.h **** *
 460:Generated_Source\PSoC4/RTC_1.h **** * \return
 461:Generated_Source\PSoC4/RTC_1.h **** *  0u - The year is not leap.
 462:Generated_Source\PSoC4/RTC_1.h **** * \return
 463:Generated_Source\PSoC4/RTC_1.h **** *  1u - The year is leap.
 464:Generated_Source\PSoC4/RTC_1.h **** *
 465:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 466:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_LeapYear(uint32 year)
 467:Generated_Source\PSoC4/RTC_1.h **** {
  68              		.loc 1 467 0
  69              		.cfi_startproc
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 84B0     		sub	sp, sp, #16
  75              		.cfi_def_cfa_offset 24
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
 468:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 469:Generated_Source\PSoC4/RTC_1.h **** 
 470:Generated_Source\PSoC4/RTC_1.h ****     if(((0u == (year % 4Lu)) && (0u != (year % 100Lu))) || (0u == (year % 400Lu)))
  79              		.loc 1 470 0
  80 0008 7B68     		ldr	r3, [r7, #4]
  81 000a 0322     		mov	r2, #3
  82 000c 1340     		and	r3, r2
  83 000e 06D1     		bne	.L6
  84              		.loc 1 470 0 is_stmt 0 discriminator 1
  85 0010 7B68     		ldr	r3, [r7, #4]
  86 0012 181C     		mov	r0, r3
  87 0014 6421     		mov	r1, #100
  88 0016 FFF7FEFF 		bl	__aeabi_uidivmod
  89 001a 0B1E     		sub	r3, r1, #0
  90 001c 07D1     		bne	.L7
  91              	.L6:
  92              		.loc 1 470 0 discriminator 3
  93 001e 7B68     		ldr	r3, [r7, #4]
  94 0020 181C     		mov	r0, r3
  95 0022 C823     		mov	r3, #200
  96 0024 5900     		lsl	r1, r3, #1
  97 0026 FFF7FEFF 		bl	__aeabi_uidivmod
  98 002a 0B1E     		sub	r3, r1, #0
  99 002c 02D1     		bne	.L8
 100              	.L7:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 11


 471:Generated_Source\PSoC4/RTC_1.h ****     {
 472:Generated_Source\PSoC4/RTC_1.h ****         retVal = 1uL;
 101              		.loc 1 472 0 is_stmt 1
 102 002e 0123     		mov	r3, #1
 103 0030 FB60     		str	r3, [r7, #12]
 104 0032 01E0     		b	.L9
 105              	.L8:
 473:Generated_Source\PSoC4/RTC_1.h ****     }
 474:Generated_Source\PSoC4/RTC_1.h ****     else
 475:Generated_Source\PSoC4/RTC_1.h ****     {
 476:Generated_Source\PSoC4/RTC_1.h ****         retVal = 0uL;
 106              		.loc 1 476 0
 107 0034 0023     		mov	r3, #0
 108 0036 FB60     		str	r3, [r7, #12]
 109              	.L9:
 477:Generated_Source\PSoC4/RTC_1.h ****     }
 478:Generated_Source\PSoC4/RTC_1.h **** 
 479:Generated_Source\PSoC4/RTC_1.h ****     return(retVal);
 110              		.loc 1 479 0
 111 0038 FB68     		ldr	r3, [r7, #12]
 480:Generated_Source\PSoC4/RTC_1.h **** }
 112              		.loc 1 480 0
 113 003a 181C     		mov	r0, r3
 114 003c BD46     		mov	sp, r7
 115 003e 04B0     		add	sp, sp, #16
 116              		@ sp needed
 117 0040 80BD     		pop	{r7, pc}
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	RTC_1_LeapYear, .-RTC_1_LeapYear
 121 0042 C046     		.section	.text.RTC_1_GetSecond,"ax",%progbits
 122              		.align	2
 123              		.code	16
 124              		.thumb_func
 125              		.type	RTC_1_GetSecond, %function
 126              	RTC_1_GetSecond:
 127              	.LFB3:
 481:Generated_Source\PSoC4/RTC_1.h **** 
 482:Generated_Source\PSoC4/RTC_1.h **** 
 483:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 484:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetSecond
 485:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 486:Generated_Source\PSoC4/RTC_1.h **** *
 487:Generated_Source\PSoC4/RTC_1.h **** * \brief
 488:Generated_Source\PSoC4/RTC_1.h **** *  Returns the seconds value from the time value that is passed as a/the parameter.
 489:Generated_Source\PSoC4/RTC_1.h **** *
 490:Generated_Source\PSoC4/RTC_1.h **** * \param
 491:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 492:Generated_Source\PSoC4/RTC_1.h **** *
 493:Generated_Source\PSoC4/RTC_1.h **** * \return
 494:Generated_Source\PSoC4/RTC_1.h **** *  The seconds value.
 495:Generated_Source\PSoC4/RTC_1.h **** *
 496:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 497:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetSecond(uint32 inputTime)
 498:Generated_Source\PSoC4/RTC_1.h **** {
 128              		.loc 1 498 0
 129              		.cfi_startproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 12


 130 0000 80B5     		push	{r7, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 7, -8
 133              		.cfi_offset 14, -4
 134 0002 84B0     		sub	sp, sp, #16
 135              		.cfi_def_cfa_offset 24
 136 0004 00AF     		add	r7, sp, #0
 137              		.cfi_def_cfa_register 7
 138 0006 7860     		str	r0, [r7, #4]
 499:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 500:Generated_Source\PSoC4/RTC_1.h **** 
 501:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((inputTime & RTC_1_10_SECONDS_MASK) >> RTC_1_10_SECONDS_OFFSET) * 10u;
 139              		.loc 1 501 0
 140 0008 7B68     		ldr	r3, [r7, #4]
 141 000a 7022     		mov	r2, #112
 142 000c 1340     		and	r3, r2
 143 000e 1A09     		lsr	r2, r3, #4
 144 0010 131C     		mov	r3, r2
 145 0012 9B00     		lsl	r3, r3, #2
 146 0014 9B18     		add	r3, r3, r2
 147 0016 5B00     		lsl	r3, r3, #1
 148 0018 FB60     		str	r3, [r7, #12]
 502:Generated_Source\PSoC4/RTC_1.h ****     retVal += (inputTime & RTC_1_SECONDS_MASK) >> RTC_1_SECONDS_OFFSET;
 149              		.loc 1 502 0
 150 001a 7B68     		ldr	r3, [r7, #4]
 151 001c 0F22     		mov	r2, #15
 152 001e 1340     		and	r3, r2
 153 0020 FA68     		ldr	r2, [r7, #12]
 154 0022 D318     		add	r3, r2, r3
 155 0024 FB60     		str	r3, [r7, #12]
 503:Generated_Source\PSoC4/RTC_1.h **** 
 504:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 156              		.loc 1 504 0
 157 0026 FB68     		ldr	r3, [r7, #12]
 505:Generated_Source\PSoC4/RTC_1.h **** }
 158              		.loc 1 505 0
 159 0028 181C     		mov	r0, r3
 160 002a BD46     		mov	sp, r7
 161 002c 04B0     		add	sp, sp, #16
 162              		@ sp needed
 163 002e 80BD     		pop	{r7, pc}
 164              		.cfi_endproc
 165              	.LFE3:
 166              		.size	RTC_1_GetSecond, .-RTC_1_GetSecond
 167              		.section	.text.RTC_1_GetMinutes,"ax",%progbits
 168              		.align	2
 169              		.code	16
 170              		.thumb_func
 171              		.type	RTC_1_GetMinutes, %function
 172              	RTC_1_GetMinutes:
 173              	.LFB4:
 506:Generated_Source\PSoC4/RTC_1.h **** 
 507:Generated_Source\PSoC4/RTC_1.h **** 
 508:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 509:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetMinutes
 510:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 511:Generated_Source\PSoC4/RTC_1.h **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 13


 512:Generated_Source\PSoC4/RTC_1.h **** * \brief
 513:Generated_Source\PSoC4/RTC_1.h **** *  Returns the minutes value from the time value that is passed as a/the 
 514:Generated_Source\PSoC4/RTC_1.h **** * parameter.
 515:Generated_Source\PSoC4/RTC_1.h **** *
 516:Generated_Source\PSoC4/RTC_1.h **** * \param
 517:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 518:Generated_Source\PSoC4/RTC_1.h **** *
 519:Generated_Source\PSoC4/RTC_1.h **** * \return
 520:Generated_Source\PSoC4/RTC_1.h **** *  The minutes value.
 521:Generated_Source\PSoC4/RTC_1.h **** *
 522:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 523:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetMinutes(uint32 inputTime)
 524:Generated_Source\PSoC4/RTC_1.h **** {
 174              		.loc 1 524 0
 175              		.cfi_startproc
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 84B0     		sub	sp, sp, #16
 181              		.cfi_def_cfa_offset 24
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 525:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 526:Generated_Source\PSoC4/RTC_1.h **** 
 527:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((inputTime & RTC_1_10_MINUTES_MASK) >> RTC_1_10_MINUTES_OFFSET) * 10u;
 185              		.loc 1 527 0
 186 0008 7A68     		ldr	r2, [r7, #4]
 187 000a E023     		mov	r3, #224
 188 000c DB01     		lsl	r3, r3, #7
 189 000e 1340     		and	r3, r2
 190 0010 1A0B     		lsr	r2, r3, #12
 191 0012 131C     		mov	r3, r2
 192 0014 9B00     		lsl	r3, r3, #2
 193 0016 9B18     		add	r3, r3, r2
 194 0018 5B00     		lsl	r3, r3, #1
 195 001a FB60     		str	r3, [r7, #12]
 528:Generated_Source\PSoC4/RTC_1.h ****     retVal += (inputTime & RTC_1_MINUTES_MASK) >> RTC_1_MINUTES_OFFSET;
 196              		.loc 1 528 0
 197 001c 7A68     		ldr	r2, [r7, #4]
 198 001e F023     		mov	r3, #240
 199 0020 1B01     		lsl	r3, r3, #4
 200 0022 1340     		and	r3, r2
 201 0024 1B0A     		lsr	r3, r3, #8
 202 0026 FA68     		ldr	r2, [r7, #12]
 203 0028 D318     		add	r3, r2, r3
 204 002a FB60     		str	r3, [r7, #12]
 529:Generated_Source\PSoC4/RTC_1.h **** 
 530:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 205              		.loc 1 530 0
 206 002c FB68     		ldr	r3, [r7, #12]
 531:Generated_Source\PSoC4/RTC_1.h **** }
 207              		.loc 1 531 0
 208 002e 181C     		mov	r0, r3
 209 0030 BD46     		mov	sp, r7
 210 0032 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 14


 211              		@ sp needed
 212 0034 80BD     		pop	{r7, pc}
 213              		.cfi_endproc
 214              	.LFE4:
 215              		.size	RTC_1_GetMinutes, .-RTC_1_GetMinutes
 216 0036 C046     		.section	.text.RTC_1_GetHours,"ax",%progbits
 217              		.align	2
 218              		.code	16
 219              		.thumb_func
 220              		.type	RTC_1_GetHours, %function
 221              	RTC_1_GetHours:
 222              	.LFB5:
 532:Generated_Source\PSoC4/RTC_1.h **** 
 533:Generated_Source\PSoC4/RTC_1.h **** 
 534:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 535:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetHours
 536:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 537:Generated_Source\PSoC4/RTC_1.h **** *
 538:Generated_Source\PSoC4/RTC_1.h **** * \brief
 539:Generated_Source\PSoC4/RTC_1.h **** *  Returns the hours value from the time value that is passed as a/the parameter.
 540:Generated_Source\PSoC4/RTC_1.h **** *
 541:Generated_Source\PSoC4/RTC_1.h **** * \param
 542:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 543:Generated_Source\PSoC4/RTC_1.h **** *
 544:Generated_Source\PSoC4/RTC_1.h **** * \return
 545:Generated_Source\PSoC4/RTC_1.h **** *  The hours value.
 546:Generated_Source\PSoC4/RTC_1.h **** *
 547:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 548:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetHours(uint32 inputTime)
 549:Generated_Source\PSoC4/RTC_1.h **** {
 223              		.loc 1 549 0
 224              		.cfi_startproc
 225 0000 80B5     		push	{r7, lr}
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 84B0     		sub	sp, sp, #16
 230              		.cfi_def_cfa_offset 24
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 550:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 551:Generated_Source\PSoC4/RTC_1.h **** 
 552:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((inputTime & RTC_1_10_HOURS_MASK) >> RTC_1_10_HOURS_OFFSET) * 10u;
 234              		.loc 1 552 0
 235 0008 7A68     		ldr	r2, [r7, #4]
 236 000a C023     		mov	r3, #192
 237 000c 9B03     		lsl	r3, r3, #14
 238 000e 1340     		and	r3, r2
 239 0010 1A0D     		lsr	r2, r3, #20
 240 0012 131C     		mov	r3, r2
 241 0014 9B00     		lsl	r3, r3, #2
 242 0016 9B18     		add	r3, r3, r2
 243 0018 5B00     		lsl	r3, r3, #1
 244 001a FB60     		str	r3, [r7, #12]
 553:Generated_Source\PSoC4/RTC_1.h ****     retVal += (inputTime & RTC_1_HOURS_MASK) >> RTC_1_HOURS_OFFSET;
 245              		.loc 1 553 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 15


 246 001c 7A68     		ldr	r2, [r7, #4]
 247 001e F023     		mov	r3, #240
 248 0020 1B03     		lsl	r3, r3, #12
 249 0022 1340     		and	r3, r2
 250 0024 1B0C     		lsr	r3, r3, #16
 251 0026 FA68     		ldr	r2, [r7, #12]
 252 0028 D318     		add	r3, r2, r3
 253 002a FB60     		str	r3, [r7, #12]
 554:Generated_Source\PSoC4/RTC_1.h **** 
 555:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 254              		.loc 1 555 0
 255 002c FB68     		ldr	r3, [r7, #12]
 556:Generated_Source\PSoC4/RTC_1.h **** }
 256              		.loc 1 556 0
 257 002e 181C     		mov	r0, r3
 258 0030 BD46     		mov	sp, r7
 259 0032 04B0     		add	sp, sp, #16
 260              		@ sp needed
 261 0034 80BD     		pop	{r7, pc}
 262              		.cfi_endproc
 263              	.LFE5:
 264              		.size	RTC_1_GetHours, .-RTC_1_GetHours
 265 0036 C046     		.section	.text.RTC_1_GetAmPm,"ax",%progbits
 266              		.align	2
 267              		.code	16
 268              		.thumb_func
 269              		.type	RTC_1_GetAmPm, %function
 270              	RTC_1_GetAmPm:
 271              	.LFB6:
 557:Generated_Source\PSoC4/RTC_1.h **** 
 558:Generated_Source\PSoC4/RTC_1.h **** 
 559:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 560:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetAmPm
 561:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 562:Generated_Source\PSoC4/RTC_1.h **** *
 563:Generated_Source\PSoC4/RTC_1.h **** * \brief
 564:Generated_Source\PSoC4/RTC_1.h **** *  Returns the AM/PM status from the time value that is passed as parameter.
 565:Generated_Source\PSoC4/RTC_1.h **** *
 566:Generated_Source\PSoC4/RTC_1.h **** * \param
 567:Generated_Source\PSoC4/RTC_1.h **** *  time The time value.
 568:Generated_Source\PSoC4/RTC_1.h **** *
 569:Generated_Source\PSoC4/RTC_1.h **** * \return
 570:Generated_Source\PSoC4/RTC_1.h **** *  RTC_1_AM - AM.
 571:Generated_Source\PSoC4/RTC_1.h **** * \return
 572:Generated_Source\PSoC4/RTC_1.h **** *  RTC_1_PM - PM.
 573:Generated_Source\PSoC4/RTC_1.h **** *
 574:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 575:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetAmPm(uint32 inputTime)
 576:Generated_Source\PSoC4/RTC_1.h **** {
 272              		.loc 1 576 0
 273              		.cfi_startproc
 274 0000 80B5     		push	{r7, lr}
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 16


 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 282 0006 7860     		str	r0, [r7, #4]
 577:Generated_Source\PSoC4/RTC_1.h ****     return (RTC_1_IsBitSet(inputTime, RTC_1_PERIOD_OF_DAY_MASK));
 283              		.loc 1 577 0
 284 0008 7A68     		ldr	r2, [r7, #4]
 285 000a 8023     		mov	r3, #128
 286 000c DB03     		lsl	r3, r3, #15
 287 000e 101C     		mov	r0, r2
 288 0010 191C     		mov	r1, r3
 289 0012 FFF7FEFF 		bl	RTC_1_IsBitSet
 290 0016 031C     		mov	r3, r0
 578:Generated_Source\PSoC4/RTC_1.h **** }
 291              		.loc 1 578 0
 292 0018 181C     		mov	r0, r3
 293 001a BD46     		mov	sp, r7
 294 001c 02B0     		add	sp, sp, #8
 295              		@ sp needed
 296 001e 80BD     		pop	{r7, pc}
 297              		.cfi_endproc
 298              	.LFE6:
 299              		.size	RTC_1_GetAmPm, .-RTC_1_GetAmPm
 300              		.section	.text.RTC_1_GetDay,"ax",%progbits
 301              		.align	2
 302              		.code	16
 303              		.thumb_func
 304              		.type	RTC_1_GetDay, %function
 305              	RTC_1_GetDay:
 306              	.LFB7:
 579:Generated_Source\PSoC4/RTC_1.h **** 
 580:Generated_Source\PSoC4/RTC_1.h **** 
 581:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 582:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetDay
 583:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 584:Generated_Source\PSoC4/RTC_1.h **** *
 585:Generated_Source\PSoC4/RTC_1.h **** * \brief
 586:Generated_Source\PSoC4/RTC_1.h **** *  Returns the day value from the date value that is passed as parameter.
 587:Generated_Source\PSoC4/RTC_1.h **** *
 588:Generated_Source\PSoC4/RTC_1.h **** * \param
 589:Generated_Source\PSoC4/RTC_1.h **** *  date The date value.
 590:Generated_Source\PSoC4/RTC_1.h **** *
 591:Generated_Source\PSoC4/RTC_1.h **** * \return
 592:Generated_Source\PSoC4/RTC_1.h **** *  The day value.
 593:Generated_Source\PSoC4/RTC_1.h **** *
 594:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 595:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetDay(uint32 date)
 596:Generated_Source\PSoC4/RTC_1.h **** {
 307              		.loc 1 596 0
 308              		.cfi_startproc
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 84B0     		sub	sp, sp, #16
 314              		.cfi_def_cfa_offset 24
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 17


 317 0006 7860     		str	r0, [r7, #4]
 597:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 598:Generated_Source\PSoC4/RTC_1.h **** 
 599:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((date & RTC_1_10_DAY_MASK) >> RTC_1_10_DAY_OFFSET) * 10u;
 318              		.loc 1 599 0
 319 0008 7A68     		ldr	r2, [r7, #4]
 320 000a C023     		mov	r3, #192
 321 000c 9B03     		lsl	r3, r3, #14
 322 000e 1340     		and	r3, r2
 323 0010 1A0D     		lsr	r2, r3, #20
 324 0012 131C     		mov	r3, r2
 325 0014 9B00     		lsl	r3, r3, #2
 326 0016 9B18     		add	r3, r3, r2
 327 0018 5B00     		lsl	r3, r3, #1
 328 001a FB60     		str	r3, [r7, #12]
 600:Generated_Source\PSoC4/RTC_1.h ****     retVal += (date & RTC_1_DAY_MASK) >> RTC_1_DAY_OFFSET;
 329              		.loc 1 600 0
 330 001c 7A68     		ldr	r2, [r7, #4]
 331 001e F023     		mov	r3, #240
 332 0020 1B03     		lsl	r3, r3, #12
 333 0022 1340     		and	r3, r2
 334 0024 1B0C     		lsr	r3, r3, #16
 335 0026 FA68     		ldr	r2, [r7, #12]
 336 0028 D318     		add	r3, r2, r3
 337 002a FB60     		str	r3, [r7, #12]
 601:Generated_Source\PSoC4/RTC_1.h **** 
 602:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 338              		.loc 1 602 0
 339 002c FB68     		ldr	r3, [r7, #12]
 603:Generated_Source\PSoC4/RTC_1.h **** }
 340              		.loc 1 603 0
 341 002e 181C     		mov	r0, r3
 342 0030 BD46     		mov	sp, r7
 343 0032 04B0     		add	sp, sp, #16
 344              		@ sp needed
 345 0034 80BD     		pop	{r7, pc}
 346              		.cfi_endproc
 347              	.LFE7:
 348              		.size	RTC_1_GetDay, .-RTC_1_GetDay
 349 0036 C046     		.section	.text.RTC_1_GetMonth,"ax",%progbits
 350              		.align	2
 351              		.code	16
 352              		.thumb_func
 353              		.type	RTC_1_GetMonth, %function
 354              	RTC_1_GetMonth:
 355              	.LFB8:
 604:Generated_Source\PSoC4/RTC_1.h **** 
 605:Generated_Source\PSoC4/RTC_1.h **** 
 606:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 607:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetMonth
 608:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 609:Generated_Source\PSoC4/RTC_1.h **** *
 610:Generated_Source\PSoC4/RTC_1.h **** * \brief
 611:Generated_Source\PSoC4/RTC_1.h **** *  Returns the month value from the date value that is passed as parameter.
 612:Generated_Source\PSoC4/RTC_1.h **** *
 613:Generated_Source\PSoC4/RTC_1.h **** * \param
 614:Generated_Source\PSoC4/RTC_1.h **** *  date The date value.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 18


 615:Generated_Source\PSoC4/RTC_1.h **** *
 616:Generated_Source\PSoC4/RTC_1.h **** * \return
 617:Generated_Source\PSoC4/RTC_1.h **** *  The month value.
 618:Generated_Source\PSoC4/RTC_1.h **** *
 619:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 620:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetMonth(uint32 date)
 621:Generated_Source\PSoC4/RTC_1.h **** {
 356              		.loc 1 621 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 84B0     		sub	sp, sp, #16
 363              		.cfi_def_cfa_offset 24
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 622:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 623:Generated_Source\PSoC4/RTC_1.h **** 
 624:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((date & RTC_1_10_MONTH_MASK) >> RTC_1_10_MONTH_OFFSET) * 10u;
 367              		.loc 1 624 0
 368 0008 7A68     		ldr	r2, [r7, #4]
 369 000a 8023     		mov	r3, #128
 370 000c 5B05     		lsl	r3, r3, #21
 371 000e 1340     		and	r3, r2
 372 0010 1A0F     		lsr	r2, r3, #28
 373 0012 131C     		mov	r3, r2
 374 0014 9B00     		lsl	r3, r3, #2
 375 0016 9B18     		add	r3, r3, r2
 376 0018 5B00     		lsl	r3, r3, #1
 377 001a FB60     		str	r3, [r7, #12]
 625:Generated_Source\PSoC4/RTC_1.h ****     retVal += (date & RTC_1_MONTH_MASK) >> RTC_1_MONTH_OFFSET;
 378              		.loc 1 625 0
 379 001c 7A68     		ldr	r2, [r7, #4]
 380 001e F023     		mov	r3, #240
 381 0020 1B05     		lsl	r3, r3, #20
 382 0022 1340     		and	r3, r2
 383 0024 1B0E     		lsr	r3, r3, #24
 384 0026 FA68     		ldr	r2, [r7, #12]
 385 0028 D318     		add	r3, r2, r3
 386 002a FB60     		str	r3, [r7, #12]
 626:Generated_Source\PSoC4/RTC_1.h **** 
 627:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 387              		.loc 1 627 0
 388 002c FB68     		ldr	r3, [r7, #12]
 628:Generated_Source\PSoC4/RTC_1.h **** }
 389              		.loc 1 628 0
 390 002e 181C     		mov	r0, r3
 391 0030 BD46     		mov	sp, r7
 392 0032 04B0     		add	sp, sp, #16
 393              		@ sp needed
 394 0034 80BD     		pop	{r7, pc}
 395              		.cfi_endproc
 396              	.LFE8:
 397              		.size	RTC_1_GetMonth, .-RTC_1_GetMonth
 398 0036 C046     		.section	.text.RTC_1_GetYear,"ax",%progbits
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 19


 399              		.align	2
 400              		.code	16
 401              		.thumb_func
 402              		.type	RTC_1_GetYear, %function
 403              	RTC_1_GetYear:
 404              	.LFB9:
 629:Generated_Source\PSoC4/RTC_1.h **** 
 630:Generated_Source\PSoC4/RTC_1.h **** 
 631:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 632:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetYear
 633:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 634:Generated_Source\PSoC4/RTC_1.h **** *
 635:Generated_Source\PSoC4/RTC_1.h **** * \brief
 636:Generated_Source\PSoC4/RTC_1.h **** *  Returns the year value from the date value that is passed as parameter.
 637:Generated_Source\PSoC4/RTC_1.h **** *
 638:Generated_Source\PSoC4/RTC_1.h **** * \param
 639:Generated_Source\PSoC4/RTC_1.h **** *  date The date value.
 640:Generated_Source\PSoC4/RTC_1.h **** *
 641:Generated_Source\PSoC4/RTC_1.h **** * \return
 642:Generated_Source\PSoC4/RTC_1.h **** *  The year value.
 643:Generated_Source\PSoC4/RTC_1.h **** *
 644:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 645:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetYear(uint32 date)
 646:Generated_Source\PSoC4/RTC_1.h **** {
 405              		.loc 1 646 0
 406              		.cfi_startproc
 407 0000 80B5     		push	{r7, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 7, -8
 410              		.cfi_offset 14, -4
 411 0002 84B0     		sub	sp, sp, #16
 412              		.cfi_def_cfa_offset 24
 413 0004 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 415 0006 7860     		str	r0, [r7, #4]
 647:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
 648:Generated_Source\PSoC4/RTC_1.h **** 
 649:Generated_Source\PSoC4/RTC_1.h ****     retVal  = ((date & RTC_1_1000_YEAR_MASK) >> RTC_1_1000_YEAR_OFFSET) * 1000u;
 416              		.loc 1 649 0
 417 0008 7A68     		ldr	r2, [r7, #4]
 418 000a C023     		mov	r3, #192
 419 000c 9B01     		lsl	r3, r3, #6
 420 000e 1340     		and	r3, r2
 421 0010 1B0B     		lsr	r3, r3, #12
 422 0012 FA22     		mov	r2, #250
 423 0014 9200     		lsl	r2, r2, #2
 424 0016 5343     		mul	r3, r2
 425 0018 FB60     		str	r3, [r7, #12]
 650:Generated_Source\PSoC4/RTC_1.h ****     retVal += ((date & RTC_1_100_YEAR_MASK) >> RTC_1_100_YEAR_OFFSET) * 100u;
 426              		.loc 1 650 0
 427 001a 7A68     		ldr	r2, [r7, #4]
 428 001c F023     		mov	r3, #240
 429 001e 1B01     		lsl	r3, r3, #4
 430 0020 1340     		and	r3, r2
 431 0022 1B0A     		lsr	r3, r3, #8
 432 0024 6422     		mov	r2, #100
 433 0026 5343     		mul	r3, r2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 20


 434 0028 FA68     		ldr	r2, [r7, #12]
 435 002a D318     		add	r3, r2, r3
 436 002c FB60     		str	r3, [r7, #12]
 651:Generated_Source\PSoC4/RTC_1.h ****     retVal += ((date & RTC_1_10_YEAR_MASK) >> RTC_1_10_YEAR_OFFSET) * 10u;
 437              		.loc 1 651 0
 438 002e 7B68     		ldr	r3, [r7, #4]
 439 0030 F022     		mov	r2, #240
 440 0032 1340     		and	r3, r2
 441 0034 1A09     		lsr	r2, r3, #4
 442 0036 131C     		mov	r3, r2
 443 0038 9B00     		lsl	r3, r3, #2
 444 003a 9B18     		add	r3, r3, r2
 445 003c 5B00     		lsl	r3, r3, #1
 446 003e 1A1C     		mov	r2, r3
 447 0040 FB68     		ldr	r3, [r7, #12]
 448 0042 9B18     		add	r3, r3, r2
 449 0044 FB60     		str	r3, [r7, #12]
 652:Generated_Source\PSoC4/RTC_1.h ****     retVal += (date & RTC_1_YEAR_MASK) >> RTC_1_YEAR_OFFSET;
 450              		.loc 1 652 0
 451 0046 7B68     		ldr	r3, [r7, #4]
 452 0048 0F22     		mov	r2, #15
 453 004a 1340     		and	r3, r2
 454 004c FA68     		ldr	r2, [r7, #12]
 455 004e D318     		add	r3, r2, r3
 456 0050 FB60     		str	r3, [r7, #12]
 653:Generated_Source\PSoC4/RTC_1.h **** 
 654:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 457              		.loc 1 654 0
 458 0052 FB68     		ldr	r3, [r7, #12]
 655:Generated_Source\PSoC4/RTC_1.h **** }
 459              		.loc 1 655 0
 460 0054 181C     		mov	r0, r3
 461 0056 BD46     		mov	sp, r7
 462 0058 04B0     		add	sp, sp, #16
 463              		@ sp needed
 464 005a 80BD     		pop	{r7, pc}
 465              		.cfi_endproc
 466              	.LFE9:
 467              		.size	RTC_1_GetYear, .-RTC_1_GetYear
 468              		.global	__aeabi_uidiv
 469              		.section	.text.RTC_1_SetSecond,"ax",%progbits
 470              		.align	2
 471              		.code	16
 472              		.thumb_func
 473              		.type	RTC_1_SetSecond, %function
 474              	RTC_1_SetSecond:
 475              	.LFB10:
 656:Generated_Source\PSoC4/RTC_1.h **** 
 657:Generated_Source\PSoC4/RTC_1.h **** 
 658:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 659:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetSecond
 660:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 661:Generated_Source\PSoC4/RTC_1.h **** *\internal
 662:Generated_Source\PSoC4/RTC_1.h **** * \brief
 663:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time with the new second value.
 664:Generated_Source\PSoC4/RTC_1.h **** *
 665:Generated_Source\PSoC4/RTC_1.h **** * \param
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 21


 666:Generated_Source\PSoC4/RTC_1.h **** * time The current date.
 667:Generated_Source\PSoC4/RTC_1.h **** * \param
 668:Generated_Source\PSoC4/RTC_1.h **** * second The seconds value to be set to the time variable.
 669:Generated_Source\PSoC4/RTC_1.h **** *
 670:Generated_Source\PSoC4/RTC_1.h **** * \return
 671:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 672:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 673:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 674:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetSecond(uint32 inputTime, uint32 inputSecond)
 675:Generated_Source\PSoC4/RTC_1.h **** {
 476              		.loc 1 675 0
 477              		.cfi_startproc
 478 0000 80B5     		push	{r7, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 82B0     		sub	sp, sp, #8
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_def_cfa_register 7
 486 0006 7860     		str	r0, [r7, #4]
 487 0008 3960     		str	r1, [r7]
 676:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_SECONDS_FULL_MASK);
 488              		.loc 1 676 0
 489 000a 7B68     		ldr	r3, [r7, #4]
 490 000c 7F22     		mov	r2, #127
 491 000e 9343     		bic	r3, r2
 492 0010 7B60     		str	r3, [r7, #4]
 677:Generated_Source\PSoC4/RTC_1.h **** 
 678:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputSecond / 10u) << RTC_1_10_SECONDS_OFFSET;
 493              		.loc 1 678 0
 494 0012 3B68     		ldr	r3, [r7]
 495 0014 181C     		mov	r0, r3
 496 0016 0A21     		mov	r1, #10
 497 0018 FFF7FEFF 		bl	__aeabi_uidiv
 498 001c 031C     		mov	r3, r0
 499 001e 1B01     		lsl	r3, r3, #4
 500 0020 7A68     		ldr	r2, [r7, #4]
 501 0022 1343     		orr	r3, r2
 502 0024 7B60     		str	r3, [r7, #4]
 679:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputSecond % 10u) << RTC_1_SECONDS_OFFSET;
 503              		.loc 1 679 0
 504 0026 3B68     		ldr	r3, [r7]
 505 0028 181C     		mov	r0, r3
 506 002a 0A21     		mov	r1, #10
 507 002c FFF7FEFF 		bl	__aeabi_uidivmod
 508 0030 0B1C     		mov	r3, r1
 509 0032 1A1C     		mov	r2, r3
 510 0034 7B68     		ldr	r3, [r7, #4]
 511 0036 1343     		orr	r3, r2
 512 0038 7B60     		str	r3, [r7, #4]
 680:Generated_Source\PSoC4/RTC_1.h **** 
 681:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 513              		.loc 1 681 0
 514 003a 7B68     		ldr	r3, [r7, #4]
 682:Generated_Source\PSoC4/RTC_1.h **** }
 515              		.loc 1 682 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 22


 516 003c 181C     		mov	r0, r3
 517 003e BD46     		mov	sp, r7
 518 0040 02B0     		add	sp, sp, #8
 519              		@ sp needed
 520 0042 80BD     		pop	{r7, pc}
 521              		.cfi_endproc
 522              	.LFE10:
 523              		.size	RTC_1_SetSecond, .-RTC_1_SetSecond
 524              		.section	.text.RTC_1_SetMinutes,"ax",%progbits
 525              		.align	2
 526              		.code	16
 527              		.thumb_func
 528              		.type	RTC_1_SetMinutes, %function
 529              	RTC_1_SetMinutes:
 530              	.LFB11:
 683:Generated_Source\PSoC4/RTC_1.h **** 
 684:Generated_Source\PSoC4/RTC_1.h **** 
 685:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 686:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetMinutes
 687:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 688:Generated_Source\PSoC4/RTC_1.h **** *\internal
 689:Generated_Source\PSoC4/RTC_1.h **** * \brief
 690:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time with the new minute value.
 691:Generated_Source\PSoC4/RTC_1.h **** *
 692:Generated_Source\PSoC4/RTC_1.h **** * \param
 693:Generated_Source\PSoC4/RTC_1.h **** *  time The current date.
 694:Generated_Source\PSoC4/RTC_1.h **** * \param
 695:Generated_Source\PSoC4/RTC_1.h **** *  minutes The minutes value to be set to the time variable.
 696:Generated_Source\PSoC4/RTC_1.h **** *
 697:Generated_Source\PSoC4/RTC_1.h **** * \return
 698:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 699:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 700:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 701:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetMinutes(uint32 inputTime, uint32 inputMinute)
 702:Generated_Source\PSoC4/RTC_1.h **** {
 531              		.loc 1 702 0
 532              		.cfi_startproc
 533 0000 80B5     		push	{r7, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 82B0     		sub	sp, sp, #8
 538              		.cfi_def_cfa_offset 16
 539 0004 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 541 0006 7860     		str	r0, [r7, #4]
 542 0008 3960     		str	r1, [r7]
 703:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_MINUTES_FULL_MASK);
 543              		.loc 1 703 0
 544 000a 7B68     		ldr	r3, [r7, #4]
 545 000c 0D4A     		ldr	r2, .L29
 546 000e 1340     		and	r3, r2
 547 0010 7B60     		str	r3, [r7, #4]
 704:Generated_Source\PSoC4/RTC_1.h **** 
 705:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputMinute / 10u) << RTC_1_10_MINUTES_OFFSET;
 548              		.loc 1 705 0
 549 0012 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 23


 550 0014 181C     		mov	r0, r3
 551 0016 0A21     		mov	r1, #10
 552 0018 FFF7FEFF 		bl	__aeabi_uidiv
 553 001c 031C     		mov	r3, r0
 554 001e 1B03     		lsl	r3, r3, #12
 555 0020 7A68     		ldr	r2, [r7, #4]
 556 0022 1343     		orr	r3, r2
 557 0024 7B60     		str	r3, [r7, #4]
 706:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputMinute % 10u) << RTC_1_MINUTES_OFFSET;
 558              		.loc 1 706 0
 559 0026 3B68     		ldr	r3, [r7]
 560 0028 181C     		mov	r0, r3
 561 002a 0A21     		mov	r1, #10
 562 002c FFF7FEFF 		bl	__aeabi_uidivmod
 563 0030 0B1C     		mov	r3, r1
 564 0032 1B02     		lsl	r3, r3, #8
 565 0034 7A68     		ldr	r2, [r7, #4]
 566 0036 1343     		orr	r3, r2
 567 0038 7B60     		str	r3, [r7, #4]
 707:Generated_Source\PSoC4/RTC_1.h **** 
 708:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 568              		.loc 1 708 0
 569 003a 7B68     		ldr	r3, [r7, #4]
 709:Generated_Source\PSoC4/RTC_1.h **** }
 570              		.loc 1 709 0
 571 003c 181C     		mov	r0, r3
 572 003e BD46     		mov	sp, r7
 573 0040 02B0     		add	sp, sp, #8
 574              		@ sp needed
 575 0042 80BD     		pop	{r7, pc}
 576              	.L30:
 577              		.align	2
 578              	.L29:
 579 0044 FF80FFFF 		.word	-32513
 580              		.cfi_endproc
 581              	.LFE11:
 582              		.size	RTC_1_SetMinutes, .-RTC_1_SetMinutes
 583              		.section	.text.RTC_1_SetHours,"ax",%progbits
 584              		.align	2
 585              		.code	16
 586              		.thumb_func
 587              		.type	RTC_1_SetHours, %function
 588              	RTC_1_SetHours:
 589              	.LFB12:
 710:Generated_Source\PSoC4/RTC_1.h **** 
 711:Generated_Source\PSoC4/RTC_1.h **** 
 712:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 713:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetHours
 714:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 715:Generated_Source\PSoC4/RTC_1.h **** *\internal
 716:Generated_Source\PSoC4/RTC_1.h **** * \brief
 717:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time with the new hour value.
 718:Generated_Source\PSoC4/RTC_1.h **** *
 719:Generated_Source\PSoC4/RTC_1.h **** * \param
 720:Generated_Source\PSoC4/RTC_1.h **** * time The current date.
 721:Generated_Source\PSoC4/RTC_1.h **** * \param
 722:Generated_Source\PSoC4/RTC_1.h **** * hours The hours value to be set to the time variable.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 24


 723:Generated_Source\PSoC4/RTC_1.h **** *
 724:Generated_Source\PSoC4/RTC_1.h **** * \return
 725:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 726:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 727:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 728:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetHours(uint32 inputTime, uint32 inputHours)
 729:Generated_Source\PSoC4/RTC_1.h **** {
 590              		.loc 1 729 0
 591              		.cfi_startproc
 592 0000 80B5     		push	{r7, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 82B0     		sub	sp, sp, #8
 597              		.cfi_def_cfa_offset 16
 598 0004 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
 600 0006 7860     		str	r0, [r7, #4]
 601 0008 3960     		str	r1, [r7]
 730:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_HOURS_FULL_MASK);
 602              		.loc 1 730 0
 603 000a 7B68     		ldr	r3, [r7, #4]
 604 000c 0D4A     		ldr	r2, .L33
 605 000e 1340     		and	r3, r2
 606 0010 7B60     		str	r3, [r7, #4]
 731:Generated_Source\PSoC4/RTC_1.h **** 
 732:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputHours / 10u) << RTC_1_10_HOURS_OFFSET;
 607              		.loc 1 732 0
 608 0012 3B68     		ldr	r3, [r7]
 609 0014 181C     		mov	r0, r3
 610 0016 0A21     		mov	r1, #10
 611 0018 FFF7FEFF 		bl	__aeabi_uidiv
 612 001c 031C     		mov	r3, r0
 613 001e 1B05     		lsl	r3, r3, #20
 614 0020 7A68     		ldr	r2, [r7, #4]
 615 0022 1343     		orr	r3, r2
 616 0024 7B60     		str	r3, [r7, #4]
 733:Generated_Source\PSoC4/RTC_1.h ****     inputTime |= (inputHours % 10u) << RTC_1_HOURS_OFFSET;
 617              		.loc 1 733 0
 618 0026 3B68     		ldr	r3, [r7]
 619 0028 181C     		mov	r0, r3
 620 002a 0A21     		mov	r1, #10
 621 002c FFF7FEFF 		bl	__aeabi_uidivmod
 622 0030 0B1C     		mov	r3, r1
 623 0032 1B04     		lsl	r3, r3, #16
 624 0034 7A68     		ldr	r2, [r7, #4]
 625 0036 1343     		orr	r3, r2
 626 0038 7B60     		str	r3, [r7, #4]
 734:Generated_Source\PSoC4/RTC_1.h **** 
 735:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 627              		.loc 1 735 0
 628 003a 7B68     		ldr	r3, [r7, #4]
 736:Generated_Source\PSoC4/RTC_1.h **** }
 629              		.loc 1 736 0
 630 003c 181C     		mov	r0, r3
 631 003e BD46     		mov	sp, r7
 632 0040 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 25


 633              		@ sp needed
 634 0042 80BD     		pop	{r7, pc}
 635              	.L34:
 636              		.align	2
 637              	.L33:
 638 0044 FFFFC0FF 		.word	-4128769
 639              		.cfi_endproc
 640              	.LFE12:
 641              		.size	RTC_1_SetHours, .-RTC_1_SetHours
 642              		.section	.text.RTC_1_SetDay,"ax",%progbits
 643              		.align	2
 644              		.code	16
 645              		.thumb_func
 646              		.type	RTC_1_SetDay, %function
 647              	RTC_1_SetDay:
 648              	.LFB14:
 737:Generated_Source\PSoC4/RTC_1.h **** 
 738:Generated_Source\PSoC4/RTC_1.h **** 
 739:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 740:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetAmPm
 741:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 742:Generated_Source\PSoC4/RTC_1.h **** *\internal
 743:Generated_Source\PSoC4/RTC_1.h **** * \brief
 744:Generated_Source\PSoC4/RTC_1.h **** *  Updates the time variable with the AmPm status.
 745:Generated_Source\PSoC4/RTC_1.h **** *
 746:Generated_Source\PSoC4/RTC_1.h **** * \param
 747:Generated_Source\PSoC4/RTC_1.h **** * time The current date.
 748:Generated_Source\PSoC4/RTC_1.h **** * \param
 749:Generated_Source\PSoC4/RTC_1.h **** * periodOfDay The AmPm status to be set to the time variable.
 750:Generated_Source\PSoC4/RTC_1.h **** *
 751:Generated_Source\PSoC4/RTC_1.h **** * \return
 752:Generated_Source\PSoC4/RTC_1.h **** *  The updated time variable.
 753:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 754:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 755:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetAmPm(uint32 inputTime, uint32 periodOfDay)
 756:Generated_Source\PSoC4/RTC_1.h **** {
 757:Generated_Source\PSoC4/RTC_1.h ****     if(0u != periodOfDay)
 758:Generated_Source\PSoC4/RTC_1.h ****     {
 759:Generated_Source\PSoC4/RTC_1.h ****         inputTime &= ~(RTC_1_PERIOD_OF_DAY_MASK);
 760:Generated_Source\PSoC4/RTC_1.h ****     }
 761:Generated_Source\PSoC4/RTC_1.h ****     else
 762:Generated_Source\PSoC4/RTC_1.h ****     {
 763:Generated_Source\PSoC4/RTC_1.h ****         inputTime |= RTC_1_PERIOD_OF_DAY_MASK;
 764:Generated_Source\PSoC4/RTC_1.h ****     }
 765:Generated_Source\PSoC4/RTC_1.h **** 
 766:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
 767:Generated_Source\PSoC4/RTC_1.h **** }
 768:Generated_Source\PSoC4/RTC_1.h **** 
 769:Generated_Source\PSoC4/RTC_1.h **** 
 770:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 771:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetDay
 772:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 773:Generated_Source\PSoC4/RTC_1.h **** *\internal
 774:Generated_Source\PSoC4/RTC_1.h **** * \brief
 775:Generated_Source\PSoC4/RTC_1.h **** *  Updates the date variable with the new day value.
 776:Generated_Source\PSoC4/RTC_1.h **** *
 777:Generated_Source\PSoC4/RTC_1.h **** * \param
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 26


 778:Generated_Source\PSoC4/RTC_1.h **** * date The current date.
 779:Generated_Source\PSoC4/RTC_1.h **** * \param
 780:Generated_Source\PSoC4/RTC_1.h **** * day The month to be set to the date variable.
 781:Generated_Source\PSoC4/RTC_1.h **** *
 782:Generated_Source\PSoC4/RTC_1.h **** * \return
 783:Generated_Source\PSoC4/RTC_1.h **** *  The updated date variable.
 784:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 785:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 786:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetDay(uint32 inputDate, uint32 inputDay)
 787:Generated_Source\PSoC4/RTC_1.h **** {
 649              		.loc 1 787 0
 650              		.cfi_startproc
 651 0000 80B5     		push	{r7, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 82B0     		sub	sp, sp, #8
 656              		.cfi_def_cfa_offset 16
 657 0004 00AF     		add	r7, sp, #0
 658              		.cfi_def_cfa_register 7
 659 0006 7860     		str	r0, [r7, #4]
 660 0008 3960     		str	r1, [r7]
 788:Generated_Source\PSoC4/RTC_1.h ****     inputDate &= ~(RTC_1_DAY_FULL_MASK);
 661              		.loc 1 788 0
 662 000a 7B68     		ldr	r3, [r7, #4]
 663 000c 0D4A     		ldr	r2, .L37
 664 000e 1340     		and	r3, r2
 665 0010 7B60     		str	r3, [r7, #4]
 789:Generated_Source\PSoC4/RTC_1.h **** 
 790:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputDay / 10u) << RTC_1_10_DAY_OFFSET;
 666              		.loc 1 790 0
 667 0012 3B68     		ldr	r3, [r7]
 668 0014 181C     		mov	r0, r3
 669 0016 0A21     		mov	r1, #10
 670 0018 FFF7FEFF 		bl	__aeabi_uidiv
 671 001c 031C     		mov	r3, r0
 672 001e 1B05     		lsl	r3, r3, #20
 673 0020 7A68     		ldr	r2, [r7, #4]
 674 0022 1343     		orr	r3, r2
 675 0024 7B60     		str	r3, [r7, #4]
 791:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputDay % 10u) << RTC_1_DAY_OFFSET;
 676              		.loc 1 791 0
 677 0026 3B68     		ldr	r3, [r7]
 678 0028 181C     		mov	r0, r3
 679 002a 0A21     		mov	r1, #10
 680 002c FFF7FEFF 		bl	__aeabi_uidivmod
 681 0030 0B1C     		mov	r3, r1
 682 0032 1B04     		lsl	r3, r3, #16
 683 0034 7A68     		ldr	r2, [r7, #4]
 684 0036 1343     		orr	r3, r2
 685 0038 7B60     		str	r3, [r7, #4]
 792:Generated_Source\PSoC4/RTC_1.h **** 
 793:Generated_Source\PSoC4/RTC_1.h ****     return(inputDate);
 686              		.loc 1 793 0
 687 003a 7B68     		ldr	r3, [r7, #4]
 794:Generated_Source\PSoC4/RTC_1.h **** }
 688              		.loc 1 794 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 27


 689 003c 181C     		mov	r0, r3
 690 003e BD46     		mov	sp, r7
 691 0040 02B0     		add	sp, sp, #8
 692              		@ sp needed
 693 0042 80BD     		pop	{r7, pc}
 694              	.L38:
 695              		.align	2
 696              	.L37:
 697 0044 FFFFC0FF 		.word	-4128769
 698              		.cfi_endproc
 699              	.LFE14:
 700              		.size	RTC_1_SetDay, .-RTC_1_SetDay
 701              		.section	.text.RTC_1_SetMonth,"ax",%progbits
 702              		.align	2
 703              		.code	16
 704              		.thumb_func
 705              		.type	RTC_1_SetMonth, %function
 706              	RTC_1_SetMonth:
 707              	.LFB15:
 795:Generated_Source\PSoC4/RTC_1.h **** 
 796:Generated_Source\PSoC4/RTC_1.h **** 
 797:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 798:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetMonth
 799:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 800:Generated_Source\PSoC4/RTC_1.h **** *\internal
 801:Generated_Source\PSoC4/RTC_1.h **** * \brief
 802:Generated_Source\PSoC4/RTC_1.h **** *  Updates the date variable with the new month value.
 803:Generated_Source\PSoC4/RTC_1.h **** *
 804:Generated_Source\PSoC4/RTC_1.h **** * \param
 805:Generated_Source\PSoC4/RTC_1.h **** * date The current date.
 806:Generated_Source\PSoC4/RTC_1.h **** * \param
 807:Generated_Source\PSoC4/RTC_1.h **** * month The month that to be set to the date variable.
 808:Generated_Source\PSoC4/RTC_1.h **** *
 809:Generated_Source\PSoC4/RTC_1.h **** * \return
 810:Generated_Source\PSoC4/RTC_1.h **** *  The updated date variable.
 811:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 812:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 813:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetMonth(uint32 inputDate, uint32 inputMonth)
 814:Generated_Source\PSoC4/RTC_1.h **** {
 708              		.loc 1 814 0
 709              		.cfi_startproc
 710 0000 80B5     		push	{r7, lr}
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 7, -8
 713              		.cfi_offset 14, -4
 714 0002 82B0     		sub	sp, sp, #8
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              		.cfi_def_cfa_register 7
 718 0006 7860     		str	r0, [r7, #4]
 719 0008 3960     		str	r1, [r7]
 815:Generated_Source\PSoC4/RTC_1.h ****     inputDate &= ~(RTC_1_MONTH_FULL_MASK);
 720              		.loc 1 815 0
 721 000a 7B68     		ldr	r3, [r7, #4]
 722 000c 0D4A     		ldr	r2, .L41
 723 000e 1340     		and	r3, r2
 724 0010 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 28


 816:Generated_Source\PSoC4/RTC_1.h **** 
 817:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputMonth / 10u) << RTC_1_10_MONTH_OFFSET;
 725              		.loc 1 817 0
 726 0012 3B68     		ldr	r3, [r7]
 727 0014 181C     		mov	r0, r3
 728 0016 0A21     		mov	r1, #10
 729 0018 FFF7FEFF 		bl	__aeabi_uidiv
 730 001c 031C     		mov	r3, r0
 731 001e 1B07     		lsl	r3, r3, #28
 732 0020 7A68     		ldr	r2, [r7, #4]
 733 0022 1343     		orr	r3, r2
 734 0024 7B60     		str	r3, [r7, #4]
 818:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputMonth % 10u) << RTC_1_MONTH_OFFSET;
 735              		.loc 1 818 0
 736 0026 3B68     		ldr	r3, [r7]
 737 0028 181C     		mov	r0, r3
 738 002a 0A21     		mov	r1, #10
 739 002c FFF7FEFF 		bl	__aeabi_uidivmod
 740 0030 0B1C     		mov	r3, r1
 741 0032 1B06     		lsl	r3, r3, #24
 742 0034 7A68     		ldr	r2, [r7, #4]
 743 0036 1343     		orr	r3, r2
 744 0038 7B60     		str	r3, [r7, #4]
 819:Generated_Source\PSoC4/RTC_1.h **** 
 820:Generated_Source\PSoC4/RTC_1.h ****     return(inputDate);
 745              		.loc 1 820 0
 746 003a 7B68     		ldr	r3, [r7, #4]
 821:Generated_Source\PSoC4/RTC_1.h **** }
 747              		.loc 1 821 0
 748 003c 181C     		mov	r0, r3
 749 003e BD46     		mov	sp, r7
 750 0040 02B0     		add	sp, sp, #8
 751              		@ sp needed
 752 0042 80BD     		pop	{r7, pc}
 753              	.L42:
 754              		.align	2
 755              	.L41:
 756 0044 FFFFFFE0 		.word	-520093697
 757              		.cfi_endproc
 758              	.LFE15:
 759              		.size	RTC_1_SetMonth, .-RTC_1_SetMonth
 760              		.section	.text.RTC_1_SetYear,"ax",%progbits
 761              		.align	2
 762              		.code	16
 763              		.thumb_func
 764              		.type	RTC_1_SetYear, %function
 765              	RTC_1_SetYear:
 766              	.LFB16:
 822:Generated_Source\PSoC4/RTC_1.h **** 
 823:Generated_Source\PSoC4/RTC_1.h **** 
 824:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 825:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetYear
 826:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 827:Generated_Source\PSoC4/RTC_1.h **** *\internal
 828:Generated_Source\PSoC4/RTC_1.h **** * \brief
 829:Generated_Source\PSoC4/RTC_1.h **** *  Updates the date variable with the new year value.
 830:Generated_Source\PSoC4/RTC_1.h **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 29


 831:Generated_Source\PSoC4/RTC_1.h **** * \param
 832:Generated_Source\PSoC4/RTC_1.h **** * date The current date.
 833:Generated_Source\PSoC4/RTC_1.h **** * \param
 834:Generated_Source\PSoC4/RTC_1.h **** * year The year to be set to the date variable.
 835:Generated_Source\PSoC4/RTC_1.h **** *
 836:Generated_Source\PSoC4/RTC_1.h **** * \return
 837:Generated_Source\PSoC4/RTC_1.h **** * The updated date variable.
 838:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 839:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 840:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetYear(uint32 inputDate, uint32 inputYear)
 841:Generated_Source\PSoC4/RTC_1.h **** {
 767              		.loc 1 841 0
 768              		.cfi_startproc
 769 0000 80B5     		push	{r7, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 7, -8
 772              		.cfi_offset 14, -4
 773 0002 82B0     		sub	sp, sp, #8
 774              		.cfi_def_cfa_offset 16
 775 0004 00AF     		add	r7, sp, #0
 776              		.cfi_def_cfa_register 7
 777 0006 7860     		str	r0, [r7, #4]
 778 0008 3960     		str	r1, [r7]
 842:Generated_Source\PSoC4/RTC_1.h ****     inputDate  &= ~(RTC_1_YEAR_FULL_MASK);
 779              		.loc 1 842 0
 780 000a 7B68     		ldr	r3, [r7, #4]
 781 000c 9B0B     		lsr	r3, r3, #14
 782 000e 9B03     		lsl	r3, r3, #14
 783 0010 7B60     		str	r3, [r7, #4]
 843:Generated_Source\PSoC4/RTC_1.h **** 
 844:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear / 1000u) << RTC_1_1000_YEAR_OFFSET;
 784              		.loc 1 844 0
 785 0012 3B68     		ldr	r3, [r7]
 786 0014 181C     		mov	r0, r3
 787 0016 FA23     		mov	r3, #250
 788 0018 9900     		lsl	r1, r3, #2
 789 001a FFF7FEFF 		bl	__aeabi_uidiv
 790 001e 031C     		mov	r3, r0
 791 0020 1B03     		lsl	r3, r3, #12
 792 0022 7A68     		ldr	r2, [r7, #4]
 793 0024 1343     		orr	r3, r2
 794 0026 7B60     		str	r3, [r7, #4]
 845:Generated_Source\PSoC4/RTC_1.h ****     inputYear %= 1000u;
 795              		.loc 1 845 0
 796 0028 3B68     		ldr	r3, [r7]
 797 002a 181C     		mov	r0, r3
 798 002c FA23     		mov	r3, #250
 799 002e 9900     		lsl	r1, r3, #2
 800 0030 FFF7FEFF 		bl	__aeabi_uidivmod
 801 0034 0B1C     		mov	r3, r1
 802 0036 3B60     		str	r3, [r7]
 846:Generated_Source\PSoC4/RTC_1.h **** 
 847:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear / 100u) << RTC_1_100_YEAR_OFFSET;
 803              		.loc 1 847 0
 804 0038 3B68     		ldr	r3, [r7]
 805 003a 181C     		mov	r0, r3
 806 003c 6421     		mov	r1, #100
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 30


 807 003e FFF7FEFF 		bl	__aeabi_uidiv
 808 0042 031C     		mov	r3, r0
 809 0044 1B02     		lsl	r3, r3, #8
 810 0046 7A68     		ldr	r2, [r7, #4]
 811 0048 1343     		orr	r3, r2
 812 004a 7B60     		str	r3, [r7, #4]
 848:Generated_Source\PSoC4/RTC_1.h ****     inputYear %= 100u;
 813              		.loc 1 848 0
 814 004c 3B68     		ldr	r3, [r7]
 815 004e 181C     		mov	r0, r3
 816 0050 6421     		mov	r1, #100
 817 0052 FFF7FEFF 		bl	__aeabi_uidivmod
 818 0056 0B1C     		mov	r3, r1
 819 0058 3B60     		str	r3, [r7]
 849:Generated_Source\PSoC4/RTC_1.h **** 
 850:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear / 10u) << RTC_1_10_YEAR_OFFSET;
 820              		.loc 1 850 0
 821 005a 3B68     		ldr	r3, [r7]
 822 005c 181C     		mov	r0, r3
 823 005e 0A21     		mov	r1, #10
 824 0060 FFF7FEFF 		bl	__aeabi_uidiv
 825 0064 031C     		mov	r3, r0
 826 0066 1B01     		lsl	r3, r3, #4
 827 0068 7A68     		ldr	r2, [r7, #4]
 828 006a 1343     		orr	r3, r2
 829 006c 7B60     		str	r3, [r7, #4]
 851:Generated_Source\PSoC4/RTC_1.h ****     inputDate |= (inputYear % 10u) << RTC_1_YEAR_OFFSET;
 830              		.loc 1 851 0
 831 006e 3B68     		ldr	r3, [r7]
 832 0070 181C     		mov	r0, r3
 833 0072 0A21     		mov	r1, #10
 834 0074 FFF7FEFF 		bl	__aeabi_uidivmod
 835 0078 0B1C     		mov	r3, r1
 836 007a 1A1C     		mov	r2, r3
 837 007c 7B68     		ldr	r3, [r7, #4]
 838 007e 1343     		orr	r3, r2
 839 0080 7B60     		str	r3, [r7, #4]
 852:Generated_Source\PSoC4/RTC_1.h **** 
 853:Generated_Source\PSoC4/RTC_1.h ****     return(inputDate);
 840              		.loc 1 853 0
 841 0082 7B68     		ldr	r3, [r7, #4]
 854:Generated_Source\PSoC4/RTC_1.h **** }
 842              		.loc 1 854 0
 843 0084 181C     		mov	r0, r3
 844 0086 BD46     		mov	sp, r7
 845 0088 02B0     		add	sp, sp, #8
 846              		@ sp needed
 847 008a 80BD     		pop	{r7, pc}
 848              		.cfi_endproc
 849              	.LFE16:
 850              		.size	RTC_1_SetYear, .-RTC_1_SetYear
 851              		.section	.text.RTC_1_GetNextMinSec,"ax",%progbits
 852              		.align	2
 853              		.code	16
 854              		.thumb_func
 855              		.type	RTC_1_GetNextMinSec, %function
 856              	RTC_1_GetNextMinSec:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 31


 857              	.LFB17:
 855:Generated_Source\PSoC4/RTC_1.h **** 
 856:Generated_Source\PSoC4/RTC_1.h **** 
 857:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 858:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextMinSec
 859:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 860:Generated_Source\PSoC4/RTC_1.h **** *\internal
 861:Generated_Source\PSoC4/RTC_1.h **** * \brief
 862:Generated_Source\PSoC4/RTC_1.h **** * This is an internal function that calculates the value of the next Second/Minute
 863:Generated_Source\PSoC4/RTC_1.h **** * that follows after the current Minute/Second.
 864:Generated_Source\PSoC4/RTC_1.h **** *
 865:Generated_Source\PSoC4/RTC_1.h **** * \param
 866:Generated_Source\PSoC4/RTC_1.h **** * curVal The current Second/Minute value.
 867:Generated_Source\PSoC4/RTC_1.h **** *
 868:Generated_Source\PSoC4/RTC_1.h **** * \return
 869:Generated_Source\PSoC4/RTC_1.h **** * Returns the Second/Minute which follows after the current Second/Minute.
 870:Generated_Source\PSoC4/RTC_1.h **** *\endinternal
 871:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 872:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextMinSec(uint32 curVal)
 873:Generated_Source\PSoC4/RTC_1.h **** {
 858              		.loc 1 873 0
 859              		.cfi_startproc
 860 0000 80B5     		push	{r7, lr}
 861              		.cfi_def_cfa_offset 8
 862              		.cfi_offset 7, -8
 863              		.cfi_offset 14, -4
 864 0002 82B0     		sub	sp, sp, #8
 865              		.cfi_def_cfa_offset 16
 866 0004 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 868 0006 7860     		str	r0, [r7, #4]
 874:Generated_Source\PSoC4/RTC_1.h ****     return((curVal < 59u) ? (curVal + 1u) : 0u);
 869              		.loc 1 874 0
 870 0008 7B68     		ldr	r3, [r7, #4]
 871 000a 3A2B     		cmp	r3, #58
 872 000c 02D8     		bhi	.L46
 873              		.loc 1 874 0 is_stmt 0 discriminator 1
 874 000e 7B68     		ldr	r3, [r7, #4]
 875 0010 0133     		add	r3, r3, #1
 876 0012 00E0     		b	.L47
 877              	.L46:
 878              		.loc 1 874 0 discriminator 2
 879 0014 0023     		mov	r3, #0
 880              	.L47:
 875:Generated_Source\PSoC4/RTC_1.h **** }
 881              		.loc 1 875 0 is_stmt 1 discriminator 4
 882 0016 181C     		mov	r0, r3
 883 0018 BD46     		mov	sp, r7
 884 001a 02B0     		add	sp, sp, #8
 885              		@ sp needed
 886 001c 80BD     		pop	{r7, pc}
 887              		.cfi_endproc
 888              	.LFE17:
 889              		.size	RTC_1_GetNextMinSec, .-RTC_1_GetNextMinSec
 890 001e C046     		.section	.text.RTC_1_GetNextHour,"ax",%progbits
 891              		.align	2
 892              		.code	16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 32


 893              		.thumb_func
 894              		.type	RTC_1_GetNextHour, %function
 895              	RTC_1_GetNextHour:
 896              	.LFB18:
 876:Generated_Source\PSoC4/RTC_1.h **** 
 877:Generated_Source\PSoC4/RTC_1.h **** 
 878:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 879:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextHour
 880:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 881:Generated_Source\PSoC4/RTC_1.h **** *\internal
 882:Generated_Source\PSoC4/RTC_1.h **** * \brief
 883:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next Hour
 884:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current Hour.
 885:Generated_Source\PSoC4/RTC_1.h **** *
 886:Generated_Source\PSoC4/RTC_1.h **** * \param
 887:Generated_Source\PSoC4/RTC_1.h **** * curVal The current Hour value.
 888:Generated_Source\PSoC4/RTC_1.h **** *
 889:Generated_Source\PSoC4/RTC_1.h **** * \return
 890:Generated_Source\PSoC4/RTC_1.h **** *  Returns the Hour which follows after the current Hour.
 891:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 892:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 893:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextHour(uint32 curVal)
 894:Generated_Source\PSoC4/RTC_1.h **** {
 897              		.loc 1 894 0
 898              		.cfi_startproc
 899 0000 80B5     		push	{r7, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 82B0     		sub	sp, sp, #8
 904              		.cfi_def_cfa_offset 16
 905 0004 00AF     		add	r7, sp, #0
 906              		.cfi_def_cfa_register 7
 907 0006 7860     		str	r0, [r7, #4]
 895:Generated_Source\PSoC4/RTC_1.h ****     return((curVal < 23u) ? (curVal + 1u) : 0u);
 908              		.loc 1 895 0
 909 0008 7B68     		ldr	r3, [r7, #4]
 910 000a 162B     		cmp	r3, #22
 911 000c 02D8     		bhi	.L50
 912              		.loc 1 895 0 is_stmt 0 discriminator 1
 913 000e 7B68     		ldr	r3, [r7, #4]
 914 0010 0133     		add	r3, r3, #1
 915 0012 00E0     		b	.L51
 916              	.L50:
 917              		.loc 1 895 0 discriminator 2
 918 0014 0023     		mov	r3, #0
 919              	.L51:
 896:Generated_Source\PSoC4/RTC_1.h **** }
 920              		.loc 1 896 0 is_stmt 1 discriminator 4
 921 0016 181C     		mov	r0, r3
 922 0018 BD46     		mov	sp, r7
 923 001a 02B0     		add	sp, sp, #8
 924              		@ sp needed
 925 001c 80BD     		pop	{r7, pc}
 926              		.cfi_endproc
 927              	.LFE18:
 928              		.size	RTC_1_GetNextHour, .-RTC_1_GetNextHour
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 33


 929 001e C046     		.section	.text.RTC_1_GetNextDay,"ax",%progbits
 930              		.align	2
 931              		.code	16
 932              		.thumb_func
 933              		.type	RTC_1_GetNextDay, %function
 934              	RTC_1_GetNextDay:
 935              	.LFB19:
 897:Generated_Source\PSoC4/RTC_1.h **** 
 898:Generated_Source\PSoC4/RTC_1.h **** 
 899:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 900:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextDay
 901:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 902:Generated_Source\PSoC4/RTC_1.h **** * \internal
 903:Generated_Source\PSoC4/RTC_1.h **** * \brief
 904:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next Day
 905:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current Day.
 906:Generated_Source\PSoC4/RTC_1.h **** *
 907:Generated_Source\PSoC4/RTC_1.h **** * \param
 908:Generated_Source\PSoC4/RTC_1.h **** *  curYear The current year.
 909:Generated_Source\PSoC4/RTC_1.h **** * \param
 910:Generated_Source\PSoC4/RTC_1.h **** *  curMonth The current month.
 911:Generated_Source\PSoC4/RTC_1.h **** * \param
 912:Generated_Source\PSoC4/RTC_1.h **** *  curDay The current day.
 913:Generated_Source\PSoC4/RTC_1.h **** * \param
 914:Generated_Source\PSoC4/RTC_1.h **** *  alarmCfgMask Alarm Config Mask.
 915:Generated_Source\PSoC4/RTC_1.h **** *
 916:Generated_Source\PSoC4/RTC_1.h **** * \return
 917:Generated_Source\PSoC4/RTC_1.h **** *  Returns the day which follows after the current Day.
 918:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 919:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 920:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextDay(uint32 curYear, uint32 curMonth, uint32 curDay, uint32 ala
 921:Generated_Source\PSoC4/RTC_1.h **** {
 936              		.loc 1 921 0
 937              		.cfi_startproc
 938 0000 80B5     		push	{r7, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 86B0     		sub	sp, sp, #24
 943              		.cfi_def_cfa_offset 32
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 946 0006 F860     		str	r0, [r7, #12]
 947 0008 B960     		str	r1, [r7, #8]
 948 000a 7A60     		str	r2, [r7, #4]
 949 000c 3B60     		str	r3, [r7]
 922:Generated_Source\PSoC4/RTC_1.h ****     uint32 daysInMonth;
 923:Generated_Source\PSoC4/RTC_1.h ****     uint32 tmpVal;
 924:Generated_Source\PSoC4/RTC_1.h **** 
 925:Generated_Source\PSoC4/RTC_1.h ****     daysInMonth = RTC_1_DaysInMonth(curMonth, curYear);
 950              		.loc 1 925 0
 951 000e BA68     		ldr	r2, [r7, #8]
 952 0010 FB68     		ldr	r3, [r7, #12]
 953 0012 101C     		mov	r0, r2
 954 0014 191C     		mov	r1, r3
 955 0016 FFF7FEFF 		bl	RTC_1_DaysInMonth
 956 001a 031C     		mov	r3, r0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 34


 957 001c 3B61     		str	r3, [r7, #16]
 926:Generated_Source\PSoC4/RTC_1.h **** 
 927:Generated_Source\PSoC4/RTC_1.h ****     if(0u != (alarmCfgMask & RTC_1_ALARM_DAYOFWEEK_MASK))
 958              		.loc 1 927 0
 959 001e 3B68     		ldr	r3, [r7]
 960 0020 0822     		mov	r2, #8
 961 0022 1340     		and	r3, r2
 962 0024 0DD0     		beq	.L54
 928:Generated_Source\PSoC4/RTC_1.h ****     {
 929:Generated_Source\PSoC4/RTC_1.h ****         tmpVal = curDay + RTC_1_DAYS_PER_WEEK;
 963              		.loc 1 929 0
 964 0026 7B68     		ldr	r3, [r7, #4]
 965 0028 0733     		add	r3, r3, #7
 966 002a 7B61     		str	r3, [r7, #20]
 930:Generated_Source\PSoC4/RTC_1.h ****         tmpVal = (tmpVal > daysInMonth) ? (tmpVal - daysInMonth) : tmpVal;
 967              		.loc 1 930 0
 968 002c 7A69     		ldr	r2, [r7, #20]
 969 002e 3B69     		ldr	r3, [r7, #16]
 970 0030 9A42     		cmp	r2, r3
 971 0032 03D9     		bls	.L55
 972              		.loc 1 930 0 is_stmt 0 discriminator 1
 973 0034 7A69     		ldr	r2, [r7, #20]
 974 0036 3B69     		ldr	r3, [r7, #16]
 975 0038 D31A     		sub	r3, r2, r3
 976 003a 00E0     		b	.L56
 977              	.L55:
 978              		.loc 1 930 0 discriminator 2
 979 003c 7B69     		ldr	r3, [r7, #20]
 980              	.L56:
 981              		.loc 1 930 0 discriminator 4
 982 003e 7B61     		str	r3, [r7, #20]
 983 0040 08E0     		b	.L57
 984              	.L54:
 931:Generated_Source\PSoC4/RTC_1.h ****     }
 932:Generated_Source\PSoC4/RTC_1.h ****     else
 933:Generated_Source\PSoC4/RTC_1.h ****     {
 934:Generated_Source\PSoC4/RTC_1.h ****         tmpVal = (curDay < daysInMonth) ? (curDay + 1u) : 1u;
 985              		.loc 1 934 0 is_stmt 1
 986 0042 7A68     		ldr	r2, [r7, #4]
 987 0044 3B69     		ldr	r3, [r7, #16]
 988 0046 9A42     		cmp	r2, r3
 989 0048 02D2     		bcs	.L58
 990              		.loc 1 934 0 is_stmt 0 discriminator 1
 991 004a 7B68     		ldr	r3, [r7, #4]
 992 004c 0133     		add	r3, r3, #1
 993 004e 00E0     		b	.L59
 994              	.L58:
 995              		.loc 1 934 0 discriminator 2
 996 0050 0123     		mov	r3, #1
 997              	.L59:
 998              		.loc 1 934 0 discriminator 4
 999 0052 7B61     		str	r3, [r7, #20]
 1000              	.L57:
 935:Generated_Source\PSoC4/RTC_1.h ****     }
 936:Generated_Source\PSoC4/RTC_1.h **** 
 937:Generated_Source\PSoC4/RTC_1.h ****     return(tmpVal);
 1001              		.loc 1 937 0 is_stmt 1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 35


 1002 0054 7B69     		ldr	r3, [r7, #20]
 938:Generated_Source\PSoC4/RTC_1.h **** }
 1003              		.loc 1 938 0
 1004 0056 181C     		mov	r0, r3
 1005 0058 BD46     		mov	sp, r7
 1006 005a 06B0     		add	sp, sp, #24
 1007              		@ sp needed
 1008 005c 80BD     		pop	{r7, pc}
 1009              		.cfi_endproc
 1010              	.LFE19:
 1011              		.size	RTC_1_GetNextDay, .-RTC_1_GetNextDay
 1012 005e C046     		.section	.text.RTC_1_GetNextMonth,"ax",%progbits
 1013              		.align	2
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	RTC_1_GetNextMonth, %function
 1017              	RTC_1_GetNextMonth:
 1018              	.LFB20:
 939:Generated_Source\PSoC4/RTC_1.h **** 
 940:Generated_Source\PSoC4/RTC_1.h **** 
 941:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 942:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextMonth
 943:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 944:Generated_Source\PSoC4/RTC_1.h **** * \internal
 945:Generated_Source\PSoC4/RTC_1.h **** * \brief
 946:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next month
 947:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current month.
 948:Generated_Source\PSoC4/RTC_1.h **** *
 949:Generated_Source\PSoC4/RTC_1.h **** * \param
 950:Generated_Source\PSoC4/RTC_1.h **** *  curMonth The current month.
 951:Generated_Source\PSoC4/RTC_1.h **** *
 952:Generated_Source\PSoC4/RTC_1.h **** * \return
 953:Generated_Source\PSoC4/RTC_1.h **** *  Returns the month which follows after the current month.
 954:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 955:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 956:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextMonth(uint32 curMonth)
 957:Generated_Source\PSoC4/RTC_1.h **** {
 1019              		.loc 1 957 0
 1020              		.cfi_startproc
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 1029 0006 7860     		str	r0, [r7, #4]
 958:Generated_Source\PSoC4/RTC_1.h ****     return((curMonth < 12u) ? (curMonth + 1u) : 1u);
 1030              		.loc 1 958 0
 1031 0008 7B68     		ldr	r3, [r7, #4]
 1032 000a 0B2B     		cmp	r3, #11
 1033 000c 02D8     		bhi	.L62
 1034              		.loc 1 958 0 is_stmt 0 discriminator 1
 1035 000e 7B68     		ldr	r3, [r7, #4]
 1036 0010 0133     		add	r3, r3, #1
 1037 0012 00E0     		b	.L63
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 36


 1038              	.L62:
 1039              		.loc 1 958 0 discriminator 2
 1040 0014 0123     		mov	r3, #1
 1041              	.L63:
 959:Generated_Source\PSoC4/RTC_1.h **** }
 1042              		.loc 1 959 0 is_stmt 1 discriminator 4
 1043 0016 181C     		mov	r0, r3
 1044 0018 BD46     		mov	sp, r7
 1045 001a 02B0     		add	sp, sp, #8
 1046              		@ sp needed
 1047 001c 80BD     		pop	{r7, pc}
 1048              		.cfi_endproc
 1049              	.LFE20:
 1050              		.size	RTC_1_GetNextMonth, .-RTC_1_GetNextMonth
 1051 001e C046     		.section	.text.RTC_1_GetNextYear,"ax",%progbits
 1052              		.align	2
 1053              		.code	16
 1054              		.thumb_func
 1055              		.type	RTC_1_GetNextYear, %function
 1056              	RTC_1_GetNextYear:
 1057              	.LFB21:
 960:Generated_Source\PSoC4/RTC_1.h **** 
 961:Generated_Source\PSoC4/RTC_1.h **** 
 962:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 963:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetNextYear
 964:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 965:Generated_Source\PSoC4/RTC_1.h **** * \internal
 966:Generated_Source\PSoC4/RTC_1.h **** * \brief
 967:Generated_Source\PSoC4/RTC_1.h **** *  This is an internal function that calculates the value of the next year
 968:Generated_Source\PSoC4/RTC_1.h **** *  that follows after the current year.
 969:Generated_Source\PSoC4/RTC_1.h **** *
 970:Generated_Source\PSoC4/RTC_1.h **** * \param
 971:Generated_Source\PSoC4/RTC_1.h **** *  curYear The current year.
 972:Generated_Source\PSoC4/RTC_1.h **** *
 973:Generated_Source\PSoC4/RTC_1.h **** * \return
 974:Generated_Source\PSoC4/RTC_1.h **** *  Returns the year which follows after the current year.
 975:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 976:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 977:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetNextYear(uint32 curYear)
 978:Generated_Source\PSoC4/RTC_1.h **** {
 1058              		.loc 1 978 0
 1059              		.cfi_startproc
 1060 0000 80B5     		push	{r7, lr}
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 7, -8
 1063              		.cfi_offset 14, -4
 1064 0002 82B0     		sub	sp, sp, #8
 1065              		.cfi_def_cfa_offset 16
 1066 0004 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 1068 0006 7860     		str	r0, [r7, #4]
 979:Generated_Source\PSoC4/RTC_1.h ****     return(curYear + 1u);
 1069              		.loc 1 979 0
 1070 0008 7B68     		ldr	r3, [r7, #4]
 1071 000a 0133     		add	r3, r3, #1
 980:Generated_Source\PSoC4/RTC_1.h **** }
 1072              		.loc 1 980 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 37


 1073 000c 181C     		mov	r0, r3
 1074 000e BD46     		mov	sp, r7
 1075 0010 02B0     		add	sp, sp, #8
 1076              		@ sp needed
 1077 0012 80BD     		pop	{r7, pc}
 1078              		.cfi_endproc
 1079              	.LFE21:
 1080              		.size	RTC_1_GetNextYear, .-RTC_1_GetNextYear
 1081              		.section	.text.RTC_1_GetTimeFormat,"ax",%progbits
 1082              		.align	2
 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	RTC_1_GetTimeFormat, %function
 1086              	RTC_1_GetTimeFormat:
 1087              	.LFB23:
 981:Generated_Source\PSoC4/RTC_1.h **** 
 982:Generated_Source\PSoC4/RTC_1.h **** 
 983:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
 984:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_SetTimeFormat
 985:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
 986:Generated_Source\PSoC4/RTC_1.h **** * \internal
 987:Generated_Source\PSoC4/RTC_1.h **** * \brief
 988:Generated_Source\PSoC4/RTC_1.h **** *  Updates the "Time Format" value in the variable that contains time in the
 989:Generated_Source\PSoC4/RTC_1.h **** *  "HH:MM:SS" format.
 990:Generated_Source\PSoC4/RTC_1.h **** *
 991:Generated_Source\PSoC4/RTC_1.h **** * \param
 992:Generated_Source\PSoC4/RTC_1.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
 993:Generated_Source\PSoC4/RTC_1.h **** *
 994:Generated_Source\PSoC4/RTC_1.h **** * \return
 995:Generated_Source\PSoC4/RTC_1.h **** *  Returns the updated value of the time in the "HH:MM:SS" format.
 996:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
 997:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
 998:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_SetTimeFormat(uint32 inputTime, uint32 timeFormat)
 999:Generated_Source\PSoC4/RTC_1.h **** {
1000:Generated_Source\PSoC4/RTC_1.h ****     inputTime &= ~(RTC_1_TIME_FORMAT_MASK);
1001:Generated_Source\PSoC4/RTC_1.h **** 
1002:Generated_Source\PSoC4/RTC_1.h ****     if((uint32)RTC_1_12_HOURS_FORMAT != timeFormat)
1003:Generated_Source\PSoC4/RTC_1.h ****     {
1004:Generated_Source\PSoC4/RTC_1.h ****         inputTime |= RTC_1_TIME_FORMAT_MASK;
1005:Generated_Source\PSoC4/RTC_1.h ****     }
1006:Generated_Source\PSoC4/RTC_1.h **** 
1007:Generated_Source\PSoC4/RTC_1.h ****     return(inputTime);
1008:Generated_Source\PSoC4/RTC_1.h **** }
1009:Generated_Source\PSoC4/RTC_1.h **** 
1010:Generated_Source\PSoC4/RTC_1.h **** 
1011:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1012:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetTimeFormat
1013:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1014:Generated_Source\PSoC4/RTC_1.h **** * \internal
1015:Generated_Source\PSoC4/RTC_1.h **** * \brief
1016:Generated_Source\PSoC4/RTC_1.h **** *  Reads the time format from the variable that contains time in the
1017:Generated_Source\PSoC4/RTC_1.h **** *  "HH:MM:SS" format.
1018:Generated_Source\PSoC4/RTC_1.h **** *
1019:Generated_Source\PSoC4/RTC_1.h **** * \param
1020:Generated_Source\PSoC4/RTC_1.h **** *  inputTime The current value of the time in the "HH:MM:SS" format.
1021:Generated_Source\PSoC4/RTC_1.h **** *
1022:Generated_Source\PSoC4/RTC_1.h **** * \return
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 38


1023:Generated_Source\PSoC4/RTC_1.h **** *  Returns the time format that is stored in the variable that contains time
1024:Generated_Source\PSoC4/RTC_1.h **** *  in the "HH:MM:SS" format.
1025:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
1026:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1027:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetTimeFormat(uint32 inputTime)
1028:Generated_Source\PSoC4/RTC_1.h **** {
 1088              		.loc 1 1028 0
 1089              		.cfi_startproc
 1090 0000 80B5     		push	{r7, lr}
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 7, -8
 1093              		.cfi_offset 14, -4
 1094 0002 82B0     		sub	sp, sp, #8
 1095              		.cfi_def_cfa_offset 16
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/RTC_1.h ****     return ((0uL != (inputTime & (1uL << RTC_1_TIME_FORMAT_OFFSET))) ? (uint32)RTC_1_12_HOURS_FORMA
 1099              		.loc 1 1029 0
 1100 0008 7A68     		ldr	r2, [r7, #4]
 1101 000a 8023     		mov	r3, #128
 1102 000c 1B04     		lsl	r3, r3, #16
 1103 000e 1340     		and	r3, r2
 1104 0010 01D0     		beq	.L68
 1105              		.loc 1 1029 0 is_stmt 0 discriminator 1
 1106 0012 0123     		mov	r3, #1
 1107 0014 00E0     		b	.L69
 1108              	.L68:
 1109              		.loc 1 1029 0 discriminator 2
 1110 0016 0023     		mov	r3, #0
 1111              	.L69:
1030:Generated_Source\PSoC4/RTC_1.h ****                                                                                   (uint32)RTC_1_24_
1031:Generated_Source\PSoC4/RTC_1.h **** }
 1112              		.loc 1 1031 0 is_stmt 1 discriminator 4
 1113 0018 181C     		mov	r0, r3
 1114 001a BD46     		mov	sp, r7
 1115 001c 02B0     		add	sp, sp, #8
 1116              		@ sp needed
 1117 001e 80BD     		pop	{r7, pc}
 1118              		.cfi_endproc
 1119              	.LFE23:
 1120              		.size	RTC_1_GetTimeFormat, .-RTC_1_GetTimeFormat
 1121              		.section	.text.RTC_1_ConstructTime,"ax",%progbits
 1122              		.align	2
 1123              		.code	16
 1124              		.thumb_func
 1125              		.type	RTC_1_ConstructTime, %function
 1126              	RTC_1_ConstructTime:
 1127              	.LFB24:
1032:Generated_Source\PSoC4/RTC_1.h **** 
1033:Generated_Source\PSoC4/RTC_1.h **** 
1034:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1035:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_ConstructTime
1036:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1037:Generated_Source\PSoC4/RTC_1.h **** *
1038:Generated_Source\PSoC4/RTC_1.h **** * \brief
1039:Generated_Source\PSoC4/RTC_1.h **** *  Returns the time in the format used in APIs from individual elements
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 39


1040:Generated_Source\PSoC4/RTC_1.h **** *  passed (hour, min, sec etc)
1041:Generated_Source\PSoC4/RTC_1.h **** *
1042:Generated_Source\PSoC4/RTC_1.h **** * \param
1043:Generated_Source\PSoC4/RTC_1.h **** * timeFormat The 12/24 hours time format <br>
1044:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_24_HOURS_FORMAT - The 24 hours format. <br>
1045:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_12_HOURS_FORMAT - The 12 hours format.
1046:Generated_Source\PSoC4/RTC_1.h **** *
1047:Generated_Source\PSoC4/RTC_1.h **** * \param
1048:Generated_Source\PSoC4/RTC_1.h **** * stateAmPm  The AM/PM status <br>
1049:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_AM - AM. <br>
1050:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_PM - PM.
1051:Generated_Source\PSoC4/RTC_1.h **** *
1052:Generated_Source\PSoC4/RTC_1.h **** * \param
1053:Generated_Source\PSoC4/RTC_1.h **** *  hour The hour.
1054:Generated_Source\PSoC4/RTC_1.h **** *
1055:Generated_Source\PSoC4/RTC_1.h **** * \param
1056:Generated_Source\PSoC4/RTC_1.h **** *  min The minute.
1057:Generated_Source\PSoC4/RTC_1.h **** *
1058:Generated_Source\PSoC4/RTC_1.h **** * \param
1059:Generated_Source\PSoC4/RTC_1.h **** *  sec The second.
1060:Generated_Source\PSoC4/RTC_1.h **** *
1061:Generated_Source\PSoC4/RTC_1.h **** * \return
1062:Generated_Source\PSoC4/RTC_1.h **** *  Time in the format used in API.
1063:Generated_Source\PSoC4/RTC_1.h **** *
1064:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1065:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_ConstructTime(uint32 timeFormat, uint32 stateAmPm, uint32 hour, uint3
1066:Generated_Source\PSoC4/RTC_1.h **** {
 1128              		.loc 1 1066 0
 1129              		.cfi_startproc
 1130 0000 80B5     		push	{r7, lr}
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 86B0     		sub	sp, sp, #24
 1135              		.cfi_def_cfa_offset 32
 1136 0004 00AF     		add	r7, sp, #0
 1137              		.cfi_def_cfa_register 7
 1138 0006 F860     		str	r0, [r7, #12]
 1139 0008 B960     		str	r1, [r7, #8]
 1140 000a 7A60     		str	r2, [r7, #4]
 1141 000c 3B60     		str	r3, [r7]
1067:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
1068:Generated_Source\PSoC4/RTC_1.h **** 
1069:Generated_Source\PSoC4/RTC_1.h ****     retVal  = timeFormat << RTC_1_TIME_FORMAT_OFFSET;
 1142              		.loc 1 1069 0
 1143 000e FB68     		ldr	r3, [r7, #12]
 1144 0010 DB05     		lsl	r3, r3, #23
 1145 0012 7B61     		str	r3, [r7, #20]
1070:Generated_Source\PSoC4/RTC_1.h ****     retVal |= stateAmPm << RTC_1_PERIOD_OF_DAY_OFFSET;
 1146              		.loc 1 1070 0
 1147 0014 BB68     		ldr	r3, [r7, #8]
 1148 0016 9B05     		lsl	r3, r3, #22
 1149 0018 7A69     		ldr	r2, [r7, #20]
 1150 001a 1343     		orr	r3, r2
 1151 001c 7B61     		str	r3, [r7, #20]
1071:Generated_Source\PSoC4/RTC_1.h **** 
1072:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (hour / 10u) << RTC_1_10_HOURS_OFFSET;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 40


 1152              		.loc 1 1072 0
 1153 001e 7B68     		ldr	r3, [r7, #4]
 1154 0020 181C     		mov	r0, r3
 1155 0022 0A21     		mov	r1, #10
 1156 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1157 0028 031C     		mov	r3, r0
 1158 002a 1B05     		lsl	r3, r3, #20
 1159 002c 7A69     		ldr	r2, [r7, #20]
 1160 002e 1343     		orr	r3, r2
 1161 0030 7B61     		str	r3, [r7, #20]
1073:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (hour % 10u) << RTC_1_HOURS_OFFSET;
 1162              		.loc 1 1073 0
 1163 0032 7B68     		ldr	r3, [r7, #4]
 1164 0034 181C     		mov	r0, r3
 1165 0036 0A21     		mov	r1, #10
 1166 0038 FFF7FEFF 		bl	__aeabi_uidivmod
 1167 003c 0B1C     		mov	r3, r1
 1168 003e 1B04     		lsl	r3, r3, #16
 1169 0040 7A69     		ldr	r2, [r7, #20]
 1170 0042 1343     		orr	r3, r2
 1171 0044 7B61     		str	r3, [r7, #20]
1074:Generated_Source\PSoC4/RTC_1.h **** 
1075:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (min / 10u) << RTC_1_10_MINUTES_OFFSET;
 1172              		.loc 1 1075 0
 1173 0046 3B68     		ldr	r3, [r7]
 1174 0048 181C     		mov	r0, r3
 1175 004a 0A21     		mov	r1, #10
 1176 004c FFF7FEFF 		bl	__aeabi_uidiv
 1177 0050 031C     		mov	r3, r0
 1178 0052 1B03     		lsl	r3, r3, #12
 1179 0054 7A69     		ldr	r2, [r7, #20]
 1180 0056 1343     		orr	r3, r2
 1181 0058 7B61     		str	r3, [r7, #20]
1076:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (min % 10u) << RTC_1_MINUTES_OFFSET;
 1182              		.loc 1 1076 0
 1183 005a 3B68     		ldr	r3, [r7]
 1184 005c 181C     		mov	r0, r3
 1185 005e 0A21     		mov	r1, #10
 1186 0060 FFF7FEFF 		bl	__aeabi_uidivmod
 1187 0064 0B1C     		mov	r3, r1
 1188 0066 1B02     		lsl	r3, r3, #8
 1189 0068 7A69     		ldr	r2, [r7, #20]
 1190 006a 1343     		orr	r3, r2
 1191 006c 7B61     		str	r3, [r7, #20]
1077:Generated_Source\PSoC4/RTC_1.h **** 
1078:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (sec / 10u) << RTC_1_10_SECONDS_OFFSET;
 1192              		.loc 1 1078 0
 1193 006e 3B6A     		ldr	r3, [r7, #32]
 1194 0070 181C     		mov	r0, r3
 1195 0072 0A21     		mov	r1, #10
 1196 0074 FFF7FEFF 		bl	__aeabi_uidiv
 1197 0078 031C     		mov	r3, r0
 1198 007a 1B01     		lsl	r3, r3, #4
 1199 007c 7A69     		ldr	r2, [r7, #20]
 1200 007e 1343     		orr	r3, r2
 1201 0080 7B61     		str	r3, [r7, #20]
1079:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (sec % 10u) << RTC_1_SECONDS_OFFSET;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 41


 1202              		.loc 1 1079 0
 1203 0082 3B6A     		ldr	r3, [r7, #32]
 1204 0084 181C     		mov	r0, r3
 1205 0086 0A21     		mov	r1, #10
 1206 0088 FFF7FEFF 		bl	__aeabi_uidivmod
 1207 008c 0B1C     		mov	r3, r1
 1208 008e 1A1C     		mov	r2, r3
 1209 0090 7B69     		ldr	r3, [r7, #20]
 1210 0092 1343     		orr	r3, r2
 1211 0094 7B61     		str	r3, [r7, #20]
1080:Generated_Source\PSoC4/RTC_1.h **** 
1081:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 1212              		.loc 1 1081 0
 1213 0096 7B69     		ldr	r3, [r7, #20]
1082:Generated_Source\PSoC4/RTC_1.h **** }
 1214              		.loc 1 1082 0
 1215 0098 181C     		mov	r0, r3
 1216 009a BD46     		mov	sp, r7
 1217 009c 06B0     		add	sp, sp, #24
 1218              		@ sp needed
 1219 009e 80BD     		pop	{r7, pc}
 1220              		.cfi_endproc
 1221              	.LFE24:
 1222              		.size	RTC_1_ConstructTime, .-RTC_1_ConstructTime
 1223              		.section	.text.RTC_1_ConstructDate,"ax",%progbits
 1224              		.align	2
 1225              		.code	16
 1226              		.thumb_func
 1227              		.type	RTC_1_ConstructDate, %function
 1228              	RTC_1_ConstructDate:
 1229              	.LFB25:
1083:Generated_Source\PSoC4/RTC_1.h **** 
1084:Generated_Source\PSoC4/RTC_1.h **** 
1085:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1086:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_ConstructDate
1087:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1088:Generated_Source\PSoC4/RTC_1.h **** *
1089:Generated_Source\PSoC4/RTC_1.h **** * \brief
1090:Generated_Source\PSoC4/RTC_1.h **** *  Returns the date in the format used in APIs from individual elements
1091:Generated_Source\PSoC4/RTC_1.h **** *  passed (day. Month and year)
1092:Generated_Source\PSoC4/RTC_1.h **** *
1093:Generated_Source\PSoC4/RTC_1.h **** * \param
1094:Generated_Source\PSoC4/RTC_1.h **** *  month The month.
1095:Generated_Source\PSoC4/RTC_1.h **** *
1096:Generated_Source\PSoC4/RTC_1.h **** * \param
1097:Generated_Source\PSoC4/RTC_1.h **** *  day The day.
1098:Generated_Source\PSoC4/RTC_1.h **** *
1099:Generated_Source\PSoC4/RTC_1.h **** * \param
1100:Generated_Source\PSoC4/RTC_1.h **** *  year The year.
1101:Generated_Source\PSoC4/RTC_1.h **** *
1102:Generated_Source\PSoC4/RTC_1.h **** * \return
1103:Generated_Source\PSoC4/RTC_1.h **** *  The date in the format used in API.
1104:Generated_Source\PSoC4/RTC_1.h **** *
1105:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1106:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_ConstructDate(uint32 month, uint32 day, uint32 year)
1107:Generated_Source\PSoC4/RTC_1.h **** {
 1230              		.loc 1 1107 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 42


 1231              		.cfi_startproc
 1232 0000 80B5     		push	{r7, lr}
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 86B0     		sub	sp, sp, #24
 1237              		.cfi_def_cfa_offset 32
 1238 0004 00AF     		add	r7, sp, #0
 1239              		.cfi_def_cfa_register 7
 1240 0006 F860     		str	r0, [r7, #12]
 1241 0008 B960     		str	r1, [r7, #8]
 1242 000a 7A60     		str	r2, [r7, #4]
1108:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
1109:Generated_Source\PSoC4/RTC_1.h ****     uint32 tmpVal = year;
 1243              		.loc 1 1109 0
 1244 000c 7B68     		ldr	r3, [r7, #4]
 1245 000e 7B61     		str	r3, [r7, #20]
1110:Generated_Source\PSoC4/RTC_1.h **** 
1111:Generated_Source\PSoC4/RTC_1.h ****     retVal  = (month / 10u) << RTC_1_10_MONTH_OFFSET;
 1246              		.loc 1 1111 0
 1247 0010 FB68     		ldr	r3, [r7, #12]
 1248 0012 181C     		mov	r0, r3
 1249 0014 0A21     		mov	r1, #10
 1250 0016 FFF7FEFF 		bl	__aeabi_uidiv
 1251 001a 031C     		mov	r3, r0
 1252 001c 1B07     		lsl	r3, r3, #28
 1253 001e 3B61     		str	r3, [r7, #16]
1112:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (month % 10u) << RTC_1_MONTH_OFFSET;
 1254              		.loc 1 1112 0
 1255 0020 FB68     		ldr	r3, [r7, #12]
 1256 0022 181C     		mov	r0, r3
 1257 0024 0A21     		mov	r1, #10
 1258 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 1259 002a 0B1C     		mov	r3, r1
 1260 002c 1B06     		lsl	r3, r3, #24
 1261 002e 3A69     		ldr	r2, [r7, #16]
 1262 0030 1343     		orr	r3, r2
 1263 0032 3B61     		str	r3, [r7, #16]
1113:Generated_Source\PSoC4/RTC_1.h **** 
1114:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (day / 10u) << RTC_1_10_DAY_OFFSET;
 1264              		.loc 1 1114 0
 1265 0034 BB68     		ldr	r3, [r7, #8]
 1266 0036 181C     		mov	r0, r3
 1267 0038 0A21     		mov	r1, #10
 1268 003a FFF7FEFF 		bl	__aeabi_uidiv
 1269 003e 031C     		mov	r3, r0
 1270 0040 1B05     		lsl	r3, r3, #20
 1271 0042 3A69     		ldr	r2, [r7, #16]
 1272 0044 1343     		orr	r3, r2
 1273 0046 3B61     		str	r3, [r7, #16]
1115:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (day % 10u) << RTC_1_DAY_OFFSET;
 1274              		.loc 1 1115 0
 1275 0048 BB68     		ldr	r3, [r7, #8]
 1276 004a 181C     		mov	r0, r3
 1277 004c 0A21     		mov	r1, #10
 1278 004e FFF7FEFF 		bl	__aeabi_uidivmod
 1279 0052 0B1C     		mov	r3, r1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 43


 1280 0054 1B04     		lsl	r3, r3, #16
 1281 0056 3A69     		ldr	r2, [r7, #16]
 1282 0058 1343     		orr	r3, r2
 1283 005a 3B61     		str	r3, [r7, #16]
1116:Generated_Source\PSoC4/RTC_1.h **** 
1117:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (year / 1000u) << RTC_1_1000_YEAR_OFFSET;
 1284              		.loc 1 1117 0
 1285 005c 7B68     		ldr	r3, [r7, #4]
 1286 005e 181C     		mov	r0, r3
 1287 0060 FA23     		mov	r3, #250
 1288 0062 9900     		lsl	r1, r3, #2
 1289 0064 FFF7FEFF 		bl	__aeabi_uidiv
 1290 0068 031C     		mov	r3, r0
 1291 006a 1B03     		lsl	r3, r3, #12
 1292 006c 3A69     		ldr	r2, [r7, #16]
 1293 006e 1343     		orr	r3, r2
 1294 0070 3B61     		str	r3, [r7, #16]
1118:Generated_Source\PSoC4/RTC_1.h ****     tmpVal %= 1000u;
 1295              		.loc 1 1118 0
 1296 0072 7B69     		ldr	r3, [r7, #20]
 1297 0074 181C     		mov	r0, r3
 1298 0076 FA23     		mov	r3, #250
 1299 0078 9900     		lsl	r1, r3, #2
 1300 007a FFF7FEFF 		bl	__aeabi_uidivmod
 1301 007e 0B1C     		mov	r3, r1
 1302 0080 7B61     		str	r3, [r7, #20]
1119:Generated_Source\PSoC4/RTC_1.h **** 
1120:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (tmpVal / 100u) << RTC_1_100_YEAR_OFFSET;
 1303              		.loc 1 1120 0
 1304 0082 7B69     		ldr	r3, [r7, #20]
 1305 0084 181C     		mov	r0, r3
 1306 0086 6421     		mov	r1, #100
 1307 0088 FFF7FEFF 		bl	__aeabi_uidiv
 1308 008c 031C     		mov	r3, r0
 1309 008e 1B02     		lsl	r3, r3, #8
 1310 0090 3A69     		ldr	r2, [r7, #16]
 1311 0092 1343     		orr	r3, r2
 1312 0094 3B61     		str	r3, [r7, #16]
1121:Generated_Source\PSoC4/RTC_1.h ****     tmpVal %= 100u;
 1313              		.loc 1 1121 0
 1314 0096 7B69     		ldr	r3, [r7, #20]
 1315 0098 181C     		mov	r0, r3
 1316 009a 6421     		mov	r1, #100
 1317 009c FFF7FEFF 		bl	__aeabi_uidivmod
 1318 00a0 0B1C     		mov	r3, r1
 1319 00a2 7B61     		str	r3, [r7, #20]
1122:Generated_Source\PSoC4/RTC_1.h **** 
1123:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (tmpVal / 10u) << RTC_1_10_YEAR_OFFSET;
 1320              		.loc 1 1123 0
 1321 00a4 7B69     		ldr	r3, [r7, #20]
 1322 00a6 181C     		mov	r0, r3
 1323 00a8 0A21     		mov	r1, #10
 1324 00aa FFF7FEFF 		bl	__aeabi_uidiv
 1325 00ae 031C     		mov	r3, r0
 1326 00b0 1B01     		lsl	r3, r3, #4
 1327 00b2 3A69     		ldr	r2, [r7, #16]
 1328 00b4 1343     		orr	r3, r2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 44


 1329 00b6 3B61     		str	r3, [r7, #16]
1124:Generated_Source\PSoC4/RTC_1.h ****     retVal |= (tmpVal % 10u) << RTC_1_YEAR_OFFSET;
 1330              		.loc 1 1124 0
 1331 00b8 7B69     		ldr	r3, [r7, #20]
 1332 00ba 181C     		mov	r0, r3
 1333 00bc 0A21     		mov	r1, #10
 1334 00be FFF7FEFF 		bl	__aeabi_uidivmod
 1335 00c2 0B1C     		mov	r3, r1
 1336 00c4 1A1C     		mov	r2, r3
 1337 00c6 3B69     		ldr	r3, [r7, #16]
 1338 00c8 1343     		orr	r3, r2
 1339 00ca 3B61     		str	r3, [r7, #16]
1125:Generated_Source\PSoC4/RTC_1.h **** 
1126:Generated_Source\PSoC4/RTC_1.h ****     return (retVal);
 1340              		.loc 1 1126 0
 1341 00cc 3B69     		ldr	r3, [r7, #16]
1127:Generated_Source\PSoC4/RTC_1.h **** }
 1342              		.loc 1 1127 0
 1343 00ce 181C     		mov	r0, r3
 1344 00d0 BD46     		mov	sp, r7
 1345 00d2 06B0     		add	sp, sp, #24
 1346              		@ sp needed
 1347 00d4 80BD     		pop	{r7, pc}
 1348              		.cfi_endproc
 1349              	.LFE25:
 1350              		.size	RTC_1_ConstructDate, .-RTC_1_ConstructDate
 1351 00d6 C046     		.section	.text.RTC_1_GetDayOfWeek,"ax",%progbits
 1352              		.align	2
 1353              		.code	16
 1354              		.thumb_func
 1355              		.type	RTC_1_GetDayOfWeek, %function
 1356              	RTC_1_GetDayOfWeek:
 1357              	.LFB26:
1128:Generated_Source\PSoC4/RTC_1.h **** 
1129:Generated_Source\PSoC4/RTC_1.h **** 
1130:Generated_Source\PSoC4/RTC_1.h **** /*******************************************************************************
1131:Generated_Source\PSoC4/RTC_1.h **** * Function Name: RTC_1_GetDayOfWeek
1132:Generated_Source\PSoC4/RTC_1.h **** ****************************************************************************//**
1133:Generated_Source\PSoC4/RTC_1.h **** * \internal
1134:Generated_Source\PSoC4/RTC_1.h **** *
1135:Generated_Source\PSoC4/RTC_1.h **** * \brief
1136:Generated_Source\PSoC4/RTC_1.h **** *  Returns a day of the week for a year, month, and day of month that are passed
1137:Generated_Source\PSoC4/RTC_1.h **** *  through parameters. Zeller's congruence is used to calculate the day of
1138:Generated_Source\PSoC4/RTC_1.h **** *  the week.
1139:Generated_Source\PSoC4/RTC_1.h **** *
1140:Generated_Source\PSoC4/RTC_1.h **** *  For the Georgian calendar, Zeller's congruence is:
1141:Generated_Source\PSoC4/RTC_1.h **** *  h = (q + [13 * (m + 1)] + K + [K/4] + [J/4] - 2J) mod 7
1142:Generated_Source\PSoC4/RTC_1.h **** *
1143:Generated_Source\PSoC4/RTC_1.h **** *  h - The day of the week (0 = Saturday, 1 = Sunday, 2 = Monday, ..., 6 = Friday).
1144:Generated_Source\PSoC4/RTC_1.h **** *  q - The day of the month.
1145:Generated_Source\PSoC4/RTC_1.h **** *  m - The month (3 = March, 4 = April, 5 = May, ..., 14 = February)
1146:Generated_Source\PSoC4/RTC_1.h **** *  K - The year of the century (year \mod 100).
1147:Generated_Source\PSoC4/RTC_1.h **** *  J - The zero-based century (actually [year/100]) For example, the zero-based
1148:Generated_Source\PSoC4/RTC_1.h **** *  centuries for 1995 and 2000 are 19 and 20 respectively (not to be
1149:Generated_Source\PSoC4/RTC_1.h **** *  confused with the common ordinal century enumeration which indicates
1150:Generated_Source\PSoC4/RTC_1.h **** *  20th for both cases).
1151:Generated_Source\PSoC4/RTC_1.h **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 45


1152:Generated_Source\PSoC4/RTC_1.h **** * \note In this algorithm January and February are counted as months 13 and 14
1153:Generated_Source\PSoC4/RTC_1.h **** * of the previous year.
1154:Generated_Source\PSoC4/RTC_1.h **** *
1155:Generated_Source\PSoC4/RTC_1.h **** * \param
1156:Generated_Source\PSoC4/RTC_1.h **** *  day The day of the month(1..31)
1157:Generated_Source\PSoC4/RTC_1.h **** *
1158:Generated_Source\PSoC4/RTC_1.h **** * \param
1159:Generated_Source\PSoC4/RTC_1.h **** *  month The month of the year
1160:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_JANUARY <br>
1161:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_FEBRUARY <br>
1162:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_MARCH <br>
1163:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_APRIL <br>
1164:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_MAY <br>
1165:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_JUNE <br>
1166:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_JULY <br>
1167:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_AUGUST <br>
1168:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_SEPTEMBER <br>
1169:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_OCTOBER <br>
1170:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_NOVEMBER <br>
1171:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_DECEMBER <br>
1172:Generated_Source\PSoC4/RTC_1.h **** *
1173:Generated_Source\PSoC4/RTC_1.h **** * \param
1174:Generated_Source\PSoC4/RTC_1.h **** *  year The year value.
1175:Generated_Source\PSoC4/RTC_1.h **** *
1176:Generated_Source\PSoC4/RTC_1.h **** * \return
1177:Generated_Source\PSoC4/RTC_1.h **** * Returns a day of the week
1178:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_SUNDAY <br>
1179:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_MONDAY <br>
1180:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_TUESDAY <br>
1181:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_WEDNESDAY <br>
1182:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_THURSDAY <br>
1183:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_FRIDAY <br>
1184:Generated_Source\PSoC4/RTC_1.h **** * RTC_1_SATURDAY <br>
1185:Generated_Source\PSoC4/RTC_1.h **** *
1186:Generated_Source\PSoC4/RTC_1.h **** * \endinternal
1187:Generated_Source\PSoC4/RTC_1.h **** *******************************************************************************/
1188:Generated_Source\PSoC4/RTC_1.h **** static CY_INLINE uint32 RTC_1_GetDayOfWeek(uint32 day, uint32 month, uint32 year)
1189:Generated_Source\PSoC4/RTC_1.h **** {
 1358              		.loc 1 1189 0
 1359              		.cfi_startproc
 1360 0000 90B5     		push	{r4, r7, lr}
 1361              		.cfi_def_cfa_offset 12
 1362              		.cfi_offset 4, -12
 1363              		.cfi_offset 7, -8
 1364              		.cfi_offset 14, -4
 1365 0002 87B0     		sub	sp, sp, #28
 1366              		.cfi_def_cfa_offset 40
 1367 0004 00AF     		add	r7, sp, #0
 1368              		.cfi_def_cfa_register 7
 1369 0006 F860     		str	r0, [r7, #12]
 1370 0008 B960     		str	r1, [r7, #8]
 1371 000a 7A60     		str	r2, [r7, #4]
1190:Generated_Source\PSoC4/RTC_1.h ****     uint32 retVal;
1191:Generated_Source\PSoC4/RTC_1.h **** 
1192:Generated_Source\PSoC4/RTC_1.h ****     /* Converts month number from regular convention
1193:Generated_Source\PSoC4/RTC_1.h ****      * (1=January,..., 12=December) to convention required for this
1194:Generated_Source\PSoC4/RTC_1.h ****      * algorithm(January and February are counted as months 13 and 14 of
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 46


1195:Generated_Source\PSoC4/RTC_1.h ****      * previous year).
1196:Generated_Source\PSoC4/RTC_1.h ****     */
1197:Generated_Source\PSoC4/RTC_1.h ****     if(month < (uint32)RTC_1_MARCH)
 1372              		.loc 1 1197 0
 1373 000c BB68     		ldr	r3, [r7, #8]
 1374 000e 022B     		cmp	r3, #2
 1375 0010 05D8     		bhi	.L76
1198:Generated_Source\PSoC4/RTC_1.h ****     {
1199:Generated_Source\PSoC4/RTC_1.h ****         month = 12u + month;
 1376              		.loc 1 1199 0
 1377 0012 BB68     		ldr	r3, [r7, #8]
 1378 0014 0C33     		add	r3, r3, #12
 1379 0016 BB60     		str	r3, [r7, #8]
1200:Generated_Source\PSoC4/RTC_1.h ****         year--;
 1380              		.loc 1 1200 0
 1381 0018 7B68     		ldr	r3, [r7, #4]
 1382 001a 013B     		sub	r3, r3, #1
 1383 001c 7B60     		str	r3, [r7, #4]
 1384              	.L76:
1201:Generated_Source\PSoC4/RTC_1.h ****     }
1202:Generated_Source\PSoC4/RTC_1.h **** 
1203:Generated_Source\PSoC4/RTC_1.h ****     /* Calculates Day of Week using Zeller's congruence algorithms.
1204:Generated_Source\PSoC4/RTC_1.h ****     */
1205:Generated_Source\PSoC4/RTC_1.h ****     retVal = (day + (((month + 1u) * 26u) / 10u) + year + (year / 4u) + (6u * (year / 100u)) + (yea
 1385              		.loc 1 1205 0
 1386 001e BB68     		ldr	r3, [r7, #8]
 1387 0020 0133     		add	r3, r3, #1
 1388 0022 1A22     		mov	r2, #26
 1389 0024 5343     		mul	r3, r2
 1390 0026 181C     		mov	r0, r3
 1391 0028 0A21     		mov	r1, #10
 1392 002a FFF7FEFF 		bl	__aeabi_uidiv
 1393 002e 031C     		mov	r3, r0
 1394 0030 1A1C     		mov	r2, r3
 1395 0032 FB68     		ldr	r3, [r7, #12]
 1396 0034 D218     		add	r2, r2, r3
 1397 0036 7B68     		ldr	r3, [r7, #4]
 1398 0038 D218     		add	r2, r2, r3
 1399 003a 7B68     		ldr	r3, [r7, #4]
 1400 003c 9B08     		lsr	r3, r3, #2
 1401 003e D418     		add	r4, r2, r3
 1402 0040 7B68     		ldr	r3, [r7, #4]
 1403 0042 181C     		mov	r0, r3
 1404 0044 6421     		mov	r1, #100
 1405 0046 FFF7FEFF 		bl	__aeabi_uidiv
 1406 004a 031C     		mov	r3, r0
 1407 004c 1A1C     		mov	r2, r3
 1408 004e 131C     		mov	r3, r2
 1409 0050 5B00     		lsl	r3, r3, #1
 1410 0052 9B18     		add	r3, r3, r2
 1411 0054 5B00     		lsl	r3, r3, #1
 1412 0056 E418     		add	r4, r4, r3
 1413 0058 7B68     		ldr	r3, [r7, #4]
 1414 005a 181C     		mov	r0, r3
 1415 005c C823     		mov	r3, #200
 1416 005e 5900     		lsl	r1, r3, #1
 1417 0060 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 47


 1418 0064 031C     		mov	r3, r0
 1419 0066 E318     		add	r3, r4, r3
 1420 0068 181C     		mov	r0, r3
 1421 006a 0721     		mov	r1, #7
 1422 006c FFF7FEFF 		bl	__aeabi_uidivmod
 1423 0070 0B1C     		mov	r3, r1
 1424 0072 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC4/RTC_1.h **** 
1207:Generated_Source\PSoC4/RTC_1.h ****     /* Makes correction for Saturday. Saturday number should be 7 instead of 0. */
1208:Generated_Source\PSoC4/RTC_1.h ****     if(0u == retVal)
 1425              		.loc 1 1208 0
 1426 0074 7B69     		ldr	r3, [r7, #20]
 1427 0076 002B     		cmp	r3, #0
 1428 0078 01D1     		bne	.L77
1209:Generated_Source\PSoC4/RTC_1.h ****     {
1210:Generated_Source\PSoC4/RTC_1.h ****         retVal = (uint32)RTC_1_SATURDAY;
 1429              		.loc 1 1210 0
 1430 007a 0723     		mov	r3, #7
 1431 007c 7B61     		str	r3, [r7, #20]
 1432              	.L77:
1211:Generated_Source\PSoC4/RTC_1.h ****     }
1212:Generated_Source\PSoC4/RTC_1.h **** 
1213:Generated_Source\PSoC4/RTC_1.h ****     return(retVal);
 1433              		.loc 1 1213 0
 1434 007e 7B69     		ldr	r3, [r7, #20]
1214:Generated_Source\PSoC4/RTC_1.h **** }
 1435              		.loc 1 1214 0
 1436 0080 181C     		mov	r0, r3
 1437 0082 BD46     		mov	sp, r7
 1438 0084 07B0     		add	sp, sp, #28
 1439              		@ sp needed
 1440 0086 90BD     		pop	{r4, r7, pc}
 1441              		.cfi_endproc
 1442              	.LFE26:
 1443              		.size	RTC_1_GetDayOfWeek, .-RTC_1_GetDayOfWeek
 1444              		.comm	RTC_1_initVar,1,1
 1445              		.comm	RTC_1_unixTime,8,8
 1446              		.comm	RTC_1_currentTimeDate,16,4
 1447              		.bss
 1448              		.align	2
 1449              	RTC_1_updateTimePeriod:
 1450 0000 00000000 		.space	4
 1451              		.align	2
 1452              	RTC_1_tickRefOneSec:
 1453 0004 00000000 		.space	4
 1454              		.comm	RTC_1_dstStatus,1,1
 1455              		.align	2
 1456              	RTC_1_dstTimeOffset:
 1457 0008 00000000 		.space	4
 1458 000c 00000000 		.align	3
 1459              	RTC_1_unixTimeDstStart:
 1460 0010 00000000 		.space	8
 1460      00000000 
 1461              		.align	3
 1462              	RTC_1_unixTimeDstStop:
 1463 0018 00000000 		.space	8
 1463      00000000 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 48


 1464              		.comm	RTC_1_dstStartTime,24,4
 1465              		.comm	RTC_1_dstStopTime,24,4
 1466              		.comm	RTC_1_alarmCurStatus,4,4
 1467              		.global	RTC_1_alarmCfgMask
 1468              		.data
 1469              		.align	2
 1470              		.type	RTC_1_alarmCfgMask, %object
 1471              		.size	RTC_1_alarmCfgMask, 4
 1472              	RTC_1_alarmCfgMask:
 1473 0000 FF000000 		.word	255
 1474              		.bss
 1475              		.align	3
 1476              	RTC_1_unixTimeAlarm:
 1477 0020 00000000 		.space	8
 1477      00000000 
 1478              		.comm	RTC_1_alarmCfgTimeDate,16,4
 1479              		.global	RTC_1_alarmCallbackPtr
 1480              		.align	2
 1481              		.type	RTC_1_alarmCallbackPtr, %object
 1482              		.size	RTC_1_alarmCallbackPtr, 4
 1483              	RTC_1_alarmCallbackPtr:
 1484 0028 00000000 		.space	4
 1485              		.global	RTC_1_daysBeforeMonthTbl
 1486              		.section	.rodata
 1487              		.align	2
 1488              		.type	RTC_1_daysBeforeMonthTbl, %object
 1489              		.size	RTC_1_daysBeforeMonthTbl, 24
 1490              	RTC_1_daysBeforeMonthTbl:
 1491 0000 0000     		.short	0
 1492 0002 1F00     		.short	31
 1493 0004 3B00     		.short	59
 1494 0006 5A00     		.short	90
 1495 0008 7800     		.short	120
 1496 000a 9700     		.short	151
 1497 000c B500     		.short	181
 1498 000e D400     		.short	212
 1499 0010 F300     		.short	243
 1500 0012 1101     		.short	273
 1501 0014 3001     		.short	304
 1502 0016 4E01     		.short	334
 1503              		.global	RTC_1_daysInMonthTbl
 1504              		.align	2
 1505              		.type	RTC_1_daysInMonthTbl, %object
 1506              		.size	RTC_1_daysInMonthTbl, 12
 1507              	RTC_1_daysInMonthTbl:
 1508 0018 1F       		.byte	31
 1509 0019 1C       		.byte	28
 1510 001a 1F       		.byte	31
 1511 001b 1E       		.byte	30
 1512 001c 1F       		.byte	31
 1513 001d 1E       		.byte	30
 1514 001e 1F       		.byte	31
 1515 001f 1F       		.byte	31
 1516 0020 1E       		.byte	30
 1517 0021 1F       		.byte	31
 1518 0022 1E       		.byte	30
 1519 0023 1F       		.byte	31
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 49


 1520              		.section	.text.RTC_1_Start,"ax",%progbits
 1521              		.align	2
 1522              		.global	RTC_1_Start
 1523              		.code	16
 1524              		.thumb_func
 1525              		.type	RTC_1_Start, %function
 1526              	RTC_1_Start:
 1527              	.LFB27:
 1528              		.file 2 "Generated_Source\\PSoC4\\RTC_1.c"
   1:Generated_Source\PSoC4/RTC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/RTC_1.c **** * \file Name: RTC_1.c
   3:Generated_Source\PSoC4/RTC_1.c **** * \version 1.10
   4:Generated_Source\PSoC4/RTC_1.c **** *
   5:Generated_Source\PSoC4/RTC_1.c **** * \brief
   6:Generated_Source\PSoC4/RTC_1.c **** *  This file provides the source code to the API for the RTC_P4 Component.
   7:Generated_Source\PSoC4/RTC_1.c **** *
   8:Generated_Source\PSoC4/RTC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/RTC_1.c **** * \copyright
  10:Generated_Source\PSoC4/RTC_1.c **** * Copyright 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/RTC_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/RTC_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/RTC_1.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
  15:Generated_Source\PSoC4/RTC_1.c **** 
  16:Generated_Source\PSoC4/RTC_1.c **** #include "RTC_1.h"
  17:Generated_Source\PSoC4/RTC_1.c **** 
  18:Generated_Source\PSoC4/RTC_1.c **** uint8  RTC_1_initVar;
  19:Generated_Source\PSoC4/RTC_1.c **** 
  20:Generated_Source\PSoC4/RTC_1.c **** volatile uint64 RTC_1_unixTime;
  21:Generated_Source\PSoC4/RTC_1.c **** RTC_1_DATE_TIME RTC_1_currentTimeDate;
  22:Generated_Source\PSoC4/RTC_1.c **** 
  23:Generated_Source\PSoC4/RTC_1.c **** static uint32 RTC_1_updateTimePeriod;
  24:Generated_Source\PSoC4/RTC_1.c **** static uint32 RTC_1_tickRefOneSec;
  25:Generated_Source\PSoC4/RTC_1.c **** 
  26:Generated_Source\PSoC4/RTC_1.c **** uint8  RTC_1_dstStatus;
  27:Generated_Source\PSoC4/RTC_1.c **** static uint32 RTC_1_dstTimeOffset;
  28:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_DST_STATUS)
  29:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint64 RTC_1_unixTimeDstStart;
  30:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint64 RTC_1_unixTimeDstStop;
  31:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DST_TIME RTC_1_dstStartTime;
  32:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DST_TIME RTC_1_dstStopTime;
  33:Generated_Source\PSoC4/RTC_1.c **** #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
  34:Generated_Source\PSoC4/RTC_1.c **** 
  35:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_alarmCurStatus;
  36:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_ALARM_STATUS)
  37:Generated_Source\PSoC4/RTC_1.c ****     uint32  RTC_1_alarmCfgMask = 0xFFu;
  38:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint64 RTC_1_unixTimeAlarm;
  39:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DATE_TIME RTC_1_alarmCfgTimeDate;
  40:Generated_Source\PSoC4/RTC_1.c ****     void (*RTC_1_alarmCallbackPtr)(void) = (void *)0;
  41:Generated_Source\PSoC4/RTC_1.c **** #endif /* (0u != RTC_1_INITIAL_ALARM_STATUS) */
  42:Generated_Source\PSoC4/RTC_1.c **** 
  43:Generated_Source\PSoC4/RTC_1.c **** const uint16 RTC_1_daysBeforeMonthTbl[RTC_1_MONTHS_PER_YEAR] = {
  44:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u), /* JANUARY */
  45:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u), /* FEBRUARY */
  46:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u), /* MARCH */
  47:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u), /* APRIL */
  48:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u), /* MAY */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 50


  49:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u), /* JUNE */
  50:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u), /* JULY 
  51:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u), /*
  52:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  53:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  54:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  55:Generated_Source\PSoC4/RTC_1.c ****                                                  (0u + 31u + 28u + 31u + 30u + 31u + 30u + 31u + 31
  56:Generated_Source\PSoC4/RTC_1.c **** 
  57:Generated_Source\PSoC4/RTC_1.c **** const uint8 RTC_1_daysInMonthTbl[RTC_1_MONTHS_PER_YEAR] = {RTC_1_DAYS_IN_JANUARY,
  58:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_FEBR
  59:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_MARC
  60:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_APRI
  61:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_MAY,
  62:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_JUNE
  63:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_JULY
  64:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_AUGU
  65:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_SEPT
  66:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_OCTO
  67:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_NOVE
  68:Generated_Source\PSoC4/RTC_1.c ****                                                                                  RTC_1_DAYS_IN_DECE
  69:Generated_Source\PSoC4/RTC_1.c **** 
  70:Generated_Source\PSoC4/RTC_1.c **** 
  71:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
  72:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Start
  73:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
  74:Generated_Source\PSoC4/RTC_1.c **** *
  75:Generated_Source\PSoC4/RTC_1.c **** * \brief
  76:Generated_Source\PSoC4/RTC_1.c **** *  Performs all the required calculations for the time and date registers and
  77:Generated_Source\PSoC4/RTC_1.c **** *  initializes the component along with the date and time selected in the
  78:Generated_Source\PSoC4/RTC_1.c **** *  customizer. 
  79:Generated_Source\PSoC4/RTC_1.c **** *
  80:Generated_Source\PSoC4/RTC_1.c **** *  If "Implement RTC update manually" is disabled in the customizer
  81:Generated_Source\PSoC4/RTC_1.c **** *  and if WDT or WCO timer is selected as a source in the clocks configuration 
  82:Generated_Source\PSoC4/RTC_1.c **** *  window (low frequency clocks tab), attaches RTC_Update API to a corresponding
  83:Generated_Source\PSoC4/RTC_1.c **** *  WDT's or WCO's ISR callback.
  84:Generated_Source\PSoC4/RTC_1.c **** *
  85:Generated_Source\PSoC4/RTC_1.c **** * \note "Implement RTC update manually" checkbox is available for PSoC 4200L / 
  86:Generated_Source\PSoC4/RTC_1.c **** * PSoC 4100M / PSoC 4200M / PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4000S / PSoC 
  87:Generated_Source\PSoC4/RTC_1.c **** * 4100S and Analog Coprocessor.
  88:Generated_Source\PSoC4/RTC_1.c **** *
  89:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
  90:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Start(void)
  91:Generated_Source\PSoC4/RTC_1.c **** {
 1529              		.loc 2 91 0
 1530              		.cfi_startproc
 1531 0000 80B5     		push	{r7, lr}
 1532              		.cfi_def_cfa_offset 8
 1533              		.cfi_offset 7, -8
 1534              		.cfi_offset 14, -4
 1535 0002 00AF     		add	r7, sp, #0
 1536              		.cfi_def_cfa_register 7
  92:Generated_Source\PSoC4/RTC_1.c ****     if(0u == RTC_1_initVar)
 1537              		.loc 2 92 0
 1538 0004 034B     		ldr	r3, .L81
 1539 0006 1B78     		ldrb	r3, [r3]
 1540 0008 002B     		cmp	r3, #0
 1541 000a 01D1     		bne	.L79
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 51


  93:Generated_Source\PSoC4/RTC_1.c ****     {
  94:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_Init();
 1542              		.loc 2 94 0
 1543 000c FFF7FEFF 		bl	RTC_1_Init
 1544              	.L79:
  95:Generated_Source\PSoC4/RTC_1.c ****     }
  96:Generated_Source\PSoC4/RTC_1.c **** 
  97:Generated_Source\PSoC4/RTC_1.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
  98:Generated_Source\PSoC4/RTC_1.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE))
  99:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_CySysRtcSetCallback(CYDEV_RTC_SOURCE_WDT);
 100:Generated_Source\PSoC4/RTC_1.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE)) */
 101:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
 102:Generated_Source\PSoC4/RTC_1.c **** }
 1545              		.loc 2 102 0
 1546 0010 BD46     		mov	sp, r7
 1547              		@ sp needed
 1548 0012 80BD     		pop	{r7, pc}
 1549              	.L82:
 1550              		.align	2
 1551              	.L81:
 1552 0014 00000000 		.word	RTC_1_initVar
 1553              		.cfi_endproc
 1554              	.LFE27:
 1555              		.size	RTC_1_Start, .-RTC_1_Start
 1556              		.section	.text.RTC_1_Stop,"ax",%progbits
 1557              		.align	2
 1558              		.global	RTC_1_Stop
 1559              		.code	16
 1560              		.thumb_func
 1561              		.type	RTC_1_Stop, %function
 1562              	RTC_1_Stop:
 1563              	.LFB28:
 103:Generated_Source\PSoC4/RTC_1.c **** 
 104:Generated_Source\PSoC4/RTC_1.c **** 
 105:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 106:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Stop
 107:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 108:Generated_Source\PSoC4/RTC_1.c **** *
 109:Generated_Source\PSoC4/RTC_1.c **** * \brief
 110:Generated_Source\PSoC4/RTC_1.c **** *  Stops the time and date updates.
 111:Generated_Source\PSoC4/RTC_1.c **** *
 112:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 113:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Stop(void)
 114:Generated_Source\PSoC4/RTC_1.c **** {
 1564              		.loc 2 114 0
 1565              		.cfi_startproc
 1566 0000 80B5     		push	{r7, lr}
 1567              		.cfi_def_cfa_offset 8
 1568              		.cfi_offset 7, -8
 1569              		.cfi_offset 14, -4
 1570 0002 00AF     		add	r7, sp, #0
 1571              		.cfi_def_cfa_register 7
 115:Generated_Source\PSoC4/RTC_1.c ****     #if defined(CYDEV_RTC_SOURCE_WDT)
 116:Generated_Source\PSoC4/RTC_1.c ****         #if((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE))
 117:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_CySysRtcResetCallback(CYDEV_RTC_SOURCE_WDT);
 118:Generated_Source\PSoC4/RTC_1.c ****         #endif /* ((0u != CYDEV_WDT_GENERATE_ISR) && (0u == RTC_1_INITIAL_UPDATE_MODE)) */
 119:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (CYDEV_RTC_SOURCE_WDT) */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 52


 120:Generated_Source\PSoC4/RTC_1.c **** }
 1572              		.loc 2 120 0
 1573 0004 BD46     		mov	sp, r7
 1574              		@ sp needed
 1575 0006 80BD     		pop	{r7, pc}
 1576              		.cfi_endproc
 1577              	.LFE28:
 1578              		.size	RTC_1_Stop, .-RTC_1_Stop
 1579              		.section	.text.RTC_1_Init,"ax",%progbits
 1580              		.align	2
 1581              		.global	RTC_1_Init
 1582              		.code	16
 1583              		.thumb_func
 1584              		.type	RTC_1_Init, %function
 1585              	RTC_1_Init:
 1586              	.LFB29:
 121:Generated_Source\PSoC4/RTC_1.c **** 
 122:Generated_Source\PSoC4/RTC_1.c **** 
 123:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 124:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Init
 125:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 126:Generated_Source\PSoC4/RTC_1.c **** *
 127:Generated_Source\PSoC4/RTC_1.c **** * \brief
 128:Generated_Source\PSoC4/RTC_1.c **** *  Initializes or restores the component according to the customizer Configure
 129:Generated_Source\PSoC4/RTC_1.c **** *  dialog settings. 
 130:Generated_Source\PSoC4/RTC_1.c **** *
 131:Generated_Source\PSoC4/RTC_1.c **** * It is not necessary to call RTC_Init() because
 132:Generated_Source\PSoC4/RTC_1.c **** *  RTC_Start() API calls this function and is the preferred method to begin
 133:Generated_Source\PSoC4/RTC_1.c **** *  component operation.
 134:Generated_Source\PSoC4/RTC_1.c **** *
 135:Generated_Source\PSoC4/RTC_1.c **** *  All registers are set to values according to the customizer Configure
 136:Generated_Source\PSoC4/RTC_1.c **** *  dialog. The default date value, if not set by the user before this function 
 137:Generated_Source\PSoC4/RTC_1.c **** *  call, is 12:00:00 AM January 1, 2000.
 138:Generated_Source\PSoC4/RTC_1.c **** *
 139:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Init(void)
 141:Generated_Source\PSoC4/RTC_1.c **** {
 1587              		.loc 2 141 0
 1588              		.cfi_startproc
 1589 0000 90B5     		push	{r4, r7, lr}
 1590              		.cfi_def_cfa_offset 12
 1591              		.cfi_offset 4, -12
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
 1594 0002 8BB0     		sub	sp, sp, #44
 1595              		.cfi_def_cfa_offset 56
 1596 0004 02AF     		add	r7, sp, #8
 1597              		.cfi_def_cfa 7, 48
 142:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpDate;
 143:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpTime;
 144:Generated_Source\PSoC4/RTC_1.c **** 
 145:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 146:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DST_TIME dstTimeTmp;
 147:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 148:Generated_Source\PSoC4/RTC_1.c **** 
 149:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_initVar = 1u;
 1598              		.loc 2 149 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 53


 1599 0006 464B     		ldr	r3, .L90
 1600 0008 0122     		mov	r2, #1
 1601 000a 1A70     		strb	r2, [r3]
 150:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_dstTimeOffset = 0uL;
 1602              		.loc 2 150 0
 1603 000c 454B     		ldr	r3, .L90+4
 1604 000e 0022     		mov	r2, #0
 1605 0010 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.status = 0uL;
 1606              		.loc 2 151 0
 1607 0012 454B     		ldr	r3, .L90+8
 1608 0014 0022     		mov	r2, #0
 1609 0016 DA60     		str	r2, [r3, #12]
 152:Generated_Source\PSoC4/RTC_1.c **** 
 153:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_dstStatus      = RTC_1_INITIAL_DST_STATUS;
 1610              		.loc 2 153 0
 1611 0018 444B     		ldr	r3, .L90+12
 1612 001a 0122     		mov	r2, #1
 1613 001c 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_alarmCurStatus = RTC_1_INITIAL_ALARM_STATUS;
 1614              		.loc 2 154 0
 1615 001e 444B     		ldr	r3, .L90+16
 1616 0020 0122     		mov	r2, #1
 1617 0022 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/RTC_1.c **** 
 156:Generated_Source\PSoC4/RTC_1.c ****     tmpDate = RTC_1_ConstructDate(RTC_1_INITIAL_MONTH,
 1618              		.loc 2 156 0
 1619 0024 434B     		ldr	r3, .L90+20
 1620 0026 0120     		mov	r0, #1
 1621 0028 0121     		mov	r1, #1
 1622 002a 1A1C     		mov	r2, r3
 1623 002c FFF7FEFF 		bl	RTC_1_ConstructDate
 1624 0030 031C     		mov	r3, r0
 1625 0032 FB61     		str	r3, [r7, #28]
 157:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_DAY,
 158:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_YEAR);
 159:Generated_Source\PSoC4/RTC_1.c **** 
 160:Generated_Source\PSoC4/RTC_1.c ****     tmpTime = RTC_1_ConstructTime(RTC_1_INITIAL_TIME_FORMAT,
 1626              		.loc 2 160 0
 1627 0034 0023     		mov	r3, #0
 1628 0036 0093     		str	r3, [sp]
 1629 0038 0020     		mov	r0, #0
 1630 003a 0021     		mov	r1, #0
 1631 003c 0022     		mov	r2, #0
 1632 003e 0023     		mov	r3, #0
 1633 0040 FFF7FEFF 		bl	RTC_1_ConstructTime
 1634 0044 031C     		mov	r3, r0
 1635 0046 BB61     		str	r3, [r7, #24]
 161:Generated_Source\PSoC4/RTC_1.c ****                                           0u,
 162:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_HOUR,
 163:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_MINUTE,
 164:Generated_Source\PSoC4/RTC_1.c ****                                           RTC_1_INITIAL_SECOND);
 165:Generated_Source\PSoC4/RTC_1.c **** 
 166:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 167:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStatus = 0u;
 1636              		.loc 2 167 0
 1637 0048 384B     		ldr	r3, .L90+12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 54


 1638 004a 0022     		mov	r2, #0
 1639 004c 1A70     		strb	r2, [r3]
 168:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status = (1uL << RTC_1_STATUS_DST_OFFSET);
 1640              		.loc 2 168 0
 1641 004e 364B     		ldr	r3, .L90+8
 1642 0050 0222     		mov	r2, #2
 1643 0052 DA60     		str	r2, [r3, #12]
 169:Generated_Source\PSoC4/RTC_1.c **** 
 170:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.timeFormat    = RTC_1_INITIAL_DST_DATE_TYPE;
 1644              		.loc 2 170 0
 1645 0054 3B1C     		mov	r3, r7
 1646 0056 0022     		mov	r2, #0
 1647 0058 1A75     		strb	r2, [r3, #20]
 171:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.hour          = RTC_1_INITIAL_DST_START_HRS;
 1648              		.loc 2 171 0
 1649 005a 3B1C     		mov	r3, r7
 1650 005c 0022     		mov	r2, #0
 1651 005e 1A60     		str	r2, [r3]
 172:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfWeek     = RTC_1_INITIAL_DST_START_DOW;
 1652              		.loc 2 172 0
 1653 0060 3B1C     		mov	r3, r7
 1654 0062 0122     		mov	r2, #1
 1655 0064 5A60     		str	r2, [r3, #4]
 173:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.weekOfMonth   = RTC_1_INITIAL_DST_START_WOM;
 1656              		.loc 2 173 0
 1657 0066 3B1C     		mov	r3, r7
 1658 0068 0622     		mov	r2, #6
 1659 006a DA60     		str	r2, [r3, #12]
 174:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfMonth    = RTC_1_INITIAL_DST_START_DOM;
 1660              		.loc 2 174 0
 1661 006c 3B1C     		mov	r3, r7
 1662 006e 1622     		mov	r2, #22
 1663 0070 9A60     		str	r2, [r3, #8]
 175:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.month         = RTC_1_INITIAL_DST_START_MONTH;
 1664              		.loc 2 175 0
 1665 0072 3B1C     		mov	r3, r7
 1666 0074 0322     		mov	r2, #3
 1667 0076 1A61     		str	r2, [r3, #16]
 176:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_SetDSTStartTime(&dstTimeTmp, (RTC_1_DST_DATETYPE_ENUM)RTC_1_INITIAL_DST_DATE_TYPE);
 1668              		.loc 2 176 0
 1669 0078 3B1C     		mov	r3, r7
 1670 007a 181C     		mov	r0, r3
 1671 007c 0021     		mov	r1, #0
 1672 007e FFF7FEFF 		bl	RTC_1_SetDSTStartTime
 177:Generated_Source\PSoC4/RTC_1.c **** 
 178:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.timeFormat    = RTC_1_INITIAL_DST_DATE_TYPE;
 1673              		.loc 2 178 0
 1674 0082 3B1C     		mov	r3, r7
 1675 0084 0022     		mov	r2, #0
 1676 0086 1A75     		strb	r2, [r3, #20]
 179:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.hour          = RTC_1_INITIAL_DST_STOP_HRS;
 1677              		.loc 2 179 0
 1678 0088 3B1C     		mov	r3, r7
 1679 008a 0022     		mov	r2, #0
 1680 008c 1A60     		str	r2, [r3]
 180:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfWeek     = RTC_1_INITIAL_DST_STOP_DOW;
 1681              		.loc 2 180 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 55


 1682 008e 3B1C     		mov	r3, r7
 1683 0090 0122     		mov	r2, #1
 1684 0092 5A60     		str	r2, [r3, #4]
 181:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.weekOfMonth   = RTC_1_INITIAL_DST_STOP_WOM;
 1685              		.loc 2 181 0
 1686 0094 3B1C     		mov	r3, r7
 1687 0096 0622     		mov	r2, #6
 1688 0098 DA60     		str	r2, [r3, #12]
 182:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.dayOfMonth    = RTC_1_INITIAL_DST_STOP_DOM;
 1689              		.loc 2 182 0
 1690 009a 3B1C     		mov	r3, r7
 1691 009c 1622     		mov	r2, #22
 1692 009e 9A60     		str	r2, [r3, #8]
 183:Generated_Source\PSoC4/RTC_1.c ****         dstTimeTmp.month         = RTC_1_INITIAL_DST_STOP_MONTH;
 1693              		.loc 2 183 0
 1694 00a0 3B1C     		mov	r3, r7
 1695 00a2 0A22     		mov	r2, #10
 1696 00a4 1A61     		str	r2, [r3, #16]
 184:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_SetDSTStopTime(&dstTimeTmp, (RTC_1_DST_DATETYPE_ENUM)RTC_1_INITIAL_DST_DATE_TYPE);
 1697              		.loc 2 184 0
 1698 00a6 3B1C     		mov	r3, r7
 1699 00a8 181C     		mov	r0, r3
 1700 00aa 0021     		mov	r1, #0
 1701 00ac FFF7FEFF 		bl	RTC_1_SetDSTStopTime
 185:Generated_Source\PSoC4/RTC_1.c **** 
 186:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 1702              		.loc 2 186 0
 1703 00b0 214B     		ldr	r3, .L90+24
 1704 00b2 181C     		mov	r0, r3
 1705 00b4 FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 1706 00b8 031C     		mov	r3, r0
 1707 00ba 0C1C     		mov	r4, r1
 1708 00bc 1F4A     		ldr	r2, .L90+28
 1709 00be 1360     		str	r3, [r2]
 1710 00c0 5460     		str	r4, [r2, #4]
 187:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 1711              		.loc 2 187 0
 1712 00c2 1F4B     		ldr	r3, .L90+32
 1713 00c4 181C     		mov	r0, r3
 1714 00c6 FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 1715 00ca 031C     		mov	r3, r0
 1716 00cc 0C1C     		mov	r4, r1
 1717 00ce 1D4A     		ldr	r2, .L90+36
 1718 00d0 1360     		str	r3, [r2]
 1719 00d2 5460     		str	r4, [r2, #4]
 188:Generated_Source\PSoC4/RTC_1.c **** 
 189:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 1720              		.loc 2 189 0
 1721 00d4 1C4B     		ldr	r3, .L90+40
 1722 00d6 5C68     		ldr	r4, [r3, #4]
 1723 00d8 1B68     		ldr	r3, [r3]
 1724 00da 184A     		ldr	r2, .L90+28
 1725 00dc 1168     		ldr	r1, [r2]
 1726 00de 5268     		ldr	r2, [r2, #4]
 1727 00e0 A242     		cmp	r2, r4
 1728 00e2 14D8     		bhi	.L85
 1729 00e4 01D1     		bne	.L88
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 56


 1730 00e6 9942     		cmp	r1, r3
 1731 00e8 11D8     		bhi	.L85
 1732              	.L88:
 190:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 1733              		.loc 2 190 0 discriminator 1
 1734 00ea 174B     		ldr	r3, .L90+40
 1735 00ec 1968     		ldr	r1, [r3]
 1736 00ee 5A68     		ldr	r2, [r3, #4]
 1737 00f0 144B     		ldr	r3, .L90+36
 1738 00f2 5C68     		ldr	r4, [r3, #4]
 1739 00f4 1B68     		ldr	r3, [r3]
 189:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 1740              		.loc 2 189 0 discriminator 1
 1741 00f6 A242     		cmp	r2, r4
 1742 00f8 09D8     		bhi	.L85
 1743 00fa 01D1     		bne	.L89
 1744 00fc 9942     		cmp	r1, r3
 1745 00fe 06D8     		bhi	.L85
 1746              	.L89:
 191:Generated_Source\PSoC4/RTC_1.c ****         {
 192:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 1747              		.loc 2 192 0
 1748 0100 0A4B     		ldr	r3, .L90+12
 1749 0102 0122     		mov	r2, #1
 1750 0104 1A70     		strb	r2, [r3]
 193:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 1751              		.loc 2 193 0
 1752 0106 074B     		ldr	r3, .L90+4
 1753 0108 E122     		mov	r2, #225
 1754 010a 1201     		lsl	r2, r2, #4
 1755 010c 1A60     		str	r2, [r3]
 1756              	.L85:
 194:Generated_Source\PSoC4/RTC_1.c ****         }
 195:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 196:Generated_Source\PSoC4/RTC_1.c **** 
 197:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_SetDateAndTime(tmpTime, tmpDate);
 1757              		.loc 2 197 0
 1758 010e BA69     		ldr	r2, [r7, #24]
 1759 0110 FB69     		ldr	r3, [r7, #28]
 1760 0112 101C     		mov	r0, r2
 1761 0114 191C     		mov	r1, r3
 1762 0116 FFF7FEFF 		bl	RTC_1_SetDateAndTime
 198:Generated_Source\PSoC4/RTC_1.c **** }
 1763              		.loc 2 198 0
 1764 011a BD46     		mov	sp, r7
 1765 011c 09B0     		add	sp, sp, #36
 1766              		@ sp needed
 1767 011e 90BD     		pop	{r4, r7, pc}
 1768              	.L91:
 1769              		.align	2
 1770              	.L90:
 1771 0120 00000000 		.word	RTC_1_initVar
 1772 0124 08000000 		.word	RTC_1_dstTimeOffset
 1773 0128 00000000 		.word	RTC_1_currentTimeDate
 1774 012c 00000000 		.word	RTC_1_dstStatus
 1775 0130 00000000 		.word	RTC_1_alarmCurStatus
 1776 0134 B2070000 		.word	1970
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 57


 1777 0138 00000000 		.word	RTC_1_dstStartTime
 1778 013c 10000000 		.word	RTC_1_unixTimeDstStart
 1779 0140 00000000 		.word	RTC_1_dstStopTime
 1780 0144 18000000 		.word	RTC_1_unixTimeDstStop
 1781 0148 00000000 		.word	RTC_1_unixTime
 1782              		.cfi_endproc
 1783              	.LFE29:
 1784              		.size	RTC_1_Init, .-RTC_1_Init
 1785              		.section	.text.RTC_1_SetDateAndTime,"ax",%progbits
 1786              		.align	2
 1787              		.global	RTC_1_SetDateAndTime
 1788              		.code	16
 1789              		.thumb_func
 1790              		.type	RTC_1_SetDateAndTime, %function
 1791              	RTC_1_SetDateAndTime:
 1792              	.LFB30:
 199:Generated_Source\PSoC4/RTC_1.c **** 
 200:Generated_Source\PSoC4/RTC_1.c **** 
 201:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 202:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetDateAndTime
 203:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 204:Generated_Source\PSoC4/RTC_1.c **** *
 205:Generated_Source\PSoC4/RTC_1.c **** * \brief
 206:Generated_Source\PSoC4/RTC_1.c **** * Sets the time and date values as the current time and date.
 207:Generated_Source\PSoC4/RTC_1.c **** *
 208:Generated_Source\PSoC4/RTC_1.c **** * \param
 209:Generated_Source\PSoC4/RTC_1.c **** * inputTime The time value in the HH:MM:SS format. <br>
 210:Generated_Source\PSoC4/RTC_1.c **** * "HH"- The 2nd 8-bit MSB that denotes the hour value.
 211:Generated_Source\PSoC4/RTC_1.c **** * (0-23 for the 24-hour format and 1-12 for the 12-hour format. The MSB bit of the
 212:Generated_Source\PSoC4/RTC_1.c **** * value denotes AM/PM for the 12-hour format (0-AM and 1-PM). <br>
 213:Generated_Source\PSoC4/RTC_1.c **** * "MM" - The 3nd 8-bit MSB denotes the minutes value, the valid entries -> 0-59.<br>
 214:Generated_Source\PSoC4/RTC_1.c **** * "SS" - The 8-bit LSB denotes the seconds value, the valid entries -> 0-59.
 215:Generated_Source\PSoC4/RTC_1.c **** * Each byte is in the BCD format. Invalid time entries retain the
 216:Generated_Source\PSoC4/RTC_1.c **** * previously set values.
 217:Generated_Source\PSoC4/RTC_1.c **** *
 218:Generated_Source\PSoC4/RTC_1.c **** * \param
 219:Generated_Source\PSoC4/RTC_1.c **** *  inputDate The date value in the format selected in the customizer.
 220:Generated_Source\PSoC4/RTC_1.c **** * For the MM/DD/YYYY format: <br>
 221:Generated_Source\PSoC4/RTC_1.c **** * "MM" - The 8-bit MSB denotes the month value in BCD, the valid entries -> 1-12<br>
 222:Generated_Source\PSoC4/RTC_1.c **** * "DD" - The 2nd 8-bit MSB denotes a day of the month value in BCD, the valid
 223:Generated_Source\PSoC4/RTC_1.c **** * entries -> 1-31.<br>
 224:Generated_Source\PSoC4/RTC_1.c **** * "YYYY" - The 16-bit LSB denotes a year in BCD, the valid entries -> 1900-2200.
 225:Generated_Source\PSoC4/RTC_1.c **** * Each byte is in the BCD format. Invalid date entries retain the
 226:Generated_Source\PSoC4/RTC_1.c **** * previously set values.
 227:Generated_Source\PSoC4/RTC_1.c **** *
 228:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 229:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_SetDateAndTime(uint32 inputTime, uint32 inputDate)
 230:Generated_Source\PSoC4/RTC_1.c **** {
 1793              		.loc 2 230 0
 1794              		.cfi_startproc
 1795 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1796              		.cfi_def_cfa_offset 20
 1797              		.cfi_offset 4, -20
 1798              		.cfi_offset 5, -16
 1799              		.cfi_offset 6, -12
 1800              		.cfi_offset 7, -8
 1801              		.cfi_offset 14, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 58


 1802 0002 87B0     		sub	sp, sp, #28
 1803              		.cfi_def_cfa_offset 48
 1804 0004 00AF     		add	r7, sp, #0
 1805              		.cfi_def_cfa_register 7
 1806 0006 7860     		str	r0, [r7, #4]
 1807 0008 3960     		str	r1, [r7]
 231:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpDay;
 232:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMonth;
 233:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
 234:Generated_Source\PSoC4/RTC_1.c **** 
 235:Generated_Source\PSoC4/RTC_1.c ****     tmpDay   = RTC_1_GetDay(inputDate);
 1808              		.loc 2 235 0
 1809 000a 3B68     		ldr	r3, [r7]
 1810 000c 181C     		mov	r0, r3
 1811 000e FFF7FEFF 		bl	RTC_1_GetDay
 1812 0012 031C     		mov	r3, r0
 1813 0014 7B61     		str	r3, [r7, #20]
 236:Generated_Source\PSoC4/RTC_1.c ****     tmpMonth = RTC_1_GetMonth(inputDate);
 1814              		.loc 2 236 0
 1815 0016 3B68     		ldr	r3, [r7]
 1816 0018 181C     		mov	r0, r3
 1817 001a FFF7FEFF 		bl	RTC_1_GetMonth
 1818 001e 031C     		mov	r3, r0
 1819 0020 3B61     		str	r3, [r7, #16]
 237:Generated_Source\PSoC4/RTC_1.c ****     tmpYear  = RTC_1_GetYear(inputDate);
 1820              		.loc 2 237 0
 1821 0022 3B68     		ldr	r3, [r7]
 1822 0024 181C     		mov	r0, r3
 1823 0026 FFF7FEFF 		bl	RTC_1_GetYear
 1824 002a 031C     		mov	r3, r0
 1825 002c FB60     		str	r3, [r7, #12]
 238:Generated_Source\PSoC4/RTC_1.c **** 
 239:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_unixTime = RTC_1_DateTimeToUnix(inputDate, inputTime);
 1826              		.loc 2 239 0
 1827 002e 3A68     		ldr	r2, [r7]
 1828 0030 7B68     		ldr	r3, [r7, #4]
 1829 0032 101C     		mov	r0, r2
 1830 0034 191C     		mov	r1, r3
 1831 0036 FFF7FEFF 		bl	RTC_1_DateTimeToUnix
 1832 003a 031C     		mov	r3, r0
 1833 003c 0C1C     		mov	r4, r1
 1834 003e 334A     		ldr	r2, .L99
 1835 0040 1360     		str	r3, [r2]
 1836 0042 5460     		str	r4, [r2, #4]
 240:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.date = inputDate;
 1837              		.loc 2 240 0
 1838 0044 324B     		ldr	r3, .L99+4
 1839 0046 3A68     		ldr	r2, [r7]
 1840 0048 5A60     		str	r2, [r3, #4]
 241:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.time = inputTime;
 1841              		.loc 2 241 0
 1842 004a 314B     		ldr	r3, .L99+4
 1843 004c 7A68     		ldr	r2, [r7, #4]
 1844 004e 1A60     		str	r2, [r3]
 242:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTimeDate.dayOfWeek = RTC_1_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 1845              		.loc 2 242 0
 1846 0050 7969     		ldr	r1, [r7, #20]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 59


 1847 0052 3A69     		ldr	r2, [r7, #16]
 1848 0054 FB68     		ldr	r3, [r7, #12]
 1849 0056 081C     		mov	r0, r1
 1850 0058 111C     		mov	r1, r2
 1851 005a 1A1C     		mov	r2, r3
 1852 005c FFF7FEFF 		bl	RTC_1_GetDayOfWeek
 1853 0060 021C     		mov	r2, r0
 1854 0062 2B4B     		ldr	r3, .L99+4
 1855 0064 9A60     		str	r2, [r3, #8]
 243:Generated_Source\PSoC4/RTC_1.c **** 
 244:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 245:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 1856              		.loc 2 245 0
 1857 0066 2B4B     		ldr	r3, .L99+8
 1858 0068 181C     		mov	r0, r3
 1859 006a FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 1860 006e 031C     		mov	r3, r0
 1861 0070 0C1C     		mov	r4, r1
 1862 0072 294A     		ldr	r2, .L99+12
 1863 0074 1360     		str	r3, [r2]
 1864 0076 5460     		str	r4, [r2, #4]
 246:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 1865              		.loc 2 246 0
 1866 0078 284B     		ldr	r3, .L99+16
 1867 007a 181C     		mov	r0, r3
 1868 007c FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 1869 0080 031C     		mov	r3, r0
 1870 0082 0C1C     		mov	r4, r1
 1871 0084 264A     		ldr	r2, .L99+20
 1872 0086 1360     		str	r3, [r2]
 1873 0088 5460     		str	r4, [r2, #4]
 247:Generated_Source\PSoC4/RTC_1.c **** 
 248:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 1874              		.loc 2 248 0
 1875 008a 204B     		ldr	r3, .L99
 1876 008c 5C68     		ldr	r4, [r3, #4]
 1877 008e 1B68     		ldr	r3, [r3]
 1878 0090 214A     		ldr	r2, .L99+12
 1879 0092 1168     		ldr	r1, [r2]
 1880 0094 5268     		ldr	r2, [r2, #4]
 1881 0096 A242     		cmp	r2, r4
 1882 0098 22D8     		bhi	.L93
 1883 009a 01D1     		bne	.L97
 1884 009c 9942     		cmp	r1, r3
 1885 009e 1FD8     		bhi	.L93
 1886              	.L97:
 249:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 1887              		.loc 2 249 0 discriminator 1
 1888 00a0 1A4B     		ldr	r3, .L99
 1889 00a2 1968     		ldr	r1, [r3]
 1890 00a4 5A68     		ldr	r2, [r3, #4]
 1891 00a6 1E4B     		ldr	r3, .L99+20
 1892 00a8 5C68     		ldr	r4, [r3, #4]
 1893 00aa 1B68     		ldr	r3, [r3]
 248:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 1894              		.loc 2 248 0 discriminator 1
 1895 00ac A242     		cmp	r2, r4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 60


 1896 00ae 17D8     		bhi	.L93
 1897 00b0 01D1     		bne	.L98
 1898 00b2 9942     		cmp	r1, r3
 1899 00b4 14D8     		bhi	.L93
 1900              	.L98:
 250:Generated_Source\PSoC4/RTC_1.c ****         {
 251:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 1901              		.loc 2 251 0
 1902 00b6 1B4B     		ldr	r3, .L99+24
 1903 00b8 0122     		mov	r2, #1
 1904 00ba 1A70     		strb	r2, [r3]
 252:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 1905              		.loc 2 252 0
 1906 00bc 1A4B     		ldr	r3, .L99+28
 1907 00be E122     		mov	r2, #225
 1908 00c0 1201     		lsl	r2, r2, #4
 1909 00c2 1A60     		str	r2, [r3]
 253:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTime -= RTC_1_dstTimeOffset;
 1910              		.loc 2 253 0
 1911 00c4 114B     		ldr	r3, .L99
 1912 00c6 5C68     		ldr	r4, [r3, #4]
 1913 00c8 1B68     		ldr	r3, [r3]
 1914 00ca 174A     		ldr	r2, .L99+28
 1915 00cc 1268     		ldr	r2, [r2]
 1916 00ce 151C     		mov	r5, r2
 1917 00d0 0022     		mov	r2, #0
 1918 00d2 161C     		mov	r6, r2
 1919 00d4 5B1B     		sub	r3, r3, r5
 1920 00d6 B441     		sbc	r4, r4, r6
 1921 00d8 0C4A     		ldr	r2, .L99
 1922 00da 1360     		str	r3, [r2]
 1923 00dc 5460     		str	r4, [r2, #4]
 1924 00de 05E0     		b	.L96
 1925              	.L93:
 254:Generated_Source\PSoC4/RTC_1.c ****         }
 255:Generated_Source\PSoC4/RTC_1.c ****         else
 256:Generated_Source\PSoC4/RTC_1.c ****         {
 257:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
 1926              		.loc 2 257 0
 1927 00e0 104B     		ldr	r3, .L99+24
 1928 00e2 0022     		mov	r2, #0
 1929 00e4 1A70     		strb	r2, [r3]
 258:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
 1930              		.loc 2 258 0
 1931 00e6 104B     		ldr	r3, .L99+28
 1932 00e8 0022     		mov	r2, #0
 1933 00ea 1A60     		str	r2, [r3]
 1934              	.L96:
 259:Generated_Source\PSoC4/RTC_1.c ****         }
 260:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 261:Generated_Source\PSoC4/RTC_1.c **** 
 262:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_ALARM_STATUS)
 263:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeAlarm = RTC_1_ConstructUnixAlarmTime(&RTC_1_alarmCfgTimeDate,
 1935              		.loc 2 263 0
 1936 00ec 0F4B     		ldr	r3, .L99+32
 1937 00ee 1B68     		ldr	r3, [r3]
 1938 00f0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 61


 1939 00f2 0F4A     		ldr	r2, .L99+36
 1940 00f4 101C     		mov	r0, r2
 1941 00f6 191C     		mov	r1, r3
 1942 00f8 FFF7FEFF 		bl	RTC_1_ConstructUnixAlarmTime
 1943 00fc 031C     		mov	r3, r0
 1944 00fe 0C1C     		mov	r4, r1
 1945 0100 0C4A     		ldr	r2, .L99+40
 1946 0102 1360     		str	r3, [r2]
 1947 0104 5460     		str	r4, [r2, #4]
 264:Generated_Source\PSoC4/RTC_1.c ****                                                                                  (uint8)RTC_1_alarm
 265:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_ALARM_STATUS) */
 266:Generated_Source\PSoC4/RTC_1.c **** }
 1948              		.loc 2 266 0
 1949 0106 BD46     		mov	sp, r7
 1950 0108 07B0     		add	sp, sp, #28
 1951              		@ sp needed
 1952 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 1953              	.L100:
 1954              		.align	2
 1955              	.L99:
 1956 010c 00000000 		.word	RTC_1_unixTime
 1957 0110 00000000 		.word	RTC_1_currentTimeDate
 1958 0114 00000000 		.word	RTC_1_dstStartTime
 1959 0118 10000000 		.word	RTC_1_unixTimeDstStart
 1960 011c 00000000 		.word	RTC_1_dstStopTime
 1961 0120 18000000 		.word	RTC_1_unixTimeDstStop
 1962 0124 00000000 		.word	RTC_1_dstStatus
 1963 0128 08000000 		.word	RTC_1_dstTimeOffset
 1964 012c 00000000 		.word	RTC_1_alarmCfgMask
 1965 0130 00000000 		.word	RTC_1_alarmCfgTimeDate
 1966 0134 20000000 		.word	RTC_1_unixTimeAlarm
 1967              		.cfi_endproc
 1968              	.LFE30:
 1969              		.size	RTC_1_SetDateAndTime, .-RTC_1_SetDateAndTime
 1970              		.section	.text.RTC_1_SetUnixTime,"ax",%progbits
 1971              		.align	2
 1972              		.global	RTC_1_SetUnixTime
 1973              		.code	16
 1974              		.thumb_func
 1975              		.type	RTC_1_SetUnixTime, %function
 1976              	RTC_1_SetUnixTime:
 1977              	.LFB31:
 267:Generated_Source\PSoC4/RTC_1.c **** 
 268:Generated_Source\PSoC4/RTC_1.c **** 
 269:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 270:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetUnixTime
 271:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 272:Generated_Source\PSoC4/RTC_1.c **** *
 273:Generated_Source\PSoC4/RTC_1.c **** * \brief
 274:Generated_Source\PSoC4/RTC_1.c **** * Sets the time in the Unix/Epoch time format - the number of seconds elapsed 
 275:Generated_Source\PSoC4/RTC_1.c **** *  from January 1, 1970 UTC 00:00 hrs.
 276:Generated_Source\PSoC4/RTC_1.c **** *
 277:Generated_Source\PSoC4/RTC_1.c **** * \param
 278:Generated_Source\PSoC4/RTC_1.c **** *  time The time value in the Unix time/Epoch time format.
 279:Generated_Source\PSoC4/RTC_1.c **** *
 280:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 281:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_SetUnixTime(uint64 unixTime)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 62


 282:Generated_Source\PSoC4/RTC_1.c **** {
 1978              		.loc 2 282 0
 1979              		.cfi_startproc
 1980 0000 90B5     		push	{r4, r7, lr}
 1981              		.cfi_def_cfa_offset 12
 1982              		.cfi_offset 4, -12
 1983              		.cfi_offset 7, -8
 1984              		.cfi_offset 14, -4
 1985 0002 89B0     		sub	sp, sp, #36
 1986              		.cfi_def_cfa_offset 48
 1987 0004 02AF     		add	r7, sp, #8
 1988              		.cfi_def_cfa 7, 40
 1989 0006 3860     		str	r0, [r7]
 1990 0008 7960     		str	r1, [r7, #4]
 283:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DATE_TIME tmpDateTime;
 284:Generated_Source\PSoC4/RTC_1.c **** 
 285:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_unixTime = unixTime;
 1991              		.loc 2 285 0
 1992 000a 244A     		ldr	r2, .L108
 1993 000c 3B68     		ldr	r3, [r7]
 1994 000e 7C68     		ldr	r4, [r7, #4]
 1995 0010 1360     		str	r3, [r2]
 1996 0012 5460     		str	r4, [r2, #4]
 286:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(&tmpDateTime, unixTime, (uint32)RTC_1_24_HOURS_FORMAT);
 1997              		.loc 2 286 0
 1998 0014 0823     		mov	r3, #8
 1999 0016 F918     		add	r1, r7, r3
 2000 0018 3B68     		ldr	r3, [r7]
 2001 001a 7C68     		ldr	r4, [r7, #4]
 2002 001c 0022     		mov	r2, #0
 2003 001e 0092     		str	r2, [sp]
 2004 0020 081C     		mov	r0, r1
 2005 0022 1A1C     		mov	r2, r3
 2006 0024 231C     		mov	r3, r4
 2007 0026 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 287:Generated_Source\PSoC4/RTC_1.c **** 
 288:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
 289:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 2008              		.loc 2 289 0
 2009 002a 1D4B     		ldr	r3, .L108+4
 2010 002c 181C     		mov	r0, r3
 2011 002e FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 2012 0032 031C     		mov	r3, r0
 2013 0034 0C1C     		mov	r4, r1
 2014 0036 1B4A     		ldr	r2, .L108+8
 2015 0038 1360     		str	r3, [r2]
 2016 003a 5460     		str	r4, [r2, #4]
 290:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 2017              		.loc 2 290 0
 2018 003c 1A4B     		ldr	r3, .L108+12
 2019 003e 181C     		mov	r0, r3
 2020 0040 FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 2021 0044 031C     		mov	r3, r0
 2022 0046 0C1C     		mov	r4, r1
 2023 0048 184A     		ldr	r2, .L108+16
 2024 004a 1360     		str	r3, [r2]
 2025 004c 5460     		str	r4, [r2, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 63


 291:Generated_Source\PSoC4/RTC_1.c **** 
 292:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 2026              		.loc 2 292 0
 2027 004e 134B     		ldr	r3, .L108
 2028 0050 5C68     		ldr	r4, [r3, #4]
 2029 0052 1B68     		ldr	r3, [r3]
 2030 0054 134A     		ldr	r2, .L108+8
 2031 0056 1168     		ldr	r1, [r2]
 2032 0058 5268     		ldr	r2, [r2, #4]
 2033 005a A242     		cmp	r2, r4
 2034 005c 15D8     		bhi	.L102
 2035 005e 01D1     		bne	.L106
 2036 0060 9942     		cmp	r1, r3
 2037 0062 12D8     		bhi	.L102
 2038              	.L106:
 293:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 2039              		.loc 2 293 0 discriminator 1
 2040 0064 0D4B     		ldr	r3, .L108
 2041 0066 1968     		ldr	r1, [r3]
 2042 0068 5A68     		ldr	r2, [r3, #4]
 2043 006a 104B     		ldr	r3, .L108+16
 2044 006c 5C68     		ldr	r4, [r3, #4]
 2045 006e 1B68     		ldr	r3, [r3]
 292:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 2046              		.loc 2 292 0 discriminator 1
 2047 0070 A242     		cmp	r2, r4
 2048 0072 0AD8     		bhi	.L102
 2049 0074 01D1     		bne	.L107
 2050 0076 9942     		cmp	r1, r3
 2051 0078 07D8     		bhi	.L102
 2052              	.L107:
 294:Generated_Source\PSoC4/RTC_1.c ****         {
 295:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 2053              		.loc 2 295 0
 2054 007a 0D4B     		ldr	r3, .L108+20
 2055 007c 0122     		mov	r2, #1
 2056 007e 1A70     		strb	r2, [r3]
 296:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 2057              		.loc 2 296 0
 2058 0080 0C4B     		ldr	r3, .L108+24
 2059 0082 E122     		mov	r2, #225
 2060 0084 1201     		lsl	r2, r2, #4
 2061 0086 1A60     		str	r2, [r3]
 2062 0088 05E0     		b	.L101
 2063              	.L102:
 297:Generated_Source\PSoC4/RTC_1.c ****         }
 298:Generated_Source\PSoC4/RTC_1.c ****         else
 299:Generated_Source\PSoC4/RTC_1.c ****         {
 300:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
 2064              		.loc 2 300 0
 2065 008a 094B     		ldr	r3, .L108+20
 2066 008c 0022     		mov	r2, #0
 2067 008e 1A70     		strb	r2, [r3]
 301:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
 2068              		.loc 2 301 0
 2069 0090 084B     		ldr	r3, .L108+24
 2070 0092 0022     		mov	r2, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 64


 2071 0094 1A60     		str	r2, [r3]
 2072              	.L101:
 302:Generated_Source\PSoC4/RTC_1.c ****         }
 303:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
 304:Generated_Source\PSoC4/RTC_1.c **** }
 2073              		.loc 2 304 0
 2074 0096 BD46     		mov	sp, r7
 2075 0098 07B0     		add	sp, sp, #28
 2076              		@ sp needed
 2077 009a 90BD     		pop	{r4, r7, pc}
 2078              	.L109:
 2079              		.align	2
 2080              	.L108:
 2081 009c 00000000 		.word	RTC_1_unixTime
 2082 00a0 00000000 		.word	RTC_1_dstStartTime
 2083 00a4 10000000 		.word	RTC_1_unixTimeDstStart
 2084 00a8 00000000 		.word	RTC_1_dstStopTime
 2085 00ac 18000000 		.word	RTC_1_unixTimeDstStop
 2086 00b0 00000000 		.word	RTC_1_dstStatus
 2087 00b4 08000000 		.word	RTC_1_dstTimeOffset
 2088              		.cfi_endproc
 2089              	.LFE31:
 2090              		.size	RTC_1_SetUnixTime, .-RTC_1_SetUnixTime
 2091              		.section	.text.RTC_1_GetUnixTime,"ax",%progbits
 2092              		.align	2
 2093              		.global	RTC_1_GetUnixTime
 2094              		.code	16
 2095              		.thumb_func
 2096              		.type	RTC_1_GetUnixTime, %function
 2097              	RTC_1_GetUnixTime:
 2098              	.LFB32:
 305:Generated_Source\PSoC4/RTC_1.c **** 
 306:Generated_Source\PSoC4/RTC_1.c **** 
 307:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 308:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetUnixTime
 309:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 310:Generated_Source\PSoC4/RTC_1.c **** *
 311:Generated_Source\PSoC4/RTC_1.c **** * \brief
 312:Generated_Source\PSoC4/RTC_1.c **** *  Returns the time in the Unix/Epoch time format - the number of seconds 
 313:Generated_Source\PSoC4/RTC_1.c **** * elapsed from January 1, 1970 UTC 00:00 hrs.
 314:Generated_Source\PSoC4/RTC_1.c **** *
 315:Generated_Source\PSoC4/RTC_1.c **** * \return time The time value in the Unix time/Epoch time format.
 316:Generated_Source\PSoC4/RTC_1.c **** *
 317:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 318:Generated_Source\PSoC4/RTC_1.c **** uint64 RTC_1_GetUnixTime(void)
 319:Generated_Source\PSoC4/RTC_1.c **** {
 2099              		.loc 2 319 0
 2100              		.cfi_startproc
 2101 0000 90B5     		push	{r4, r7, lr}
 2102              		.cfi_def_cfa_offset 12
 2103              		.cfi_offset 4, -12
 2104              		.cfi_offset 7, -8
 2105              		.cfi_offset 14, -4
 2106 0002 00AF     		add	r7, sp, #0
 2107              		.cfi_def_cfa_register 7
 320:Generated_Source\PSoC4/RTC_1.c ****     return (RTC_1_unixTime);
 2108              		.loc 2 320 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 65


 2109 0004 034B     		ldr	r3, .L112
 2110 0006 5C68     		ldr	r4, [r3, #4]
 2111 0008 1B68     		ldr	r3, [r3]
 321:Generated_Source\PSoC4/RTC_1.c **** }
 2112              		.loc 2 321 0
 2113 000a 181C     		mov	r0, r3
 2114 000c 211C     		mov	r1, r4
 2115 000e BD46     		mov	sp, r7
 2116              		@ sp needed
 2117 0010 90BD     		pop	{r4, r7, pc}
 2118              	.L113:
 2119 0012 C046     		.align	2
 2120              	.L112:
 2121 0014 00000000 		.word	RTC_1_unixTime
 2122              		.cfi_endproc
 2123              	.LFE32:
 2124              		.size	RTC_1_GetUnixTime, .-RTC_1_GetUnixTime
 2125              		.section	.text.RTC_1_SetPeriod,"ax",%progbits
 2126              		.align	2
 2127              		.global	RTC_1_SetPeriod
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	RTC_1_SetPeriod, %function
 2131              	RTC_1_SetPeriod:
 2132              	.LFB33:
 322:Generated_Source\PSoC4/RTC_1.c **** 
 323:Generated_Source\PSoC4/RTC_1.c **** 
 324:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 325:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetPeriod
 326:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 327:Generated_Source\PSoC4/RTC_1.c **** *
 328:Generated_Source\PSoC4/RTC_1.c **** * \brief
 329:Generated_Source\PSoC4/RTC_1.c **** *  Sets the RTC time update API period.
 330:Generated_Source\PSoC4/RTC_1.c **** *
 331:Generated_Source\PSoC4/RTC_1.c **** *  The user needs to pass the period as
 332:Generated_Source\PSoC4/RTC_1.c **** *  a number of ticks and also a reference number of ticks taken by the same clock
 333:Generated_Source\PSoC4/RTC_1.c **** *  source for one second. For instance, for a 32 kHz clock source and RTC
 334:Generated_Source\PSoC4/RTC_1.c **** *  period of 100 ms, the "ticks" value is 3200 and the "refOneSecTicks" value
 335:Generated_Source\PSoC4/RTC_1.c **** *  is 32000. This value is used to increment the time every time
 336:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_Update() API is called.
 337:Generated_Source\PSoC4/RTC_1.c **** *
 338:Generated_Source\PSoC4/RTC_1.c **** * \param
 339:Generated_Source\PSoC4/RTC_1.c **** *  ticks The clock period taken as a number of ticks.
 340:Generated_Source\PSoC4/RTC_1.c **** *
 341:Generated_Source\PSoC4/RTC_1.c **** * \param
 342:Generated_Source\PSoC4/RTC_1.c **** * refOneSecTicks The reference number of ticks taken by the same clock source
 343:Generated_Source\PSoC4/RTC_1.c **** *  for one second (the input clock frequency in Hz).
 344:Generated_Source\PSoC4/RTC_1.c **** *
 345:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 346:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_SetPeriod(uint32 ticks, uint32 refOneSecTicks)
 347:Generated_Source\PSoC4/RTC_1.c **** {
 2133              		.loc 2 347 0
 2134              		.cfi_startproc
 2135 0000 80B5     		push	{r7, lr}
 2136              		.cfi_def_cfa_offset 8
 2137              		.cfi_offset 7, -8
 2138              		.cfi_offset 14, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 66


 2139 0002 82B0     		sub	sp, sp, #8
 2140              		.cfi_def_cfa_offset 16
 2141 0004 00AF     		add	r7, sp, #0
 2142              		.cfi_def_cfa_register 7
 2143 0006 7860     		str	r0, [r7, #4]
 2144 0008 3960     		str	r1, [r7]
 348:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_updateTimePeriod = ticks;
 2145              		.loc 2 348 0
 2146 000a 044B     		ldr	r3, .L115
 2147 000c 7A68     		ldr	r2, [r7, #4]
 2148 000e 1A60     		str	r2, [r3]
 349:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_tickRefOneSec    = refOneSecTicks;
 2149              		.loc 2 349 0
 2150 0010 034B     		ldr	r3, .L115+4
 2151 0012 3A68     		ldr	r2, [r7]
 2152 0014 1A60     		str	r2, [r3]
 350:Generated_Source\PSoC4/RTC_1.c **** }
 2153              		.loc 2 350 0
 2154 0016 BD46     		mov	sp, r7
 2155 0018 02B0     		add	sp, sp, #8
 2156              		@ sp needed
 2157 001a 80BD     		pop	{r7, pc}
 2158              	.L116:
 2159              		.align	2
 2160              	.L115:
 2161 001c 00000000 		.word	RTC_1_updateTimePeriod
 2162 0020 04000000 		.word	RTC_1_tickRefOneSec
 2163              		.cfi_endproc
 2164              	.LFE33:
 2165              		.size	RTC_1_SetPeriod, .-RTC_1_SetPeriod
 2166              		.section	.text.RTC_1_GetPeriod,"ax",%progbits
 2167              		.align	2
 2168              		.global	RTC_1_GetPeriod
 2169              		.code	16
 2170              		.thumb_func
 2171              		.type	RTC_1_GetPeriod, %function
 2172              	RTC_1_GetPeriod:
 2173              	.LFB34:
 351:Generated_Source\PSoC4/RTC_1.c **** 
 352:Generated_Source\PSoC4/RTC_1.c **** 
 353:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 354:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_SetPeriod
 355:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 356:Generated_Source\PSoC4/RTC_1.c **** *
 357:Generated_Source\PSoC4/RTC_1.c **** * \brief
 358:Generated_Source\PSoC4/RTC_1.c **** *  Gets the RTC time update API period.
 359:Generated_Source\PSoC4/RTC_1.c **** *
 360:Generated_Source\PSoC4/RTC_1.c **** * \return period The clock period taken as a number of ticks.
 361:Generated_Source\PSoC4/RTC_1.c **** *
 362:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetPeriod(void)
 364:Generated_Source\PSoC4/RTC_1.c **** {
 2174              		.loc 2 364 0
 2175              		.cfi_startproc
 2176 0000 80B5     		push	{r7, lr}
 2177              		.cfi_def_cfa_offset 8
 2178              		.cfi_offset 7, -8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 67


 2179              		.cfi_offset 14, -4
 2180 0002 00AF     		add	r7, sp, #0
 2181              		.cfi_def_cfa_register 7
 365:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_updateTimePeriod);
 2182              		.loc 2 365 0
 2183 0004 024B     		ldr	r3, .L119
 2184 0006 1B68     		ldr	r3, [r3]
 366:Generated_Source\PSoC4/RTC_1.c **** }
 2185              		.loc 2 366 0
 2186 0008 181C     		mov	r0, r3
 2187 000a BD46     		mov	sp, r7
 2188              		@ sp needed
 2189 000c 80BD     		pop	{r7, pc}
 2190              	.L120:
 2191 000e C046     		.align	2
 2192              	.L119:
 2193 0010 00000000 		.word	RTC_1_updateTimePeriod
 2194              		.cfi_endproc
 2195              	.LFE34:
 2196              		.size	RTC_1_GetPeriod, .-RTC_1_GetPeriod
 2197              		.section	.text.RTC_1_GetRefOneSec,"ax",%progbits
 2198              		.align	2
 2199              		.global	RTC_1_GetRefOneSec
 2200              		.code	16
 2201              		.thumb_func
 2202              		.type	RTC_1_GetRefOneSec, %function
 2203              	RTC_1_GetRefOneSec:
 2204              	.LFB35:
 367:Generated_Source\PSoC4/RTC_1.c **** 
 368:Generated_Source\PSoC4/RTC_1.c **** 
 369:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 370:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetRefOneSec
 371:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 372:Generated_Source\PSoC4/RTC_1.c **** * \brief
 373:Generated_Source\PSoC4/RTC_1.c **** * Gets the RTC time update API period.
 374:Generated_Source\PSoC4/RTC_1.c **** *
 375:Generated_Source\PSoC4/RTC_1.c **** * \return
 376:Generated_Source\PSoC4/RTC_1.c **** * period The reference number of ticks taken by the RTC clock source for one
 377:Generated_Source\PSoC4/RTC_1.c **** * second.
 378:Generated_Source\PSoC4/RTC_1.c **** *
 379:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 380:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetRefOneSec(void)
 381:Generated_Source\PSoC4/RTC_1.c **** {
 2205              		.loc 2 381 0
 2206              		.cfi_startproc
 2207 0000 80B5     		push	{r7, lr}
 2208              		.cfi_def_cfa_offset 8
 2209              		.cfi_offset 7, -8
 2210              		.cfi_offset 14, -4
 2211 0002 00AF     		add	r7, sp, #0
 2212              		.cfi_def_cfa_register 7
 382:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_tickRefOneSec);
 2213              		.loc 2 382 0
 2214 0004 024B     		ldr	r3, .L123
 2215 0006 1B68     		ldr	r3, [r3]
 383:Generated_Source\PSoC4/RTC_1.c **** }
 2216              		.loc 2 383 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 68


 2217 0008 181C     		mov	r0, r3
 2218 000a BD46     		mov	sp, r7
 2219              		@ sp needed
 2220 000c 80BD     		pop	{r7, pc}
 2221              	.L124:
 2222 000e C046     		.align	2
 2223              	.L123:
 2224 0010 04000000 		.word	RTC_1_tickRefOneSec
 2225              		.cfi_endproc
 2226              	.LFE35:
 2227              		.size	RTC_1_GetRefOneSec, .-RTC_1_GetRefOneSec
 2228              		.section	.text.RTC_1_GetDateAndTime,"ax",%progbits
 2229              		.align	2
 2230              		.global	RTC_1_GetDateAndTime
 2231              		.code	16
 2232              		.thumb_func
 2233              		.type	RTC_1_GetDateAndTime, %function
 2234              	RTC_1_GetDateAndTime:
 2235              	.LFB36:
 384:Generated_Source\PSoC4/RTC_1.c **** 
 385:Generated_Source\PSoC4/RTC_1.c **** 
 386:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 387:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetDateAndTime
 388:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 389:Generated_Source\PSoC4/RTC_1.c **** *
 390:Generated_Source\PSoC4/RTC_1.c **** * Reads the current time and date.
 391:Generated_Source\PSoC4/RTC_1.c **** *
 392:Generated_Source\PSoC4/RTC_1.c **** * \param dateTime The pointer to the RTC_date_time structure to which time and 
 393:Generated_Source\PSoC4/RTC_1.c **** * date is returned.
 394:Generated_Source\PSoC4/RTC_1.c **** *
 395:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 396:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_GetDateAndTime(RTC_1_DATE_TIME* dateTime)
 397:Generated_Source\PSoC4/RTC_1.c **** {
 2236              		.loc 2 397 0
 2237              		.cfi_startproc
 2238 0000 90B5     		push	{r4, r7, lr}
 2239              		.cfi_def_cfa_offset 12
 2240              		.cfi_offset 4, -12
 2241              		.cfi_offset 7, -8
 2242              		.cfi_offset 14, -4
 2243 0002 85B0     		sub	sp, sp, #20
 2244              		.cfi_def_cfa_offset 32
 2245 0004 02AF     		add	r7, sp, #8
 2246              		.cfi_def_cfa 7, 24
 2247 0006 7860     		str	r0, [r7, #4]
 398:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(dateTime, (RTC_1_unixTime  + RTC_1_dstTimeOffset),
 2248              		.loc 2 398 0
 2249 0008 0A4B     		ldr	r3, .L126
 2250 000a 1B68     		ldr	r3, [r3]
 2251 000c 191C     		mov	r1, r3
 2252 000e 0023     		mov	r3, #0
 2253 0010 1A1C     		mov	r2, r3
 2254 0012 094B     		ldr	r3, .L126+4
 2255 0014 5C68     		ldr	r4, [r3, #4]
 2256 0016 1B68     		ldr	r3, [r3]
 2257 0018 5B18     		add	r3, r3, r1
 2258 001a 5441     		adc	r4, r4, r2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 69


 2259 001c 7968     		ldr	r1, [r7, #4]
 2260 001e 0022     		mov	r2, #0
 2261 0020 0092     		str	r2, [sp]
 2262 0022 081C     		mov	r0, r1
 2263 0024 1A1C     		mov	r2, r3
 2264 0026 231C     		mov	r3, r4
 2265 0028 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 399:Generated_Source\PSoC4/RTC_1.c ****                                                                             RTC_1_INITIAL_TIME_FORM
 400:Generated_Source\PSoC4/RTC_1.c **** }
 2266              		.loc 2 400 0
 2267 002c BD46     		mov	sp, r7
 2268 002e 03B0     		add	sp, sp, #12
 2269              		@ sp needed
 2270 0030 90BD     		pop	{r4, r7, pc}
 2271              	.L127:
 2272 0032 C046     		.align	2
 2273              	.L126:
 2274 0034 08000000 		.word	RTC_1_dstTimeOffset
 2275 0038 00000000 		.word	RTC_1_unixTime
 2276              		.cfi_endproc
 2277              	.LFE36:
 2278              		.size	RTC_1_GetDateAndTime, .-RTC_1_GetDateAndTime
 2279              		.section	.text.RTC_1_GetTime,"ax",%progbits
 2280              		.align	2
 2281              		.global	RTC_1_GetTime
 2282              		.code	16
 2283              		.thumb_func
 2284              		.type	RTC_1_GetTime, %function
 2285              	RTC_1_GetTime:
 2286              	.LFB37:
 401:Generated_Source\PSoC4/RTC_1.c **** 
 402:Generated_Source\PSoC4/RTC_1.c **** 
 403:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 404:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetTime
 405:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 406:Generated_Source\PSoC4/RTC_1.c **** * \brief
 407:Generated_Source\PSoC4/RTC_1.c **** * Reads the current time.
 408:Generated_Source\PSoC4/RTC_1.c **** *
 409:Generated_Source\PSoC4/RTC_1.c **** * \return
 410:Generated_Source\PSoC4/RTC_1.c **** * date The value of date in the user selected format. The date value is 
 411:Generated_Source\PSoC4/RTC_1.c **** * available in the BCD format.
 412:Generated_Source\PSoC4/RTC_1.c **** *
 413:Generated_Source\PSoC4/RTC_1.c **** * \warning
 414:Generated_Source\PSoC4/RTC_1.c **** *  Using RTC_1_GetTime and RTC_GetDate API separately might result
 415:Generated_Source\PSoC4/RTC_1.c **** *  in errors when the time wraps around the end of the day. To avoid this,
 416:Generated_Source\PSoC4/RTC_1.c **** *  use RTC_1_GetDateAndTime API.
 417:Generated_Source\PSoC4/RTC_1.c **** *
 418:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 419:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetTime(void)
 420:Generated_Source\PSoC4/RTC_1.c **** {
 2287              		.loc 2 420 0
 2288              		.cfi_startproc
 2289 0000 90B5     		push	{r4, r7, lr}
 2290              		.cfi_def_cfa_offset 12
 2291              		.cfi_offset 4, -12
 2292              		.cfi_offset 7, -8
 2293              		.cfi_offset 14, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 70


 2294 0002 83B0     		sub	sp, sp, #12
 2295              		.cfi_def_cfa_offset 24
 2296 0004 02AF     		add	r7, sp, #8
 2297              		.cfi_def_cfa 7, 16
 421:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(&RTC_1_currentTimeDate,
 2298              		.loc 2 421 0
 2299 0006 0C4B     		ldr	r3, .L130
 2300 0008 1B68     		ldr	r3, [r3]
 2301 000a 191C     		mov	r1, r3
 2302 000c 0023     		mov	r3, #0
 2303 000e 1A1C     		mov	r2, r3
 2304 0010 0A4B     		ldr	r3, .L130+4
 2305 0012 5C68     		ldr	r4, [r3, #4]
 2306 0014 1B68     		ldr	r3, [r3]
 2307 0016 5B18     		add	r3, r3, r1
 2308 0018 5441     		adc	r4, r4, r2
 2309 001a 0949     		ldr	r1, .L130+8
 2310 001c 0022     		mov	r2, #0
 2311 001e 0092     		str	r2, [sp]
 2312 0020 081C     		mov	r0, r1
 2313 0022 1A1C     		mov	r2, r3
 2314 0024 231C     		mov	r3, r4
 2315 0026 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 422:Generated_Source\PSoC4/RTC_1.c ****                                     (RTC_1_unixTime  + RTC_1_dstTimeOffset),
 423:Generated_Source\PSoC4/RTC_1.c ****                                      RTC_1_INITIAL_TIME_FORMAT);
 424:Generated_Source\PSoC4/RTC_1.c **** 
 425:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_currentTimeDate.time);
 2316              		.loc 2 425 0
 2317 002a 054B     		ldr	r3, .L130+8
 2318 002c 1B68     		ldr	r3, [r3]
 426:Generated_Source\PSoC4/RTC_1.c **** }
 2319              		.loc 2 426 0
 2320 002e 181C     		mov	r0, r3
 2321 0030 BD46     		mov	sp, r7
 2322 0032 01B0     		add	sp, sp, #4
 2323              		@ sp needed
 2324 0034 90BD     		pop	{r4, r7, pc}
 2325              	.L131:
 2326 0036 C046     		.align	2
 2327              	.L130:
 2328 0038 08000000 		.word	RTC_1_dstTimeOffset
 2329 003c 00000000 		.word	RTC_1_unixTime
 2330 0040 00000000 		.word	RTC_1_currentTimeDate
 2331              		.cfi_endproc
 2332              	.LFE37:
 2333              		.size	RTC_1_GetTime, .-RTC_1_GetTime
 2334              		.section	.text.RTC_1_GetDate,"ax",%progbits
 2335              		.align	2
 2336              		.global	RTC_1_GetDate
 2337              		.code	16
 2338              		.thumb_func
 2339              		.type	RTC_1_GetDate, %function
 2340              	RTC_1_GetDate:
 2341              	.LFB38:
 427:Generated_Source\PSoC4/RTC_1.c **** 
 428:Generated_Source\PSoC4/RTC_1.c **** 
 429:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 71


 430:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_GetDate
 431:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 432:Generated_Source\PSoC4/RTC_1.c **** *
 433:Generated_Source\PSoC4/RTC_1.c **** * \brief Reads the current time.
 434:Generated_Source\PSoC4/RTC_1.c **** *
 435:Generated_Source\PSoC4/RTC_1.c **** * \return
 436:Generated_Source\PSoC4/RTC_1.c **** * time The time value in the format selected by the user (12/24 hr);
 437:Generated_Source\PSoC4/RTC_1.c **** * The time value is available in the BCD format.
 438:Generated_Source\PSoC4/RTC_1.c **** *
 439:Generated_Source\PSoC4/RTC_1.c **** * \note
 440:Generated_Source\PSoC4/RTC_1.c **** *  Using RTC_1_GetTime and RTC_1_GetDate API separately
 441:Generated_Source\PSoC4/RTC_1.c **** *  might result in errors when the time wraps around the end of the day. To
 442:Generated_Source\PSoC4/RTC_1.c **** *  avoid this, use RTC_1_GetDateAndTime API.
 443:Generated_Source\PSoC4/RTC_1.c **** *
 444:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 445:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_GetDate(void)
 446:Generated_Source\PSoC4/RTC_1.c **** {
 2342              		.loc 2 446 0
 2343              		.cfi_startproc
 2344 0000 90B5     		push	{r4, r7, lr}
 2345              		.cfi_def_cfa_offset 12
 2346              		.cfi_offset 4, -12
 2347              		.cfi_offset 7, -8
 2348              		.cfi_offset 14, -4
 2349 0002 83B0     		sub	sp, sp, #12
 2350              		.cfi_def_cfa_offset 24
 2351 0004 02AF     		add	r7, sp, #8
 2352              		.cfi_def_cfa 7, 16
 447:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_UnixToDateTime(&RTC_1_currentTimeDate,
 2353              		.loc 2 447 0
 2354 0006 0C4B     		ldr	r3, .L134
 2355 0008 1B68     		ldr	r3, [r3]
 2356 000a 191C     		mov	r1, r3
 2357 000c 0023     		mov	r3, #0
 2358 000e 1A1C     		mov	r2, r3
 2359 0010 0A4B     		ldr	r3, .L134+4
 2360 0012 5C68     		ldr	r4, [r3, #4]
 2361 0014 1B68     		ldr	r3, [r3]
 2362 0016 5B18     		add	r3, r3, r1
 2363 0018 5441     		adc	r4, r4, r2
 2364 001a 0949     		ldr	r1, .L134+8
 2365 001c 0022     		mov	r2, #0
 2366 001e 0092     		str	r2, [sp]
 2367 0020 081C     		mov	r0, r1
 2368 0022 1A1C     		mov	r2, r3
 2369 0024 231C     		mov	r3, r4
 2370 0026 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 448:Generated_Source\PSoC4/RTC_1.c ****                                     (RTC_1_unixTime  + RTC_1_dstTimeOffset),
 449:Generated_Source\PSoC4/RTC_1.c ****                                      RTC_1_INITIAL_TIME_FORMAT);
 450:Generated_Source\PSoC4/RTC_1.c **** 
 451:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_currentTimeDate.date);
 2371              		.loc 2 451 0
 2372 002a 054B     		ldr	r3, .L134+8
 2373 002c 5B68     		ldr	r3, [r3, #4]
 452:Generated_Source\PSoC4/RTC_1.c **** }
 2374              		.loc 2 452 0
 2375 002e 181C     		mov	r0, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 72


 2376 0030 BD46     		mov	sp, r7
 2377 0032 01B0     		add	sp, sp, #4
 2378              		@ sp needed
 2379 0034 90BD     		pop	{r4, r7, pc}
 2380              	.L135:
 2381 0036 C046     		.align	2
 2382              	.L134:
 2383 0038 08000000 		.word	RTC_1_dstTimeOffset
 2384 003c 00000000 		.word	RTC_1_unixTime
 2385 0040 00000000 		.word	RTC_1_currentTimeDate
 2386              		.cfi_endproc
 2387              	.LFE38:
 2388              		.size	RTC_1_GetDate, .-RTC_1_GetDate
 2389              		.section	.text.RTC_1_SetAlarmDateAndTime,"ax",%progbits
 2390              		.align	2
 2391              		.global	RTC_1_SetAlarmDateAndTime
 2392              		.code	16
 2393              		.thumb_func
 2394              		.type	RTC_1_SetAlarmDateAndTime, %function
 2395              	RTC_1_SetAlarmDateAndTime:
 2396              	.LFB39:
 453:Generated_Source\PSoC4/RTC_1.c **** 
 454:Generated_Source\PSoC4/RTC_1.c **** 
 455:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_ALARM_STATUS)
 456:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetAlarmDateAndTime
 458:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/RTC_1.c ****     *
 460:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 461:Generated_Source\PSoC4/RTC_1.c ****     *  Writes the time and date values as the current alarm time and date.
 462:Generated_Source\PSoC4/RTC_1.c ****     *
 463:Generated_Source\PSoC4/RTC_1.c ****     * \param
 464:Generated_Source\PSoC4/RTC_1.c ****     *  alarmTime The pointer to the RTC_1_date_time global structure where
 465:Generated_Source\PSoC4/RTC_1.c ****     *  new values of the alarm time and date are stored.
 466:Generated_Source\PSoC4/RTC_1.c ****     *
 467:Generated_Source\PSoC4/RTC_1.c ****     * \note
 468:Generated_Source\PSoC4/RTC_1.c ****     *  Invalid time entries are written with "00:00:00:00" for the 24-hour format and
 469:Generated_Source\PSoC4/RTC_1.c ****     *  "AM 12:00:00:00" for the 12-hour format. Invalid date entries are written with
 470:Generated_Source\PSoC4/RTC_1.c ****     *  a date equivalent to 01-JAN-2000.
 471:Generated_Source\PSoC4/RTC_1.c ****     *
 472:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 473:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetAlarmDateAndTime(const RTC_1_DATE_TIME* alarmTime)
 474:Generated_Source\PSoC4/RTC_1.c ****     {
 2397              		.loc 2 474 0
 2398              		.cfi_startproc
 2399 0000 90B5     		push	{r4, r7, lr}
 2400              		.cfi_def_cfa_offset 12
 2401              		.cfi_offset 4, -12
 2402              		.cfi_offset 7, -8
 2403              		.cfi_offset 14, -4
 2404 0002 83B0     		sub	sp, sp, #12
 2405              		.cfi_def_cfa_offset 24
 2406 0004 00AF     		add	r7, sp, #0
 2407              		.cfi_def_cfa_register 7
 2408 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCfgTimeDate = *alarmTime;
 2409              		.loc 2 475 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 73


 2410 0008 0A4B     		ldr	r3, .L137
 2411 000a 7A68     		ldr	r2, [r7, #4]
 2412 000c 13CA     		ldmia	r2!, {r0, r1, r4}
 2413 000e 13C3     		stmia	r3!, {r0, r1, r4}
 2414 0010 1268     		ldr	r2, [r2]
 2415 0012 1A60     		str	r2, [r3]
 476:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeAlarm = RTC_1_ConstructUnixAlarmTime(alarmTime, (uint8)RTC_1_alarmCfgMask);
 2416              		.loc 2 476 0
 2417 0014 084B     		ldr	r3, .L137+4
 2418 0016 1B68     		ldr	r3, [r3]
 2419 0018 DBB2     		uxtb	r3, r3
 2420 001a 7A68     		ldr	r2, [r7, #4]
 2421 001c 101C     		mov	r0, r2
 2422 001e 191C     		mov	r1, r3
 2423 0020 FFF7FEFF 		bl	RTC_1_ConstructUnixAlarmTime
 2424 0024 031C     		mov	r3, r0
 2425 0026 0C1C     		mov	r4, r1
 2426 0028 044A     		ldr	r2, .L137+8
 2427 002a 1360     		str	r3, [r2]
 2428 002c 5460     		str	r4, [r2, #4]
 477:Generated_Source\PSoC4/RTC_1.c ****     }
 2429              		.loc 2 477 0
 2430 002e BD46     		mov	sp, r7
 2431 0030 03B0     		add	sp, sp, #12
 2432              		@ sp needed
 2433 0032 90BD     		pop	{r4, r7, pc}
 2434              	.L138:
 2435              		.align	2
 2436              	.L137:
 2437 0034 00000000 		.word	RTC_1_alarmCfgTimeDate
 2438 0038 00000000 		.word	RTC_1_alarmCfgMask
 2439 003c 20000000 		.word	RTC_1_unixTimeAlarm
 2440              		.cfi_endproc
 2441              	.LFE39:
 2442              		.size	RTC_1_SetAlarmDateAndTime, .-RTC_1_SetAlarmDateAndTime
 2443              		.section	.text.RTC_1_GetAlarmDateAndTime,"ax",%progbits
 2444              		.align	2
 2445              		.global	RTC_1_GetAlarmDateAndTime
 2446              		.code	16
 2447              		.thumb_func
 2448              		.type	RTC_1_GetAlarmDateAndTime, %function
 2449              	RTC_1_GetAlarmDateAndTime:
 2450              	.LFB40:
 478:Generated_Source\PSoC4/RTC_1.c **** 
 479:Generated_Source\PSoC4/RTC_1.c **** 
 480:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 481:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetAlarmDateAndTime
 482:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 483:Generated_Source\PSoC4/RTC_1.c ****     *
 484:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 485:Generated_Source\PSoC4/RTC_1.c ****     *  Reads the current alarm time and date.
 486:Generated_Source\PSoC4/RTC_1.c ****     *
 487:Generated_Source\PSoC4/RTC_1.c ****     * \param
 488:Generated_Source\PSoC4/RTC_1.c ****     *  alarmTimeDate The pointer to the RTC_1_date_time structure to which
 489:Generated_Source\PSoC4/RTC_1.c ****     *  the alarm date and time are returned.
 490:Generated_Source\PSoC4/RTC_1.c ****     *
 491:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 74


 492:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_GetAlarmDateAndTime(RTC_1_DATE_TIME* alarmTimeDate)
 493:Generated_Source\PSoC4/RTC_1.c ****     {
 2451              		.loc 2 493 0
 2452              		.cfi_startproc
 2453 0000 90B5     		push	{r4, r7, lr}
 2454              		.cfi_def_cfa_offset 12
 2455              		.cfi_offset 4, -12
 2456              		.cfi_offset 7, -8
 2457              		.cfi_offset 14, -4
 2458 0002 83B0     		sub	sp, sp, #12
 2459              		.cfi_def_cfa_offset 24
 2460 0004 00AF     		add	r7, sp, #0
 2461              		.cfi_def_cfa_register 7
 2462 0006 7860     		str	r0, [r7, #4]
 494:Generated_Source\PSoC4/RTC_1.c ****         *alarmTimeDate = RTC_1_alarmCfgTimeDate;
 2463              		.loc 2 494 0
 2464 0008 7B68     		ldr	r3, [r7, #4]
 2465 000a 044A     		ldr	r2, .L140
 2466 000c 13CA     		ldmia	r2!, {r0, r1, r4}
 2467 000e 13C3     		stmia	r3!, {r0, r1, r4}
 2468 0010 1268     		ldr	r2, [r2]
 2469 0012 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC4/RTC_1.c ****     }
 2470              		.loc 2 495 0
 2471 0014 BD46     		mov	sp, r7
 2472 0016 03B0     		add	sp, sp, #12
 2473              		@ sp needed
 2474 0018 90BD     		pop	{r4, r7, pc}
 2475              	.L141:
 2476 001a C046     		.align	2
 2477              	.L140:
 2478 001c 00000000 		.word	RTC_1_alarmCfgTimeDate
 2479              		.cfi_endproc
 2480              	.LFE40:
 2481              		.size	RTC_1_GetAlarmDateAndTime, .-RTC_1_GetAlarmDateAndTime
 2482              		.section	.text.RTC_1_SetAlarmMask,"ax",%progbits
 2483              		.align	2
 2484              		.global	RTC_1_SetAlarmMask
 2485              		.code	16
 2486              		.thumb_func
 2487              		.type	RTC_1_SetAlarmMask, %function
 2488              	RTC_1_SetAlarmMask:
 2489              	.LFB41:
 496:Generated_Source\PSoC4/RTC_1.c **** 
 497:Generated_Source\PSoC4/RTC_1.c **** 
 498:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 499:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetAlarmMask
 500:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 501:Generated_Source\PSoC4/RTC_1.c ****     *
 502:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 503:Generated_Source\PSoC4/RTC_1.c ****     *  Writes the Alarm Mask software register with one bit per time/date entry.
 504:Generated_Source\PSoC4/RTC_1.c ****     *  The alarm is true when all masked time/date values match the Alarm values.
 505:Generated_Source\PSoC4/RTC_1.c ****     *  Generated only if the alarm functionality is enabled.
 506:Generated_Source\PSoC4/RTC_1.c ****     *
 507:Generated_Source\PSoC4/RTC_1.c ****     * \param
 508:Generated_Source\PSoC4/RTC_1.c ****     *  mask The Alarm Mask software register value. The values shown below can be
 509:Generated_Source\PSoC4/RTC_1.c ****     *  OR'ed and passed as an argument as well.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 75


 510:Generated_Source\PSoC4/RTC_1.c ****     * \param
 511:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_SEC_MASK The second alarm mask allows
 512:Generated_Source\PSoC4/RTC_1.c ****     *  matching the alarm second register with the current second register.
 513:Generated_Source\PSoC4/RTC_1.c ****     * \param
 514:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_MIN_MASK The minute alarm mask allows matching the
 515:Generated_Source\PSoC4/RTC_1.c ****     *  alarm minute register with the current minute register.
 516:Generated_Source\PSoC4/RTC_1.c ****     * \param
 517:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_HOUR_MASK The hour alarm mask allows
 518:Generated_Source\PSoC4/RTC_1.c ****     * matching the alarm hour register with the current hour register.
 519:Generated_Source\PSoC4/RTC_1.c ****     * \param
 520:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_DAYOFWEEK_MASK The day of the week alarm mask 
 521:Generated_Source\PSoC4/RTC_1.c ****     * allows matching the alarm day of the week register with the current day of
 522:Generated_Source\PSoC4/RTC_1.c ****     * the week register.
 523:Generated_Source\PSoC4/RTC_1.c ****     * \param
 524:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_DAYOFMONTH_MASK The day of the month alarm mask
 525:Generated_Source\PSoC4/RTC_1.c ****     * allows matching the alarm day of the month register with the current day 
 526:Generated_Source\PSoC4/RTC_1.c ****     * of the month register.
 527:Generated_Source\PSoC4/RTC_1.c ****     * \param
 528:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_MONTH_MASK The month alarm mask allows matching 
 529:Generated_Source\PSoC4/RTC_1.c ****     * the alarm month register with the current month register.
 530:Generated_Source\PSoC4/RTC_1.c ****     * \param
 531:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_YEAR_MASK The year alarm mask allows matching the
 532:Generated_Source\PSoC4/RTC_1.c ****     *  alarm year register with the current year register.
 533:Generated_Source\PSoC4/RTC_1.c ****     *
 534:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 535:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetAlarmMask(uint32 mask)
 536:Generated_Source\PSoC4/RTC_1.c ****     {
 2490              		.loc 2 536 0
 2491              		.cfi_startproc
 2492 0000 90B5     		push	{r4, r7, lr}
 2493              		.cfi_def_cfa_offset 12
 2494              		.cfi_offset 4, -12
 2495              		.cfi_offset 7, -8
 2496              		.cfi_offset 14, -4
 2497 0002 83B0     		sub	sp, sp, #12
 2498              		.cfi_def_cfa_offset 24
 2499 0004 00AF     		add	r7, sp, #0
 2500              		.cfi_def_cfa_register 7
 2501 0006 7860     		str	r0, [r7, #4]
 537:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCfgMask = (uint8)mask;
 2502              		.loc 2 537 0
 2503 0008 7B68     		ldr	r3, [r7, #4]
 2504 000a DBB2     		uxtb	r3, r3
 2505 000c 1A1C     		mov	r2, r3
 2506 000e 084B     		ldr	r3, .L143
 2507 0010 1A60     		str	r2, [r3]
 538:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeAlarm = RTC_1_ConstructUnixAlarmTime(&RTC_1_alarmCfgTimeDate, (uint8)mask);
 2508              		.loc 2 538 0
 2509 0012 7B68     		ldr	r3, [r7, #4]
 2510 0014 DBB2     		uxtb	r3, r3
 2511 0016 074A     		ldr	r2, .L143+4
 2512 0018 101C     		mov	r0, r2
 2513 001a 191C     		mov	r1, r3
 2514 001c FFF7FEFF 		bl	RTC_1_ConstructUnixAlarmTime
 2515 0020 031C     		mov	r3, r0
 2516 0022 0C1C     		mov	r4, r1
 2517 0024 044A     		ldr	r2, .L143+8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 76


 2518 0026 1360     		str	r3, [r2]
 2519 0028 5460     		str	r4, [r2, #4]
 539:Generated_Source\PSoC4/RTC_1.c ****     }
 2520              		.loc 2 539 0
 2521 002a BD46     		mov	sp, r7
 2522 002c 03B0     		add	sp, sp, #12
 2523              		@ sp needed
 2524 002e 90BD     		pop	{r4, r7, pc}
 2525              	.L144:
 2526              		.align	2
 2527              	.L143:
 2528 0030 00000000 		.word	RTC_1_alarmCfgMask
 2529 0034 00000000 		.word	RTC_1_alarmCfgTimeDate
 2530 0038 20000000 		.word	RTC_1_unixTimeAlarm
 2531              		.cfi_endproc
 2532              	.LFE41:
 2533              		.size	RTC_1_SetAlarmMask, .-RTC_1_SetAlarmMask
 2534              		.section	.text.RTC_1_GetAlarmMask,"ax",%progbits
 2535              		.align	2
 2536              		.global	RTC_1_GetAlarmMask
 2537              		.code	16
 2538              		.thumb_func
 2539              		.type	RTC_1_GetAlarmMask, %function
 2540              	RTC_1_GetAlarmMask:
 2541              	.LFB42:
 540:Generated_Source\PSoC4/RTC_1.c **** 
 541:Generated_Source\PSoC4/RTC_1.c **** 
 542:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 543:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetAlarmMask
 544:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 545:Generated_Source\PSoC4/RTC_1.c ****     *
 546:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 547:Generated_Source\PSoC4/RTC_1.c ****     *  Reads the Alarm Mask software register. Generated only if the alarm 
 548:Generated_Source\PSoC4/RTC_1.c ****     * functionality is enabled.
 549:Generated_Source\PSoC4/RTC_1.c ****     *
 550:Generated_Source\PSoC4/RTC_1.c ****     * \return
 551:Generated_Source\PSoC4/RTC_1.c ****     *  The Alarm Mask value with each bit representing the status of the alarm 
 552:Generated_Source\PSoC4/RTC_1.c ****     * time/date match enable.
 553:Generated_Source\PSoC4/RTC_1.c ****     *
 554:Generated_Source\PSoC4/RTC_1.c ****     * \return
 555:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_SEC_MASK - The second alarm mask allows matching the
 556:Generated_Source\PSoC4/RTC_1.c ****     * alarm second register with the current second register.
 557:Generated_Source\PSoC4/RTC_1.c ****     *
 558:Generated_Source\PSoC4/RTC_1.c ****     * \return
 559:Generated_Source\PSoC4/RTC_1.c ****     * RTC_1_ALARM_MIN_MASK - The minute alarm mask allows matching the 
 560:Generated_Source\PSoC4/RTC_1.c ****     * alarm minute register with the current minute register.
 561:Generated_Source\PSoC4/RTC_1.c ****     *
 562:Generated_Source\PSoC4/RTC_1.c ****     * \return
 563:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_HOUR_MASK - The hour alarm mask allows matching the 
 564:Generated_Source\PSoC4/RTC_1.c ****     * alarm hour register with the current hour register.
 565:Generated_Source\PSoC4/RTC_1.c ****     *
 566:Generated_Source\PSoC4/RTC_1.c ****     * \return
 567:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_DAYOFWEEK_MASK - The day of the week alarm mask allows
 568:Generated_Source\PSoC4/RTC_1.c ****     * matching the alarm day of the week register with the current day of the 
 569:Generated_Source\PSoC4/RTC_1.c ****     * week register.
 570:Generated_Source\PSoC4/RTC_1.c ****     *
 571:Generated_Source\PSoC4/RTC_1.c ****     * \return
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 77


 572:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_DAYOFMONTH_MASK - The day of the month alarm mask 
 573:Generated_Source\PSoC4/RTC_1.c ****     * allows matching the alarm day of the month register with the current day of 
 574:Generated_Source\PSoC4/RTC_1.c ****     * the month register.
 575:Generated_Source\PSoC4/RTC_1.c ****     *
 576:Generated_Source\PSoC4/RTC_1.c ****     * \return
 577:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_MONTH_MASK - The month alarm mask allows matching 
 578:Generated_Source\PSoC4/RTC_1.c ****     * the alarm month register with the current month register.
 579:Generated_Source\PSoC4/RTC_1.c ****     *
 580:Generated_Source\PSoC4/RTC_1.c ****     * \return
 581:Generated_Source\PSoC4/RTC_1.c ****     *  RTC_1_ALARM_YEAR_MASK - The year alarm mask allows matching the
 582:Generated_Source\PSoC4/RTC_1.c ****     * alarm year register with the current year register.
 583:Generated_Source\PSoC4/RTC_1.c ****     *
 584:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 585:Generated_Source\PSoC4/RTC_1.c ****     uint32 RTC_1_GetAlarmMask(void)
 586:Generated_Source\PSoC4/RTC_1.c ****     {
 2542              		.loc 2 586 0
 2543              		.cfi_startproc
 2544 0000 80B5     		push	{r7, lr}
 2545              		.cfi_def_cfa_offset 8
 2546              		.cfi_offset 7, -8
 2547              		.cfi_offset 14, -4
 2548 0002 00AF     		add	r7, sp, #0
 2549              		.cfi_def_cfa_register 7
 587:Generated_Source\PSoC4/RTC_1.c ****         return((uint32)RTC_1_alarmCfgMask);
 2550              		.loc 2 587 0
 2551 0004 024B     		ldr	r3, .L147
 2552 0006 1B68     		ldr	r3, [r3]
 588:Generated_Source\PSoC4/RTC_1.c ****     }
 2553              		.loc 2 588 0
 2554 0008 181C     		mov	r0, r3
 2555 000a BD46     		mov	sp, r7
 2556              		@ sp needed
 2557 000c 80BD     		pop	{r7, pc}
 2558              	.L148:
 2559 000e C046     		.align	2
 2560              	.L147:
 2561 0010 00000000 		.word	RTC_1_alarmCfgMask
 2562              		.cfi_endproc
 2563              	.LFE42:
 2564              		.size	RTC_1_GetAlarmMask, .-RTC_1_GetAlarmMask
 2565              		.section	.text.RTC_1_GetAlarmStatus,"ax",%progbits
 2566              		.align	2
 2567              		.global	RTC_1_GetAlarmStatus
 2568              		.code	16
 2569              		.thumb_func
 2570              		.type	RTC_1_GetAlarmStatus, %function
 2571              	RTC_1_GetAlarmStatus:
 2572              	.LFB43:
 589:Generated_Source\PSoC4/RTC_1.c **** 
 590:Generated_Source\PSoC4/RTC_1.c **** 
 591:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 592:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetAlarmStatus
 593:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 594:Generated_Source\PSoC4/RTC_1.c ****     *
 595:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 596:Generated_Source\PSoC4/RTC_1.c ****     *  Returns the alarm status of RTC.
 597:Generated_Source\PSoC4/RTC_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 78


 598:Generated_Source\PSoC4/RTC_1.c ****     * \return
 599:Generated_Source\PSoC4/RTC_1.c ****     *  The Alarm active status. This bit is high when the current time and date match the alarm
 600:Generated_Source\PSoC4/RTC_1.c ****     *  time and date.
 601:Generated_Source\PSoC4/RTC_1.c ****     *
 602:Generated_Source\PSoC4/RTC_1.c ****     * \return
 603:Generated_Source\PSoC4/RTC_1.c ****     *  0 - The Alarm status is not active.
 604:Generated_Source\PSoC4/RTC_1.c ****     * \return
 605:Generated_Source\PSoC4/RTC_1.c ****     *  1 - The Alarm status is active.
 606:Generated_Source\PSoC4/RTC_1.c ****     *
 607:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 608:Generated_Source\PSoC4/RTC_1.c ****     uint32 RTC_1_GetAlarmStatus(void)
 609:Generated_Source\PSoC4/RTC_1.c ****     {
 2573              		.loc 2 609 0
 2574              		.cfi_startproc
 2575 0000 80B5     		push	{r7, lr}
 2576              		.cfi_def_cfa_offset 8
 2577              		.cfi_offset 7, -8
 2578              		.cfi_offset 14, -4
 2579 0002 00AF     		add	r7, sp, #0
 2580              		.cfi_def_cfa_register 7
 610:Generated_Source\PSoC4/RTC_1.c ****         return((0uL != (RTC_1_currentTimeDate.status & (1uL << RTC_1_STATUS_ALARM_OFFSET))) ? 1uL :
 2581              		.loc 2 610 0
 2582 0004 054B     		ldr	r3, .L153
 2583 0006 DB68     		ldr	r3, [r3, #12]
 2584 0008 0422     		mov	r2, #4
 2585 000a 1340     		and	r3, r2
 2586 000c 01D0     		beq	.L150
 2587              		.loc 2 610 0 is_stmt 0 discriminator 1
 2588 000e 0123     		mov	r3, #1
 2589 0010 00E0     		b	.L151
 2590              	.L150:
 2591              		.loc 2 610 0 discriminator 2
 2592 0012 0023     		mov	r3, #0
 2593              	.L151:
 611:Generated_Source\PSoC4/RTC_1.c ****     }
 2594              		.loc 2 611 0 is_stmt 1 discriminator 4
 2595 0014 181C     		mov	r0, r3
 2596 0016 BD46     		mov	sp, r7
 2597              		@ sp needed
 2598 0018 80BD     		pop	{r7, pc}
 2599              	.L154:
 2600 001a C046     		.align	2
 2601              	.L153:
 2602 001c 00000000 		.word	RTC_1_currentTimeDate
 2603              		.cfi_endproc
 2604              	.LFE43:
 2605              		.size	RTC_1_GetAlarmStatus, .-RTC_1_GetAlarmStatus
 2606              		.section	.text.RTC_1_ClearAlarmStatus,"ax",%progbits
 2607              		.align	2
 2608              		.global	RTC_1_ClearAlarmStatus
 2609              		.code	16
 2610              		.thumb_func
 2611              		.type	RTC_1_ClearAlarmStatus, %function
 2612              	RTC_1_ClearAlarmStatus:
 2613              	.LFB44:
 612:Generated_Source\PSoC4/RTC_1.c **** 
 613:Generated_Source\PSoC4/RTC_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 79


 614:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 615:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_ClearAlarmStatus
 616:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 617:Generated_Source\PSoC4/RTC_1.c ****     *
 618:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 619:Generated_Source\PSoC4/RTC_1.c ****     *  Clears the alarm status of RTC.
 620:Generated_Source\PSoC4/RTC_1.c ****     *
 621:Generated_Source\PSoC4/RTC_1.c ****     * \note
 622:Generated_Source\PSoC4/RTC_1.c ****     * The Alarm active (AA) flag clears after read. This bit will be set in the next
 623:Generated_Source\PSoC4/RTC_1.c ****     * alarm match event only. If Alarm is set on only minutes and the alarm
 624:Generated_Source\PSoC4/RTC_1.c ****     * minutes is 20 minutes - the alarm triggers once every 20th minute of
 625:Generated_Source\PSoC4/RTC_1.c ****     * every hour.
 626:Generated_Source\PSoC4/RTC_1.c ****     *
 627:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 628:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_ClearAlarmStatus(void)
 629:Generated_Source\PSoC4/RTC_1.c ****     {
 2614              		.loc 2 629 0
 2615              		.cfi_startproc
 2616 0000 80B5     		push	{r7, lr}
 2617              		.cfi_def_cfa_offset 8
 2618              		.cfi_offset 7, -8
 2619              		.cfi_offset 14, -4
 2620 0002 00AF     		add	r7, sp, #0
 2621              		.cfi_def_cfa_register 7
 630:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status &= (~(1uL << RTC_1_STATUS_ALARM_OFFSET));
 2622              		.loc 2 630 0
 2623 0004 054B     		ldr	r3, .L156
 2624 0006 DB68     		ldr	r3, [r3, #12]
 2625 0008 0422     		mov	r2, #4
 2626 000a 9343     		bic	r3, r2
 2627 000c 1A1C     		mov	r2, r3
 2628 000e 034B     		ldr	r3, .L156
 2629 0010 DA60     		str	r2, [r3, #12]
 631:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCurStatus = 0u;
 2630              		.loc 2 631 0
 2631 0012 034B     		ldr	r3, .L156+4
 2632 0014 0022     		mov	r2, #0
 2633 0016 1A60     		str	r2, [r3]
 632:Generated_Source\PSoC4/RTC_1.c ****     }
 2634              		.loc 2 632 0
 2635 0018 BD46     		mov	sp, r7
 2636              		@ sp needed
 2637 001a 80BD     		pop	{r7, pc}
 2638              	.L157:
 2639              		.align	2
 2640              	.L156:
 2641 001c 00000000 		.word	RTC_1_currentTimeDate
 2642 0020 00000000 		.word	RTC_1_alarmCurStatus
 2643              		.cfi_endproc
 2644              	.LFE44:
 2645              		.size	RTC_1_ClearAlarmStatus, .-RTC_1_ClearAlarmStatus
 2646              		.section	.text.RTC_1_SetAlarmHandler,"ax",%progbits
 2647              		.align	2
 2648              		.global	RTC_1_SetAlarmHandler
 2649              		.code	16
 2650              		.thumb_func
 2651              		.type	RTC_1_SetAlarmHandler, %function
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 80


 2652              	RTC_1_SetAlarmHandler:
 2653              	.LFB45:
 633:Generated_Source\PSoC4/RTC_1.c **** 
 634:Generated_Source\PSoC4/RTC_1.c **** 
 635:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 636:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetAlarmHandler
 637:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 638:Generated_Source\PSoC4/RTC_1.c ****     *
 639:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 640:Generated_Source\PSoC4/RTC_1.c ****     *  This API sets the function to be called when the alarm goes off / triggers.
 641:Generated_Source\PSoC4/RTC_1.c ****     *  This API is generated only if the alarm functionality is enabled in the
 642:Generated_Source\PSoC4/RTC_1.c ****     *  customizer.
 643:Generated_Source\PSoC4/RTC_1.c ****     *
 644:Generated_Source\PSoC4/RTC_1.c ****     * \param
 645:Generated_Source\PSoC4/RTC_1.c ****     *  CallbackFunction The callback function address.
 646:Generated_Source\PSoC4/RTC_1.c ****     *
 647:Generated_Source\PSoC4/RTC_1.c ****     * \return
 648:Generated_Source\PSoC4/RTC_1.c ****     *  A previous callback function address.
 649:Generated_Source\PSoC4/RTC_1.c ****     *
 650:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 651:Generated_Source\PSoC4/RTC_1.c ****     void* RTC_1_SetAlarmHandler(void (*CallbackFunction)(void))
 652:Generated_Source\PSoC4/RTC_1.c ****     {
 2654              		.loc 2 652 0
 2655              		.cfi_startproc
 2656 0000 80B5     		push	{r7, lr}
 2657              		.cfi_def_cfa_offset 8
 2658              		.cfi_offset 7, -8
 2659              		.cfi_offset 14, -4
 2660 0002 84B0     		sub	sp, sp, #16
 2661              		.cfi_def_cfa_offset 24
 2662 0004 00AF     		add	r7, sp, #0
 2663              		.cfi_def_cfa_register 7
 2664 0006 7860     		str	r0, [r7, #4]
 653:Generated_Source\PSoC4/RTC_1.c ****         void (*tmpCallbackPtr)(void);
 654:Generated_Source\PSoC4/RTC_1.c **** 
 655:Generated_Source\PSoC4/RTC_1.c ****         tmpCallbackPtr = RTC_1_alarmCallbackPtr;
 2665              		.loc 2 655 0
 2666 0008 054B     		ldr	r3, .L160
 2667 000a 1B68     		ldr	r3, [r3]
 2668 000c FB60     		str	r3, [r7, #12]
 656:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_alarmCallbackPtr = CallbackFunction;
 2669              		.loc 2 656 0
 2670 000e 044B     		ldr	r3, .L160
 2671 0010 7A68     		ldr	r2, [r7, #4]
 2672 0012 1A60     		str	r2, [r3]
 657:Generated_Source\PSoC4/RTC_1.c **** 
 658:Generated_Source\PSoC4/RTC_1.c ****         return((void*)tmpCallbackPtr);
 2673              		.loc 2 658 0
 2674 0014 FB68     		ldr	r3, [r7, #12]
 659:Generated_Source\PSoC4/RTC_1.c ****     }
 2675              		.loc 2 659 0
 2676 0016 181C     		mov	r0, r3
 2677 0018 BD46     		mov	sp, r7
 2678 001a 04B0     		add	sp, sp, #16
 2679              		@ sp needed
 2680 001c 80BD     		pop	{r7, pc}
 2681              	.L161:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 81


 2682 001e C046     		.align	2
 2683              	.L160:
 2684 0020 00000000 		.word	RTC_1_alarmCallbackPtr
 2685              		.cfi_endproc
 2686              	.LFE45:
 2687              		.size	RTC_1_SetAlarmHandler, .-RTC_1_SetAlarmHandler
 2688              		.section	.text.RTC_1_GetNexAlarmTime,"ax",%progbits
 2689              		.align	2
 2690              		.global	RTC_1_GetNexAlarmTime
 2691              		.code	16
 2692              		.thumb_func
 2693              		.type	RTC_1_GetNexAlarmTime, %function
 2694              	RTC_1_GetNexAlarmTime:
 2695              	.LFB46:
 660:Generated_Source\PSoC4/RTC_1.c **** 
 661:Generated_Source\PSoC4/RTC_1.c **** 
 662:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 663:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetNexAlarmTime
 664:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 665:Generated_Source\PSoC4/RTC_1.c ****     *
 666:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 667:Generated_Source\PSoC4/RTC_1.c ****     *  This is an internal function that calculates the time of the next alarm
 668:Generated_Source\PSoC4/RTC_1.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 669:Generated_Source\PSoC4/RTC_1.c ****     *
 670:Generated_Source\PSoC4/RTC_1.c ****     * \param
 671:Generated_Source\PSoC4/RTC_1.c ****     *  curUnixTime The current time value in the UNIX format.
 672:Generated_Source\PSoC4/RTC_1.c ****     *
 673:Generated_Source\PSoC4/RTC_1.c ****     * \param
 674:Generated_Source\PSoC4/RTC_1.c ****     *  alarmCfgMask The current Alarm Config Mask.
 675:Generated_Source\PSoC4/RTC_1.c ****     *
 676:Generated_Source\PSoC4/RTC_1.c ****     * \return Returns time of the next alarm in the UNIX format.
 677:Generated_Source\PSoC4/RTC_1.c ****     *
 678:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 679:Generated_Source\PSoC4/RTC_1.c ****     uint64 RTC_1_GetNexAlarmTime(uint64 curUnixTime, uint8 alarmCfgMask)
 680:Generated_Source\PSoC4/RTC_1.c ****     {
 2696              		.loc 2 680 0
 2697              		.cfi_startproc
 2698 0000 B0B5     		push	{r4, r5, r7, lr}
 2699              		.cfi_def_cfa_offset 16
 2700              		.cfi_offset 4, -16
 2701              		.cfi_offset 5, -12
 2702              		.cfi_offset 7, -8
 2703              		.cfi_offset 14, -4
 2704 0002 8EB0     		sub	sp, sp, #56
 2705              		.cfi_def_cfa_offset 72
 2706 0004 02AF     		add	r7, sp, #8
 2707              		.cfi_def_cfa 7, 64
 2708 0006 B860     		str	r0, [r7, #8]
 2709 0008 F960     		str	r1, [r7, #12]
 2710 000a FB1D     		add	r3, r7, #7
 2711 000c 1A70     		strb	r2, [r3]
 681:Generated_Source\PSoC4/RTC_1.c ****         uint32 prevVal;
 682:Generated_Source\PSoC4/RTC_1.c ****         uint32 nextVal;
 683:Generated_Source\PSoC4/RTC_1.c ****         uint32 carryFlag;
 684:Generated_Source\PSoC4/RTC_1.c ****         uint32 daysInMonth;
 685:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DATE_TIME curDateTime;
 686:Generated_Source\PSoC4/RTC_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 82


 687:Generated_Source\PSoC4/RTC_1.c ****         carryFlag = 1u;
 2712              		.loc 2 687 0
 2713 000e 0123     		mov	r3, #1
 2714 0010 BB62     		str	r3, [r7, #40]
 688:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_UnixToDateTime(&curDateTime, curUnixTime, (uint32)RTC_1_24_HOURS_FORMAT);
 2715              		.loc 2 688 0
 2716 0012 1023     		mov	r3, #16
 2717 0014 F918     		add	r1, r7, r3
 2718 0016 BB68     		ldr	r3, [r7, #8]
 2719 0018 FC68     		ldr	r4, [r7, #12]
 2720 001a 0022     		mov	r2, #0
 2721 001c 0092     		str	r2, [sp]
 2722 001e 081C     		mov	r0, r1
 2723 0020 1A1C     		mov	r2, r3
 2724 0022 231C     		mov	r3, r4
 2725 0024 FFF7FEFF 		bl	RTC_1_UnixToDateTime
 689:Generated_Source\PSoC4/RTC_1.c **** 
 690:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Second value of next alarm time based on current time and Alarm Config Mask. 
 691:Generated_Source\PSoC4/RTC_1.c ****         if(0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_SEC_MASK))
 2726              		.loc 2 691 0
 2727 0028 FB1D     		add	r3, r7, #7
 2728 002a 1B78     		ldrb	r3, [r3]
 2729 002c 0122     		mov	r2, #1
 2730 002e 1340     		and	r3, r2
 2731 0030 01D1     		bne	.L163
 2732              		.loc 2 691 0 is_stmt 0 discriminator 1
 2733 0032 0123     		mov	r3, #1
 2734 0034 00E0     		b	.L164
 2735              	.L163:
 2736              		.loc 2 691 0 discriminator 2
 2737 0036 0023     		mov	r3, #0
 2738              	.L164:
 2739              		.loc 2 691 0 discriminator 4
 2740 0038 002B     		cmp	r3, #0
 2741 003a 21D0     		beq	.L165
 692:Generated_Source\PSoC4/RTC_1.c ****         {
 693:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetSecond(curDateTime.time);
 2742              		.loc 2 693 0 is_stmt 1
 2743 003c 1023     		mov	r3, #16
 2744 003e FB18     		add	r3, r7, r3
 2745 0040 1B68     		ldr	r3, [r3]
 2746 0042 181C     		mov	r0, r3
 2747 0044 FFF7FEFF 		bl	RTC_1_GetSecond
 2748 0048 031C     		mov	r3, r0
 2749 004a 7B62     		str	r3, [r7, #36]
 694:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextMinSec(prevVal);
 2750              		.loc 2 694 0
 2751 004c 7B6A     		ldr	r3, [r7, #36]
 2752 004e 181C     		mov	r0, r3
 2753 0050 FFF7FEFF 		bl	RTC_1_GetNextMinSec
 2754 0054 031C     		mov	r3, r0
 2755 0056 FB62     		str	r3, [r7, #44]
 695:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.time = RTC_1_SetSecond(curDateTime.time, nextVal);
 2756              		.loc 2 695 0
 2757 0058 1023     		mov	r3, #16
 2758 005a FB18     		add	r3, r7, r3
 2759 005c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 83


 2760 005e FB6A     		ldr	r3, [r7, #44]
 2761 0060 101C     		mov	r0, r2
 2762 0062 191C     		mov	r1, r3
 2763 0064 FFF7FEFF 		bl	RTC_1_SetSecond
 2764 0068 021C     		mov	r2, r0
 2765 006a 1023     		mov	r3, #16
 2766 006c FB18     		add	r3, r7, r3
 2767 006e 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 2768              		.loc 2 696 0
 2769 0070 FA6A     		ldr	r2, [r7, #44]
 2770 0072 7B6A     		ldr	r3, [r7, #36]
 2771 0074 9A42     		cmp	r2, r3
 2772 0076 01D2     		bcs	.L166
 2773              		.loc 2 696 0 is_stmt 0 discriminator 1
 2774 0078 0123     		mov	r3, #1
 2775 007a 00E0     		b	.L167
 2776              	.L166:
 2777              		.loc 2 696 0 discriminator 2
 2778 007c 0023     		mov	r3, #0
 2779              	.L167:
 2780              		.loc 2 696 0 discriminator 4
 2781 007e BB62     		str	r3, [r7, #40]
 2782              	.L165:
 697:Generated_Source\PSoC4/RTC_1.c ****         }
 698:Generated_Source\PSoC4/RTC_1.c **** 
 699:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Minute value of next alarm time based on current time and Alarm Config Mask. 
 700:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MIN_MASK)))
 2783              		.loc 2 700 0 is_stmt 1
 2784 0080 BB6A     		ldr	r3, [r7, #40]
 2785 0082 002B     		cmp	r3, #0
 2786 0084 26D0     		beq	.L168
 2787              		.loc 2 700 0 is_stmt 0 discriminator 1
 2788 0086 FB1D     		add	r3, r7, #7
 2789 0088 1B78     		ldrb	r3, [r3]
 2790 008a 0222     		mov	r2, #2
 2791 008c 1340     		and	r3, r2
 2792 008e 21D1     		bne	.L168
 701:Generated_Source\PSoC4/RTC_1.c ****         {
 702:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetMinutes(curDateTime.time);
 2793              		.loc 2 702 0 is_stmt 1
 2794 0090 1023     		mov	r3, #16
 2795 0092 FB18     		add	r3, r7, r3
 2796 0094 1B68     		ldr	r3, [r3]
 2797 0096 181C     		mov	r0, r3
 2798 0098 FFF7FEFF 		bl	RTC_1_GetMinutes
 2799 009c 031C     		mov	r3, r0
 2800 009e 7B62     		str	r3, [r7, #36]
 703:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextMinSec(prevVal);
 2801              		.loc 2 703 0
 2802 00a0 7B6A     		ldr	r3, [r7, #36]
 2803 00a2 181C     		mov	r0, r3
 2804 00a4 FFF7FEFF 		bl	RTC_1_GetNextMinSec
 2805 00a8 031C     		mov	r3, r0
 2806 00aa FB62     		str	r3, [r7, #44]
 704:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.time = RTC_1_SetMinutes(curDateTime.time, nextVal);
 2807              		.loc 2 704 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 84


 2808 00ac 1023     		mov	r3, #16
 2809 00ae FB18     		add	r3, r7, r3
 2810 00b0 1A68     		ldr	r2, [r3]
 2811 00b2 FB6A     		ldr	r3, [r7, #44]
 2812 00b4 101C     		mov	r0, r2
 2813 00b6 191C     		mov	r1, r3
 2814 00b8 FFF7FEFF 		bl	RTC_1_SetMinutes
 2815 00bc 021C     		mov	r2, r0
 2816 00be 1023     		mov	r3, #16
 2817 00c0 FB18     		add	r3, r7, r3
 2818 00c2 1A60     		str	r2, [r3]
 705:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 2819              		.loc 2 705 0
 2820 00c4 FA6A     		ldr	r2, [r7, #44]
 2821 00c6 7B6A     		ldr	r3, [r7, #36]
 2822 00c8 9A42     		cmp	r2, r3
 2823 00ca 01D2     		bcs	.L169
 2824              		.loc 2 705 0 is_stmt 0 discriminator 1
 2825 00cc 0123     		mov	r3, #1
 2826 00ce 00E0     		b	.L170
 2827              	.L169:
 2828              		.loc 2 705 0 discriminator 2
 2829 00d0 0023     		mov	r3, #0
 2830              	.L170:
 2831              		.loc 2 705 0 discriminator 4
 2832 00d2 BB62     		str	r3, [r7, #40]
 2833              	.L168:
 706:Generated_Source\PSoC4/RTC_1.c ****         }
 707:Generated_Source\PSoC4/RTC_1.c **** 
 708:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Hour value of next alarm time based on current time and Alarm Config Mask. */
 709:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_HOUR_MASK)))
 2834              		.loc 2 709 0 is_stmt 1
 2835 00d4 BB6A     		ldr	r3, [r7, #40]
 2836 00d6 002B     		cmp	r3, #0
 2837 00d8 26D0     		beq	.L171
 2838              		.loc 2 709 0 is_stmt 0 discriminator 1
 2839 00da FB1D     		add	r3, r7, #7
 2840 00dc 1B78     		ldrb	r3, [r3]
 2841 00de 0422     		mov	r2, #4
 2842 00e0 1340     		and	r3, r2
 2843 00e2 21D1     		bne	.L171
 710:Generated_Source\PSoC4/RTC_1.c ****         {
 711:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetHours(curDateTime.time);
 2844              		.loc 2 711 0 is_stmt 1
 2845 00e4 1023     		mov	r3, #16
 2846 00e6 FB18     		add	r3, r7, r3
 2847 00e8 1B68     		ldr	r3, [r3]
 2848 00ea 181C     		mov	r0, r3
 2849 00ec FFF7FEFF 		bl	RTC_1_GetHours
 2850 00f0 031C     		mov	r3, r0
 2851 00f2 7B62     		str	r3, [r7, #36]
 712:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextHour(prevVal);
 2852              		.loc 2 712 0
 2853 00f4 7B6A     		ldr	r3, [r7, #36]
 2854 00f6 181C     		mov	r0, r3
 2855 00f8 FFF7FEFF 		bl	RTC_1_GetNextHour
 2856 00fc 031C     		mov	r3, r0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 85


 2857 00fe FB62     		str	r3, [r7, #44]
 713:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.time = RTC_1_SetHours(curDateTime.time, nextVal);
 2858              		.loc 2 713 0
 2859 0100 1023     		mov	r3, #16
 2860 0102 FB18     		add	r3, r7, r3
 2861 0104 1A68     		ldr	r2, [r3]
 2862 0106 FB6A     		ldr	r3, [r7, #44]
 2863 0108 101C     		mov	r0, r2
 2864 010a 191C     		mov	r1, r3
 2865 010c FFF7FEFF 		bl	RTC_1_SetHours
 2866 0110 021C     		mov	r2, r0
 2867 0112 1023     		mov	r3, #16
 2868 0114 FB18     		add	r3, r7, r3
 2869 0116 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 2870              		.loc 2 714 0
 2871 0118 FA6A     		ldr	r2, [r7, #44]
 2872 011a 7B6A     		ldr	r3, [r7, #36]
 2873 011c 9A42     		cmp	r2, r3
 2874 011e 01D2     		bcs	.L172
 2875              		.loc 2 714 0 is_stmt 0 discriminator 1
 2876 0120 0123     		mov	r3, #1
 2877 0122 00E0     		b	.L173
 2878              	.L172:
 2879              		.loc 2 714 0 discriminator 2
 2880 0124 0023     		mov	r3, #0
 2881              	.L173:
 2882              		.loc 2 714 0 discriminator 4
 2883 0126 BB62     		str	r3, [r7, #40]
 2884              	.L171:
 715:Generated_Source\PSoC4/RTC_1.c ****         }
 716:Generated_Source\PSoC4/RTC_1.c **** 
 717:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Day value of next alarm time based on current time and Alarm Config Mask. */
 718:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_DAYOFMONTH_MASK))
 2885              		.loc 2 718 0 is_stmt 1
 2886 0128 BB6A     		ldr	r3, [r7, #40]
 2887 012a 002B     		cmp	r3, #0
 2888 012c 65D0     		beq	.L174
 2889              		.loc 2 718 0 is_stmt 0 discriminator 1
 2890 012e FB1D     		add	r3, r7, #7
 2891 0130 1B78     		ldrb	r3, [r3]
 2892 0132 1022     		mov	r2, #16
 2893 0134 1340     		and	r3, r2
 2894 0136 60D1     		bne	.L174
 719:Generated_Source\PSoC4/RTC_1.c ****         {
 720:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetDay(curDateTime.date);
 2895              		.loc 2 720 0 is_stmt 1
 2896 0138 1023     		mov	r3, #16
 2897 013a FB18     		add	r3, r7, r3
 2898 013c 5B68     		ldr	r3, [r3, #4]
 2899 013e 181C     		mov	r0, r3
 2900 0140 FFF7FEFF 		bl	RTC_1_GetDay
 2901 0144 031C     		mov	r3, r0
 2902 0146 7B62     		str	r3, [r7, #36]
 721:Generated_Source\PSoC4/RTC_1.c ****             if(0u != (alarmCfgMask & RTC_1_ALARM_DAYOFWEEK_MASK))
 2903              		.loc 2 721 0
 2904 0148 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 86


 2905 014a 1B78     		ldrb	r3, [r3]
 2906 014c 0822     		mov	r2, #8
 2907 014e 1340     		and	r3, r2
 2908 0150 21D0     		beq	.L175
 722:Generated_Source\PSoC4/RTC_1.c ****             {
 723:Generated_Source\PSoC4/RTC_1.c ****                 daysInMonth = RTC_1_DaysInMonth(RTC_1_GetMonth(curDateTime.date),
 2909              		.loc 2 723 0
 2910 0152 1023     		mov	r3, #16
 2911 0154 FB18     		add	r3, r7, r3
 2912 0156 5B68     		ldr	r3, [r3, #4]
 2913 0158 181C     		mov	r0, r3
 2914 015a FFF7FEFF 		bl	RTC_1_GetMonth
 2915 015e 041C     		mov	r4, r0
 2916 0160 1023     		mov	r3, #16
 2917 0162 FB18     		add	r3, r7, r3
 2918 0164 5B68     		ldr	r3, [r3, #4]
 2919 0166 181C     		mov	r0, r3
 2920 0168 FFF7FEFF 		bl	RTC_1_GetYear
 2921 016c 031C     		mov	r3, r0
 2922 016e 201C     		mov	r0, r4
 2923 0170 191C     		mov	r1, r3
 2924 0172 FFF7FEFF 		bl	RTC_1_DaysInMonth
 2925 0176 031C     		mov	r3, r0
 2926 0178 3B62     		str	r3, [r7, #32]
 724:Generated_Source\PSoC4/RTC_1.c ****                                                            RTC_1_GetYear(curDateTime.date));
 725:Generated_Source\PSoC4/RTC_1.c ****                 nextVal = prevVal + RTC_1_DAYS_PER_WEEK;
 2927              		.loc 2 725 0
 2928 017a 7B6A     		ldr	r3, [r7, #36]
 2929 017c 0733     		add	r3, r3, #7
 2930 017e FB62     		str	r3, [r7, #44]
 726:Generated_Source\PSoC4/RTC_1.c ****                 nextVal = (nextVal > daysInMonth) ? (nextVal - daysInMonth) : nextVal;
 2931              		.loc 2 726 0
 2932 0180 FA6A     		ldr	r2, [r7, #44]
 2933 0182 3B6A     		ldr	r3, [r7, #32]
 2934 0184 9A42     		cmp	r2, r3
 2935 0186 03D9     		bls	.L176
 2936              		.loc 2 726 0 is_stmt 0 discriminator 1
 2937 0188 FA6A     		ldr	r2, [r7, #44]
 2938 018a 3B6A     		ldr	r3, [r7, #32]
 2939 018c D31A     		sub	r3, r2, r3
 2940 018e 00E0     		b	.L177
 2941              	.L176:
 2942              		.loc 2 726 0 discriminator 2
 2943 0190 FB6A     		ldr	r3, [r7, #44]
 2944              	.L177:
 2945              		.loc 2 726 0 discriminator 4
 2946 0192 FB62     		str	r3, [r7, #44]
 2947 0194 1DE0     		b	.L178
 2948              	.L175:
 727:Generated_Source\PSoC4/RTC_1.c ****             }
 728:Generated_Source\PSoC4/RTC_1.c ****             else
 729:Generated_Source\PSoC4/RTC_1.c ****             {
 730:Generated_Source\PSoC4/RTC_1.c ****                 nextVal = RTC_1_GetNextDay(RTC_1_GetYear(curDateTime.date),
 2949              		.loc 2 730 0 is_stmt 1
 2950 0196 1023     		mov	r3, #16
 2951 0198 FB18     		add	r3, r7, r3
 2952 019a 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 87


 2953 019c 181C     		mov	r0, r3
 2954 019e FFF7FEFF 		bl	RTC_1_GetYear
 2955 01a2 051C     		mov	r5, r0
 2956 01a4 1023     		mov	r3, #16
 2957 01a6 FB18     		add	r3, r7, r3
 2958 01a8 5B68     		ldr	r3, [r3, #4]
 2959 01aa 181C     		mov	r0, r3
 2960 01ac FFF7FEFF 		bl	RTC_1_GetMonth
 2961 01b0 041C     		mov	r4, r0
 2962 01b2 1023     		mov	r3, #16
 2963 01b4 FB18     		add	r3, r7, r3
 2964 01b6 5B68     		ldr	r3, [r3, #4]
 2965 01b8 181C     		mov	r0, r3
 2966 01ba FFF7FEFF 		bl	RTC_1_GetDay
 2967 01be 021C     		mov	r2, r0
 731:Generated_Source\PSoC4/RTC_1.c ****                                                       RTC_1_GetMonth(curDateTime.date),
 732:Generated_Source\PSoC4/RTC_1.c ****                                                       RTC_1_GetDay(curDateTime.date),
 733:Generated_Source\PSoC4/RTC_1.c ****                                                       (~((uint32)alarmCfgMask)));
 2968              		.loc 2 733 0
 2969 01c0 FB1D     		add	r3, r7, #7
 2970 01c2 1B78     		ldrb	r3, [r3]
 730:Generated_Source\PSoC4/RTC_1.c ****                                                       RTC_1_GetMonth(curDateTime.date),
 2971              		.loc 2 730 0
 2972 01c4 DB43     		mvn	r3, r3
 2973 01c6 281C     		mov	r0, r5
 2974 01c8 211C     		mov	r1, r4
 2975 01ca FFF7FEFF 		bl	RTC_1_GetNextDay
 2976 01ce 031C     		mov	r3, r0
 2977 01d0 FB62     		str	r3, [r7, #44]
 2978              	.L178:
 734:Generated_Source\PSoC4/RTC_1.c ****             }
 735:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.date = RTC_1_SetDay(curDateTime.date, nextVal);
 2979              		.loc 2 735 0
 2980 01d2 1023     		mov	r3, #16
 2981 01d4 FB18     		add	r3, r7, r3
 2982 01d6 5A68     		ldr	r2, [r3, #4]
 2983 01d8 FB6A     		ldr	r3, [r7, #44]
 2984 01da 101C     		mov	r0, r2
 2985 01dc 191C     		mov	r1, r3
 2986 01de FFF7FEFF 		bl	RTC_1_SetDay
 2987 01e2 021C     		mov	r2, r0
 2988 01e4 1023     		mov	r3, #16
 2989 01e6 FB18     		add	r3, r7, r3
 2990 01e8 5A60     		str	r2, [r3, #4]
 736:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 2991              		.loc 2 736 0
 2992 01ea FA6A     		ldr	r2, [r7, #44]
 2993 01ec 7B6A     		ldr	r3, [r7, #36]
 2994 01ee 9A42     		cmp	r2, r3
 2995 01f0 01D2     		bcs	.L179
 2996              		.loc 2 736 0 is_stmt 0 discriminator 1
 2997 01f2 0123     		mov	r3, #1
 2998 01f4 00E0     		b	.L180
 2999              	.L179:
 3000              		.loc 2 736 0 discriminator 2
 3001 01f6 0023     		mov	r3, #0
 3002              	.L180:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 88


 3003              		.loc 2 736 0 discriminator 4
 3004 01f8 BB62     		str	r3, [r7, #40]
 3005              	.L174:
 737:Generated_Source\PSoC4/RTC_1.c ****         }
 738:Generated_Source\PSoC4/RTC_1.c **** 
 739:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Month value of next alarm time based on current time and Alarm Config Mask. *
 740:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MONTH_MASK)))
 3006              		.loc 2 740 0 is_stmt 1
 3007 01fa BB6A     		ldr	r3, [r7, #40]
 3008 01fc 002B     		cmp	r3, #0
 3009 01fe 26D0     		beq	.L181
 3010              		.loc 2 740 0 is_stmt 0 discriminator 1
 3011 0200 FB1D     		add	r3, r7, #7
 3012 0202 1B78     		ldrb	r3, [r3]
 3013 0204 2022     		mov	r2, #32
 3014 0206 1340     		and	r3, r2
 3015 0208 21D1     		bne	.L181
 741:Generated_Source\PSoC4/RTC_1.c ****         {
 742:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetMonth(curDateTime.date);
 3016              		.loc 2 742 0 is_stmt 1
 3017 020a 1023     		mov	r3, #16
 3018 020c FB18     		add	r3, r7, r3
 3019 020e 5B68     		ldr	r3, [r3, #4]
 3020 0210 181C     		mov	r0, r3
 3021 0212 FFF7FEFF 		bl	RTC_1_GetMonth
 3022 0216 031C     		mov	r3, r0
 3023 0218 7B62     		str	r3, [r7, #36]
 743:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextMonth(prevVal);
 3024              		.loc 2 743 0
 3025 021a 7B6A     		ldr	r3, [r7, #36]
 3026 021c 181C     		mov	r0, r3
 3027 021e FFF7FEFF 		bl	RTC_1_GetNextMonth
 3028 0222 031C     		mov	r3, r0
 3029 0224 FB62     		str	r3, [r7, #44]
 744:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.date = RTC_1_SetMonth(curDateTime.date, nextVal);
 3030              		.loc 2 744 0
 3031 0226 1023     		mov	r3, #16
 3032 0228 FB18     		add	r3, r7, r3
 3033 022a 5A68     		ldr	r2, [r3, #4]
 3034 022c FB6A     		ldr	r3, [r7, #44]
 3035 022e 101C     		mov	r0, r2
 3036 0230 191C     		mov	r1, r3
 3037 0232 FFF7FEFF 		bl	RTC_1_SetMonth
 3038 0236 021C     		mov	r2, r0
 3039 0238 1023     		mov	r3, #16
 3040 023a FB18     		add	r3, r7, r3
 3041 023c 5A60     		str	r2, [r3, #4]
 745:Generated_Source\PSoC4/RTC_1.c ****             carryFlag = (nextVal < prevVal) ? 1u : 0u;
 3042              		.loc 2 745 0
 3043 023e FA6A     		ldr	r2, [r7, #44]
 3044 0240 7B6A     		ldr	r3, [r7, #36]
 3045 0242 9A42     		cmp	r2, r3
 3046 0244 01D2     		bcs	.L182
 3047              		.loc 2 745 0 is_stmt 0 discriminator 1
 3048 0246 0123     		mov	r3, #1
 3049 0248 00E0     		b	.L183
 3050              	.L182:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 89


 3051              		.loc 2 745 0 discriminator 2
 3052 024a 0023     		mov	r3, #0
 3053              	.L183:
 3054              		.loc 2 745 0 discriminator 4
 3055 024c BB62     		str	r3, [r7, #40]
 3056              	.L181:
 746:Generated_Source\PSoC4/RTC_1.c ****         }
 747:Generated_Source\PSoC4/RTC_1.c **** 
 748:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Year value of next alarm time based on current time and Alarm Config Mask. */
 749:Generated_Source\PSoC4/RTC_1.c ****         if((0uL != carryFlag) && (0uL != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_YEAR_MASK)))
 3057              		.loc 2 749 0 is_stmt 1
 3058 024e BB6A     		ldr	r3, [r7, #40]
 3059 0250 002B     		cmp	r3, #0
 3060 0252 1ED0     		beq	.L184
 3061              		.loc 2 749 0 is_stmt 0 discriminator 1
 3062 0254 FB1D     		add	r3, r7, #7
 3063 0256 1B78     		ldrb	r3, [r3]
 3064 0258 4022     		mov	r2, #64
 3065 025a 1340     		and	r3, r2
 3066 025c 19D1     		bne	.L184
 750:Generated_Source\PSoC4/RTC_1.c ****         {
 751:Generated_Source\PSoC4/RTC_1.c ****             prevVal = RTC_1_GetYear(curDateTime.date);
 3067              		.loc 2 751 0 is_stmt 1
 3068 025e 1023     		mov	r3, #16
 3069 0260 FB18     		add	r3, r7, r3
 3070 0262 5B68     		ldr	r3, [r3, #4]
 3071 0264 181C     		mov	r0, r3
 3072 0266 FFF7FEFF 		bl	RTC_1_GetYear
 3073 026a 031C     		mov	r3, r0
 3074 026c 7B62     		str	r3, [r7, #36]
 752:Generated_Source\PSoC4/RTC_1.c ****             nextVal = RTC_1_GetNextYear(prevVal);
 3075              		.loc 2 752 0
 3076 026e 7B6A     		ldr	r3, [r7, #36]
 3077 0270 181C     		mov	r0, r3
 3078 0272 FFF7FEFF 		bl	RTC_1_GetNextYear
 3079 0276 031C     		mov	r3, r0
 3080 0278 FB62     		str	r3, [r7, #44]
 753:Generated_Source\PSoC4/RTC_1.c ****             curDateTime.date = RTC_1_SetYear(curDateTime.date, nextVal);
 3081              		.loc 2 753 0
 3082 027a 1023     		mov	r3, #16
 3083 027c FB18     		add	r3, r7, r3
 3084 027e 5A68     		ldr	r2, [r3, #4]
 3085 0280 FB6A     		ldr	r3, [r7, #44]
 3086 0282 101C     		mov	r0, r2
 3087 0284 191C     		mov	r1, r3
 3088 0286 FFF7FEFF 		bl	RTC_1_SetYear
 3089 028a 021C     		mov	r2, r0
 3090 028c 1023     		mov	r3, #16
 3091 028e FB18     		add	r3, r7, r3
 3092 0290 5A60     		str	r2, [r3, #4]
 3093              	.L184:
 754:Generated_Source\PSoC4/RTC_1.c ****         }
 755:Generated_Source\PSoC4/RTC_1.c **** 
 756:Generated_Source\PSoC4/RTC_1.c ****         return(RTC_1_DateTimeToUnix(curDateTime.date, curDateTime.time));
 3094              		.loc 2 756 0
 3095 0292 1023     		mov	r3, #16
 3096 0294 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 90


 3097 0296 5A68     		ldr	r2, [r3, #4]
 3098 0298 1023     		mov	r3, #16
 3099 029a FB18     		add	r3, r7, r3
 3100 029c 1B68     		ldr	r3, [r3]
 3101 029e 101C     		mov	r0, r2
 3102 02a0 191C     		mov	r1, r3
 3103 02a2 FFF7FEFF 		bl	RTC_1_DateTimeToUnix
 3104 02a6 031C     		mov	r3, r0
 3105 02a8 0C1C     		mov	r4, r1
 757:Generated_Source\PSoC4/RTC_1.c ****     }
 3106              		.loc 2 757 0
 3107 02aa 181C     		mov	r0, r3
 3108 02ac 211C     		mov	r1, r4
 3109 02ae BD46     		mov	sp, r7
 3110 02b0 0CB0     		add	sp, sp, #48
 3111              		@ sp needed
 3112 02b2 B0BD     		pop	{r4, r5, r7, pc}
 3113              		.cfi_endproc
 3114              	.LFE46:
 3115              		.size	RTC_1_GetNexAlarmTime, .-RTC_1_GetNexAlarmTime
 3116              		.section	.text.RTC_1_ConstructUnixAlarmTime,"ax",%progbits
 3117              		.align	2
 3118              		.global	RTC_1_ConstructUnixAlarmTime
 3119              		.code	16
 3120              		.thumb_func
 3121              		.type	RTC_1_ConstructUnixAlarmTime, %function
 3122              	RTC_1_ConstructUnixAlarmTime:
 3123              	.LFB47:
 758:Generated_Source\PSoC4/RTC_1.c **** 
 759:Generated_Source\PSoC4/RTC_1.c **** 
 760:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
 761:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_ConstructUnixAlarmTime
 762:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 763:Generated_Source\PSoC4/RTC_1.c ****     *
 764:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 765:Generated_Source\PSoC4/RTC_1.c ****     *  This is an internal function that calculates the time of the first alarm
 766:Generated_Source\PSoC4/RTC_1.c ****     *  in the UNIX format taking into account the current "Alarm Config Mask".
 767:Generated_Source\PSoC4/RTC_1.c ****     *
 768:Generated_Source\PSoC4/RTC_1.c ****     * \param
 769:Generated_Source\PSoC4/RTC_1.c ****     *  alarmTime Desired alarm time in the regular time format.
 770:Generated_Source\PSoC4/RTC_1.c ****     *
 771:Generated_Source\PSoC4/RTC_1.c ****     * \param
 772:Generated_Source\PSoC4/RTC_1.c ****     *  alarmCfgMask The current Alarm Config Mask.
 773:Generated_Source\PSoC4/RTC_1.c ****     *
 774:Generated_Source\PSoC4/RTC_1.c ****     * \return
 775:Generated_Source\PSoC4/RTC_1.c ****     *  time of the first alarm in the UNIX format.
 776:Generated_Source\PSoC4/RTC_1.c ****     *
 777:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 778:Generated_Source\PSoC4/RTC_1.c ****     uint64 RTC_1_ConstructUnixAlarmTime(const RTC_1_DATE_TIME* alarmTime, uint8 alarmCfgMask)
 779:Generated_Source\PSoC4/RTC_1.c ****     {
 3124              		.loc 2 779 0
 3125              		.cfi_startproc
 3126 0000 90B5     		push	{r4, r7, lr}
 3127              		.cfi_def_cfa_offset 12
 3128              		.cfi_offset 4, -12
 3129              		.cfi_offset 7, -8
 3130              		.cfi_offset 14, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 91


 3131 0002 8FB0     		sub	sp, sp, #60
 3132              		.cfi_def_cfa_offset 72
 3133 0004 02AF     		add	r7, sp, #8
 3134              		.cfi_def_cfa 7, 64
 3135 0006 7860     		str	r0, [r7, #4]
 3136 0008 0A1C     		mov	r2, r1
 3137 000a FB1C     		add	r3, r7, #3
 3138 000c 1A70     		strb	r2, [r3]
 780:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpCurVal;
 781:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpNextVal;
 782:Generated_Source\PSoC4/RTC_1.c ****         uint32 carryFlag;
 783:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpAlarmDate;
 784:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpAlarmTime;
 785:Generated_Source\PSoC4/RTC_1.c ****         uint32 daysInMonth;
 786:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DATE_TIME curDateTime;
 787:Generated_Source\PSoC4/RTC_1.c **** 
 788:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate = 0u;
 3139              		.loc 2 788 0
 3140 000e 0023     		mov	r3, #0
 3141 0010 BB62     		str	r3, [r7, #40]
 789:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime = 0u;
 3142              		.loc 2 789 0
 3143 0012 0023     		mov	r3, #0
 3144 0014 7B62     		str	r3, [r7, #36]
 790:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_UnixToDateTime(&curDateTime, RTC_1_unixTime, (uint32)RTC_1_24_HOURS_FORMAT);
 3145              		.loc 2 790 0
 3146 0016 C84B     		ldr	r3, .L227
 3147 0018 5C68     		ldr	r4, [r3, #4]
 3148 001a 1B68     		ldr	r3, [r3]
 3149 001c 0822     		mov	r2, #8
 3150 001e B918     		add	r1, r7, r2
 3151 0020 0022     		mov	r2, #0
 3152 0022 0092     		str	r2, [sp]
 3153 0024 081C     		mov	r0, r1
 3154 0026 1A1C     		mov	r2, r3
 3155 0028 231C     		mov	r3, r4
 3156 002a FFF7FEFF 		bl	RTC_1_UnixToDateTime
 791:Generated_Source\PSoC4/RTC_1.c **** 
 792:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Seconds value of first Alarm based on current time and Alarm Config Mask. */
 793:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal =  RTC_1_GetSecond(curDateTime.time);
 3157              		.loc 2 793 0
 3158 002e 0823     		mov	r3, #8
 3159 0030 FB18     		add	r3, r7, r3
 3160 0032 1B68     		ldr	r3, [r3]
 3161 0034 181C     		mov	r0, r3
 3162 0036 FFF7FEFF 		bl	RTC_1_GetSecond
 3163 003a 031C     		mov	r3, r0
 3164 003c 3B62     		str	r3, [r7, #32]
 794:Generated_Source\PSoC4/RTC_1.c ****         tmpNextVal = RTC_1_GetSecond(alarmTime->time);
 3165              		.loc 2 794 0
 3166 003e 7B68     		ldr	r3, [r7, #4]
 3167 0040 1B68     		ldr	r3, [r3]
 3168 0042 181C     		mov	r0, r3
 3169 0044 FFF7FEFF 		bl	RTC_1_GetSecond
 3170 0048 031C     		mov	r3, r0
 3171 004a FB62     		str	r3, [r7, #44]
 795:Generated_Source\PSoC4/RTC_1.c ****         carryFlag = (tmpCurVal > tmpNextVal) ? 1u : 0u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 92


 3172              		.loc 2 795 0
 3173 004c 3A6A     		ldr	r2, [r7, #32]
 3174 004e FB6A     		ldr	r3, [r7, #44]
 3175 0050 9A42     		cmp	r2, r3
 3176 0052 01D9     		bls	.L187
 3177              		.loc 2 795 0 is_stmt 0 discriminator 1
 3178 0054 0123     		mov	r3, #1
 3179 0056 00E0     		b	.L188
 3180              	.L187:
 3181              		.loc 2 795 0 discriminator 2
 3182 0058 0023     		mov	r3, #0
 3183              	.L188:
 3184              		.loc 2 795 0 discriminator 4
 3185 005a FB61     		str	r3, [r7, #28]
 796:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_SEC_MASK))
 3186              		.loc 2 796 0 is_stmt 1 discriminator 4
 3187 005c FB1C     		add	r3, r7, #3
 3188 005e 1B78     		ldrb	r3, [r3]
 3189 0060 0122     		mov	r2, #1
 3190 0062 1340     		and	r3, r2
 3191 0064 01D1     		bne	.L189
 3192              		.loc 2 796 0 is_stmt 0 discriminator 1
 3193 0066 0123     		mov	r3, #1
 3194 0068 00E0     		b	.L190
 3195              	.L189:
 3196              		.loc 2 796 0 discriminator 2
 3197 006a 0023     		mov	r3, #0
 3198              	.L190:
 3199              		.loc 2 796 0 discriminator 4
 3200 006c 002B     		cmp	r3, #0
 3201 006e 06D0     		beq	.L191
 797:Generated_Source\PSoC4/RTC_1.c ****         {
 798:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? 0u : tmpCurVal;
 3202              		.loc 2 798 0 is_stmt 1
 3203 0070 FB69     		ldr	r3, [r7, #28]
 3204 0072 002B     		cmp	r3, #0
 3205 0074 01D1     		bne	.L192
 3206              		.loc 2 798 0 is_stmt 0 discriminator 1
 3207 0076 3B6A     		ldr	r3, [r7, #32]
 3208 0078 00E0     		b	.L193
 3209              	.L192:
 3210              		.loc 2 798 0 discriminator 2
 3211 007a 0023     		mov	r3, #0
 3212              	.L193:
 3213              		.loc 2 798 0 discriminator 4
 3214 007c FB62     		str	r3, [r7, #44]
 3215              	.L191:
 799:Generated_Source\PSoC4/RTC_1.c ****         }
 800:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime = RTC_1_SetSecond(tmpAlarmTime, tmpNextVal);
 3216              		.loc 2 800 0 is_stmt 1
 3217 007e 7A6A     		ldr	r2, [r7, #36]
 3218 0080 FB6A     		ldr	r3, [r7, #44]
 3219 0082 101C     		mov	r0, r2
 3220 0084 191C     		mov	r1, r3
 3221 0086 FFF7FEFF 		bl	RTC_1_SetSecond
 3222 008a 031C     		mov	r3, r0
 3223 008c 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 93


 801:Generated_Source\PSoC4/RTC_1.c **** 
 802:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Minutes value of first Alarm based on current time and Alarm Config Mask. */
 803:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetMinutes(curDateTime.time);
 3224              		.loc 2 803 0
 3225 008e 0823     		mov	r3, #8
 3226 0090 FB18     		add	r3, r7, r3
 3227 0092 1B68     		ldr	r3, [r3]
 3228 0094 181C     		mov	r0, r3
 3229 0096 FFF7FEFF 		bl	RTC_1_GetMinutes
 3230 009a 031C     		mov	r3, r0
 3231 009c 3B62     		str	r3, [r7, #32]
 804:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MIN_MASK))
 3232              		.loc 2 804 0
 3233 009e FB1C     		add	r3, r7, #3
 3234 00a0 1B78     		ldrb	r3, [r3]
 3235 00a2 0222     		mov	r2, #2
 3236 00a4 1340     		and	r3, r2
 3237 00a6 0BD1     		bne	.L194
 805:Generated_Source\PSoC4/RTC_1.c ****         {
 806:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextMinSec(tmpCurVal) : tmpCurVal;
 3238              		.loc 2 806 0
 3239 00a8 FB69     		ldr	r3, [r7, #28]
 3240 00aa 002B     		cmp	r3, #0
 3241 00ac 05D0     		beq	.L195
 3242              		.loc 2 806 0 is_stmt 0 discriminator 1
 3243 00ae 3B6A     		ldr	r3, [r7, #32]
 3244 00b0 181C     		mov	r0, r3
 3245 00b2 FFF7FEFF 		bl	RTC_1_GetNextMinSec
 3246 00b6 031C     		mov	r3, r0
 3247 00b8 00E0     		b	.L196
 3248              	.L195:
 3249              		.loc 2 806 0 discriminator 2
 3250 00ba 3B6A     		ldr	r3, [r7, #32]
 3251              	.L196:
 3252              		.loc 2 806 0 discriminator 4
 3253 00bc FB62     		str	r3, [r7, #44]
 3254 00be 06E0     		b	.L197
 3255              	.L194:
 807:Generated_Source\PSoC4/RTC_1.c ****         }
 808:Generated_Source\PSoC4/RTC_1.c ****         else
 809:Generated_Source\PSoC4/RTC_1.c ****         {
 810:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetMinutes(alarmTime->time);
 3256              		.loc 2 810 0 is_stmt 1
 3257 00c0 7B68     		ldr	r3, [r7, #4]
 3258 00c2 1B68     		ldr	r3, [r3]
 3259 00c4 181C     		mov	r0, r3
 3260 00c6 FFF7FEFF 		bl	RTC_1_GetMinutes
 3261 00ca 031C     		mov	r3, r0
 3262 00cc FB62     		str	r3, [r7, #44]
 3263              	.L197:
 811:Generated_Source\PSoC4/RTC_1.c ****         }
 812:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 3264              		.loc 2 812 0
 3265 00ce FA6A     		ldr	r2, [r7, #44]
 3266 00d0 3B6A     		ldr	r3, [r7, #32]
 3267 00d2 9A42     		cmp	r2, r3
 3268 00d4 01D2     		bcs	.L198
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 94


 3269              		.loc 2 812 0 is_stmt 0 discriminator 1
 3270 00d6 0123     		mov	r3, #1
 3271 00d8 00E0     		b	.L199
 3272              	.L198:
 3273              		.loc 2 812 0 discriminator 2
 3274 00da 0023     		mov	r3, #0
 3275              	.L199:
 3276              		.loc 2 812 0 discriminator 4
 3277 00dc FB61     		str	r3, [r7, #28]
 813:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime =  RTC_1_SetMinutes(tmpAlarmTime, tmpNextVal);
 3278              		.loc 2 813 0 is_stmt 1 discriminator 4
 3279 00de 7A6A     		ldr	r2, [r7, #36]
 3280 00e0 FB6A     		ldr	r3, [r7, #44]
 3281 00e2 101C     		mov	r0, r2
 3282 00e4 191C     		mov	r1, r3
 3283 00e6 FFF7FEFF 		bl	RTC_1_SetMinutes
 3284 00ea 031C     		mov	r3, r0
 3285 00ec 7B62     		str	r3, [r7, #36]
 814:Generated_Source\PSoC4/RTC_1.c **** 
 815:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Hours value of first Alarm based on current time and Alarm Config Mask. */
 816:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetHours(curDateTime.time);
 3286              		.loc 2 816 0 discriminator 4
 3287 00ee 0823     		mov	r3, #8
 3288 00f0 FB18     		add	r3, r7, r3
 3289 00f2 1B68     		ldr	r3, [r3]
 3290 00f4 181C     		mov	r0, r3
 3291 00f6 FFF7FEFF 		bl	RTC_1_GetHours
 3292 00fa 031C     		mov	r3, r0
 3293 00fc 3B62     		str	r3, [r7, #32]
 817:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_HOUR_MASK))
 3294              		.loc 2 817 0 discriminator 4
 3295 00fe FB1C     		add	r3, r7, #3
 3296 0100 1B78     		ldrb	r3, [r3]
 3297 0102 0422     		mov	r2, #4
 3298 0104 1340     		and	r3, r2
 3299 0106 0BD1     		bne	.L200
 818:Generated_Source\PSoC4/RTC_1.c ****         {
 819:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextHour(tmpCurVal) : tmpCurVal;
 3300              		.loc 2 819 0
 3301 0108 FB69     		ldr	r3, [r7, #28]
 3302 010a 002B     		cmp	r3, #0
 3303 010c 05D0     		beq	.L201
 3304              		.loc 2 819 0 is_stmt 0 discriminator 1
 3305 010e 3B6A     		ldr	r3, [r7, #32]
 3306 0110 181C     		mov	r0, r3
 3307 0112 FFF7FEFF 		bl	RTC_1_GetNextHour
 3308 0116 031C     		mov	r3, r0
 3309 0118 00E0     		b	.L202
 3310              	.L201:
 3311              		.loc 2 819 0 discriminator 2
 3312 011a 3B6A     		ldr	r3, [r7, #32]
 3313              	.L202:
 3314              		.loc 2 819 0 discriminator 4
 3315 011c FB62     		str	r3, [r7, #44]
 3316 011e 17E0     		b	.L203
 3317              	.L200:
 820:Generated_Source\PSoC4/RTC_1.c ****         }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 95


 821:Generated_Source\PSoC4/RTC_1.c ****         else
 822:Generated_Source\PSoC4/RTC_1.c ****         {
 823:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetHours(alarmTime->time);
 3318              		.loc 2 823 0 is_stmt 1
 3319 0120 7B68     		ldr	r3, [r7, #4]
 3320 0122 1B68     		ldr	r3, [r3]
 3321 0124 181C     		mov	r0, r3
 3322 0126 FFF7FEFF 		bl	RTC_1_GetHours
 3323 012a 031C     		mov	r3, r0
 3324 012c FB62     		str	r3, [r7, #44]
 824:Generated_Source\PSoC4/RTC_1.c ****             if((uint32)RTC_1_24_HOURS_FORMAT != RTC_1_GetTimeFormat(alarmTime->time))
 3325              		.loc 2 824 0
 3326 012e 7B68     		ldr	r3, [r7, #4]
 3327 0130 1B68     		ldr	r3, [r3]
 3328 0132 181C     		mov	r0, r3
 3329 0134 FFF7FEFF 		bl	RTC_1_GetTimeFormat
 3330 0138 031E     		sub	r3, r0, #0
 3331 013a 09D0     		beq	.L203
 825:Generated_Source\PSoC4/RTC_1.c ****             {
 826:Generated_Source\PSoC4/RTC_1.c ****                 if((uint32)RTC_1_AM != RTC_1_GetAmPm(alarmTime->time))
 3332              		.loc 2 826 0
 3333 013c 7B68     		ldr	r3, [r7, #4]
 3334 013e 1B68     		ldr	r3, [r3]
 3335 0140 181C     		mov	r0, r3
 3336 0142 FFF7FEFF 		bl	RTC_1_GetAmPm
 3337 0146 031E     		sub	r3, r0, #0
 3338 0148 02D0     		beq	.L203
 827:Generated_Source\PSoC4/RTC_1.c ****                 {
 828:Generated_Source\PSoC4/RTC_1.c ****                     tmpNextVal += RTC_1_HOURS_PER_HALF_DAY;
 3339              		.loc 2 828 0
 3340 014a FB6A     		ldr	r3, [r7, #44]
 3341 014c 0C33     		add	r3, r3, #12
 3342 014e FB62     		str	r3, [r7, #44]
 3343              	.L203:
 829:Generated_Source\PSoC4/RTC_1.c ****                 }
 830:Generated_Source\PSoC4/RTC_1.c ****             }
 831:Generated_Source\PSoC4/RTC_1.c ****         }
 832:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 3344              		.loc 2 832 0
 3345 0150 FA6A     		ldr	r2, [r7, #44]
 3346 0152 3B6A     		ldr	r3, [r7, #32]
 3347 0154 9A42     		cmp	r2, r3
 3348 0156 01D2     		bcs	.L204
 3349              		.loc 2 832 0 is_stmt 0 discriminator 1
 3350 0158 0123     		mov	r3, #1
 3351 015a 00E0     		b	.L205
 3352              	.L204:
 3353              		.loc 2 832 0 discriminator 2
 3354 015c 0023     		mov	r3, #0
 3355              	.L205:
 3356              		.loc 2 832 0 discriminator 4
 3357 015e FB61     		str	r3, [r7, #28]
 833:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmTime =  RTC_1_SetHours(tmpAlarmTime, tmpNextVal);
 3358              		.loc 2 833 0 is_stmt 1 discriminator 4
 3359 0160 7A6A     		ldr	r2, [r7, #36]
 3360 0162 FB6A     		ldr	r3, [r7, #44]
 3361 0164 101C     		mov	r0, r2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 96


 3362 0166 191C     		mov	r1, r3
 3363 0168 FFF7FEFF 		bl	RTC_1_SetHours
 3364 016c 031C     		mov	r3, r0
 3365 016e 7B62     		str	r3, [r7, #36]
 834:Generated_Source\PSoC4/RTC_1.c **** 
 835:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Day value of first Alarm based on current time and Alarm Config Mask. */
 836:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetDay(curDateTime.date);
 3366              		.loc 2 836 0 discriminator 4
 3367 0170 0823     		mov	r3, #8
 3368 0172 FB18     		add	r3, r7, r3
 3369 0174 5B68     		ldr	r3, [r3, #4]
 3370 0176 181C     		mov	r0, r3
 3371 0178 FFF7FEFF 		bl	RTC_1_GetDay
 3372 017c 031C     		mov	r3, r0
 3373 017e 3B62     		str	r3, [r7, #32]
 837:Generated_Source\PSoC4/RTC_1.c ****         tmpNextVal = RTC_1_GetDay(alarmTime->date);
 3374              		.loc 2 837 0 discriminator 4
 3375 0180 7B68     		ldr	r3, [r7, #4]
 3376 0182 5B68     		ldr	r3, [r3, #4]
 3377 0184 181C     		mov	r0, r3
 3378 0186 FFF7FEFF 		bl	RTC_1_GetDay
 3379 018a 031C     		mov	r3, r0
 3380 018c FB62     		str	r3, [r7, #44]
 838:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_DAYOFMONTH_MASK))
 3381              		.loc 2 838 0 discriminator 4
 3382 018e FB1C     		add	r3, r7, #3
 3383 0190 1B78     		ldrb	r3, [r3]
 3384 0192 1022     		mov	r2, #16
 3385 0194 1340     		and	r3, r2
 3386 0196 59D1     		bne	.L206
 839:Generated_Source\PSoC4/RTC_1.c ****         {
 840:Generated_Source\PSoC4/RTC_1.c ****             if(0u != (alarmCfgMask & RTC_1_ALARM_DAYOFWEEK_MASK))
 3387              		.loc 2 840 0
 3388 0198 FB1C     		add	r3, r7, #3
 3389 019a 1B78     		ldrb	r3, [r3]
 3390 019c 0822     		mov	r2, #8
 3391 019e 1340     		and	r3, r2
 3392 01a0 38D0     		beq	.L207
 841:Generated_Source\PSoC4/RTC_1.c ****             {
 842:Generated_Source\PSoC4/RTC_1.c ****                 daysInMonth = RTC_1_DaysInMonth(RTC_1_GetMonth(curDateTime.date),
 3393              		.loc 2 842 0
 3394 01a2 0823     		mov	r3, #8
 3395 01a4 FB18     		add	r3, r7, r3
 3396 01a6 5B68     		ldr	r3, [r3, #4]
 3397 01a8 181C     		mov	r0, r3
 3398 01aa FFF7FEFF 		bl	RTC_1_GetMonth
 3399 01ae 041C     		mov	r4, r0
 3400 01b0 0823     		mov	r3, #8
 3401 01b2 FB18     		add	r3, r7, r3
 3402 01b4 5B68     		ldr	r3, [r3, #4]
 3403 01b6 181C     		mov	r0, r3
 3404 01b8 FFF7FEFF 		bl	RTC_1_GetYear
 3405 01bc 031C     		mov	r3, r0
 3406 01be 201C     		mov	r0, r4
 3407 01c0 191C     		mov	r1, r3
 3408 01c2 FFF7FEFF 		bl	RTC_1_DaysInMonth
 3409 01c6 031C     		mov	r3, r0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 97


 3410 01c8 BB61     		str	r3, [r7, #24]
 843:Generated_Source\PSoC4/RTC_1.c ****                                                            RTC_1_GetYear(curDateTime.date));
 844:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = (curDateTime.dayOfWeek <= alarmTime->dayOfWeek) ? (alarmTime->dayOfWee
 3411              		.loc 2 844 0
 3412 01ca 0823     		mov	r3, #8
 3413 01cc FB18     		add	r3, r7, r3
 3414 01ce 9A68     		ldr	r2, [r3, #8]
 3415 01d0 7B68     		ldr	r3, [r7, #4]
 3416 01d2 9B68     		ldr	r3, [r3, #8]
 3417 01d4 9A42     		cmp	r2, r3
 3418 01d6 06D8     		bhi	.L208
 3419              		.loc 2 844 0 is_stmt 0 discriminator 1
 3420 01d8 7B68     		ldr	r3, [r7, #4]
 3421 01da 9A68     		ldr	r2, [r3, #8]
 3422 01dc 0823     		mov	r3, #8
 3423 01de FB18     		add	r3, r7, r3
 3424 01e0 9B68     		ldr	r3, [r3, #8]
 3425 01e2 D31A     		sub	r3, r2, r3
 3426 01e4 06E0     		b	.L209
 3427              	.L208:
 845:Generated_Source\PSoC4/RTC_1.c ****                                 ((RTC_1_DAYS_PER_WEEK - curDateTime.dayOfWeek) + alarmTime->dayOfWe
 3428              		.loc 2 845 0 is_stmt 1 discriminator 2
 3429 01e6 7B68     		ldr	r3, [r7, #4]
 3430 01e8 9A68     		ldr	r2, [r3, #8]
 3431 01ea 0823     		mov	r3, #8
 3432 01ec FB18     		add	r3, r7, r3
 3433 01ee 9B68     		ldr	r3, [r3, #8]
 3434 01f0 D31A     		sub	r3, r2, r3
 844:Generated_Source\PSoC4/RTC_1.c ****                                 ((RTC_1_DAYS_PER_WEEK - curDateTime.dayOfWeek) + alarmTime->dayOfWe
 3435              		.loc 2 844 0 discriminator 2
 3436 01f2 0733     		add	r3, r3, #7
 3437              	.L209:
 844:Generated_Source\PSoC4/RTC_1.c ****                                 ((RTC_1_DAYS_PER_WEEK - curDateTime.dayOfWeek) + alarmTime->dayOfWe
 3438              		.loc 2 844 0 is_stmt 0 discriminator 4
 3439 01f4 FB62     		str	r3, [r7, #44]
 846:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = tmpCurVal + tmpNextVal;
 3440              		.loc 2 846 0 is_stmt 1 discriminator 4
 3441 01f6 FA6A     		ldr	r2, [r7, #44]
 3442 01f8 3B6A     		ldr	r3, [r7, #32]
 3443 01fa D318     		add	r3, r2, r3
 3444 01fc FB62     		str	r3, [r7, #44]
 847:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = (tmpNextVal > daysInMonth) ? (tmpNextVal - daysInMonth) : tmpNextVal;
 3445              		.loc 2 847 0 discriminator 4
 3446 01fe FA6A     		ldr	r2, [r7, #44]
 3447 0200 BB69     		ldr	r3, [r7, #24]
 3448 0202 9A42     		cmp	r2, r3
 3449 0204 03D9     		bls	.L210
 3450              		.loc 2 847 0 is_stmt 0 discriminator 1
 3451 0206 FA6A     		ldr	r2, [r7, #44]
 3452 0208 BB69     		ldr	r3, [r7, #24]
 3453 020a D31A     		sub	r3, r2, r3
 3454 020c 00E0     		b	.L211
 3455              	.L210:
 3456              		.loc 2 847 0 discriminator 2
 3457 020e FB6A     		ldr	r3, [r7, #44]
 3458              	.L211:
 3459              		.loc 2 847 0 discriminator 4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 98


 3460 0210 FB62     		str	r3, [r7, #44]
 3461 0212 1BE0     		b	.L206
 3462              	.L207:
 848:Generated_Source\PSoC4/RTC_1.c ****             }
 849:Generated_Source\PSoC4/RTC_1.c ****             else
 850:Generated_Source\PSoC4/RTC_1.c ****             {
 851:Generated_Source\PSoC4/RTC_1.c ****                 tmpNextVal = (0u == carryFlag) ? tmpCurVal : RTC_1_GetNextDay(RTC_1_GetYear(curDate
 3463              		.loc 2 851 0 is_stmt 1
 3464 0214 FB69     		ldr	r3, [r7, #28]
 3465 0216 002B     		cmp	r3, #0
 3466 0218 16D0     		beq	.L212
 3467              		.loc 2 851 0 is_stmt 0 discriminator 1
 3468 021a 0823     		mov	r3, #8
 3469 021c FB18     		add	r3, r7, r3
 3470 021e 5B68     		ldr	r3, [r3, #4]
 3471 0220 181C     		mov	r0, r3
 3472 0222 FFF7FEFF 		bl	RTC_1_GetYear
 3473 0226 041C     		mov	r4, r0
 3474 0228 0823     		mov	r3, #8
 3475 022a FB18     		add	r3, r7, r3
 3476 022c 5B68     		ldr	r3, [r3, #4]
 3477 022e 181C     		mov	r0, r3
 3478 0230 FFF7FEFF 		bl	RTC_1_GetMonth
 3479 0234 021C     		mov	r2, r0
 3480 0236 3B6A     		ldr	r3, [r7, #32]
 3481 0238 201C     		mov	r0, r4
 3482 023a 111C     		mov	r1, r2
 3483 023c 1A1C     		mov	r2, r3
 3484 023e 1023     		mov	r3, #16
 3485 0240 FFF7FEFF 		bl	RTC_1_GetNextDay
 3486 0244 031C     		mov	r3, r0
 3487 0246 00E0     		b	.L213
 3488              	.L212:
 3489              		.loc 2 851 0 discriminator 2
 3490 0248 3B6A     		ldr	r3, [r7, #32]
 3491              	.L213:
 3492              		.loc 2 851 0 discriminator 4
 3493 024a FB62     		str	r3, [r7, #44]
 3494              	.L206:
 852:Generated_Source\PSoC4/RTC_1.c ****                                                               RTC_1_GetMonth(curDateTime.date),
 853:Generated_Source\PSoC4/RTC_1.c ****                                                                tmpCurVal,
 854:Generated_Source\PSoC4/RTC_1.c ****                                                               RTC_1_ALARM_DAYOFMONTH_MASK);
 855:Generated_Source\PSoC4/RTC_1.c ****             }
 856:Generated_Source\PSoC4/RTC_1.c ****         }
 857:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 3495              		.loc 2 857 0 is_stmt 1
 3496 024c FA6A     		ldr	r2, [r7, #44]
 3497 024e 3B6A     		ldr	r3, [r7, #32]
 3498 0250 9A42     		cmp	r2, r3
 3499 0252 01D2     		bcs	.L214
 3500              		.loc 2 857 0 is_stmt 0 discriminator 1
 3501 0254 0123     		mov	r3, #1
 3502 0256 00E0     		b	.L215
 3503              	.L214:
 3504              		.loc 2 857 0 discriminator 2
 3505 0258 0023     		mov	r3, #0
 3506              	.L215:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 99


 3507              		.loc 2 857 0 discriminator 4
 3508 025a FB61     		str	r3, [r7, #28]
 858:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate =  RTC_1_SetDay(tmpAlarmDate, tmpNextVal);
 3509              		.loc 2 858 0 is_stmt 1 discriminator 4
 3510 025c BA6A     		ldr	r2, [r7, #40]
 3511 025e FB6A     		ldr	r3, [r7, #44]
 3512 0260 101C     		mov	r0, r2
 3513 0262 191C     		mov	r1, r3
 3514 0264 FFF7FEFF 		bl	RTC_1_SetDay
 3515 0268 031C     		mov	r3, r0
 3516 026a BB62     		str	r3, [r7, #40]
 859:Generated_Source\PSoC4/RTC_1.c **** 
 860:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Month value of first Alarm based on current time and Alarm Config Mask. */
 861:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetMonth(curDateTime.date);
 3517              		.loc 2 861 0 discriminator 4
 3518 026c 0823     		mov	r3, #8
 3519 026e FB18     		add	r3, r7, r3
 3520 0270 5B68     		ldr	r3, [r3, #4]
 3521 0272 181C     		mov	r0, r3
 3522 0274 FFF7FEFF 		bl	RTC_1_GetMonth
 3523 0278 031C     		mov	r3, r0
 3524 027a 3B62     		str	r3, [r7, #32]
 862:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MONTH_MASK))
 3525              		.loc 2 862 0 discriminator 4
 3526 027c FB1C     		add	r3, r7, #3
 3527 027e 1B78     		ldrb	r3, [r3]
 3528 0280 2022     		mov	r2, #32
 3529 0282 1340     		and	r3, r2
 3530 0284 0BD1     		bne	.L216
 863:Generated_Source\PSoC4/RTC_1.c ****         {
 864:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextMonth(tmpCurVal) : tmpCurVal;
 3531              		.loc 2 864 0
 3532 0286 FB69     		ldr	r3, [r7, #28]
 3533 0288 002B     		cmp	r3, #0
 3534 028a 05D0     		beq	.L217
 3535              		.loc 2 864 0 is_stmt 0 discriminator 1
 3536 028c 3B6A     		ldr	r3, [r7, #32]
 3537 028e 181C     		mov	r0, r3
 3538 0290 FFF7FEFF 		bl	RTC_1_GetNextMonth
 3539 0294 031C     		mov	r3, r0
 3540 0296 00E0     		b	.L218
 3541              	.L217:
 3542              		.loc 2 864 0 discriminator 2
 3543 0298 3B6A     		ldr	r3, [r7, #32]
 3544              	.L218:
 3545              		.loc 2 864 0 discriminator 4
 3546 029a FB62     		str	r3, [r7, #44]
 3547 029c 06E0     		b	.L219
 3548              	.L216:
 865:Generated_Source\PSoC4/RTC_1.c ****         }
 866:Generated_Source\PSoC4/RTC_1.c ****         else
 867:Generated_Source\PSoC4/RTC_1.c ****         {
 868:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetMonth(alarmTime->date);
 3549              		.loc 2 868 0 is_stmt 1
 3550 029e 7B68     		ldr	r3, [r7, #4]
 3551 02a0 5B68     		ldr	r3, [r3, #4]
 3552 02a2 181C     		mov	r0, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 100


 3553 02a4 FFF7FEFF 		bl	RTC_1_GetMonth
 3554 02a8 031C     		mov	r3, r0
 3555 02aa FB62     		str	r3, [r7, #44]
 3556              	.L219:
 869:Generated_Source\PSoC4/RTC_1.c ****         }
 870:Generated_Source\PSoC4/RTC_1.c ****         carryFlag  = (tmpNextVal < tmpCurVal) ? 1u : 0u;
 3557              		.loc 2 870 0
 3558 02ac FA6A     		ldr	r2, [r7, #44]
 3559 02ae 3B6A     		ldr	r3, [r7, #32]
 3560 02b0 9A42     		cmp	r2, r3
 3561 02b2 01D2     		bcs	.L220
 3562              		.loc 2 870 0 is_stmt 0 discriminator 1
 3563 02b4 0123     		mov	r3, #1
 3564 02b6 00E0     		b	.L221
 3565              	.L220:
 3566              		.loc 2 870 0 discriminator 2
 3567 02b8 0023     		mov	r3, #0
 3568              	.L221:
 3569              		.loc 2 870 0 discriminator 4
 3570 02ba FB61     		str	r3, [r7, #28]
 871:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate =  RTC_1_SetMonth(tmpAlarmDate, tmpNextVal);
 3571              		.loc 2 871 0 is_stmt 1 discriminator 4
 3572 02bc BA6A     		ldr	r2, [r7, #40]
 3573 02be FB6A     		ldr	r3, [r7, #44]
 3574 02c0 101C     		mov	r0, r2
 3575 02c2 191C     		mov	r1, r3
 3576 02c4 FFF7FEFF 		bl	RTC_1_SetMonth
 3577 02c8 031C     		mov	r3, r0
 3578 02ca BB62     		str	r3, [r7, #40]
 872:Generated_Source\PSoC4/RTC_1.c **** 
 873:Generated_Source\PSoC4/RTC_1.c ****         /* Calculates Year value of first Alarm based on current time and Alarm Config Mask. */
 874:Generated_Source\PSoC4/RTC_1.c ****         tmpCurVal  = RTC_1_GetYear(curDateTime.date);
 3579              		.loc 2 874 0 discriminator 4
 3580 02cc 0823     		mov	r3, #8
 3581 02ce FB18     		add	r3, r7, r3
 3582 02d0 5B68     		ldr	r3, [r3, #4]
 3583 02d2 181C     		mov	r0, r3
 3584 02d4 FFF7FEFF 		bl	RTC_1_GetYear
 3585 02d8 031C     		mov	r3, r0
 3586 02da 3B62     		str	r3, [r7, #32]
 875:Generated_Source\PSoC4/RTC_1.c ****         if(0u != ((~((uint32)alarmCfgMask)) & RTC_1_ALARM_MONTH_MASK))
 3587              		.loc 2 875 0 discriminator 4
 3588 02dc FB1C     		add	r3, r7, #3
 3589 02de 1B78     		ldrb	r3, [r3]
 3590 02e0 2022     		mov	r2, #32
 3591 02e2 1340     		and	r3, r2
 3592 02e4 0BD1     		bne	.L222
 876:Generated_Source\PSoC4/RTC_1.c ****         {
 877:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = (0u != carryFlag) ? RTC_1_GetNextYear(tmpCurVal) : tmpCurVal;
 3593              		.loc 2 877 0
 3594 02e6 FB69     		ldr	r3, [r7, #28]
 3595 02e8 002B     		cmp	r3, #0
 3596 02ea 05D0     		beq	.L223
 3597              		.loc 2 877 0 is_stmt 0 discriminator 1
 3598 02ec 3B6A     		ldr	r3, [r7, #32]
 3599 02ee 181C     		mov	r0, r3
 3600 02f0 FFF7FEFF 		bl	RTC_1_GetNextYear
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 101


 3601 02f4 031C     		mov	r3, r0
 3602 02f6 00E0     		b	.L224
 3603              	.L223:
 3604              		.loc 2 877 0 discriminator 2
 3605 02f8 3B6A     		ldr	r3, [r7, #32]
 3606              	.L224:
 3607              		.loc 2 877 0 discriminator 4
 3608 02fa FB62     		str	r3, [r7, #44]
 3609 02fc 06E0     		b	.L225
 3610              	.L222:
 878:Generated_Source\PSoC4/RTC_1.c ****         }
 879:Generated_Source\PSoC4/RTC_1.c ****         else
 880:Generated_Source\PSoC4/RTC_1.c ****         {
 881:Generated_Source\PSoC4/RTC_1.c ****             tmpNextVal = RTC_1_GetYear(alarmTime->date);
 3611              		.loc 2 881 0 is_stmt 1
 3612 02fe 7B68     		ldr	r3, [r7, #4]
 3613 0300 5B68     		ldr	r3, [r3, #4]
 3614 0302 181C     		mov	r0, r3
 3615 0304 FFF7FEFF 		bl	RTC_1_GetYear
 3616 0308 031C     		mov	r3, r0
 3617 030a FB62     		str	r3, [r7, #44]
 3618              	.L225:
 882:Generated_Source\PSoC4/RTC_1.c ****         }
 883:Generated_Source\PSoC4/RTC_1.c ****         tmpAlarmDate =  RTC_1_SetYear(tmpAlarmDate, tmpNextVal);
 3619              		.loc 2 883 0
 3620 030c BA6A     		ldr	r2, [r7, #40]
 3621 030e FB6A     		ldr	r3, [r7, #44]
 3622 0310 101C     		mov	r0, r2
 3623 0312 191C     		mov	r1, r3
 3624 0314 FFF7FEFF 		bl	RTC_1_SetYear
 3625 0318 031C     		mov	r3, r0
 3626 031a BB62     		str	r3, [r7, #40]
 884:Generated_Source\PSoC4/RTC_1.c **** 
 885:Generated_Source\PSoC4/RTC_1.c ****         return(RTC_1_DateTimeToUnix(tmpAlarmDate, tmpAlarmTime));
 3627              		.loc 2 885 0
 3628 031c BA6A     		ldr	r2, [r7, #40]
 3629 031e 7B6A     		ldr	r3, [r7, #36]
 3630 0320 101C     		mov	r0, r2
 3631 0322 191C     		mov	r1, r3
 3632 0324 FFF7FEFF 		bl	RTC_1_DateTimeToUnix
 3633 0328 031C     		mov	r3, r0
 3634 032a 0C1C     		mov	r4, r1
 886:Generated_Source\PSoC4/RTC_1.c ****     }
 3635              		.loc 2 886 0
 3636 032c 181C     		mov	r0, r3
 3637 032e 211C     		mov	r1, r4
 3638 0330 BD46     		mov	sp, r7
 3639 0332 0DB0     		add	sp, sp, #52
 3640              		@ sp needed
 3641 0334 90BD     		pop	{r4, r7, pc}
 3642              	.L228:
 3643 0336 C046     		.align	2
 3644              	.L227:
 3645 0338 00000000 		.word	RTC_1_unixTime
 3646              		.cfi_endproc
 3647              	.LFE47:
 3648              		.size	RTC_1_ConstructUnixAlarmTime, .-RTC_1_ConstructUnixAlarmTime
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 102


 3649              		.section	.text.RTC_1_ReadStatus,"ax",%progbits
 3650              		.align	2
 3651              		.global	RTC_1_ReadStatus
 3652              		.code	16
 3653              		.thumb_func
 3654              		.type	RTC_1_ReadStatus, %function
 3655              	RTC_1_ReadStatus:
 3656              	.LFB48:
 887:Generated_Source\PSoC4/RTC_1.c **** #endif/* (0u != RTC_1_INITIAL_ALARM_STATUS) */
 888:Generated_Source\PSoC4/RTC_1.c **** 
 889:Generated_Source\PSoC4/RTC_1.c **** 
 890:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
 891:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_ReadStatus
 892:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
 893:Generated_Source\PSoC4/RTC_1.c **** *
 894:Generated_Source\PSoC4/RTC_1.c **** * \brief
 895:Generated_Source\PSoC4/RTC_1.c **** * Reads the Status software register, which has flags for DST (DST),
 896:Generated_Source\PSoC4/RTC_1.c **** * Leap Year (LY), AM/PM (AM_PM).
 897:Generated_Source\PSoC4/RTC_1.c **** *
 898:Generated_Source\PSoC4/RTC_1.c **** * \return
 899:Generated_Source\PSoC4/RTC_1.c **** * The values shown below are OR'ed and returned if more than one status
 900:Generated_Source\PSoC4/RTC_1.c **** * bits are set.
 901:Generated_Source\PSoC4/RTC_1.c **** *
 902:Generated_Source\PSoC4/RTC_1.c **** * \return
 903:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_STATUS_DST - Status of Daylight Saving Time. This bit
 904:Generated_Source\PSoC4/RTC_1.c **** * goes high when the current time and date match the DST time and date and the 
 905:Generated_Source\PSoC4/RTC_1.c **** * time is incremented. This bit goes low after the DST interval and the time is 
 906:Generated_Source\PSoC4/RTC_1.c **** * decremented.
 907:Generated_Source\PSoC4/RTC_1.c **** *
 908:Generated_Source\PSoC4/RTC_1.c **** * \return
 909:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_STATUS_LY - Status of Leap Year. This bit goes high when the 
 910:Generated_Source\PSoC4/RTC_1.c **** * current year is a leap year.
 911:Generated_Source\PSoC4/RTC_1.c **** *
 912:Generated_Source\PSoC4/RTC_1.c **** * \return
 913:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_STATUS_AM_PM - Status of Current Time. This bit is low from 
 914:Generated_Source\PSoC4/RTC_1.c **** * midnight to noon and high from noon to midnight.
 915:Generated_Source\PSoC4/RTC_1.c **** *
 916:Generated_Source\PSoC4/RTC_1.c **** * \note
 917:Generated_Source\PSoC4/RTC_1.c **** * Reading the status without sync with the date and time read may cause an
 918:Generated_Source\PSoC4/RTC_1.c **** * error due to a roll-over at AM/PM, the end of a year, the end of a day;
 919:Generated_Source\PSoC4/RTC_1.c **** * RTC_1_GetDateAndTime() API is used to obtain the status and
 920:Generated_Source\PSoC4/RTC_1.c **** * the status member of the returned structure can be checked with the masks.
 921:Generated_Source\PSoC4/RTC_1.c **** *
 922:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
 923:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_ReadStatus(void)
 924:Generated_Source\PSoC4/RTC_1.c **** {
 3657              		.loc 2 924 0
 3658              		.cfi_startproc
 3659 0000 80B5     		push	{r7, lr}
 3660              		.cfi_def_cfa_offset 8
 3661              		.cfi_offset 7, -8
 3662              		.cfi_offset 14, -4
 3663 0002 86B0     		sub	sp, sp, #24
 3664              		.cfi_def_cfa_offset 32
 3665 0004 00AF     		add	r7, sp, #0
 3666              		.cfi_def_cfa_register 7
 925:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 103


 926:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_DATE_TIME tmpTimeDate;
 927:Generated_Source\PSoC4/RTC_1.c **** 
 928:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_GetDateAndTime(&tmpTimeDate);
 3667              		.loc 2 928 0
 3668 0006 3B1D     		add	r3, r7, #4
 3669 0008 181C     		mov	r0, r3
 3670 000a FFF7FEFF 		bl	RTC_1_GetDateAndTime
 929:Generated_Source\PSoC4/RTC_1.c ****     tmpYear = RTC_1_GetYear(tmpTimeDate.date);
 3671              		.loc 2 929 0
 3672 000e 3B1D     		add	r3, r7, #4
 3673 0010 5B68     		ldr	r3, [r3, #4]
 3674 0012 181C     		mov	r0, r3
 3675 0014 FFF7FEFF 		bl	RTC_1_GetYear
 3676 0018 031C     		mov	r3, r0
 3677 001a 7B61     		str	r3, [r7, #20]
 930:Generated_Source\PSoC4/RTC_1.c **** 
 931:Generated_Source\PSoC4/RTC_1.c ****     if(0uL != RTC_1_LeapYear(tmpYear))
 3678              		.loc 2 931 0
 3679 001c 7B69     		ldr	r3, [r7, #20]
 3680 001e 181C     		mov	r0, r3
 3681 0020 FFF7FEFF 		bl	RTC_1_LeapYear
 3682 0024 031E     		sub	r3, r0, #0
 3683 0026 06D0     		beq	.L230
 932:Generated_Source\PSoC4/RTC_1.c ****     {
 933:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status |= (1uL << RTC_1_STATUS_LY_OFFSET);
 3684              		.loc 2 933 0
 3685 0028 144B     		ldr	r3, .L235
 3686 002a DB68     		ldr	r3, [r3, #12]
 3687 002c 0822     		mov	r2, #8
 3688 002e 1A43     		orr	r2, r3
 3689 0030 124B     		ldr	r3, .L235
 3690 0032 DA60     		str	r2, [r3, #12]
 3691 0034 06E0     		b	.L231
 3692              	.L230:
 934:Generated_Source\PSoC4/RTC_1.c ****     }
 935:Generated_Source\PSoC4/RTC_1.c ****     else
 936:Generated_Source\PSoC4/RTC_1.c ****     {
 937:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status &= ~(1uL << RTC_1_STATUS_LY_OFFSET);
 3693              		.loc 2 937 0
 3694 0036 114B     		ldr	r3, .L235
 3695 0038 DB68     		ldr	r3, [r3, #12]
 3696 003a 0822     		mov	r2, #8
 3697 003c 9343     		bic	r3, r2
 3698 003e 1A1C     		mov	r2, r3
 3699 0040 0E4B     		ldr	r3, .L235
 3700 0042 DA60     		str	r2, [r3, #12]
 3701              	.L231:
 938:Generated_Source\PSoC4/RTC_1.c ****     }
 939:Generated_Source\PSoC4/RTC_1.c **** 
 940:Generated_Source\PSoC4/RTC_1.c **** 
 941:Generated_Source\PSoC4/RTC_1.c ****     if(0uL != RTC_1_GetAmPm(tmpTimeDate.time))
 3702              		.loc 2 941 0
 3703 0044 3B1D     		add	r3, r7, #4
 3704 0046 1B68     		ldr	r3, [r3]
 3705 0048 181C     		mov	r0, r3
 3706 004a FFF7FEFF 		bl	RTC_1_GetAmPm
 3707 004e 031E     		sub	r3, r0, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 104


 3708 0050 06D0     		beq	.L232
 942:Generated_Source\PSoC4/RTC_1.c ****     {
 943:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status |= (1uL << RTC_1_STATUS_AM_PM_OFFSET);
 3709              		.loc 2 943 0
 3710 0052 0A4B     		ldr	r3, .L235
 3711 0054 DB68     		ldr	r3, [r3, #12]
 3712 0056 1022     		mov	r2, #16
 3713 0058 1A43     		orr	r2, r3
 3714 005a 084B     		ldr	r3, .L235
 3715 005c DA60     		str	r2, [r3, #12]
 3716 005e 06E0     		b	.L233
 3717              	.L232:
 944:Generated_Source\PSoC4/RTC_1.c ****     }
 945:Generated_Source\PSoC4/RTC_1.c ****     else
 946:Generated_Source\PSoC4/RTC_1.c ****     {
 947:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTimeDate.status &= ~(1uL << RTC_1_STATUS_AM_PM_OFFSET);
 3718              		.loc 2 947 0
 3719 0060 064B     		ldr	r3, .L235
 3720 0062 DB68     		ldr	r3, [r3, #12]
 3721 0064 1022     		mov	r2, #16
 3722 0066 9343     		bic	r3, r2
 3723 0068 1A1C     		mov	r2, r3
 3724 006a 044B     		ldr	r3, .L235
 3725 006c DA60     		str	r2, [r3, #12]
 3726              	.L233:
 948:Generated_Source\PSoC4/RTC_1.c ****     }
 949:Generated_Source\PSoC4/RTC_1.c **** 
 950:Generated_Source\PSoC4/RTC_1.c ****     return(RTC_1_currentTimeDate.status);
 3727              		.loc 2 950 0
 3728 006e 034B     		ldr	r3, .L235
 3729 0070 DB68     		ldr	r3, [r3, #12]
 951:Generated_Source\PSoC4/RTC_1.c **** }
 3730              		.loc 2 951 0
 3731 0072 181C     		mov	r0, r3
 3732 0074 BD46     		mov	sp, r7
 3733 0076 06B0     		add	sp, sp, #24
 3734              		@ sp needed
 3735 0078 80BD     		pop	{r7, pc}
 3736              	.L236:
 3737 007a C046     		.align	2
 3738              	.L235:
 3739 007c 00000000 		.word	RTC_1_currentTimeDate
 3740              		.cfi_endproc
 3741              	.LFE48:
 3742              		.size	RTC_1_ReadStatus, .-RTC_1_ReadStatus
 3743              		.section	.text.RTC_1_SetDSTStartTime,"ax",%progbits
 3744              		.align	2
 3745              		.global	RTC_1_SetDSTStartTime
 3746              		.code	16
 3747              		.thumb_func
 3748              		.type	RTC_1_SetDSTStartTime, %function
 3749              	RTC_1_SetDSTStartTime:
 3750              	.LFB49:
 952:Generated_Source\PSoC4/RTC_1.c **** 
 953:Generated_Source\PSoC4/RTC_1.c **** 
 954:Generated_Source\PSoC4/RTC_1.c **** #if(0u != RTC_1_INITIAL_DST_STATUS)
 955:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 105


 956:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetDSTStartTime
 957:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/RTC_1.c ****     *
 959:Generated_Source\PSoC4/RTC_1.c ****     * \brief
 960:Generated_Source\PSoC4/RTC_1.c ****     *  Stores the DST Start time.
 961:Generated_Source\PSoC4/RTC_1.c ****     *
 962:Generated_Source\PSoC4/RTC_1.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
 963:Generated_Source\PSoC4/RTC_1.c ****     *  For a relative date, the user needs to provide a valid day of a week, a 
 964:Generated_Source\PSoC4/RTC_1.c ****     *  week of a month and a month in the dstStartTime structure.
 965:Generated_Source\PSoC4/RTC_1.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in
 966:Generated_Source\PSoC4/RTC_1.c ****     *  the dstStartTime structure. The hour value is optional and if invalid
 967:Generated_Source\PSoC4/RTC_1.c ****     *  taken as 00 hrs. Invalid entries are not stored and the DST start date
 968:Generated_Source\PSoC4/RTC_1.c ****     *  retains a previous value or no value at all.
 969:Generated_Source\PSoC4/RTC_1.c ****     *
 970:Generated_Source\PSoC4/RTC_1.c ****     * \param
 971:Generated_Source\PSoC4/RTC_1.c ****     *  dstStartTime The DST Start time register value.
 972:Generated_Source\PSoC4/RTC_1.c ****     *
 973:Generated_Source\PSoC4/RTC_1.c ****     * \param
 974:Generated_Source\PSoC4/RTC_1.c ****     *  type Defines the DST operation mode <br>
 975:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
 976:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
 977:Generated_Source\PSoC4/RTC_1.c ****     *
 978:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
 979:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetDSTStartTime(const RTC_1_DST_TIME* dstStartTime,
 980:Generated_Source\PSoC4/RTC_1.c ****                                                 RTC_1_DST_DATETYPE_ENUM type)
 981:Generated_Source\PSoC4/RTC_1.c ****     {
 3751              		.loc 2 981 0
 3752              		.cfi_startproc
 3753 0000 90B5     		push	{r4, r7, lr}
 3754              		.cfi_def_cfa_offset 12
 3755              		.cfi_offset 4, -12
 3756              		.cfi_offset 7, -8
 3757              		.cfi_offset 14, -4
 3758 0002 83B0     		sub	sp, sp, #12
 3759              		.cfi_def_cfa_offset 24
 3760 0004 00AF     		add	r7, sp, #0
 3761              		.cfi_def_cfa_register 7
 3762 0006 7860     		str	r0, [r7, #4]
 3763 0008 0A1C     		mov	r2, r1
 3764 000a FB1C     		add	r3, r7, #3
 3765 000c 1A70     		strb	r2, [r3]
 982:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.timeFormat    = (uint8)type;
 3766              		.loc 2 982 0
 3767 000e 244B     		ldr	r3, .L244
 3768 0010 FA1C     		add	r2, r7, #3
 3769 0012 1278     		ldrb	r2, [r2]
 3770 0014 1A75     		strb	r2, [r3, #20]
 983:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.hour          = dstStartTime->hour;
 3771              		.loc 2 983 0
 3772 0016 7B68     		ldr	r3, [r7, #4]
 3773 0018 1A68     		ldr	r2, [r3]
 3774 001a 214B     		ldr	r3, .L244
 3775 001c 1A60     		str	r2, [r3]
 984:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.dayOfWeek     = dstStartTime->dayOfWeek;
 3776              		.loc 2 984 0
 3777 001e 7B68     		ldr	r3, [r7, #4]
 3778 0020 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 106


 3779 0022 1F4B     		ldr	r3, .L244
 3780 0024 5A60     		str	r2, [r3, #4]
 985:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.weekOfMonth   = dstStartTime->weekOfMonth;
 3781              		.loc 2 985 0
 3782 0026 7B68     		ldr	r3, [r7, #4]
 3783 0028 DA68     		ldr	r2, [r3, #12]
 3784 002a 1D4B     		ldr	r3, .L244
 3785 002c DA60     		str	r2, [r3, #12]
 986:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.dayOfMonth    = dstStartTime->dayOfMonth;
 3786              		.loc 2 986 0
 3787 002e 7B68     		ldr	r3, [r7, #4]
 3788 0030 9A68     		ldr	r2, [r3, #8]
 3789 0032 1B4B     		ldr	r3, .L244
 3790 0034 9A60     		str	r2, [r3, #8]
 987:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStartTime.month         = dstStartTime->month;
 3791              		.loc 2 987 0
 3792 0036 7B68     		ldr	r3, [r7, #4]
 3793 0038 1A69     		ldr	r2, [r3, #16]
 3794 003a 194B     		ldr	r3, .L244
 3795 003c 1A61     		str	r2, [r3, #16]
 988:Generated_Source\PSoC4/RTC_1.c **** 
 989:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 3796              		.loc 2 989 0
 3797 003e 184B     		ldr	r3, .L244
 3798 0040 181C     		mov	r0, r3
 3799 0042 FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 3800 0046 031C     		mov	r3, r0
 3801 0048 0C1C     		mov	r4, r1
 3802 004a 164A     		ldr	r2, .L244+4
 3803 004c 1360     		str	r3, [r2]
 3804 004e 5460     		str	r4, [r2, #4]
 990:Generated_Source\PSoC4/RTC_1.c **** 
 991:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 3805              		.loc 2 991 0
 3806 0050 154B     		ldr	r3, .L244+8
 3807 0052 5C68     		ldr	r4, [r3, #4]
 3808 0054 1B68     		ldr	r3, [r3]
 3809 0056 134A     		ldr	r2, .L244+4
 3810 0058 1168     		ldr	r1, [r2]
 3811 005a 5268     		ldr	r2, [r2, #4]
 3812 005c A242     		cmp	r2, r4
 3813 005e 15D8     		bhi	.L238
 3814 0060 01D1     		bne	.L242
 3815 0062 9942     		cmp	r1, r3
 3816 0064 12D8     		bhi	.L238
 3817              	.L242:
 992:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 3818              		.loc 2 992 0 discriminator 1
 3819 0066 104B     		ldr	r3, .L244+8
 3820 0068 1968     		ldr	r1, [r3]
 3821 006a 5A68     		ldr	r2, [r3, #4]
 3822 006c 0F4B     		ldr	r3, .L244+12
 3823 006e 5C68     		ldr	r4, [r3, #4]
 3824 0070 1B68     		ldr	r3, [r3]
 991:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 3825              		.loc 2 991 0 discriminator 1
 3826 0072 A242     		cmp	r2, r4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 107


 3827 0074 0AD8     		bhi	.L238
 3828 0076 01D1     		bne	.L243
 3829 0078 9942     		cmp	r1, r3
 3830 007a 07D8     		bhi	.L238
 3831              	.L243:
 993:Generated_Source\PSoC4/RTC_1.c ****         {
 994:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 3832              		.loc 2 994 0
 3833 007c 0C4B     		ldr	r3, .L244+16
 3834 007e 0122     		mov	r2, #1
 3835 0080 1A70     		strb	r2, [r3]
 995:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 3836              		.loc 2 995 0
 3837 0082 0C4B     		ldr	r3, .L244+20
 3838 0084 E122     		mov	r2, #225
 3839 0086 1201     		lsl	r2, r2, #4
 3840 0088 1A60     		str	r2, [r3]
 3841 008a 05E0     		b	.L237
 3842              	.L238:
 996:Generated_Source\PSoC4/RTC_1.c ****         }
 997:Generated_Source\PSoC4/RTC_1.c ****         else
 998:Generated_Source\PSoC4/RTC_1.c ****         {
 999:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
 3843              		.loc 2 999 0
 3844 008c 084B     		ldr	r3, .L244+16
 3845 008e 0022     		mov	r2, #0
 3846 0090 1A70     		strb	r2, [r3]
1000:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
 3847              		.loc 2 1000 0
 3848 0092 084B     		ldr	r3, .L244+20
 3849 0094 0022     		mov	r2, #0
 3850 0096 1A60     		str	r2, [r3]
 3851              	.L237:
1001:Generated_Source\PSoC4/RTC_1.c ****         }
1002:Generated_Source\PSoC4/RTC_1.c ****     }
 3852              		.loc 2 1002 0
 3853 0098 BD46     		mov	sp, r7
 3854 009a 03B0     		add	sp, sp, #12
 3855              		@ sp needed
 3856 009c 90BD     		pop	{r4, r7, pc}
 3857              	.L245:
 3858 009e C046     		.align	2
 3859              	.L244:
 3860 00a0 00000000 		.word	RTC_1_dstStartTime
 3861 00a4 10000000 		.word	RTC_1_unixTimeDstStart
 3862 00a8 00000000 		.word	RTC_1_unixTime
 3863 00ac 18000000 		.word	RTC_1_unixTimeDstStop
 3864 00b0 00000000 		.word	RTC_1_dstStatus
 3865 00b4 08000000 		.word	RTC_1_dstTimeOffset
 3866              		.cfi_endproc
 3867              	.LFE49:
 3868              		.size	RTC_1_SetDSTStartTime, .-RTC_1_SetDSTStartTime
 3869              		.section	.text.RTC_1_SetDSTStopTime,"ax",%progbits
 3870              		.align	2
 3871              		.global	RTC_1_SetDSTStopTime
 3872              		.code	16
 3873              		.thumb_func
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 108


 3874              		.type	RTC_1_SetDSTStopTime, %function
 3875              	RTC_1_SetDSTStopTime:
 3876              	.LFB50:
1003:Generated_Source\PSoC4/RTC_1.c **** 
1004:Generated_Source\PSoC4/RTC_1.c **** 
1005:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
1006:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_SetDSTStopTime
1007:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
1008:Generated_Source\PSoC4/RTC_1.c ****     *
1009:Generated_Source\PSoC4/RTC_1.c ****     * \brief
1010:Generated_Source\PSoC4/RTC_1.c ****     *  Stores the DST Stop time.
1011:Generated_Source\PSoC4/RTC_1.c ****     * 
1012:Generated_Source\PSoC4/RTC_1.c ****     *  Only generated if DST is enabled. The date passed can be relative or fixed. 
1013:Generated_Source\PSoC4/RTC_1.c ****     *  For a relative date, the user needs to provide a valid day of a week, a week 
1014:Generated_Source\PSoC4/RTC_1.c ****     *  of a month and a month in the dstStopTime structure.
1015:Generated_Source\PSoC4/RTC_1.c ****     *  For a fixed date, the user needs to enter a valid day of a month and a month in the
1016:Generated_Source\PSoC4/RTC_1.c ****     *  dstSoptTime structure. The hour value is optional and if invalid taken
1017:Generated_Source\PSoC4/RTC_1.c ****     *  as 00 hrs. Invalid entries are not stored and the DST start date retains
1018:Generated_Source\PSoC4/RTC_1.c ****     *  a previous value or no value at all.
1019:Generated_Source\PSoC4/RTC_1.c ****     *
1020:Generated_Source\PSoC4/RTC_1.c ****     * \param
1021:Generated_Source\PSoC4/RTC_1.c ****     *  dstStopTime DST Stop time register values.
1022:Generated_Source\PSoC4/RTC_1.c ****     *
1023:Generated_Source\PSoC4/RTC_1.c ****     * \param
1024:Generated_Source\PSoC4/RTC_1.c ****     *  type Defines the DST operation mode <br>
1025:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_RELATIVE - The DST start time is relative. <br>
1026:Generated_Source\PSoC4/RTC_1.c ****     *  DST_DATE_FIXED - The DST start time is fixed.
1027:Generated_Source\PSoC4/RTC_1.c ****     *
1028:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/RTC_1.c ****     void RTC_1_SetDSTStopTime(const RTC_1_DST_TIME* dstStopTime,
1030:Generated_Source\PSoC4/RTC_1.c ****                                                RTC_1_DST_DATETYPE_ENUM type)
1031:Generated_Source\PSoC4/RTC_1.c ****     {
 3877              		.loc 2 1031 0
 3878              		.cfi_startproc
 3879 0000 90B5     		push	{r4, r7, lr}
 3880              		.cfi_def_cfa_offset 12
 3881              		.cfi_offset 4, -12
 3882              		.cfi_offset 7, -8
 3883              		.cfi_offset 14, -4
 3884 0002 83B0     		sub	sp, sp, #12
 3885              		.cfi_def_cfa_offset 24
 3886 0004 00AF     		add	r7, sp, #0
 3887              		.cfi_def_cfa_register 7
 3888 0006 7860     		str	r0, [r7, #4]
 3889 0008 0A1C     		mov	r2, r1
 3890 000a FB1C     		add	r3, r7, #3
 3891 000c 1A70     		strb	r2, [r3]
1032:Generated_Source\PSoC4/RTC_1.c **** 
1033:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.timeFormat  = (uint8)type;
 3892              		.loc 2 1033 0
 3893 000e 244B     		ldr	r3, .L253
 3894 0010 FA1C     		add	r2, r7, #3
 3895 0012 1278     		ldrb	r2, [r2]
 3896 0014 1A75     		strb	r2, [r3, #20]
1034:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.hour           = dstStopTime->hour;
 3897              		.loc 2 1034 0
 3898 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 109


 3899 0018 1A68     		ldr	r2, [r3]
 3900 001a 214B     		ldr	r3, .L253
 3901 001c 1A60     		str	r2, [r3]
1035:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.dayOfWeek      = dstStopTime->dayOfWeek;
 3902              		.loc 2 1035 0
 3903 001e 7B68     		ldr	r3, [r7, #4]
 3904 0020 5A68     		ldr	r2, [r3, #4]
 3905 0022 1F4B     		ldr	r3, .L253
 3906 0024 5A60     		str	r2, [r3, #4]
1036:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.weekOfMonth = dstStopTime->weekOfMonth;
 3907              		.loc 2 1036 0
 3908 0026 7B68     		ldr	r3, [r7, #4]
 3909 0028 DA68     		ldr	r2, [r3, #12]
 3910 002a 1D4B     		ldr	r3, .L253
 3911 002c DA60     		str	r2, [r3, #12]
1037:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.dayOfMonth     = dstStopTime->dayOfMonth;
 3912              		.loc 2 1037 0
 3913 002e 7B68     		ldr	r3, [r7, #4]
 3914 0030 9A68     		ldr	r2, [r3, #8]
 3915 0032 1B4B     		ldr	r3, .L253
 3916 0034 9A60     		str	r2, [r3, #8]
1038:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_dstStopTime.month         = dstStopTime->month;
 3917              		.loc 2 1038 0
 3918 0036 7B68     		ldr	r3, [r7, #4]
 3919 0038 1A69     		ldr	r2, [r3, #16]
 3920 003a 194B     		ldr	r3, .L253
 3921 003c 1A61     		str	r2, [r3, #16]
1039:Generated_Source\PSoC4/RTC_1.c **** 
1040:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 3922              		.loc 2 1040 0
 3923 003e 184B     		ldr	r3, .L253
 3924 0040 181C     		mov	r0, r3
 3925 0042 FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 3926 0046 031C     		mov	r3, r0
 3927 0048 0C1C     		mov	r4, r1
 3928 004a 164A     		ldr	r2, .L253+4
 3929 004c 1360     		str	r3, [r2]
 3930 004e 5460     		str	r4, [r2, #4]
1041:Generated_Source\PSoC4/RTC_1.c **** 
1042:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime >= RTC_1_unixTimeDstStart) &&
 3931              		.loc 2 1042 0
 3932 0050 154B     		ldr	r3, .L253+8
 3933 0052 5C68     		ldr	r4, [r3, #4]
 3934 0054 1B68     		ldr	r3, [r3]
 3935 0056 154A     		ldr	r2, .L253+12
 3936 0058 1168     		ldr	r1, [r2]
 3937 005a 5268     		ldr	r2, [r2, #4]
 3938 005c A242     		cmp	r2, r4
 3939 005e 15D8     		bhi	.L247
 3940 0060 01D1     		bne	.L251
 3941 0062 9942     		cmp	r1, r3
 3942 0064 12D8     		bhi	.L247
 3943              	.L251:
1043:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 3944              		.loc 2 1043 0 discriminator 1
 3945 0066 104B     		ldr	r3, .L253+8
 3946 0068 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 110


 3947 006a 5A68     		ldr	r2, [r3, #4]
 3948 006c 0D4B     		ldr	r3, .L253+4
 3949 006e 5C68     		ldr	r4, [r3, #4]
 3950 0070 1B68     		ldr	r3, [r3]
1042:Generated_Source\PSoC4/RTC_1.c ****            (RTC_1_unixTime <= RTC_1_unixTimeDstStop))
 3951              		.loc 2 1042 0 discriminator 1
 3952 0072 A242     		cmp	r2, r4
 3953 0074 0AD8     		bhi	.L247
 3954 0076 01D1     		bne	.L252
 3955 0078 9942     		cmp	r1, r3
 3956 007a 07D8     		bhi	.L247
 3957              	.L252:
1044:Generated_Source\PSoC4/RTC_1.c ****         {
1045:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 3958              		.loc 2 1045 0
 3959 007c 0C4B     		ldr	r3, .L253+16
 3960 007e 0122     		mov	r2, #1
 3961 0080 1A70     		strb	r2, [r3]
1046:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 3962              		.loc 2 1046 0
 3963 0082 0C4B     		ldr	r3, .L253+20
 3964 0084 E122     		mov	r2, #225
 3965 0086 1201     		lsl	r2, r2, #4
 3966 0088 1A60     		str	r2, [r3]
 3967 008a 05E0     		b	.L246
 3968              	.L247:
1047:Generated_Source\PSoC4/RTC_1.c ****         }
1048:Generated_Source\PSoC4/RTC_1.c ****         else
1049:Generated_Source\PSoC4/RTC_1.c ****         {
1050:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
 3969              		.loc 2 1050 0
 3970 008c 084B     		ldr	r3, .L253+16
 3971 008e 0022     		mov	r2, #0
 3972 0090 1A70     		strb	r2, [r3]
1051:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0uL;
 3973              		.loc 2 1051 0
 3974 0092 084B     		ldr	r3, .L253+20
 3975 0094 0022     		mov	r2, #0
 3976 0096 1A60     		str	r2, [r3]
 3977              	.L246:
1052:Generated_Source\PSoC4/RTC_1.c ****         }
1053:Generated_Source\PSoC4/RTC_1.c ****     }
 3978              		.loc 2 1053 0
 3979 0098 BD46     		mov	sp, r7
 3980 009a 03B0     		add	sp, sp, #12
 3981              		@ sp needed
 3982 009c 90BD     		pop	{r4, r7, pc}
 3983              	.L254:
 3984 009e C046     		.align	2
 3985              	.L253:
 3986 00a0 00000000 		.word	RTC_1_dstStopTime
 3987 00a4 18000000 		.word	RTC_1_unixTimeDstStop
 3988 00a8 00000000 		.word	RTC_1_unixTime
 3989 00ac 10000000 		.word	RTC_1_unixTimeDstStart
 3990 00b0 00000000 		.word	RTC_1_dstStatus
 3991 00b4 08000000 		.word	RTC_1_dstTimeOffset
 3992              		.cfi_endproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 111


 3993              	.LFE50:
 3994              		.size	RTC_1_SetDSTStopTime, .-RTC_1_SetDSTStopTime
 3995              		.section	.text.RTC_1_GetDstUnixTime,"ax",%progbits
 3996              		.align	2
 3997              		.global	RTC_1_GetDstUnixTime
 3998              		.code	16
 3999              		.thumb_func
 4000              		.type	RTC_1_GetDstUnixTime, %function
 4001              	RTC_1_GetDstUnixTime:
 4002              	.LFB51:
1054:Generated_Source\PSoC4/RTC_1.c **** 
1055:Generated_Source\PSoC4/RTC_1.c **** 
1056:Generated_Source\PSoC4/RTC_1.c ****     /*******************************************************************************
1057:Generated_Source\PSoC4/RTC_1.c ****     * Function Name: RTC_1_GetDstUnixTime
1058:Generated_Source\PSoC4/RTC_1.c ****     ****************************************************************************//**
1059:Generated_Source\PSoC4/RTC_1.c ****     *
1060:Generated_Source\PSoC4/RTC_1.c ****     * \brief
1061:Generated_Source\PSoC4/RTC_1.c ****     *  Calculates the DST Start/Stop time in the UNIX format.
1062:Generated_Source\PSoC4/RTC_1.c ****     *
1063:Generated_Source\PSoC4/RTC_1.c ****     * \param
1064:Generated_Source\PSoC4/RTC_1.c ****     *  dstTime The DST Start/Stop time in the regular time format.
1065:Generated_Source\PSoC4/RTC_1.c ****     *
1066:Generated_Source\PSoC4/RTC_1.c ****     * \return
1067:Generated_Source\PSoC4/RTC_1.c ****     *  The DST Start/Stop time in the UNIX format.
1068:Generated_Source\PSoC4/RTC_1.c ****     *
1069:Generated_Source\PSoC4/RTC_1.c ****     *******************************************************************************/
1070:Generated_Source\PSoC4/RTC_1.c ****     uint64 RTC_1_GetDstUnixTime(const RTC_1_DST_TIME* dstTime)
1071:Generated_Source\PSoC4/RTC_1.c ****     {
 4003              		.loc 2 1071 0
 4004              		.cfi_startproc
 4005 0000 90B5     		push	{r4, r7, lr}
 4006              		.cfi_def_cfa_offset 12
 4007              		.cfi_offset 4, -12
 4008              		.cfi_offset 7, -8
 4009              		.cfi_offset 14, -4
 4010 0002 8DB0     		sub	sp, sp, #52
 4011              		.cfi_def_cfa_offset 64
 4012 0004 02AF     		add	r7, sp, #8
 4013              		.cfi_def_cfa 7, 56
 4014 0006 7860     		str	r0, [r7, #4]
1072:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpYear;
1073:Generated_Source\PSoC4/RTC_1.c ****         uint32 tmpDate;
1074:Generated_Source\PSoC4/RTC_1.c ****         uint64 dstUnixTime;
1075:Generated_Source\PSoC4/RTC_1.c **** 
1076:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_DATE_TIME tmpTimeDate;
1077:Generated_Source\PSoC4/RTC_1.c **** 
1078:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_UnixToDateTime(&tmpTimeDate, RTC_1_unixTime, RTC_1_INITIAL_TIME_FORMAT);
 4015              		.loc 2 1078 0
 4016 0008 274B     		ldr	r3, .L259
 4017 000a 5C68     		ldr	r4, [r3, #4]
 4018 000c 1B68     		ldr	r3, [r3]
 4019 000e 0822     		mov	r2, #8
 4020 0010 B918     		add	r1, r7, r2
 4021 0012 0022     		mov	r2, #0
 4022 0014 0092     		str	r2, [sp]
 4023 0016 081C     		mov	r0, r1
 4024 0018 1A1C     		mov	r2, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 112


 4025 001a 231C     		mov	r3, r4
 4026 001c FFF7FEFF 		bl	RTC_1_UnixToDateTime
1079:Generated_Source\PSoC4/RTC_1.c ****         tmpYear = RTC_1_GetYear(tmpTimeDate.date);
 4027              		.loc 2 1079 0
 4028 0020 0823     		mov	r3, #8
 4029 0022 FB18     		add	r3, r7, r3
 4030 0024 5B68     		ldr	r3, [r3, #4]
 4031 0026 181C     		mov	r0, r3
 4032 0028 FFF7FEFF 		bl	RTC_1_GetYear
 4033 002c 031C     		mov	r3, r0
 4034 002e 3B62     		str	r3, [r7, #32]
1080:Generated_Source\PSoC4/RTC_1.c **** 
1081:Generated_Source\PSoC4/RTC_1.c ****         if(dstTime->timeFormat == (uint8)RTC_1_DST_DATE_FIXED)
 4035              		.loc 2 1081 0
 4036 0030 7B68     		ldr	r3, [r7, #4]
 4037 0032 1B7D     		ldrb	r3, [r3, #20]
 4038 0034 012B     		cmp	r3, #1
 4039 0036 0CD1     		bne	.L256
1082:Generated_Source\PSoC4/RTC_1.c ****         {
1083:Generated_Source\PSoC4/RTC_1.c ****             tmpDate =     RTC_1_ConstructDate(dstTime->month, dstTime->dayOfMonth, tmpYear);
 4040              		.loc 2 1083 0
 4041 0038 7B68     		ldr	r3, [r7, #4]
 4042 003a 1969     		ldr	r1, [r3, #16]
 4043 003c 7B68     		ldr	r3, [r7, #4]
 4044 003e 9A68     		ldr	r2, [r3, #8]
 4045 0040 3B6A     		ldr	r3, [r7, #32]
 4046 0042 081C     		mov	r0, r1
 4047 0044 111C     		mov	r1, r2
 4048 0046 1A1C     		mov	r2, r3
 4049 0048 FFF7FEFF 		bl	RTC_1_ConstructDate
 4050 004c 031C     		mov	r3, r0
 4051 004e 7B62     		str	r3, [r7, #36]
 4052 0050 0AE0     		b	.L257
 4053              	.L256:
1084:Generated_Source\PSoC4/RTC_1.c ****         }
1085:Generated_Source\PSoC4/RTC_1.c ****         else
1086:Generated_Source\PSoC4/RTC_1.c ****         {
1087:Generated_Source\PSoC4/RTC_1.c ****             tmpDate = RTC_1_RelativeToFixed(dstTime->dayOfWeek, dstTime->weekOfMonth, dstTime->mont
 4054              		.loc 2 1087 0
 4055 0052 7B68     		ldr	r3, [r7, #4]
 4056 0054 5868     		ldr	r0, [r3, #4]
 4057 0056 7B68     		ldr	r3, [r7, #4]
 4058 0058 D968     		ldr	r1, [r3, #12]
 4059 005a 7B68     		ldr	r3, [r7, #4]
 4060 005c 1A69     		ldr	r2, [r3, #16]
 4061 005e 3B6A     		ldr	r3, [r7, #32]
 4062 0060 FFF7FEFF 		bl	RTC_1_RelativeToFixed
 4063 0064 031C     		mov	r3, r0
 4064 0066 7B62     		str	r3, [r7, #36]
 4065              	.L257:
1088:Generated_Source\PSoC4/RTC_1.c ****         }
1089:Generated_Source\PSoC4/RTC_1.c **** 
1090:Generated_Source\PSoC4/RTC_1.c ****         tmpTimeDate.time = RTC_1_ConstructTime((uint32)RTC_1_24_HOURS_FORMAT, 0u, dstTime->hour, 0u
 4066              		.loc 2 1090 0
 4067 0068 7B68     		ldr	r3, [r7, #4]
 4068 006a 1A68     		ldr	r2, [r3]
 4069 006c 0023     		mov	r3, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 113


 4070 006e 0093     		str	r3, [sp]
 4071 0070 0020     		mov	r0, #0
 4072 0072 0021     		mov	r1, #0
 4073 0074 0023     		mov	r3, #0
 4074 0076 FFF7FEFF 		bl	RTC_1_ConstructTime
 4075 007a 021C     		mov	r2, r0
 4076 007c 0823     		mov	r3, #8
 4077 007e FB18     		add	r3, r7, r3
 4078 0080 1A60     		str	r2, [r3]
1091:Generated_Source\PSoC4/RTC_1.c ****         dstUnixTime = RTC_1_DateTimeToUnix(tmpDate, tmpTimeDate.time);
 4079              		.loc 2 1091 0
 4080 0082 0823     		mov	r3, #8
 4081 0084 FB18     		add	r3, r7, r3
 4082 0086 1B68     		ldr	r3, [r3]
 4083 0088 7A6A     		ldr	r2, [r7, #36]
 4084 008a 101C     		mov	r0, r2
 4085 008c 191C     		mov	r1, r3
 4086 008e FFF7FEFF 		bl	RTC_1_DateTimeToUnix
 4087 0092 031C     		mov	r3, r0
 4088 0094 0C1C     		mov	r4, r1
 4089 0096 BB61     		str	r3, [r7, #24]
 4090 0098 FC61     		str	r4, [r7, #28]
1092:Generated_Source\PSoC4/RTC_1.c **** 
1093:Generated_Source\PSoC4/RTC_1.c ****         return(dstUnixTime);
 4091              		.loc 2 1093 0
 4092 009a BB69     		ldr	r3, [r7, #24]
 4093 009c FC69     		ldr	r4, [r7, #28]
1094:Generated_Source\PSoC4/RTC_1.c ****     }
 4094              		.loc 2 1094 0
 4095 009e 181C     		mov	r0, r3
 4096 00a0 211C     		mov	r1, r4
 4097 00a2 BD46     		mov	sp, r7
 4098 00a4 0BB0     		add	sp, sp, #44
 4099              		@ sp needed
 4100 00a6 90BD     		pop	{r4, r7, pc}
 4101              	.L260:
 4102              		.align	2
 4103              	.L259:
 4104 00a8 00000000 		.word	RTC_1_unixTime
 4105              		.cfi_endproc
 4106              	.LFE51:
 4107              		.size	RTC_1_GetDstUnixTime, .-RTC_1_GetDstUnixTime
 4108              		.section	.text.RTC_1_ConvertBCDToDec,"ax",%progbits
 4109              		.align	2
 4110              		.global	RTC_1_ConvertBCDToDec
 4111              		.code	16
 4112              		.thumb_func
 4113              		.type	RTC_1_ConvertBCDToDec, %function
 4114              	RTC_1_ConvertBCDToDec:
 4115              	.LFB52:
1095:Generated_Source\PSoC4/RTC_1.c **** 
1096:Generated_Source\PSoC4/RTC_1.c **** 
1097:Generated_Source\PSoC4/RTC_1.c **** #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
1098:Generated_Source\PSoC4/RTC_1.c **** 
1099:Generated_Source\PSoC4/RTC_1.c **** 
1100:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1101:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_ConvertBCDToDec
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 114


1102:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1103:Generated_Source\PSoC4/RTC_1.c **** *
1104:Generated_Source\PSoC4/RTC_1.c **** * \brief
1105:Generated_Source\PSoC4/RTC_1.c **** *  Converts a 4-byte BCD number into a 4-byte hexadecimal number. Each byte is
1106:Generated_Source\PSoC4/RTC_1.c **** *  converted individually and returned as an individual byte in the 32-bit
1107:Generated_Source\PSoC4/RTC_1.c **** *  variable.
1108:Generated_Source\PSoC4/RTC_1.c **** *
1109:Generated_Source\PSoC4/RTC_1.c **** * \param
1110:Generated_Source\PSoC4/RTC_1.c **** *  bcdNum A 4-byte BCD number. Each byte represents BCD.
1111:Generated_Source\PSoC4/RTC_1.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 the in BCD format.
1112:Generated_Source\PSoC4/RTC_1.c **** *
1113:Generated_Source\PSoC4/RTC_1.c **** * \return
1114:Generated_Source\PSoC4/RTC_1.c **** *  decNum A 4-byte hexadecimal equivalent number of the BCD number.
1115:Generated_Source\PSoC4/RTC_1.c **** *  BCD number 0x11223344 -> returned hexadecimal number 0x0B16212C.
1116:Generated_Source\PSoC4/RTC_1.c **** *
1117:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1118:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_ConvertBCDToDec(uint32 bcdNum)
1119:Generated_Source\PSoC4/RTC_1.c **** {
 4116              		.loc 2 1119 0
 4117              		.cfi_startproc
 4118 0000 80B5     		push	{r7, lr}
 4119              		.cfi_def_cfa_offset 8
 4120              		.cfi_offset 7, -8
 4121              		.cfi_offset 14, -4
 4122 0002 86B0     		sub	sp, sp, #24
 4123              		.cfi_def_cfa_offset 32
 4124 0004 00AF     		add	r7, sp, #0
 4125              		.cfi_def_cfa_register 7
 4126 0006 7860     		str	r0, [r7, #4]
1120:Generated_Source\PSoC4/RTC_1.c ****     uint32 i;
1121:Generated_Source\PSoC4/RTC_1.c ****     uint32 mult;
1122:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1123:Generated_Source\PSoC4/RTC_1.c **** 
1124:Generated_Source\PSoC4/RTC_1.c ****     mult   = 1u;
 4127              		.loc 2 1124 0
 4128 0008 0123     		mov	r3, #1
 4129 000a 3B61     		str	r3, [r7, #16]
1125:Generated_Source\PSoC4/RTC_1.c ****     retVal = 0u;
 4130              		.loc 2 1125 0
 4131 000c 0023     		mov	r3, #0
 4132 000e FB60     		str	r3, [r7, #12]
1126:Generated_Source\PSoC4/RTC_1.c **** 
1127:Generated_Source\PSoC4/RTC_1.c ****     for(i = 0u; i < 16u; i++)
 4133              		.loc 2 1127 0
 4134 0010 0023     		mov	r3, #0
 4135 0012 7B61     		str	r3, [r7, #20]
 4136 0014 13E0     		b	.L262
 4137              	.L263:
1128:Generated_Source\PSoC4/RTC_1.c ****     {
1129:Generated_Source\PSoC4/RTC_1.c ****         retVal += (bcdNum & RTC_1_BCD_ONE_DIGIT_MASK) * mult;
 4138              		.loc 2 1129 0 discriminator 3
 4139 0016 7B68     		ldr	r3, [r7, #4]
 4140 0018 0F22     		mov	r2, #15
 4141 001a 1340     		and	r3, r2
 4142 001c 3A69     		ldr	r2, [r7, #16]
 4143 001e 5343     		mul	r3, r2
 4144 0020 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 115


 4145 0022 D318     		add	r3, r2, r3
 4146 0024 FB60     		str	r3, [r7, #12]
1130:Generated_Source\PSoC4/RTC_1.c ****         bcdNum >>= RTC_1_BCD_NUMBER_SIZE;
 4147              		.loc 2 1130 0 discriminator 3
 4148 0026 7B68     		ldr	r3, [r7, #4]
 4149 0028 1B09     		lsr	r3, r3, #4
 4150 002a 7B60     		str	r3, [r7, #4]
1131:Generated_Source\PSoC4/RTC_1.c ****         mult *= 10u;
 4151              		.loc 2 1131 0 discriminator 3
 4152 002c 3A69     		ldr	r2, [r7, #16]
 4153 002e 131C     		mov	r3, r2
 4154 0030 9B00     		lsl	r3, r3, #2
 4155 0032 9B18     		add	r3, r3, r2
 4156 0034 5B00     		lsl	r3, r3, #1
 4157 0036 3B61     		str	r3, [r7, #16]
1127:Generated_Source\PSoC4/RTC_1.c ****     {
 4158              		.loc 2 1127 0 discriminator 3
 4159 0038 7B69     		ldr	r3, [r7, #20]
 4160 003a 0133     		add	r3, r3, #1
 4161 003c 7B61     		str	r3, [r7, #20]
 4162              	.L262:
1127:Generated_Source\PSoC4/RTC_1.c ****     {
 4163              		.loc 2 1127 0 is_stmt 0 discriminator 1
 4164 003e 7B69     		ldr	r3, [r7, #20]
 4165 0040 0F2B     		cmp	r3, #15
 4166 0042 E8D9     		bls	.L263
1132:Generated_Source\PSoC4/RTC_1.c ****     }
1133:Generated_Source\PSoC4/RTC_1.c **** 
1134:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 4167              		.loc 2 1134 0 is_stmt 1
 4168 0044 FB68     		ldr	r3, [r7, #12]
1135:Generated_Source\PSoC4/RTC_1.c **** }
 4169              		.loc 2 1135 0
 4170 0046 181C     		mov	r0, r3
 4171 0048 BD46     		mov	sp, r7
 4172 004a 06B0     		add	sp, sp, #24
 4173              		@ sp needed
 4174 004c 80BD     		pop	{r7, pc}
 4175              		.cfi_endproc
 4176              	.LFE52:
 4177              		.size	RTC_1_ConvertBCDToDec, .-RTC_1_ConvertBCDToDec
 4178 004e C046     		.section	.text.RTC_1_ConvertDecToBCD,"ax",%progbits
 4179              		.align	2
 4180              		.global	RTC_1_ConvertDecToBCD
 4181              		.code	16
 4182              		.thumb_func
 4183              		.type	RTC_1_ConvertDecToBCD, %function
 4184              	RTC_1_ConvertDecToBCD:
 4185              	.LFB53:
1136:Generated_Source\PSoC4/RTC_1.c **** 
1137:Generated_Source\PSoC4/RTC_1.c **** 
1138:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1139:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_ConvertDecToBCD
1140:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1141:Generated_Source\PSoC4/RTC_1.c **** *
1142:Generated_Source\PSoC4/RTC_1.c **** * \brief
1143:Generated_Source\PSoC4/RTC_1.c **** *  Converts a 4-byte hexadecimal number into a 4-byte BCD number. Each byte
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 116


1144:Generated_Source\PSoC4/RTC_1.c **** *  is converted individually and returned as an individual byte in the 32-bit
1145:Generated_Source\PSoC4/RTC_1.c **** *  variable.
1146:Generated_Source\PSoC4/RTC_1.c **** *
1147:Generated_Source\PSoC4/RTC_1.c **** * \param 
1148:Generated_Source\PSoC4/RTC_1.c **** *  decNum A 4-byte hexadecimal number. Each byte is represented in hex.
1149:Generated_Source\PSoC4/RTC_1.c **** *  0x11223344 -> 4 bytes 0x11, 0x22, 0x33 and 0x44 in the hex format.
1150:Generated_Source\PSoC4/RTC_1.c **** *
1151:Generated_Source\PSoC4/RTC_1.c **** * \return
1152:Generated_Source\PSoC4/RTC_1.c **** *  bcdNum - A 4-byte BCD equivalent of the passed hexadecimal number. Hexadecimal
1153:Generated_Source\PSoC4/RTC_1.c **** *  number 0x11223344 -> returned BCD number 0x17345168.
1154:Generated_Source\PSoC4/RTC_1.c **** *
1155:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1156:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_ConvertDecToBCD(uint32 decNum)
1157:Generated_Source\PSoC4/RTC_1.c **** {
 4186              		.loc 2 1157 0
 4187              		.cfi_startproc
 4188 0000 80B5     		push	{r7, lr}
 4189              		.cfi_def_cfa_offset 8
 4190              		.cfi_offset 7, -8
 4191              		.cfi_offset 14, -4
 4192 0002 86B0     		sub	sp, sp, #24
 4193              		.cfi_def_cfa_offset 32
 4194 0004 00AF     		add	r7, sp, #0
 4195              		.cfi_def_cfa_register 7
 4196 0006 7860     		str	r0, [r7, #4]
1158:Generated_Source\PSoC4/RTC_1.c ****     uint32 shift;
1159:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpVal;
1160:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1161:Generated_Source\PSoC4/RTC_1.c **** 
1162:Generated_Source\PSoC4/RTC_1.c ****     shift  = 0u;
 4197              		.loc 2 1162 0
 4198 0008 0023     		mov	r3, #0
 4199 000a 7B61     		str	r3, [r7, #20]
1163:Generated_Source\PSoC4/RTC_1.c ****     retVal = 0u;
 4200              		.loc 2 1163 0
 4201 000c 0023     		mov	r3, #0
 4202 000e FB60     		str	r3, [r7, #12]
1164:Generated_Source\PSoC4/RTC_1.c ****     tmpVal = decNum;
 4203              		.loc 2 1164 0
 4204 0010 7B68     		ldr	r3, [r7, #4]
 4205 0012 3B61     		str	r3, [r7, #16]
 4206              	.L266:
1165:Generated_Source\PSoC4/RTC_1.c **** 
1166:Generated_Source\PSoC4/RTC_1.c ****     do
1167:Generated_Source\PSoC4/RTC_1.c ****     {
1168:Generated_Source\PSoC4/RTC_1.c ****         retVal |= ((tmpVal % 10u) << shift);
 4207              		.loc 2 1168 0 discriminator 1
 4208 0014 3B69     		ldr	r3, [r7, #16]
 4209 0016 181C     		mov	r0, r3
 4210 0018 0A21     		mov	r1, #10
 4211 001a FFF7FEFF 		bl	__aeabi_uidivmod
 4212 001e 0B1C     		mov	r3, r1
 4213 0020 1A1C     		mov	r2, r3
 4214 0022 7B69     		ldr	r3, [r7, #20]
 4215 0024 9A40     		lsl	r2, r2, r3
 4216 0026 131C     		mov	r3, r2
 4217 0028 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 117


 4218 002a 1343     		orr	r3, r2
 4219 002c FB60     		str	r3, [r7, #12]
1169:Generated_Source\PSoC4/RTC_1.c ****         tmpVal /= 10u;
 4220              		.loc 2 1169 0 discriminator 1
 4221 002e 3B69     		ldr	r3, [r7, #16]
 4222 0030 181C     		mov	r0, r3
 4223 0032 0A21     		mov	r1, #10
 4224 0034 FFF7FEFF 		bl	__aeabi_uidiv
 4225 0038 031C     		mov	r3, r0
 4226 003a 3B61     		str	r3, [r7, #16]
1170:Generated_Source\PSoC4/RTC_1.c ****         shift  += RTC_1_BCD_NUMBER_SIZE;
 4227              		.loc 2 1170 0 discriminator 1
 4228 003c 7B69     		ldr	r3, [r7, #20]
 4229 003e 0433     		add	r3, r3, #4
 4230 0040 7B61     		str	r3, [r7, #20]
1171:Generated_Source\PSoC4/RTC_1.c ****     }
1172:Generated_Source\PSoC4/RTC_1.c ****     while(tmpVal >= 10u);
 4231              		.loc 2 1172 0 discriminator 1
 4232 0042 3B69     		ldr	r3, [r7, #16]
 4233 0044 092B     		cmp	r3, #9
 4234 0046 E5D8     		bhi	.L266
1173:Generated_Source\PSoC4/RTC_1.c **** 
1174:Generated_Source\PSoC4/RTC_1.c ****     retVal |= (tmpVal << shift);
 4235              		.loc 2 1174 0
 4236 0048 7B69     		ldr	r3, [r7, #20]
 4237 004a 3A69     		ldr	r2, [r7, #16]
 4238 004c 9A40     		lsl	r2, r2, r3
 4239 004e 131C     		mov	r3, r2
 4240 0050 FA68     		ldr	r2, [r7, #12]
 4241 0052 1343     		orr	r3, r2
 4242 0054 FB60     		str	r3, [r7, #12]
1175:Generated_Source\PSoC4/RTC_1.c **** 
1176:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 4243              		.loc 2 1176 0
 4244 0056 FB68     		ldr	r3, [r7, #12]
1177:Generated_Source\PSoC4/RTC_1.c **** }
 4245              		.loc 2 1177 0
 4246 0058 181C     		mov	r0, r3
 4247 005a BD46     		mov	sp, r7
 4248 005c 06B0     		add	sp, sp, #24
 4249              		@ sp needed
 4250 005e 80BD     		pop	{r7, pc}
 4251              		.cfi_endproc
 4252              	.LFE53:
 4253              		.size	RTC_1_ConvertDecToBCD, .-RTC_1_ConvertDecToBCD
 4254              		.section	.text.RTC_1_Update,"ax",%progbits
 4255              		.align	2
 4256              		.global	RTC_1_Update
 4257              		.code	16
 4258              		.thumb_func
 4259              		.type	RTC_1_Update, %function
 4260              	RTC_1_Update:
 4261              	.LFB54:
1178:Generated_Source\PSoC4/RTC_1.c **** 
1179:Generated_Source\PSoC4/RTC_1.c **** 
1180:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1181:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_Update
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 118


1182:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1183:Generated_Source\PSoC4/RTC_1.c **** *
1184:Generated_Source\PSoC4/RTC_1.c **** * \brief
1185:Generated_Source\PSoC4/RTC_1.c **** *  This API updates the time registers and performs alarm/DST check.
1186:Generated_Source\PSoC4/RTC_1.c **** *
1187:Generated_Source\PSoC4/RTC_1.c **** *  This function increments the time/date registers by an input clock period.
1188:Generated_Source\PSoC4/RTC_1.c **** *  The period is set by RTC_SetPeriod() API or WDT period selected for RTC
1189:Generated_Source\PSoC4/RTC_1.c **** *  in the clocks configuration window (low frequency clocks tab) interface
1190:Generated_Source\PSoC4/RTC_1.c **** *  every time it is called.
1191:Generated_Source\PSoC4/RTC_1.c **** *
1192:Generated_Source\PSoC4/RTC_1.c **** *  API is automatically mapped to the WDT's callback slot and period if the
1193:Generated_Source\PSoC4/RTC_1.c **** *  configuration is as follows: 1) Option "Implement RTC update manually" in
1194:Generated_Source\PSoC4/RTC_1.c **** *  the customizer is unchecked 2) One of WDTs is selected in the "Use for RTC"
1195:Generated_Source\PSoC4/RTC_1.c **** *  panel of the low frequency clocks tab 3) Option "Implementation by IDE" is
1196:Generated_Source\PSoC4/RTC_1.c **** *  selected in the "Timer (WDT) ISR" panel.
1197:Generated_Source\PSoC4/RTC_1.c **** *
1198:Generated_Source\PSoC4/RTC_1.c **** *  If option "Implement RTC update manually" is checked in the customizer or
1199:Generated_Source\PSoC4/RTC_1.c **** *  option "None" is selected in the "Use for RTC" panel,it is the user's
1200:Generated_Source\PSoC4/RTC_1.c **** *  responsibility: 1) to call this API from the clock ISR to be
1201:Generated_Source\PSoC4/RTC_1.c **** *  used as the RTC's input 2) set the period of the RTC through
1202:Generated_Source\PSoC4/RTC_1.c **** *  RTC_SetPeriod() API.
1203:Generated_Source\PSoC4/RTC_1.c **** *
1204:Generated_Source\PSoC4/RTC_1.c **** * \note Updates the Unix time register, updates the alarm and DST status.
1205:Generated_Source\PSoC4/RTC_1.c **** *
1206:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1207:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_Update(void)
1208:Generated_Source\PSoC4/RTC_1.c **** {
 4262              		.loc 2 1208 0
 4263              		.cfi_startproc
 4264 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4265              		.cfi_def_cfa_offset 20
 4266              		.cfi_offset 4, -20
 4267              		.cfi_offset 5, -16
 4268              		.cfi_offset 6, -12
 4269              		.cfi_offset 7, -8
 4270              		.cfi_offset 14, -4
 4271 0002 85B0     		sub	sp, sp, #20
 4272              		.cfi_def_cfa_offset 40
 4273 0004 00AF     		add	r7, sp, #0
 4274              		.cfi_def_cfa_register 7
1209:Generated_Source\PSoC4/RTC_1.c ****     static volatile uint32 RTC_1_currentTickNumber;
1210:Generated_Source\PSoC4/RTC_1.c ****     RTC_1_currentTickNumber += RTC_1_updateTimePeriod;
 4275              		.loc 2 1210 0
 4276 0006 4B4B     		ldr	r3, .L273
 4277 0008 1A68     		ldr	r2, [r3]
 4278 000a 4B4B     		ldr	r3, .L273+4
 4279 000c 1B68     		ldr	r3, [r3]
 4280 000e D218     		add	r2, r2, r3
 4281 0010 484B     		ldr	r3, .L273
 4282 0012 1A60     		str	r2, [r3]
1211:Generated_Source\PSoC4/RTC_1.c **** 
1212:Generated_Source\PSoC4/RTC_1.c ****     if(RTC_1_currentTickNumber >= RTC_1_tickRefOneSec)
 4283              		.loc 2 1212 0
 4284 0014 474B     		ldr	r3, .L273
 4285 0016 1A68     		ldr	r2, [r3]
 4286 0018 484B     		ldr	r3, .L273+8
 4287 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 119


 4288 001c 9A42     		cmp	r2, r3
 4289 001e 00D2     		bcs	.LCB3792
 4290 0020 84E0     		b	.L268	@long jump
 4291              	.LCB3792:
1213:Generated_Source\PSoC4/RTC_1.c ****     {
1214:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_unixTime++;
 4292              		.loc 2 1214 0
 4293 0022 474B     		ldr	r3, .L273+12
 4294 0024 5C68     		ldr	r4, [r3, #4]
 4295 0026 1B68     		ldr	r3, [r3]
 4296 0028 0121     		mov	r1, #1
 4297 002a 0022     		mov	r2, #0
 4298 002c 5B18     		add	r3, r3, r1
 4299 002e 5441     		adc	r4, r4, r2
 4300 0030 434A     		ldr	r2, .L273+12
 4301 0032 1360     		str	r3, [r2]
 4302 0034 5460     		str	r4, [r2, #4]
1215:Generated_Source\PSoC4/RTC_1.c ****         RTC_1_currentTickNumber = 0u;
 4303              		.loc 2 1215 0
 4304 0036 3F4B     		ldr	r3, .L273
 4305 0038 0022     		mov	r2, #0
 4306 003a 1A60     		str	r2, [r3]
1216:Generated_Source\PSoC4/RTC_1.c **** 
1217:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_DST_STATUS)
1218:Generated_Source\PSoC4/RTC_1.c ****         if(RTC_1_unixTime == RTC_1_unixTimeDstStart)
 4307              		.loc 2 1218 0
 4308 003c 404B     		ldr	r3, .L273+12
 4309 003e 1968     		ldr	r1, [r3]
 4310 0040 5A68     		ldr	r2, [r3, #4]
 4311 0042 404B     		ldr	r3, .L273+16
 4312 0044 5C68     		ldr	r4, [r3, #4]
 4313 0046 1B68     		ldr	r3, [r3]
 4314 0048 9942     		cmp	r1, r3
 4315 004a 08D1     		bne	.L270
 4316 004c A242     		cmp	r2, r4
 4317 004e 06D1     		bne	.L270
1219:Generated_Source\PSoC4/RTC_1.c ****         {
1220:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 1u;
 4318              		.loc 2 1220 0
 4319 0050 3D4B     		ldr	r3, .L273+20
 4320 0052 0122     		mov	r2, #1
 4321 0054 1A70     		strb	r2, [r3]
1221:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = RTC_1_SECONDS_PER_HOUR;
 4322              		.loc 2 1221 0
 4323 0056 3D4B     		ldr	r3, .L273+24
 4324 0058 E122     		mov	r2, #225
 4325 005a 1201     		lsl	r2, r2, #4
 4326 005c 1A60     		str	r2, [r3]
 4327              	.L270:
1222:Generated_Source\PSoC4/RTC_1.c ****         }
1223:Generated_Source\PSoC4/RTC_1.c **** 
1224:Generated_Source\PSoC4/RTC_1.c ****         if(RTC_1_unixTime == (RTC_1_unixTimeDstStop  - RTC_1_dstTimeOffset))
 4328              		.loc 2 1224 0
 4329 005e 3C4B     		ldr	r3, .L273+28
 4330 0060 5C68     		ldr	r4, [r3, #4]
 4331 0062 1B68     		ldr	r3, [r3]
 4332 0064 394A     		ldr	r2, .L273+24
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 120


 4333 0066 1268     		ldr	r2, [r2]
 4334 0068 BA60     		str	r2, [r7, #8]
 4335 006a 0022     		mov	r2, #0
 4336 006c FA60     		str	r2, [r7, #12]
 4337 006e B968     		ldr	r1, [r7, #8]
 4338 0070 FA68     		ldr	r2, [r7, #12]
 4339 0072 5B1A     		sub	r3, r3, r1
 4340 0074 9441     		sbc	r4, r4, r2
 4341 0076 191C     		mov	r1, r3
 4342 0078 221C     		mov	r2, r4
 4343 007a 314B     		ldr	r3, .L273+12
 4344 007c 5C68     		ldr	r4, [r3, #4]
 4345 007e 1B68     		ldr	r3, [r3]
 4346 0080 9942     		cmp	r1, r3
 4347 0082 19D1     		bne	.L271
 4348 0084 A242     		cmp	r2, r4
 4349 0086 17D1     		bne	.L271
1225:Generated_Source\PSoC4/RTC_1.c ****         {
1226:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstStatus = 0u;
 4350              		.loc 2 1226 0
 4351 0088 2F4B     		ldr	r3, .L273+20
 4352 008a 0022     		mov	r2, #0
 4353 008c 1A70     		strb	r2, [r3]
1227:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_dstTimeOffset = 0u;
 4354              		.loc 2 1227 0
 4355 008e 2F4B     		ldr	r3, .L273+24
 4356 0090 0022     		mov	r2, #0
 4357 0092 1A60     		str	r2, [r3]
1228:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTimeDstStart = RTC_1_GetDstUnixTime(&RTC_1_dstStartTime);
 4358              		.loc 2 1228 0
 4359 0094 2F4B     		ldr	r3, .L273+32
 4360 0096 181C     		mov	r0, r3
 4361 0098 FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 4362 009c 031C     		mov	r3, r0
 4363 009e 0C1C     		mov	r4, r1
 4364 00a0 284A     		ldr	r2, .L273+16
 4365 00a2 1360     		str	r3, [r2]
 4366 00a4 5460     		str	r4, [r2, #4]
1229:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTimeDstStop  = RTC_1_GetDstUnixTime(&RTC_1_dstStopTime);
 4367              		.loc 2 1229 0
 4368 00a6 2C4B     		ldr	r3, .L273+36
 4369 00a8 181C     		mov	r0, r3
 4370 00aa FFF7FEFF 		bl	RTC_1_GetDstUnixTime
 4371 00ae 031C     		mov	r3, r0
 4372 00b0 0C1C     		mov	r4, r1
 4373 00b2 274A     		ldr	r2, .L273+28
 4374 00b4 1360     		str	r3, [r2]
 4375 00b6 5460     		str	r4, [r2, #4]
 4376              	.L271:
1230:Generated_Source\PSoC4/RTC_1.c ****         }
1231:Generated_Source\PSoC4/RTC_1.c ****     #endif /* (0u != RTC_1_INITIAL_DST_STATUS) */
1232:Generated_Source\PSoC4/RTC_1.c **** 
1233:Generated_Source\PSoC4/RTC_1.c ****     #if(0u != RTC_1_INITIAL_ALARM_STATUS)
1234:Generated_Source\PSoC4/RTC_1.c ****         if((RTC_1_unixTime + RTC_1_dstTimeOffset) == RTC_1_unixTimeAlarm)
 4377              		.loc 2 1234 0
 4378 00b8 244B     		ldr	r3, .L273+24
 4379 00ba 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 121


 4380 00bc 3B60     		str	r3, [r7]
 4381 00be 0023     		mov	r3, #0
 4382 00c0 7B60     		str	r3, [r7, #4]
 4383 00c2 1F4B     		ldr	r3, .L273+12
 4384 00c4 5C68     		ldr	r4, [r3, #4]
 4385 00c6 1B68     		ldr	r3, [r3]
 4386 00c8 3968     		ldr	r1, [r7]
 4387 00ca 7A68     		ldr	r2, [r7, #4]
 4388 00cc C918     		add	r1, r1, r3
 4389 00ce 6241     		adc	r2, r2, r4
 4390 00d0 224B     		ldr	r3, .L273+40
 4391 00d2 5C68     		ldr	r4, [r3, #4]
 4392 00d4 1B68     		ldr	r3, [r3]
 4393 00d6 9942     		cmp	r1, r3
 4394 00d8 28D1     		bne	.L268
 4395 00da A242     		cmp	r2, r4
 4396 00dc 26D1     		bne	.L268
1235:Generated_Source\PSoC4/RTC_1.c ****         {
1236:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_currentTimeDate.status |= (1uL << RTC_1_STATUS_ALARM_OFFSET);
 4397              		.loc 2 1236 0
 4398 00de 204B     		ldr	r3, .L273+44
 4399 00e0 DB68     		ldr	r3, [r3, #12]
 4400 00e2 0422     		mov	r2, #4
 4401 00e4 1A43     		orr	r2, r3
 4402 00e6 1E4B     		ldr	r3, .L273+44
 4403 00e8 DA60     		str	r2, [r3, #12]
1237:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_alarmCurStatus = RTC_1_alarmCfgMask;
 4404              		.loc 2 1237 0
 4405 00ea 1E4B     		ldr	r3, .L273+48
 4406 00ec 1A68     		ldr	r2, [r3]
 4407 00ee 1E4B     		ldr	r3, .L273+52
 4408 00f0 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/RTC_1.c ****             if (RTC_1_alarmCallbackPtr != (void *) 0)
 4409              		.loc 2 1238 0
 4410 00f2 1E4B     		ldr	r3, .L273+56
 4411 00f4 1B68     		ldr	r3, [r3]
 4412 00f6 002B     		cmp	r3, #0
 4413 00f8 02D0     		beq	.L272
1239:Generated_Source\PSoC4/RTC_1.c ****             {
1240:Generated_Source\PSoC4/RTC_1.c ****                 RTC_1_alarmCallbackPtr();
 4414              		.loc 2 1240 0
 4415 00fa 1C4B     		ldr	r3, .L273+56
 4416 00fc 1B68     		ldr	r3, [r3]
 4417 00fe 9847     		blx	r3
 4418              	.L272:
1241:Generated_Source\PSoC4/RTC_1.c ****             }
1242:Generated_Source\PSoC4/RTC_1.c ****             RTC_1_unixTimeAlarm = RTC_1_GetNexAlarmTime(RTC_1_unixTime + RTC_1_dstTimeOffset,
 4419              		.loc 2 1242 0
 4420 0100 124B     		ldr	r3, .L273+24
 4421 0102 1B68     		ldr	r3, [r3]
 4422 0104 1D1C     		mov	r5, r3
 4423 0106 0023     		mov	r3, #0
 4424 0108 1E1C     		mov	r6, r3
 4425 010a 0D4B     		ldr	r3, .L273+12
 4426 010c 5C68     		ldr	r4, [r3, #4]
 4427 010e 1B68     		ldr	r3, [r3]
 4428 0110 5B19     		add	r3, r3, r5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 122


 4429 0112 7441     		adc	r4, r4, r6
 4430 0114 134A     		ldr	r2, .L273+48
 4431 0116 1268     		ldr	r2, [r2]
 4432 0118 D2B2     		uxtb	r2, r2
 4433 011a 181C     		mov	r0, r3
 4434 011c 211C     		mov	r1, r4
 4435 011e FFF7FEFF 		bl	RTC_1_GetNexAlarmTime
 4436 0122 031C     		mov	r3, r0
 4437 0124 0C1C     		mov	r4, r1
 4438 0126 0D4A     		ldr	r2, .L273+40
 4439 0128 1360     		str	r3, [r2]
 4440 012a 5460     		str	r4, [r2, #4]
 4441              	.L268:
1243:Generated_Source\PSoC4/RTC_1.c ****                                                                                                   (
1244:Generated_Source\PSoC4/RTC_1.c ****         }
1245:Generated_Source\PSoC4/RTC_1.c ****     #endif/* (0u != RTC_1_INITIAL_ALARM_STATUS) */
1246:Generated_Source\PSoC4/RTC_1.c ****     }
1247:Generated_Source\PSoC4/RTC_1.c **** }
 4442              		.loc 2 1247 0
 4443 012c BD46     		mov	sp, r7
 4444 012e 05B0     		add	sp, sp, #20
 4445              		@ sp needed
 4446 0130 F0BD     		pop	{r4, r5, r6, r7, pc}
 4447              	.L274:
 4448 0132 C046     		.align	2
 4449              	.L273:
 4450 0134 2C000000 		.word	RTC_1_currentTickNumber.5161
 4451 0138 00000000 		.word	RTC_1_updateTimePeriod
 4452 013c 04000000 		.word	RTC_1_tickRefOneSec
 4453 0140 00000000 		.word	RTC_1_unixTime
 4454 0144 10000000 		.word	RTC_1_unixTimeDstStart
 4455 0148 00000000 		.word	RTC_1_dstStatus
 4456 014c 08000000 		.word	RTC_1_dstTimeOffset
 4457 0150 18000000 		.word	RTC_1_unixTimeDstStop
 4458 0154 00000000 		.word	RTC_1_dstStartTime
 4459 0158 00000000 		.word	RTC_1_dstStopTime
 4460 015c 20000000 		.word	RTC_1_unixTimeAlarm
 4461 0160 00000000 		.word	RTC_1_currentTimeDate
 4462 0164 00000000 		.word	RTC_1_alarmCfgMask
 4463 0168 00000000 		.word	RTC_1_alarmCurStatus
 4464 016c 00000000 		.word	RTC_1_alarmCallbackPtr
 4465              		.cfi_endproc
 4466              	.LFE54:
 4467              		.size	RTC_1_Update, .-RTC_1_Update
 4468              		.section	.text.RTC_1_DateTimeToUnix,"ax",%progbits
 4469              		.align	2
 4470              		.global	RTC_1_DateTimeToUnix
 4471              		.code	16
 4472              		.thumb_func
 4473              		.type	RTC_1_DateTimeToUnix, %function
 4474              	RTC_1_DateTimeToUnix:
 4475              	.LFB55:
1248:Generated_Source\PSoC4/RTC_1.c **** 
1249:Generated_Source\PSoC4/RTC_1.c **** 
1250:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1251:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_DateTimeToUnix
1252:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 123


1253:Generated_Source\PSoC4/RTC_1.c **** *
1254:Generated_Source\PSoC4/RTC_1.c **** * \brief
1255:Generated_Source\PSoC4/RTC_1.c **** *  This is an internal function to convert the date and time from
1256:Generated_Source\PSoC4/RTC_1.c **** *  the regular time format into the UNIX time format.
1257:Generated_Source\PSoC4/RTC_1.c **** *
1258:Generated_Source\PSoC4/RTC_1.c **** * \param
1259:Generated_Source\PSoC4/RTC_1.c **** *  inputDate The date in the selected in the customizer "date format".
1260:Generated_Source\PSoC4/RTC_1.c **** * \param
1261:Generated_Source\PSoC4/RTC_1.c **** *  inputTime The time in the defined "time format".
1262:Generated_Source\PSoC4/RTC_1.c **** *
1263:Generated_Source\PSoC4/RTC_1.c **** * \return Returns the date and time in the UNIX format.
1264:Generated_Source\PSoC4/RTC_1.c **** *
1265:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1266:Generated_Source\PSoC4/RTC_1.c **** uint64 RTC_1_DateTimeToUnix(uint32 inputDate, uint32 inputTime)
1267:Generated_Source\PSoC4/RTC_1.c **** {
 4476              		.loc 2 1267 0
 4477              		.cfi_startproc
 4478 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4479              		.cfi_def_cfa_offset 20
 4480              		.cfi_offset 4, -20
 4481              		.cfi_offset 5, -16
 4482              		.cfi_offset 6, -12
 4483              		.cfi_offset 7, -8
 4484              		.cfi_offset 14, -4
 4485 0002 91B0     		sub	sp, sp, #68
 4486              		.cfi_def_cfa_offset 88
 4487 0004 00AF     		add	r7, sp, #0
 4488              		.cfi_def_cfa_register 7
 4489 0006 7862     		str	r0, [r7, #36]
 4490 0008 3962     		str	r1, [r7, #32]
1268:Generated_Source\PSoC4/RTC_1.c ****     uint32 i;
1269:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
1270:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMonth;
1271:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpVal;
1272:Generated_Source\PSoC4/RTC_1.c ****     uint64 unixTime;
1273:Generated_Source\PSoC4/RTC_1.c **** 
1274:Generated_Source\PSoC4/RTC_1.c ****     unixTime = 0u;
 4491              		.loc 2 1274 0
 4492 000a 0023     		mov	r3, #0
 4493 000c 0024     		mov	r4, #0
 4494 000e 3B63     		str	r3, [r7, #48]
 4495 0010 7C63     		str	r4, [r7, #52]
1275:Generated_Source\PSoC4/RTC_1.c ****     tmpYear = RTC_1_GetYear(inputDate);
 4496              		.loc 2 1275 0
 4497 0012 7B6A     		ldr	r3, [r7, #36]
 4498 0014 181C     		mov	r0, r3
 4499 0016 FFF7FEFF 		bl	RTC_1_GetYear
 4500 001a 031C     		mov	r3, r0
 4501 001c FB62     		str	r3, [r7, #44]
1276:Generated_Source\PSoC4/RTC_1.c **** 
1277:Generated_Source\PSoC4/RTC_1.c ****     /* Calculate seconds from epoch start up to (but not including) current year. */
1278:Generated_Source\PSoC4/RTC_1.c ****     for(i = RTC_1_YEAR_0; i < tmpYear; i++)
 4502              		.loc 2 1278 0
 4503 001e 564B     		ldr	r3, .L283
 4504 0020 FB63     		str	r3, [r7, #60]
 4505 0022 19E0     		b	.L276
 4506              	.L279:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 124


1279:Generated_Source\PSoC4/RTC_1.c ****     {
1280:Generated_Source\PSoC4/RTC_1.c ****         if(0u != RTC_1_LeapYear(i))
 4507              		.loc 2 1280 0
 4508 0024 FB6B     		ldr	r3, [r7, #60]
 4509 0026 181C     		mov	r0, r3
 4510 0028 FFF7FEFF 		bl	RTC_1_LeapYear
 4511 002c 031E     		sub	r3, r0, #0
 4512 002e 08D0     		beq	.L277
1281:Generated_Source\PSoC4/RTC_1.c ****         {
1282:Generated_Source\PSoC4/RTC_1.c ****             unixTime += RTC_1_SECONDS_PER_LEAP_YEAR;
 4513              		.loc 2 1282 0
 4514 0030 3B6B     		ldr	r3, [r7, #48]
 4515 0032 7C6B     		ldr	r4, [r7, #52]
 4516 0034 5149     		ldr	r1, .L283+4
 4517 0036 0022     		mov	r2, #0
 4518 0038 5B18     		add	r3, r3, r1
 4519 003a 5441     		adc	r4, r4, r2
 4520 003c 3B63     		str	r3, [r7, #48]
 4521 003e 7C63     		str	r4, [r7, #52]
 4522 0040 07E0     		b	.L278
 4523              	.L277:
1283:Generated_Source\PSoC4/RTC_1.c ****         }
1284:Generated_Source\PSoC4/RTC_1.c ****         else
1285:Generated_Source\PSoC4/RTC_1.c ****         {
1286:Generated_Source\PSoC4/RTC_1.c ****             unixTime += RTC_1_SECONDS_PER_NONLEAP_YEAR;
 4524              		.loc 2 1286 0
 4525 0042 3B6B     		ldr	r3, [r7, #48]
 4526 0044 7C6B     		ldr	r4, [r7, #52]
 4527 0046 4E49     		ldr	r1, .L283+8
 4528 0048 0022     		mov	r2, #0
 4529 004a 5B18     		add	r3, r3, r1
 4530 004c 5441     		adc	r4, r4, r2
 4531 004e 3B63     		str	r3, [r7, #48]
 4532 0050 7C63     		str	r4, [r7, #52]
 4533              	.L278:
1278:Generated_Source\PSoC4/RTC_1.c ****     {
 4534              		.loc 2 1278 0 discriminator 2
 4535 0052 FB6B     		ldr	r3, [r7, #60]
 4536 0054 0133     		add	r3, r3, #1
 4537 0056 FB63     		str	r3, [r7, #60]
 4538              	.L276:
1278:Generated_Source\PSoC4/RTC_1.c ****     {
 4539              		.loc 2 1278 0 is_stmt 0 discriminator 1
 4540 0058 FA6B     		ldr	r2, [r7, #60]
 4541 005a FB6A     		ldr	r3, [r7, #44]
 4542 005c 9A42     		cmp	r2, r3
 4543 005e E1D3     		bcc	.L279
1287:Generated_Source\PSoC4/RTC_1.c ****         }
1288:Generated_Source\PSoC4/RTC_1.c ****     }
1289:Generated_Source\PSoC4/RTC_1.c **** 
1290:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds had elapsed in this year prior to the current month. */
1291:Generated_Source\PSoC4/RTC_1.c ****     tmpMonth = RTC_1_GetMonth(inputDate);
 4544              		.loc 2 1291 0 is_stmt 1
 4545 0060 7B6A     		ldr	r3, [r7, #36]
 4546 0062 181C     		mov	r0, r3
 4547 0064 FFF7FEFF 		bl	RTC_1_GetMonth
 4548 0068 031C     		mov	r3, r0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 125


 4549 006a BB62     		str	r3, [r7, #40]
1292:Generated_Source\PSoC4/RTC_1.c ****     tmpVal = RTC_1_daysBeforeMonthTbl[tmpMonth - 1u];
 4550              		.loc 2 1292 0
 4551 006c BB6A     		ldr	r3, [r7, #40]
 4552 006e 5A1E     		sub	r2, r3, #1
 4553 0070 444B     		ldr	r3, .L283+12
 4554 0072 5200     		lsl	r2, r2, #1
 4555 0074 D35A     		ldrh	r3, [r2, r3]
 4556 0076 BB63     		str	r3, [r7, #56]
1293:Generated_Source\PSoC4/RTC_1.c **** 
1294:Generated_Source\PSoC4/RTC_1.c ****     if((tmpMonth > 2u) && (0u != RTC_1_LeapYear(tmpYear)))
 4557              		.loc 2 1294 0
 4558 0078 BB6A     		ldr	r3, [r7, #40]
 4559 007a 022B     		cmp	r3, #2
 4560 007c 08D9     		bls	.L280
 4561              		.loc 2 1294 0 is_stmt 0 discriminator 1
 4562 007e FB6A     		ldr	r3, [r7, #44]
 4563 0080 181C     		mov	r0, r3
 4564 0082 FFF7FEFF 		bl	RTC_1_LeapYear
 4565 0086 031E     		sub	r3, r0, #0
 4566 0088 02D0     		beq	.L280
1295:Generated_Source\PSoC4/RTC_1.c ****     {
1296:Generated_Source\PSoC4/RTC_1.c ****         tmpVal++;
 4567              		.loc 2 1296 0 is_stmt 1
 4568 008a BB6B     		ldr	r3, [r7, #56]
 4569 008c 0133     		add	r3, r3, #1
 4570 008e BB63     		str	r3, [r7, #56]
 4571              	.L280:
1297:Generated_Source\PSoC4/RTC_1.c ****     }
1298:Generated_Source\PSoC4/RTC_1.c **** 
1299:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds are in current month days prior to today. */
1300:Generated_Source\PSoC4/RTC_1.c ****     unixTime += tmpVal * RTC_1_SECONDS_PER_DAY;
 4572              		.loc 2 1300 0
 4573 0090 BB6B     		ldr	r3, [r7, #56]
 4574 0092 3D4A     		ldr	r2, .L283+16
 4575 0094 5343     		mul	r3, r2
 4576 0096 BB61     		str	r3, [r7, #24]
 4577 0098 0023     		mov	r3, #0
 4578 009a FB61     		str	r3, [r7, #28]
 4579 009c 3B6B     		ldr	r3, [r7, #48]
 4580 009e 7C6B     		ldr	r4, [r7, #52]
 4581 00a0 B969     		ldr	r1, [r7, #24]
 4582 00a2 FA69     		ldr	r2, [r7, #28]
 4583 00a4 5B18     		add	r3, r3, r1
 4584 00a6 5441     		adc	r4, r4, r2
 4585 00a8 3B63     		str	r3, [r7, #48]
 4586 00aa 7C63     		str	r4, [r7, #52]
1301:Generated_Source\PSoC4/RTC_1.c ****     unixTime += (RTC_1_GetDay(inputDate) - 1u) * RTC_1_SECONDS_PER_DAY;
 4587              		.loc 2 1301 0
 4588 00ac 7B6A     		ldr	r3, [r7, #36]
 4589 00ae 181C     		mov	r0, r3
 4590 00b0 FFF7FEFF 		bl	RTC_1_GetDay
 4591 00b4 021C     		mov	r2, r0
 4592 00b6 344B     		ldr	r3, .L283+16
 4593 00b8 5343     		mul	r3, r2
 4594 00ba 344A     		ldr	r2, .L283+20
 4595 00bc 9446     		mov	ip, r2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 126


 4596 00be 6344     		add	r3, r3, ip
 4597 00c0 3B61     		str	r3, [r7, #16]
 4598 00c2 0023     		mov	r3, #0
 4599 00c4 7B61     		str	r3, [r7, #20]
 4600 00c6 3B6B     		ldr	r3, [r7, #48]
 4601 00c8 7C6B     		ldr	r4, [r7, #52]
 4602 00ca 3969     		ldr	r1, [r7, #16]
 4603 00cc 7A69     		ldr	r2, [r7, #20]
 4604 00ce 5B18     		add	r3, r3, r1
 4605 00d0 5441     		adc	r4, r4, r2
 4606 00d2 3B63     		str	r3, [r7, #48]
 4607 00d4 7C63     		str	r4, [r7, #52]
1302:Generated_Source\PSoC4/RTC_1.c **** 
1303:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds have elapsed today up to the current hour. */
1304:Generated_Source\PSoC4/RTC_1.c ****     tmpVal = RTC_1_GetHours(inputTime);
 4608              		.loc 2 1304 0
 4609 00d6 3B6A     		ldr	r3, [r7, #32]
 4610 00d8 181C     		mov	r0, r3
 4611 00da FFF7FEFF 		bl	RTC_1_GetHours
 4612 00de 031C     		mov	r3, r0
 4613 00e0 BB63     		str	r3, [r7, #56]
1305:Generated_Source\PSoC4/RTC_1.c ****     if(((uint32)RTC_1_24_HOURS_FORMAT != RTC_1_GetTimeFormat(inputTime)) &&
 4614              		.loc 2 1305 0
 4615 00e2 3B6A     		ldr	r3, [r7, #32]
 4616 00e4 181C     		mov	r0, r3
 4617 00e6 FFF7FEFF 		bl	RTC_1_GetTimeFormat
 4618 00ea 031E     		sub	r3, r0, #0
 4619 00ec 0BD0     		beq	.L281
1306:Generated_Source\PSoC4/RTC_1.c ****        ((uint32)RTC_1_AM != RTC_1_GetAmPm(inputTime)) && (tmpVal < 12u))
 4620              		.loc 2 1306 0 discriminator 1
 4621 00ee 3B6A     		ldr	r3, [r7, #32]
 4622 00f0 181C     		mov	r0, r3
 4623 00f2 FFF7FEFF 		bl	RTC_1_GetAmPm
 4624 00f6 031E     		sub	r3, r0, #0
1305:Generated_Source\PSoC4/RTC_1.c ****     if(((uint32)RTC_1_24_HOURS_FORMAT != RTC_1_GetTimeFormat(inputTime)) &&
 4625              		.loc 2 1305 0 discriminator 1
 4626 00f8 05D0     		beq	.L281
 4627              		.loc 2 1306 0
 4628 00fa BB6B     		ldr	r3, [r7, #56]
 4629 00fc 0B2B     		cmp	r3, #11
 4630 00fe 02D8     		bhi	.L281
1307:Generated_Source\PSoC4/RTC_1.c ****     {
1308:Generated_Source\PSoC4/RTC_1.c ****         tmpVal += RTC_1_HOURS_PER_HALF_DAY;
 4631              		.loc 2 1308 0
 4632 0100 BB6B     		ldr	r3, [r7, #56]
 4633 0102 0C33     		add	r3, r3, #12
 4634 0104 BB63     		str	r3, [r7, #56]
 4635              	.L281:
1309:Generated_Source\PSoC4/RTC_1.c ****     }
1310:Generated_Source\PSoC4/RTC_1.c ****     unixTime += tmpVal * RTC_1_SECONDS_PER_HOUR;
 4636              		.loc 2 1310 0
 4637 0106 BB6B     		ldr	r3, [r7, #56]
 4638 0108 E122     		mov	r2, #225
 4639 010a 1201     		lsl	r2, r2, #4
 4640 010c 5343     		mul	r3, r2
 4641 010e BB60     		str	r3, [r7, #8]
 4642 0110 0023     		mov	r3, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 127


 4643 0112 FB60     		str	r3, [r7, #12]
 4644 0114 3B6B     		ldr	r3, [r7, #48]
 4645 0116 7C6B     		ldr	r4, [r7, #52]
 4646 0118 B968     		ldr	r1, [r7, #8]
 4647 011a FA68     		ldr	r2, [r7, #12]
 4648 011c 5B18     		add	r3, r3, r1
 4649 011e 5441     		adc	r4, r4, r2
 4650 0120 3B63     		str	r3, [r7, #48]
 4651 0122 7C63     		str	r4, [r7, #52]
1311:Generated_Source\PSoC4/RTC_1.c **** 
1312:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates how many seconds have elapsed today up to the current minute. */
1313:Generated_Source\PSoC4/RTC_1.c ****     unixTime += RTC_1_GetMinutes(inputTime) * RTC_1_SECONDS_PER_MINUTE;
 4652              		.loc 2 1313 0
 4653 0124 3B6A     		ldr	r3, [r7, #32]
 4654 0126 181C     		mov	r0, r3
 4655 0128 FFF7FEFF 		bl	RTC_1_GetMinutes
 4656 012c 021C     		mov	r2, r0
 4657 012e 131C     		mov	r3, r2
 4658 0130 1B01     		lsl	r3, r3, #4
 4659 0132 9B1A     		sub	r3, r3, r2
 4660 0134 9B00     		lsl	r3, r3, #2
 4661 0136 3B60     		str	r3, [r7]
 4662 0138 0023     		mov	r3, #0
 4663 013a 7B60     		str	r3, [r7, #4]
 4664 013c 3B6B     		ldr	r3, [r7, #48]
 4665 013e 7C6B     		ldr	r4, [r7, #52]
 4666 0140 3968     		ldr	r1, [r7]
 4667 0142 7A68     		ldr	r2, [r7, #4]
 4668 0144 5B18     		add	r3, r3, r1
 4669 0146 5441     		adc	r4, r4, r2
 4670 0148 3B63     		str	r3, [r7, #48]
 4671 014a 7C63     		str	r4, [r7, #52]
1314:Generated_Source\PSoC4/RTC_1.c **** 
1315:Generated_Source\PSoC4/RTC_1.c ****     /* Add remaining seconds of current minute. */
1316:Generated_Source\PSoC4/RTC_1.c ****     unixTime += RTC_1_GetSecond(inputTime);
 4672              		.loc 2 1316 0
 4673 014c 3B6A     		ldr	r3, [r7, #32]
 4674 014e 181C     		mov	r0, r3
 4675 0150 FFF7FEFF 		bl	RTC_1_GetSecond
 4676 0154 031C     		mov	r3, r0
 4677 0156 1D1C     		mov	r5, r3
 4678 0158 0023     		mov	r3, #0
 4679 015a 1E1C     		mov	r6, r3
 4680 015c 3B6B     		ldr	r3, [r7, #48]
 4681 015e 7C6B     		ldr	r4, [r7, #52]
 4682 0160 5B19     		add	r3, r3, r5
 4683 0162 7441     		adc	r4, r4, r6
 4684 0164 3B63     		str	r3, [r7, #48]
 4685 0166 7C63     		str	r4, [r7, #52]
1317:Generated_Source\PSoC4/RTC_1.c **** 
1318:Generated_Source\PSoC4/RTC_1.c ****     return(unixTime);
 4686              		.loc 2 1318 0
 4687 0168 3B6B     		ldr	r3, [r7, #48]
 4688 016a 7C6B     		ldr	r4, [r7, #52]
1319:Generated_Source\PSoC4/RTC_1.c **** }
 4689              		.loc 2 1319 0
 4690 016c 181C     		mov	r0, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 128


 4691 016e 211C     		mov	r1, r4
 4692 0170 BD46     		mov	sp, r7
 4693 0172 11B0     		add	sp, sp, #68
 4694              		@ sp needed
 4695 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 4696              	.L284:
 4697 0176 C046     		.align	2
 4698              	.L283:
 4699 0178 B2070000 		.word	1970
 4700 017c 0085E201 		.word	31622400
 4701 0180 8033E101 		.word	31536000
 4702 0184 00000000 		.word	RTC_1_daysBeforeMonthTbl
 4703 0188 80510100 		.word	86400
 4704 018c 80AEFEFF 		.word	-86400
 4705              		.cfi_endproc
 4706              	.LFE55:
 4707              		.size	RTC_1_DateTimeToUnix, .-RTC_1_DateTimeToUnix
 4708              		.global	__aeabi_uldivmod
 4709              		.section	.text.RTC_1_UnixToDateTime,"ax",%progbits
 4710              		.align	2
 4711              		.global	RTC_1_UnixToDateTime
 4712              		.code	16
 4713              		.thumb_func
 4714              		.type	RTC_1_UnixToDateTime, %function
 4715              	RTC_1_UnixToDateTime:
 4716              	.LFB56:
1320:Generated_Source\PSoC4/RTC_1.c **** 
1321:Generated_Source\PSoC4/RTC_1.c **** 
1322:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1323:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_UnixToDateTime
1324:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1325:Generated_Source\PSoC4/RTC_1.c **** *
1326:Generated_Source\PSoC4/RTC_1.c **** * \brief
1327:Generated_Source\PSoC4/RTC_1.c **** *  This is an internal function to convert the date and time from
1328:Generated_Source\PSoC4/RTC_1.c **** *  the UNIX time format into the regular time format.
1329:Generated_Source\PSoC4/RTC_1.c **** *
1330:Generated_Source\PSoC4/RTC_1.c **** * \param dayOfWeek A day of a week <br>
1331:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SUNDAY <br>
1332:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_MONDAY <br>
1333:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_TUESDAY <br>
1334:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_WEDNESDAY <br>
1335:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THURSDAY <br>
1336:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FRIDAY <br>
1337:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SATURDAY <br>
1338:Generated_Source\PSoC4/RTC_1.c **** *
1339:Generated_Source\PSoC4/RTC_1.c **** * \param weekOfMonth A week of a month <br>
1340:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FIRST <br>
1341:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SECOND <br>
1342:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THIRD <br>
1343:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FOURTH <br>
1344:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_LAST <br>
1345:Generated_Source\PSoC4/RTC_1.c **** *
1346:Generated_Source\PSoC4/RTC_1.c **** * \param month A month of a year <br>
1347:Generated_Source\PSoC4/RTC_1.c **** *                   RTC_1_JANUARY <br>
1348:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_FEBRUARY <br>
1349:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MARCH <br>
1350:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_APRIL <br>
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 129


1351:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MAY <br>
1352:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JUNE <br>
1353:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JULY <br>
1354:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_AUGUST <br>
1355:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_SEPTEMBER <br>
1356:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_OCTOBER <br>
1357:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_NOVEMBER <br>
1358:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_DECEMBER <br>
1359:Generated_Source\PSoC4/RTC_1.c **** *
1360:Generated_Source\PSoC4/RTC_1.c **** * \param year A year value.
1361:Generated_Source\PSoC4/RTC_1.c **** *
1362:Generated_Source\PSoC4/RTC_1.c **** * \return A date in the "date format".
1363:Generated_Source\PSoC4/RTC_1.c **** *
1364:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/RTC_1.c **** void RTC_1_UnixToDateTime(RTC_1_DATE_TIME* dateTime, uint64 unixTime, uint32 timeFormat)
1366:Generated_Source\PSoC4/RTC_1.c **** {
 4717              		.loc 2 1366 0
 4718              		.cfi_startproc
 4719 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4720              		.cfi_def_cfa_offset 20
 4721              		.cfi_offset 4, -20
 4722              		.cfi_offset 5, -16
 4723              		.cfi_offset 6, -12
 4724              		.cfi_offset 7, -8
 4725              		.cfi_offset 14, -4
 4726 0002 A1B0     		sub	sp, sp, #132
 4727              		.cfi_def_cfa_offset 152
 4728 0004 02AF     		add	r7, sp, #8
 4729              		.cfi_def_cfa 7, 144
 4730 0006 7865     		str	r0, [r7, #84]
 4731 0008 BA64     		str	r2, [r7, #72]
 4732 000a FB64     		str	r3, [r7, #76]
1367:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMinute;
1368:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpHour;
1369:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpAmPmState;
1370:Generated_Source\PSoC4/RTC_1.c **** 
1371:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpDay;
1372:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpMonth;
1373:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpYear;
1374:Generated_Source\PSoC4/RTC_1.c **** 
1375:Generated_Source\PSoC4/RTC_1.c ****     uint32 tmpVar;
1376:Generated_Source\PSoC4/RTC_1.c **** 
1377:Generated_Source\PSoC4/RTC_1.c ****     tmpAmPmState = 0u;
 4733              		.loc 2 1377 0
 4734 000c 0023     		mov	r3, #0
 4735 000e 3B67     		str	r3, [r7, #112]
1378:Generated_Source\PSoC4/RTC_1.c ****     tmpYear = RTC_1_YEAR_0;
 4736              		.loc 2 1378 0
 4737 0010 A14B     		ldr	r3, .L315
 4738 0012 BB66     		str	r3, [r7, #104]
1379:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = RTC_1_SECONDS_PER_NONLEAP_YEAR;
 4739              		.loc 2 1379 0
 4740 0014 A14B     		ldr	r3, .L315+4
 4741 0016 7B66     		str	r3, [r7, #100]
1380:Generated_Source\PSoC4/RTC_1.c **** 
1381:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current year value. Variable tmpYear
1382:Generated_Source\PSoC4/RTC_1.c ****     *  increments while it contains value greater than number
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 130


1383:Generated_Source\PSoC4/RTC_1.c ****     *  of seconds in current year.
1384:Generated_Source\PSoC4/RTC_1.c ****     */
1385:Generated_Source\PSoC4/RTC_1.c ****     while(unixTime > tmpVar)
 4742              		.loc 2 1385 0
 4743 0018 19E0     		b	.L286
 4744              	.L288:
1386:Generated_Source\PSoC4/RTC_1.c ****     {
1387:Generated_Source\PSoC4/RTC_1.c ****         unixTime -= tmpVar;
 4745              		.loc 2 1387 0
 4746 001a 7B6E     		ldr	r3, [r7, #100]
 4747 001c BB60     		str	r3, [r7, #8]
 4748 001e 0023     		mov	r3, #0
 4749 0020 FB60     		str	r3, [r7, #12]
 4750 0022 BB6C     		ldr	r3, [r7, #72]
 4751 0024 FC6C     		ldr	r4, [r7, #76]
 4752 0026 B968     		ldr	r1, [r7, #8]
 4753 0028 FA68     		ldr	r2, [r7, #12]
 4754 002a 5B1A     		sub	r3, r3, r1
 4755 002c 9441     		sbc	r4, r4, r2
 4756 002e BB64     		str	r3, [r7, #72]
 4757 0030 FC64     		str	r4, [r7, #76]
1388:Generated_Source\PSoC4/RTC_1.c ****         tmpYear++;
 4758              		.loc 2 1388 0
 4759 0032 BB6E     		ldr	r3, [r7, #104]
 4760 0034 0133     		add	r3, r3, #1
 4761 0036 BB66     		str	r3, [r7, #104]
1389:Generated_Source\PSoC4/RTC_1.c **** 
1390:Generated_Source\PSoC4/RTC_1.c ****         if(0u != RTC_1_LeapYear(tmpYear))
 4762              		.loc 2 1390 0
 4763 0038 BB6E     		ldr	r3, [r7, #104]
 4764 003a 181C     		mov	r0, r3
 4765 003c FFF7FEFF 		bl	RTC_1_LeapYear
 4766 0040 031E     		sub	r3, r0, #0
 4767 0042 02D0     		beq	.L287
1391:Generated_Source\PSoC4/RTC_1.c ****         {
1392:Generated_Source\PSoC4/RTC_1.c ****             tmpVar = RTC_1_SECONDS_PER_LEAP_YEAR;
 4768              		.loc 2 1392 0
 4769 0044 964B     		ldr	r3, .L315+8
 4770 0046 7B66     		str	r3, [r7, #100]
 4771 0048 01E0     		b	.L286
 4772              	.L287:
1393:Generated_Source\PSoC4/RTC_1.c ****         }
1394:Generated_Source\PSoC4/RTC_1.c ****         else
1395:Generated_Source\PSoC4/RTC_1.c ****         {
1396:Generated_Source\PSoC4/RTC_1.c ****             tmpVar = RTC_1_SECONDS_PER_NONLEAP_YEAR;
 4773              		.loc 2 1396 0
 4774 004a 944B     		ldr	r3, .L315+4
 4775 004c 7B66     		str	r3, [r7, #100]
 4776              	.L286:
1385:Generated_Source\PSoC4/RTC_1.c ****     {
 4777              		.loc 2 1385 0
 4778 004e 7B6E     		ldr	r3, [r7, #100]
 4779 0050 1D1C     		mov	r5, r3
 4780 0052 0023     		mov	r3, #0
 4781 0054 1E1C     		mov	r6, r3
 4782 0056 FB6C     		ldr	r3, [r7, #76]
 4783 0058 B342     		cmp	r3, r6
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 131


 4784 005a DED8     		bhi	.L288
 4785 005c FB6C     		ldr	r3, [r7, #76]
 4786 005e B342     		cmp	r3, r6
 4787 0060 02D1     		bne	.L309
 4788 0062 BB6C     		ldr	r3, [r7, #72]
 4789 0064 AB42     		cmp	r3, r5
 4790 0066 D8D8     		bhi	.L288
 4791              	.L309:
1397:Generated_Source\PSoC4/RTC_1.c ****         }
1398:Generated_Source\PSoC4/RTC_1.c **** 
1399:Generated_Source\PSoC4/RTC_1.c ****     }
1400:Generated_Source\PSoC4/RTC_1.c **** 
1401:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current month value. tmpMonth variable increments
1402:Generated_Source\PSoC4/RTC_1.c ****      * while unixTime variable value is greater than time
1403:Generated_Source\PSoC4/RTC_1.c ****      * interval from beginning of current year to beginning of
1404:Generated_Source\PSoC4/RTC_1.c ****      * current month
1405:Generated_Source\PSoC4/RTC_1.c ****     */
1406:Generated_Source\PSoC4/RTC_1.c ****     tmpMonth = (uint32)RTC_1_JANUARY;
 4792              		.loc 2 1406 0
 4793 0068 0123     		mov	r3, #1
 4794 006a FB66     		str	r3, [r7, #108]
1407:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = RTC_1_DaysInMonth(tmpMonth, tmpYear) * RTC_1_SECONDS_PER_DAY;
 4795              		.loc 2 1407 0
 4796 006c FA6E     		ldr	r2, [r7, #108]
 4797 006e BB6E     		ldr	r3, [r7, #104]
 4798 0070 101C     		mov	r0, r2
 4799 0072 191C     		mov	r1, r3
 4800 0074 FFF7FEFF 		bl	RTC_1_DaysInMonth
 4801 0078 021C     		mov	r2, r0
 4802 007a 8A4B     		ldr	r3, .L315+12
 4803 007c 5343     		mul	r3, r2
 4804 007e 7B66     		str	r3, [r7, #100]
1408:Generated_Source\PSoC4/RTC_1.c **** 
1409:Generated_Source\PSoC4/RTC_1.c ****     while(unixTime >= tmpVar)
 4805              		.loc 2 1409 0
 4806 0080 18E0     		b	.L290
 4807              	.L291:
1410:Generated_Source\PSoC4/RTC_1.c ****     {
1411:Generated_Source\PSoC4/RTC_1.c ****         unixTime -= tmpVar;
 4808              		.loc 2 1411 0
 4809 0082 7B6E     		ldr	r3, [r7, #100]
 4810 0084 3B60     		str	r3, [r7]
 4811 0086 0023     		mov	r3, #0
 4812 0088 7B60     		str	r3, [r7, #4]
 4813 008a BB6C     		ldr	r3, [r7, #72]
 4814 008c FC6C     		ldr	r4, [r7, #76]
 4815 008e 3968     		ldr	r1, [r7]
 4816 0090 7A68     		ldr	r2, [r7, #4]
 4817 0092 5B1A     		sub	r3, r3, r1
 4818 0094 9441     		sbc	r4, r4, r2
 4819 0096 BB64     		str	r3, [r7, #72]
 4820 0098 FC64     		str	r4, [r7, #76]
1412:Generated_Source\PSoC4/RTC_1.c ****         tmpMonth++;
 4821              		.loc 2 1412 0
 4822 009a FB6E     		ldr	r3, [r7, #108]
 4823 009c 0133     		add	r3, r3, #1
 4824 009e FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 132


1413:Generated_Source\PSoC4/RTC_1.c ****         tmpVar = RTC_1_DaysInMonth(tmpMonth, tmpYear) * RTC_1_SECONDS_PER_DAY;
 4825              		.loc 2 1413 0
 4826 00a0 FA6E     		ldr	r2, [r7, #108]
 4827 00a2 BB6E     		ldr	r3, [r7, #104]
 4828 00a4 101C     		mov	r0, r2
 4829 00a6 191C     		mov	r1, r3
 4830 00a8 FFF7FEFF 		bl	RTC_1_DaysInMonth
 4831 00ac 021C     		mov	r2, r0
 4832 00ae 7D4B     		ldr	r3, .L315+12
 4833 00b0 5343     		mul	r3, r2
 4834 00b2 7B66     		str	r3, [r7, #100]
 4835              	.L290:
1409:Generated_Source\PSoC4/RTC_1.c ****     {
 4836              		.loc 2 1409 0
 4837 00b4 7B6E     		ldr	r3, [r7, #100]
 4838 00b6 3B64     		str	r3, [r7, #64]
 4839 00b8 0023     		mov	r3, #0
 4840 00ba 7B64     		str	r3, [r7, #68]
 4841 00bc FB6C     		ldr	r3, [r7, #76]
 4842 00be 7A6C     		ldr	r2, [r7, #68]
 4843 00c0 9342     		cmp	r3, r2
 4844 00c2 07D3     		bcc	.L310
 4845 00c4 FB6C     		ldr	r3, [r7, #76]
 4846 00c6 7A6C     		ldr	r2, [r7, #68]
 4847 00c8 9342     		cmp	r3, r2
 4848 00ca DAD1     		bne	.L291
 4849 00cc BB6C     		ldr	r3, [r7, #72]
 4850 00ce 3A6C     		ldr	r2, [r7, #64]
 4851 00d0 9342     		cmp	r3, r2
 4852 00d2 D6D2     		bcs	.L291
 4853              	.L310:
1414:Generated_Source\PSoC4/RTC_1.c ****     }
1415:Generated_Source\PSoC4/RTC_1.c **** 
1416:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current day value. */
1417:Generated_Source\PSoC4/RTC_1.c ****     tmpDay = (unixTime / RTC_1_SECONDS_PER_DAY);
 4854              		.loc 2 1417 0
 4855 00d4 BB6C     		ldr	r3, [r7, #72]
 4856 00d6 FC6C     		ldr	r4, [r7, #76]
 4857 00d8 181C     		mov	r0, r3
 4858 00da 211C     		mov	r1, r4
 4859 00dc 714A     		ldr	r2, .L315+12
 4860 00de 0023     		mov	r3, #0
 4861 00e0 FFF7FEFF 		bl	__aeabi_uldivmod
 4862 00e4 031C     		mov	r3, r0
 4863 00e6 0C1C     		mov	r4, r1
 4864 00e8 3B66     		str	r3, [r7, #96]
1418:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = tmpDay * RTC_1_SECONDS_PER_DAY;
 4865              		.loc 2 1418 0
 4866 00ea 3A6E     		ldr	r2, [r7, #96]
 4867 00ec 6D4B     		ldr	r3, .L315+12
 4868 00ee 5343     		mul	r3, r2
 4869 00f0 7B66     		str	r3, [r7, #100]
1419:Generated_Source\PSoC4/RTC_1.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 4870              		.loc 2 1419 0
 4871 00f2 7B6E     		ldr	r3, [r7, #100]
 4872 00f4 BB63     		str	r3, [r7, #56]
 4873 00f6 0023     		mov	r3, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 133


 4874 00f8 FB63     		str	r3, [r7, #60]
 4875 00fa FB6C     		ldr	r3, [r7, #76]
 4876 00fc FA6B     		ldr	r2, [r7, #60]
 4877 00fe 9342     		cmp	r3, r2
 4878 0100 0CD3     		bcc	.L293
 4879 0102 FB6C     		ldr	r3, [r7, #76]
 4880 0104 FA6B     		ldr	r2, [r7, #60]
 4881 0106 9342     		cmp	r3, r2
 4882 0108 03D1     		bne	.L311
 4883 010a BB6C     		ldr	r3, [r7, #72]
 4884 010c BA6B     		ldr	r2, [r7, #56]
 4885 010e 9342     		cmp	r3, r2
 4886 0110 04D3     		bcc	.L293
 4887              	.L311:
 4888              		.loc 2 1419 0 is_stmt 0 discriminator 1
 4889 0112 7B6E     		ldr	r3, [r7, #100]
 4890 0114 3B62     		str	r3, [r7, #32]
 4891 0116 0023     		mov	r3, #0
 4892 0118 7B62     		str	r3, [r7, #36]
 4893 011a 03E0     		b	.L295
 4894              	.L293:
 4895              		.loc 2 1419 0 discriminator 2
 4896 011c 0023     		mov	r3, #0
 4897 011e 0024     		mov	r4, #0
 4898 0120 3B62     		str	r3, [r7, #32]
 4899 0122 7C62     		str	r4, [r7, #36]
 4900              	.L295:
 4901              		.loc 2 1419 0 discriminator 4
 4902 0124 BB6C     		ldr	r3, [r7, #72]
 4903 0126 FC6C     		ldr	r4, [r7, #76]
 4904 0128 396A     		ldr	r1, [r7, #32]
 4905 012a 7A6A     		ldr	r2, [r7, #36]
 4906 012c 5B1A     		sub	r3, r3, r1
 4907 012e 9441     		sbc	r4, r4, r2
 4908 0130 BB64     		str	r3, [r7, #72]
 4909 0132 FC64     		str	r4, [r7, #76]
1420:Generated_Source\PSoC4/RTC_1.c ****     tmpDay += 1u;
 4910              		.loc 2 1420 0 is_stmt 1 discriminator 4
 4911 0134 3B6E     		ldr	r3, [r7, #96]
 4912 0136 0133     		add	r3, r3, #1
 4913 0138 3B66     		str	r3, [r7, #96]
1421:Generated_Source\PSoC4/RTC_1.c **** 
1422:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current hour value. If function works in 12-Hour mode,
1423:Generated_Source\PSoC4/RTC_1.c ****      * it converts time to 12-Hours mode and calculates AmPm status */
1424:Generated_Source\PSoC4/RTC_1.c ****     tmpHour = unixTime / RTC_1_SECONDS_PER_HOUR;
 4914              		.loc 2 1424 0 discriminator 4
 4915 013a BB6C     		ldr	r3, [r7, #72]
 4916 013c FC6C     		ldr	r4, [r7, #76]
 4917 013e 181C     		mov	r0, r3
 4918 0140 211C     		mov	r1, r4
 4919 0142 E122     		mov	r2, #225
 4920 0144 1201     		lsl	r2, r2, #4
 4921 0146 0023     		mov	r3, #0
 4922 0148 FFF7FEFF 		bl	__aeabi_uldivmod
 4923 014c 031C     		mov	r3, r0
 4924 014e 0C1C     		mov	r4, r1
 4925 0150 7B67     		str	r3, [r7, #116]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 134


1425:Generated_Source\PSoC4/RTC_1.c ****     tmpVar  = tmpHour * RTC_1_SECONDS_PER_HOUR;
 4926              		.loc 2 1425 0 discriminator 4
 4927 0152 7B6F     		ldr	r3, [r7, #116]
 4928 0154 E122     		mov	r2, #225
 4929 0156 1201     		lsl	r2, r2, #4
 4930 0158 5343     		mul	r3, r2
 4931 015a 7B66     		str	r3, [r7, #100]
1426:Generated_Source\PSoC4/RTC_1.c ****     if((uint32)RTC_1_24_HOURS_FORMAT != timeFormat)
 4932              		.loc 2 1426 0 discriminator 4
 4933 015c 9023     		mov	r3, #144
 4934 015e FB18     		add	r3, r7, r3
 4935 0160 1B68     		ldr	r3, [r3]
 4936 0162 002B     		cmp	r3, #0
 4937 0164 1DD0     		beq	.L296
1427:Generated_Source\PSoC4/RTC_1.c ****     {
1428:Generated_Source\PSoC4/RTC_1.c ****         if(unixTime > RTC_1_UNIX_TIME_PM)
 4938              		.loc 2 1428 0
 4939 0166 FB6C     		ldr	r3, [r7, #76]
 4940 0168 002B     		cmp	r3, #0
 4941 016a 06D1     		bne	.L312
 4942 016c FB6C     		ldr	r3, [r7, #76]
 4943 016e 002B     		cmp	r3, #0
 4944 0170 0ED1     		bne	.L297
 4945 0172 BB6C     		ldr	r3, [r7, #72]
 4946 0174 4C4A     		ldr	r2, .L315+16
 4947 0176 9342     		cmp	r3, r2
 4948 0178 0AD9     		bls	.L297
 4949              	.L312:
1429:Generated_Source\PSoC4/RTC_1.c ****         {
1430:Generated_Source\PSoC4/RTC_1.c ****             tmpAmPmState = RTC_1_PM;
 4950              		.loc 2 1430 0
 4951 017a 0123     		mov	r3, #1
 4952 017c 3B67     		str	r3, [r7, #112]
1431:Generated_Source\PSoC4/RTC_1.c ****             tmpHour = (tmpHour > 12u) ? (tmpHour - 12u) : tmpHour;
 4953              		.loc 2 1431 0
 4954 017e 7B6F     		ldr	r3, [r7, #116]
 4955 0180 0C2B     		cmp	r3, #12
 4956 0182 02D9     		bls	.L299
 4957              		.loc 2 1431 0 is_stmt 0 discriminator 1
 4958 0184 7B6F     		ldr	r3, [r7, #116]
 4959 0186 0C3B     		sub	r3, r3, #12
 4960 0188 00E0     		b	.L300
 4961              	.L299:
 4962              		.loc 2 1431 0 discriminator 2
 4963 018a 7B6F     		ldr	r3, [r7, #116]
 4964              	.L300:
 4965              		.loc 2 1431 0 discriminator 4
 4966 018c 7B67     		str	r3, [r7, #116]
 4967 018e 08E0     		b	.L296
 4968              	.L297:
1432:Generated_Source\PSoC4/RTC_1.c ****         }
1433:Generated_Source\PSoC4/RTC_1.c ****         else
1434:Generated_Source\PSoC4/RTC_1.c ****         {
1435:Generated_Source\PSoC4/RTC_1.c ****             tmpAmPmState = RTC_1_AM;
 4969              		.loc 2 1435 0 is_stmt 1
 4970 0190 0023     		mov	r3, #0
 4971 0192 3B67     		str	r3, [r7, #112]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 135


1436:Generated_Source\PSoC4/RTC_1.c ****             tmpHour = (0u != tmpHour) ? tmpHour : 12u;
 4972              		.loc 2 1436 0
 4973 0194 7B6F     		ldr	r3, [r7, #116]
 4974 0196 002B     		cmp	r3, #0
 4975 0198 01D0     		beq	.L301
 4976              		.loc 2 1436 0 is_stmt 0 discriminator 1
 4977 019a 7B6F     		ldr	r3, [r7, #116]
 4978 019c 00E0     		b	.L302
 4979              	.L301:
 4980              		.loc 2 1436 0 discriminator 2
 4981 019e 0C23     		mov	r3, #12
 4982              	.L302:
 4983              		.loc 2 1436 0 discriminator 4
 4984 01a0 7B67     		str	r3, [r7, #116]
 4985              	.L296:
1437:Generated_Source\PSoC4/RTC_1.c ****         }
1438:Generated_Source\PSoC4/RTC_1.c ****     }
1439:Generated_Source\PSoC4/RTC_1.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 4986              		.loc 2 1439 0 is_stmt 1
 4987 01a2 7B6E     		ldr	r3, [r7, #100]
 4988 01a4 3B63     		str	r3, [r7, #48]
 4989 01a6 0023     		mov	r3, #0
 4990 01a8 7B63     		str	r3, [r7, #52]
 4991 01aa FB6C     		ldr	r3, [r7, #76]
 4992 01ac 7A6B     		ldr	r2, [r7, #52]
 4993 01ae 9342     		cmp	r3, r2
 4994 01b0 0CD3     		bcc	.L303
 4995 01b2 FB6C     		ldr	r3, [r7, #76]
 4996 01b4 7A6B     		ldr	r2, [r7, #52]
 4997 01b6 9342     		cmp	r3, r2
 4998 01b8 03D1     		bne	.L313
 4999 01ba BB6C     		ldr	r3, [r7, #72]
 5000 01bc 3A6B     		ldr	r2, [r7, #48]
 5001 01be 9342     		cmp	r3, r2
 5002 01c0 04D3     		bcc	.L303
 5003              	.L313:
 5004              		.loc 2 1439 0 is_stmt 0 discriminator 1
 5005 01c2 7B6E     		ldr	r3, [r7, #100]
 5006 01c4 BB61     		str	r3, [r7, #24]
 5007 01c6 0023     		mov	r3, #0
 5008 01c8 FB61     		str	r3, [r7, #28]
 5009 01ca 03E0     		b	.L305
 5010              	.L303:
 5011              		.loc 2 1439 0 discriminator 2
 5012 01cc 0023     		mov	r3, #0
 5013 01ce 0024     		mov	r4, #0
 5014 01d0 BB61     		str	r3, [r7, #24]
 5015 01d2 FC61     		str	r4, [r7, #28]
 5016              	.L305:
 5017              		.loc 2 1439 0 discriminator 4
 5018 01d4 BB6C     		ldr	r3, [r7, #72]
 5019 01d6 FC6C     		ldr	r4, [r7, #76]
 5020 01d8 B969     		ldr	r1, [r7, #24]
 5021 01da FA69     		ldr	r2, [r7, #28]
 5022 01dc 5B1A     		sub	r3, r3, r1
 5023 01de 9441     		sbc	r4, r4, r2
 5024 01e0 BB64     		str	r3, [r7, #72]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 136


 5025 01e2 FC64     		str	r4, [r7, #76]
1440:Generated_Source\PSoC4/RTC_1.c **** 
1441:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current minute.  */
1442:Generated_Source\PSoC4/RTC_1.c ****     tmpMinute = unixTime / RTC_1_SECONDS_PER_MINUTE;
 5026              		.loc 2 1442 0 is_stmt 1 discriminator 4
 5027 01e4 BB6C     		ldr	r3, [r7, #72]
 5028 01e6 FC6C     		ldr	r4, [r7, #76]
 5029 01e8 181C     		mov	r0, r3
 5030 01ea 211C     		mov	r1, r4
 5031 01ec 3C22     		mov	r2, #60
 5032 01ee 0023     		mov	r3, #0
 5033 01f0 FFF7FEFF 		bl	__aeabi_uldivmod
 5034 01f4 031C     		mov	r3, r0
 5035 01f6 0C1C     		mov	r4, r1
 5036 01f8 FB65     		str	r3, [r7, #92]
1443:Generated_Source\PSoC4/RTC_1.c ****     tmpVar = tmpMinute * RTC_1_SECONDS_PER_MINUTE;
 5037              		.loc 2 1443 0 discriminator 4
 5038 01fa FA6D     		ldr	r2, [r7, #92]
 5039 01fc 131C     		mov	r3, r2
 5040 01fe 1B01     		lsl	r3, r3, #4
 5041 0200 9B1A     		sub	r3, r3, r2
 5042 0202 9B00     		lsl	r3, r3, #2
 5043 0204 7B66     		str	r3, [r7, #100]
1444:Generated_Source\PSoC4/RTC_1.c **** 
1445:Generated_Source\PSoC4/RTC_1.c ****     /* Calculates current second. */
1446:Generated_Source\PSoC4/RTC_1.c ****     unixTime -= (unixTime >= tmpVar) ? tmpVar : 0u;
 5044              		.loc 2 1446 0 discriminator 4
 5045 0206 7B6E     		ldr	r3, [r7, #100]
 5046 0208 BB62     		str	r3, [r7, #40]
 5047 020a 0023     		mov	r3, #0
 5048 020c FB62     		str	r3, [r7, #44]
 5049 020e FB6C     		ldr	r3, [r7, #76]
 5050 0210 FA6A     		ldr	r2, [r7, #44]
 5051 0212 9342     		cmp	r3, r2
 5052 0214 0CD3     		bcc	.L306
 5053 0216 FB6C     		ldr	r3, [r7, #76]
 5054 0218 FA6A     		ldr	r2, [r7, #44]
 5055 021a 9342     		cmp	r3, r2
 5056 021c 03D1     		bne	.L314
 5057 021e BB6C     		ldr	r3, [r7, #72]
 5058 0220 BA6A     		ldr	r2, [r7, #40]
 5059 0222 9342     		cmp	r3, r2
 5060 0224 04D3     		bcc	.L306
 5061              	.L314:
 5062              		.loc 2 1446 0 is_stmt 0 discriminator 1
 5063 0226 7B6E     		ldr	r3, [r7, #100]
 5064 0228 3B61     		str	r3, [r7, #16]
 5065 022a 0023     		mov	r3, #0
 5066 022c 7B61     		str	r3, [r7, #20]
 5067 022e 03E0     		b	.L308
 5068              	.L306:
 5069              		.loc 2 1446 0 discriminator 2
 5070 0230 0023     		mov	r3, #0
 5071 0232 0024     		mov	r4, #0
 5072 0234 3B61     		str	r3, [r7, #16]
 5073 0236 7C61     		str	r4, [r7, #20]
 5074              	.L308:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 137


 5075              		.loc 2 1446 0 discriminator 4
 5076 0238 BB6C     		ldr	r3, [r7, #72]
 5077 023a FC6C     		ldr	r4, [r7, #76]
 5078 023c 3969     		ldr	r1, [r7, #16]
 5079 023e 7A69     		ldr	r2, [r7, #20]
 5080 0240 5B1A     		sub	r3, r3, r1
 5081 0242 9441     		sbc	r4, r4, r2
 5082 0244 BB64     		str	r3, [r7, #72]
 5083 0246 FC64     		str	r4, [r7, #76]
1447:Generated_Source\PSoC4/RTC_1.c **** 
1448:Generated_Source\PSoC4/RTC_1.c **** 
1449:Generated_Source\PSoC4/RTC_1.c ****     dateTime->date = RTC_1_ConstructDate(tmpMonth, tmpDay, tmpYear);
 5084              		.loc 2 1449 0 is_stmt 1 discriminator 4
 5085 0248 F96E     		ldr	r1, [r7, #108]
 5086 024a 3A6E     		ldr	r2, [r7, #96]
 5087 024c BB6E     		ldr	r3, [r7, #104]
 5088 024e 081C     		mov	r0, r1
 5089 0250 111C     		mov	r1, r2
 5090 0252 1A1C     		mov	r2, r3
 5091 0254 FFF7FEFF 		bl	RTC_1_ConstructDate
 5092 0258 021C     		mov	r2, r0
 5093 025a 7B6D     		ldr	r3, [r7, #84]
 5094 025c 5A60     		str	r2, [r3, #4]
1450:Generated_Source\PSoC4/RTC_1.c ****     dateTime->time = RTC_1_ConstructTime(timeFormat, tmpAmPmState, tmpHour, tmpMinute, unixTime);
 5095              		.loc 2 1450 0 discriminator 4
 5096 025e BB6C     		ldr	r3, [r7, #72]
 5097 0260 9022     		mov	r2, #144
 5098 0262 BA18     		add	r2, r7, r2
 5099 0264 1068     		ldr	r0, [r2]
 5100 0266 396F     		ldr	r1, [r7, #112]
 5101 0268 7A6F     		ldr	r2, [r7, #116]
 5102 026a FC6D     		ldr	r4, [r7, #92]
 5103 026c 0093     		str	r3, [sp]
 5104 026e 231C     		mov	r3, r4
 5105 0270 FFF7FEFF 		bl	RTC_1_ConstructTime
 5106 0274 021C     		mov	r2, r0
 5107 0276 7B6D     		ldr	r3, [r7, #84]
 5108 0278 1A60     		str	r2, [r3]
1451:Generated_Source\PSoC4/RTC_1.c ****     dateTime->dayOfWeek = RTC_1_GetDayOfWeek(tmpDay, tmpMonth, tmpYear);
 5109              		.loc 2 1451 0 discriminator 4
 5110 027a 396E     		ldr	r1, [r7, #96]
 5111 027c FA6E     		ldr	r2, [r7, #108]
 5112 027e BB6E     		ldr	r3, [r7, #104]
 5113 0280 081C     		mov	r0, r1
 5114 0282 111C     		mov	r1, r2
 5115 0284 1A1C     		mov	r2, r3
 5116 0286 FFF7FEFF 		bl	RTC_1_GetDayOfWeek
 5117 028a 021C     		mov	r2, r0
 5118 028c 7B6D     		ldr	r3, [r7, #84]
 5119 028e 9A60     		str	r2, [r3, #8]
1452:Generated_Source\PSoC4/RTC_1.c **** }
 5120              		.loc 2 1452 0 discriminator 4
 5121 0290 BD46     		mov	sp, r7
 5122 0292 1FB0     		add	sp, sp, #124
 5123              		@ sp needed
 5124 0294 F0BD     		pop	{r4, r5, r6, r7, pc}
 5125              	.L316:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 138


 5126 0296 C046     		.align	2
 5127              	.L315:
 5128 0298 B2070000 		.word	1970
 5129 029c 8033E101 		.word	31536000
 5130 02a0 0085E201 		.word	31622400
 5131 02a4 80510100 		.word	86400
 5132 02a8 C1A80000 		.word	43201
 5133              		.cfi_endproc
 5134              	.LFE56:
 5135              		.size	RTC_1_UnixToDateTime, .-RTC_1_UnixToDateTime
 5136              		.section	.text.RTC_1_RelativeToFixed,"ax",%progbits
 5137              		.align	2
 5138              		.global	RTC_1_RelativeToFixed
 5139              		.code	16
 5140              		.thumb_func
 5141              		.type	RTC_1_RelativeToFixed, %function
 5142              	RTC_1_RelativeToFixed:
 5143              	.LFB57:
1453:Generated_Source\PSoC4/RTC_1.c **** 
1454:Generated_Source\PSoC4/RTC_1.c **** 
1455:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1456:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_RelativeToFixed
1457:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1458:Generated_Source\PSoC4/RTC_1.c **** *
1459:Generated_Source\PSoC4/RTC_1.c **** * \brief
1460:Generated_Source\PSoC4/RTC_1.c **** * This is an internal function to convert a relative date into
1461:Generated_Source\PSoC4/RTC_1.c **** * a fixed date.
1462:Generated_Source\PSoC4/RTC_1.c **** *
1463:Generated_Source\PSoC4/RTC_1.c **** * \param dayOfWeek A day of a week <br>
1464:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SUNDAY <br>
1465:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_MONDAY <br>
1466:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_TUESDAY <br>
1467:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_WEDNESDAY <br>
1468:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THURSDAY <br>
1469:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FRIDAY <br>
1470:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SATURDAY <br>
1471:Generated_Source\PSoC4/RTC_1.c **** *
1472:Generated_Source\PSoC4/RTC_1.c **** *  \param weekOfMonth A week of a month <br>
1473:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FIRST <br>
1474:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_SECOND <br>
1475:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_THIRD <br>
1476:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FOURTH <br>
1477:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_FIFTH <br>
1478:Generated_Source\PSoC4/RTC_1.c **** *                 RTC_1_LAST <br>
1479:Generated_Source\PSoC4/RTC_1.c **** *
1480:Generated_Source\PSoC4/RTC_1.c **** * \param month A month of a year <br>
1481:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JANUARY <br>
1482:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_FEBRUARY <br>
1483:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MARCH <br>
1484:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_APRIL <br>
1485:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_MAY <br>
1486:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JUNE <br>
1487:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_JULY <br>
1488:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_AUGUST <br>
1489:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_SEPTEMBER <br>
1490:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_OCTOBER <br>
1491:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_NOVEMBER <br>
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 139


1492:Generated_Source\PSoC4/RTC_1.c **** *                  RTC_1_DECEMBER <br>
1493:Generated_Source\PSoC4/RTC_1.c **** *
1494:Generated_Source\PSoC4/RTC_1.c **** * \param year A year value.
1495:Generated_Source\PSoC4/RTC_1.c **** *
1496:Generated_Source\PSoC4/RTC_1.c **** * \return A date in the "date format".
1497:Generated_Source\PSoC4/RTC_1.c **** *
1498:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1499:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_RelativeToFixed(uint32 dayOfWeek, uint32 weekOfMonth, uint32 month, uint32 year)
1500:Generated_Source\PSoC4/RTC_1.c **** {
 5144              		.loc 2 1500 0
 5145              		.cfi_startproc
 5146 0000 80B5     		push	{r7, lr}
 5147              		.cfi_def_cfa_offset 8
 5148              		.cfi_offset 7, -8
 5149              		.cfi_offset 14, -4
 5150 0002 8AB0     		sub	sp, sp, #40
 5151              		.cfi_def_cfa_offset 48
 5152 0004 00AF     		add	r7, sp, #0
 5153              		.cfi_def_cfa_register 7
 5154 0006 F860     		str	r0, [r7, #12]
 5155 0008 B960     		str	r1, [r7, #8]
 5156 000a 7A60     		str	r2, [r7, #4]
 5157 000c 3B60     		str	r3, [r7]
1501:Generated_Source\PSoC4/RTC_1.c ****     uint32 curDay;
1502:Generated_Source\PSoC4/RTC_1.c ****     uint32 curWeek;
1503:Generated_Source\PSoC4/RTC_1.c ****     uint32 daysInMonth;
1504:Generated_Source\PSoC4/RTC_1.c ****     uint32 dayOfMonthTmp;
1505:Generated_Source\PSoC4/RTC_1.c **** 
1506:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1507:Generated_Source\PSoC4/RTC_1.c **** 
1508:Generated_Source\PSoC4/RTC_1.c ****     curDay      = 1u;
 5158              		.loc 2 1508 0
 5159 000e 0123     		mov	r3, #1
 5160 0010 7B62     		str	r3, [r7, #36]
1509:Generated_Source\PSoC4/RTC_1.c ****     curWeek     = (uint32)RTC_1_FIRST;
 5161              		.loc 2 1509 0
 5162 0012 0123     		mov	r3, #1
 5163 0014 3B62     		str	r3, [r7, #32]
1510:Generated_Source\PSoC4/RTC_1.c ****     daysInMonth = RTC_1_DaysInMonth(month, year);
 5164              		.loc 2 1510 0
 5165 0016 7A68     		ldr	r2, [r7, #4]
 5166 0018 3B68     		ldr	r3, [r7]
 5167 001a 101C     		mov	r0, r2
 5168 001c 191C     		mov	r1, r3
 5169 001e FFF7FEFF 		bl	RTC_1_DaysInMonth
 5170 0022 031C     		mov	r3, r0
 5171 0024 BB61     		str	r3, [r7, #24]
1511:Generated_Source\PSoC4/RTC_1.c ****     dayOfMonthTmp = curDay;
 5172              		.loc 2 1511 0
 5173 0026 7B6A     		ldr	r3, [r7, #36]
 5174 0028 FB61     		str	r3, [r7, #28]
1512:Generated_Source\PSoC4/RTC_1.c **** 
1513:Generated_Source\PSoC4/RTC_1.c ****     while((curWeek <= weekOfMonth) && (curDay <= daysInMonth))
 5175              		.loc 2 1513 0
 5176 002a 13E0     		b	.L318
 5177              	.L321:
1514:Generated_Source\PSoC4/RTC_1.c ****     {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 140


1515:Generated_Source\PSoC4/RTC_1.c ****         if(dayOfWeek == RTC_1_GetDayOfWeek(curDay, month, year))
 5178              		.loc 2 1515 0
 5179 002c 796A     		ldr	r1, [r7, #36]
 5180 002e 7A68     		ldr	r2, [r7, #4]
 5181 0030 3B68     		ldr	r3, [r7]
 5182 0032 081C     		mov	r0, r1
 5183 0034 111C     		mov	r1, r2
 5184 0036 1A1C     		mov	r2, r3
 5185 0038 FFF7FEFF 		bl	RTC_1_GetDayOfWeek
 5186 003c 021E     		sub	r2, r0, #0
 5187 003e FB68     		ldr	r3, [r7, #12]
 5188 0040 9A42     		cmp	r2, r3
 5189 0042 04D1     		bne	.L319
1516:Generated_Source\PSoC4/RTC_1.c ****         {
1517:Generated_Source\PSoC4/RTC_1.c ****             dayOfMonthTmp = curDay;
 5190              		.loc 2 1517 0
 5191 0044 7B6A     		ldr	r3, [r7, #36]
 5192 0046 FB61     		str	r3, [r7, #28]
1518:Generated_Source\PSoC4/RTC_1.c ****             curWeek++;
 5193              		.loc 2 1518 0
 5194 0048 3B6A     		ldr	r3, [r7, #32]
 5195 004a 0133     		add	r3, r3, #1
 5196 004c 3B62     		str	r3, [r7, #32]
 5197              	.L319:
1519:Generated_Source\PSoC4/RTC_1.c ****         }
1520:Generated_Source\PSoC4/RTC_1.c ****         curDay++;
 5198              		.loc 2 1520 0
 5199 004e 7B6A     		ldr	r3, [r7, #36]
 5200 0050 0133     		add	r3, r3, #1
 5201 0052 7B62     		str	r3, [r7, #36]
 5202              	.L318:
1513:Generated_Source\PSoC4/RTC_1.c ****     {
 5203              		.loc 2 1513 0
 5204 0054 3A6A     		ldr	r2, [r7, #32]
 5205 0056 BB68     		ldr	r3, [r7, #8]
 5206 0058 9A42     		cmp	r2, r3
 5207 005a 03D8     		bhi	.L320
1513:Generated_Source\PSoC4/RTC_1.c ****     {
 5208              		.loc 2 1513 0 is_stmt 0 discriminator 1
 5209 005c 7A6A     		ldr	r2, [r7, #36]
 5210 005e BB69     		ldr	r3, [r7, #24]
 5211 0060 9A42     		cmp	r2, r3
 5212 0062 E3D9     		bls	.L321
 5213              	.L320:
1521:Generated_Source\PSoC4/RTC_1.c ****     }
1522:Generated_Source\PSoC4/RTC_1.c **** 
1523:Generated_Source\PSoC4/RTC_1.c ****     retVal = RTC_1_ConstructDate(month, dayOfMonthTmp, year);
 5214              		.loc 2 1523 0 is_stmt 1
 5215 0064 7968     		ldr	r1, [r7, #4]
 5216 0066 FA69     		ldr	r2, [r7, #28]
 5217 0068 3B68     		ldr	r3, [r7]
 5218 006a 081C     		mov	r0, r1
 5219 006c 111C     		mov	r1, r2
 5220 006e 1A1C     		mov	r2, r3
 5221 0070 FFF7FEFF 		bl	RTC_1_ConstructDate
 5222 0074 031C     		mov	r3, r0
 5223 0076 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 141


1524:Generated_Source\PSoC4/RTC_1.c **** 
1525:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 5224              		.loc 2 1525 0
 5225 0078 7B69     		ldr	r3, [r7, #20]
1526:Generated_Source\PSoC4/RTC_1.c **** }
 5226              		.loc 2 1526 0
 5227 007a 181C     		mov	r0, r3
 5228 007c BD46     		mov	sp, r7
 5229 007e 0AB0     		add	sp, sp, #40
 5230              		@ sp needed
 5231 0080 80BD     		pop	{r7, pc}
 5232              		.cfi_endproc
 5233              	.LFE57:
 5234              		.size	RTC_1_RelativeToFixed, .-RTC_1_RelativeToFixed
 5235 0082 C046     		.section	.text.RTC_1_DaysInMonth,"ax",%progbits
 5236              		.align	2
 5237              		.global	RTC_1_DaysInMonth
 5238              		.code	16
 5239              		.thumb_func
 5240              		.type	RTC_1_DaysInMonth, %function
 5241              	RTC_1_DaysInMonth:
 5242              	.LFB58:
1527:Generated_Source\PSoC4/RTC_1.c **** 
1528:Generated_Source\PSoC4/RTC_1.c **** 
1529:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1530:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_DaysInMonth
1531:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1532:Generated_Source\PSoC4/RTC_1.c **** *
1533:Generated_Source\PSoC4/RTC_1.c **** * \brief
1534:Generated_Source\PSoC4/RTC_1.c **** *  Returns a number of days in a month passed through the parameters.
1535:Generated_Source\PSoC4/RTC_1.c **** *
1536:Generated_Source\PSoC4/RTC_1.c **** * \param
1537:Generated_Source\PSoC4/RTC_1.c **** *  month A month of a year
1538:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JANUARY
1539:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_FEBRUARY
1540:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MARCH
1541:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_APRIL
1542:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MAY
1543:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JUNE
1544:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JULY
1545:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_AUGUST
1546:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_SEPTEMBER
1547:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_OCTOBER
1548:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_NOVEMBER
1549:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_DECEMBER
1550:Generated_Source\PSoC4/RTC_1.c **** *
1551:Generated_Source\PSoC4/RTC_1.c **** * \param
1552:Generated_Source\PSoC4/RTC_1.c **** * year A year value.
1553:Generated_Source\PSoC4/RTC_1.c **** *
1554:Generated_Source\PSoC4/RTC_1.c **** * \return
1555:Generated_Source\PSoC4/RTC_1.c **** *  A number of days in a month in the year passed through the parameters.
1556:Generated_Source\PSoC4/RTC_1.c **** *
1557:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1558:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_DaysInMonth(uint32 month, uint32 year)
1559:Generated_Source\PSoC4/RTC_1.c **** {
 5243              		.loc 2 1559 0
 5244              		.cfi_startproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 142


 5245 0000 80B5     		push	{r7, lr}
 5246              		.cfi_def_cfa_offset 8
 5247              		.cfi_offset 7, -8
 5248              		.cfi_offset 14, -4
 5249 0002 84B0     		sub	sp, sp, #16
 5250              		.cfi_def_cfa_offset 24
 5251 0004 00AF     		add	r7, sp, #0
 5252              		.cfi_def_cfa_register 7
 5253 0006 7860     		str	r0, [r7, #4]
 5254 0008 3960     		str	r1, [r7]
1560:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1561:Generated_Source\PSoC4/RTC_1.c **** 
1562:Generated_Source\PSoC4/RTC_1.c ****     retVal = RTC_1_daysInMonthTbl[month - 1u];
 5255              		.loc 2 1562 0
 5256 000a 7B68     		ldr	r3, [r7, #4]
 5257 000c 013B     		sub	r3, r3, #1
 5258 000e 0A4A     		ldr	r2, .L326
 5259 0010 D35C     		ldrb	r3, [r2, r3]
 5260 0012 FB60     		str	r3, [r7, #12]
1563:Generated_Source\PSoC4/RTC_1.c ****     if((uint32)RTC_1_FEBRUARY == month)
 5261              		.loc 2 1563 0
 5262 0014 7B68     		ldr	r3, [r7, #4]
 5263 0016 022B     		cmp	r3, #2
 5264 0018 08D1     		bne	.L324
1564:Generated_Source\PSoC4/RTC_1.c ****     {
1565:Generated_Source\PSoC4/RTC_1.c ****         if(0u != RTC_1_LeapYear(year))
 5265              		.loc 2 1565 0
 5266 001a 3B68     		ldr	r3, [r7]
 5267 001c 181C     		mov	r0, r3
 5268 001e FFF7FEFF 		bl	RTC_1_LeapYear
 5269 0022 031E     		sub	r3, r0, #0
 5270 0024 02D0     		beq	.L324
1566:Generated_Source\PSoC4/RTC_1.c ****         {
1567:Generated_Source\PSoC4/RTC_1.c ****             retVal++;
 5271              		.loc 2 1567 0
 5272 0026 FB68     		ldr	r3, [r7, #12]
 5273 0028 0133     		add	r3, r3, #1
 5274 002a FB60     		str	r3, [r7, #12]
 5275              	.L324:
1568:Generated_Source\PSoC4/RTC_1.c ****         }
1569:Generated_Source\PSoC4/RTC_1.c ****     }
1570:Generated_Source\PSoC4/RTC_1.c **** 
1571:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 5276              		.loc 2 1571 0
 5277 002c FB68     		ldr	r3, [r7, #12]
1572:Generated_Source\PSoC4/RTC_1.c **** }
 5278              		.loc 2 1572 0
 5279 002e 181C     		mov	r0, r3
 5280 0030 BD46     		mov	sp, r7
 5281 0032 04B0     		add	sp, sp, #16
 5282              		@ sp needed
 5283 0034 80BD     		pop	{r7, pc}
 5284              	.L327:
 5285 0036 C046     		.align	2
 5286              	.L326:
 5287 0038 00000000 		.word	RTC_1_daysInMonthTbl
 5288              		.cfi_endproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 143


 5289              	.LFE58:
 5290              		.size	RTC_1_DaysInMonth, .-RTC_1_DaysInMonth
 5291              		.section	.text.RTC_1_DaysBeforeMonth,"ax",%progbits
 5292              		.align	2
 5293              		.global	RTC_1_DaysBeforeMonth
 5294              		.code	16
 5295              		.thumb_func
 5296              		.type	RTC_1_DaysBeforeMonth, %function
 5297              	RTC_1_DaysBeforeMonth:
 5298              	.LFB59:
1573:Generated_Source\PSoC4/RTC_1.c **** 
1574:Generated_Source\PSoC4/RTC_1.c **** 
1575:Generated_Source\PSoC4/RTC_1.c **** /*******************************************************************************
1576:Generated_Source\PSoC4/RTC_1.c **** * Function Name: RTC_1_DaysBeforeMonth
1577:Generated_Source\PSoC4/RTC_1.c **** ****************************************************************************//**
1578:Generated_Source\PSoC4/RTC_1.c **** *
1579:Generated_Source\PSoC4/RTC_1.c **** * \brief
1580:Generated_Source\PSoC4/RTC_1.c **** *  Calculates how many days elapsed from the beginning of the year to the
1581:Generated_Source\PSoC4/RTC_1.c **** *  beginning of the current month.
1582:Generated_Source\PSoC4/RTC_1.c **** *
1583:Generated_Source\PSoC4/RTC_1.c **** * \param
1584:Generated_Source\PSoC4/RTC_1.c **** *  month A month of a year
1585:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JANUARY
1586:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_FEBRUARY
1587:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MARCH
1588:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_APRIL
1589:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_MAY
1590:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JUNE
1591:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_JULY
1592:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_AUGUST
1593:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_SEPTEMBER
1594:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_OCTOBER
1595:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_NOVEMBER
1596:Generated_Source\PSoC4/RTC_1.c **** *  RTC_1_DECEMBER
1597:Generated_Source\PSoC4/RTC_1.c **** *
1598:Generated_Source\PSoC4/RTC_1.c **** * \param
1599:Generated_Source\PSoC4/RTC_1.c **** * year A year value.
1600:Generated_Source\PSoC4/RTC_1.c **** *
1601:Generated_Source\PSoC4/RTC_1.c **** * \return
1602:Generated_Source\PSoC4/RTC_1.c **** *  A number of days elapsed from the beginning of the year to the
1603:Generated_Source\PSoC4/RTC_1.c **** *  beginning of the current month passed through the parameters.
1604:Generated_Source\PSoC4/RTC_1.c **** *
1605:Generated_Source\PSoC4/RTC_1.c **** *******************************************************************************/
1606:Generated_Source\PSoC4/RTC_1.c **** uint32 RTC_1_DaysBeforeMonth(uint32 month, uint32 year)
1607:Generated_Source\PSoC4/RTC_1.c **** {
 5299              		.loc 2 1607 0
 5300              		.cfi_startproc
 5301 0000 80B5     		push	{r7, lr}
 5302              		.cfi_def_cfa_offset 8
 5303              		.cfi_offset 7, -8
 5304              		.cfi_offset 14, -4
 5305 0002 84B0     		sub	sp, sp, #16
 5306              		.cfi_def_cfa_offset 24
 5307 0004 00AF     		add	r7, sp, #0
 5308              		.cfi_def_cfa_register 7
 5309 0006 7860     		str	r0, [r7, #4]
 5310 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 144


1608:Generated_Source\PSoC4/RTC_1.c ****     uint32 retVal;
1609:Generated_Source\PSoC4/RTC_1.c **** 
1610:Generated_Source\PSoC4/RTC_1.c ****     retVal = RTC_1_daysBeforeMonthTbl[month];
 5311              		.loc 2 1610 0
 5312 000a 0B4B     		ldr	r3, .L331
 5313 000c 7A68     		ldr	r2, [r7, #4]
 5314 000e 5200     		lsl	r2, r2, #1
 5315 0010 D35A     		ldrh	r3, [r2, r3]
 5316 0012 FB60     		str	r3, [r7, #12]
1611:Generated_Source\PSoC4/RTC_1.c ****     if((0u == RTC_1_LeapYear(year)) && (month > (uint32)RTC_1_FEBRUARY))
 5317              		.loc 2 1611 0
 5318 0014 3B68     		ldr	r3, [r7]
 5319 0016 181C     		mov	r0, r3
 5320 0018 FFF7FEFF 		bl	RTC_1_LeapYear
 5321 001c 031E     		sub	r3, r0, #0
 5322 001e 05D1     		bne	.L329
 5323              		.loc 2 1611 0 is_stmt 0 discriminator 1
 5324 0020 7B68     		ldr	r3, [r7, #4]
 5325 0022 022B     		cmp	r3, #2
 5326 0024 02D9     		bls	.L329
1612:Generated_Source\PSoC4/RTC_1.c ****     {
1613:Generated_Source\PSoC4/RTC_1.c ****         retVal++;
 5327              		.loc 2 1613 0 is_stmt 1
 5328 0026 FB68     		ldr	r3, [r7, #12]
 5329 0028 0133     		add	r3, r3, #1
 5330 002a FB60     		str	r3, [r7, #12]
 5331              	.L329:
1614:Generated_Source\PSoC4/RTC_1.c ****     }
1615:Generated_Source\PSoC4/RTC_1.c **** 
1616:Generated_Source\PSoC4/RTC_1.c ****     return(retVal);
 5332              		.loc 2 1616 0
 5333 002c FB68     		ldr	r3, [r7, #12]
1617:Generated_Source\PSoC4/RTC_1.c **** }
 5334              		.loc 2 1617 0
 5335 002e 181C     		mov	r0, r3
 5336 0030 BD46     		mov	sp, r7
 5337 0032 04B0     		add	sp, sp, #16
 5338              		@ sp needed
 5339 0034 80BD     		pop	{r7, pc}
 5340              	.L332:
 5341 0036 C046     		.align	2
 5342              	.L331:
 5343 0038 00000000 		.word	RTC_1_daysBeforeMonthTbl
 5344              		.cfi_endproc
 5345              	.LFE59:
 5346              		.size	RTC_1_DaysBeforeMonth, .-RTC_1_DaysBeforeMonth
 5347              		.bss
 5348              		.align	2
 5349              	RTC_1_currentTickNumber.5161:
 5350 002c 00000000 		.space	4
 5351              		.text
 5352              	.Letext0:
 5353              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 5354              		.section	.debug_info,"",%progbits
 5355              	.Ldebug_info0:
 5356 0000 CB100000 		.4byte	0x10cb
 5357 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 145


 5358 0006 00000000 		.4byte	.Ldebug_abbrev0
 5359 000a 04       		.byte	0x4
 5360 000b 01       		.uleb128 0x1
 5361 000c 4C090000 		.4byte	.LASF166
 5362 0010 01       		.byte	0x1
 5363 0011 62010000 		.4byte	.LASF167
 5364 0015 0C070000 		.4byte	.LASF168
 5365 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5366 001d 00000000 		.4byte	0
 5367 0021 00000000 		.4byte	.Ldebug_line0
 5368 0025 02       		.uleb128 0x2
 5369 0026 01       		.byte	0x1
 5370 0027 06       		.byte	0x6
 5371 0028 60000000 		.4byte	.LASF0
 5372 002c 02       		.uleb128 0x2
 5373 002d 01       		.byte	0x1
 5374 002e 08       		.byte	0x8
 5375 002f 7B060000 		.4byte	.LASF1
 5376 0033 02       		.uleb128 0x2
 5377 0034 02       		.byte	0x2
 5378 0035 05       		.byte	0x5
 5379 0036 9A060000 		.4byte	.LASF2
 5380 003a 02       		.uleb128 0x2
 5381 003b 02       		.byte	0x2
 5382 003c 07       		.byte	0x7
 5383 003d D1030000 		.4byte	.LASF3
 5384 0041 02       		.uleb128 0x2
 5385 0042 04       		.byte	0x4
 5386 0043 05       		.byte	0x5
 5387 0044 DE010000 		.4byte	.LASF4
 5388 0048 02       		.uleb128 0x2
 5389 0049 04       		.byte	0x4
 5390 004a 07       		.byte	0x7
 5391 004b A6030000 		.4byte	.LASF5
 5392 004f 02       		.uleb128 0x2
 5393 0050 08       		.byte	0x8
 5394 0051 05       		.byte	0x5
 5395 0052 54010000 		.4byte	.LASF6
 5396 0056 02       		.uleb128 0x2
 5397 0057 08       		.byte	0x8
 5398 0058 07       		.byte	0x7
 5399 0059 B1000000 		.4byte	.LASF7
 5400 005d 03       		.uleb128 0x3
 5401 005e 04       		.byte	0x4
 5402 005f 05       		.byte	0x5
 5403 0060 696E7400 		.ascii	"int\000"
 5404 0064 02       		.uleb128 0x2
 5405 0065 04       		.byte	0x4
 5406 0066 07       		.byte	0x7
 5407 0067 45030000 		.4byte	.LASF8
 5408 006b 04       		.uleb128 0x4
 5409 006c 0A020000 		.4byte	.LASF9
 5410 0070 03       		.byte	0x3
 5411 0071 9801     		.2byte	0x198
 5412 0073 2C000000 		.4byte	0x2c
 5413 0077 04       		.uleb128 0x4
 5414 0078 1C000000 		.4byte	.LASF10
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 146


 5415 007c 03       		.byte	0x3
 5416 007d 9901     		.2byte	0x199
 5417 007f 3A000000 		.4byte	0x3a
 5418 0083 04       		.uleb128 0x4
 5419 0084 AE020000 		.4byte	.LASF11
 5420 0088 03       		.byte	0x3
 5421 0089 9A01     		.2byte	0x19a
 5422 008b 48000000 		.4byte	0x48
 5423 008f 02       		.uleb128 0x2
 5424 0090 04       		.byte	0x4
 5425 0091 04       		.byte	0x4
 5426 0092 27060000 		.4byte	.LASF12
 5427 0096 02       		.uleb128 0x2
 5428 0097 08       		.byte	0x8
 5429 0098 04       		.byte	0x4
 5430 0099 58020000 		.4byte	.LASF13
 5431 009d 04       		.uleb128 0x4
 5432 009e 93060000 		.4byte	.LASF14
 5433 00a2 03       		.byte	0x3
 5434 00a3 A401     		.2byte	0x1a4
 5435 00a5 56000000 		.4byte	0x56
 5436 00a9 02       		.uleb128 0x2
 5437 00aa 01       		.byte	0x1
 5438 00ab 08       		.byte	0x8
 5439 00ac E8070000 		.4byte	.LASF15
 5440 00b0 05       		.uleb128 0x5
 5441 00b1 83000000 		.4byte	0x83
 5442 00b5 06       		.uleb128 0x6
 5443 00b6 04       		.byte	0x4
 5444 00b7 BB000000 		.4byte	0xbb
 5445 00bb 07       		.uleb128 0x7
 5446 00bc 02       		.uleb128 0x2
 5447 00bd 04       		.byte	0x4
 5448 00be 07       		.byte	0x7
 5449 00bf 26050000 		.4byte	.LASF16
 5450 00c3 08       		.uleb128 0x8
 5451 00c4 04       		.byte	0x4
 5452 00c5 09       		.uleb128 0x9
 5453 00c6 01       		.byte	0x1
 5454 00c7 01       		.byte	0x1
 5455 00c8 1B       		.byte	0x1b
 5456 00c9 DA000000 		.4byte	0xda
 5457 00cd 0A       		.uleb128 0xa
 5458 00ce F6080000 		.4byte	.LASF17
 5459 00d2 00       		.sleb128 0
 5460 00d3 0A       		.uleb128 0xa
 5461 00d4 84070000 		.4byte	.LASF18
 5462 00d8 01       		.sleb128 1
 5463 00d9 00       		.byte	0
 5464 00da 0B       		.uleb128 0xb
 5465 00db 10010000 		.4byte	.LASF19
 5466 00df 01       		.byte	0x1
 5467 00e0 1E       		.byte	0x1e
 5468 00e1 C5000000 		.4byte	0xc5
 5469 00e5 0C       		.uleb128 0xc
 5470 00e6 10       		.byte	0x10
 5471 00e7 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 147


 5472 00e8 29       		.byte	0x29
 5473 00e9 1E010000 		.4byte	0x11e
 5474 00ed 0D       		.uleb128 0xd
 5475 00ee E6050000 		.4byte	.LASF20
 5476 00f2 01       		.byte	0x1
 5477 00f3 2B       		.byte	0x2b
 5478 00f4 83000000 		.4byte	0x83
 5479 00f8 00       		.byte	0
 5480 00f9 0D       		.uleb128 0xd
 5481 00fa E4030000 		.4byte	.LASF21
 5482 00fe 01       		.byte	0x1
 5483 00ff 2C       		.byte	0x2c
 5484 0100 83000000 		.4byte	0x83
 5485 0104 04       		.byte	0x4
 5486 0105 0D       		.uleb128 0xd
 5487 0106 A7040000 		.4byte	.LASF22
 5488 010a 01       		.byte	0x1
 5489 010b 2D       		.byte	0x2d
 5490 010c 83000000 		.4byte	0x83
 5491 0110 08       		.byte	0x8
 5492 0111 0D       		.uleb128 0xd
 5493 0112 E4080000 		.4byte	.LASF23
 5494 0116 01       		.byte	0x1
 5495 0117 2E       		.byte	0x2e
 5496 0118 83000000 		.4byte	0x83
 5497 011c 0C       		.byte	0xc
 5498 011d 00       		.byte	0
 5499 011e 0B       		.uleb128 0xb
 5500 011f 140A0000 		.4byte	.LASF24
 5501 0123 01       		.byte	0x1
 5502 0124 2F       		.byte	0x2f
 5503 0125 E5000000 		.4byte	0xe5
 5504 0129 0C       		.uleb128 0xc
 5505 012a 18       		.byte	0x18
 5506 012b 01       		.byte	0x1
 5507 012c 36       		.byte	0x36
 5508 012d 7A010000 		.4byte	0x17a
 5509 0131 0D       		.uleb128 0xd
 5510 0132 EB050000 		.4byte	.LASF25
 5511 0136 01       		.byte	0x1
 5512 0137 38       		.byte	0x38
 5513 0138 83000000 		.4byte	0x83
 5514 013c 00       		.byte	0
 5515 013d 0D       		.uleb128 0xd
 5516 013e A7040000 		.4byte	.LASF22
 5517 0142 01       		.byte	0x1
 5518 0143 39       		.byte	0x39
 5519 0144 83000000 		.4byte	0x83
 5520 0148 04       		.byte	0x4
 5521 0149 0D       		.uleb128 0xd
 5522 014a 2D060000 		.4byte	.LASF26
 5523 014e 01       		.byte	0x1
 5524 014f 3A       		.byte	0x3a
 5525 0150 83000000 		.4byte	0x83
 5526 0154 08       		.byte	0x8
 5527 0155 0D       		.uleb128 0xd
 5528 0156 04010000 		.4byte	.LASF27
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 148


 5529 015a 01       		.byte	0x1
 5530 015b 3B       		.byte	0x3b
 5531 015c 83000000 		.4byte	0x83
 5532 0160 0C       		.byte	0xc
 5533 0161 0D       		.uleb128 0xd
 5534 0162 32030000 		.4byte	.LASF28
 5535 0166 01       		.byte	0x1
 5536 0167 3C       		.byte	0x3c
 5537 0168 83000000 		.4byte	0x83
 5538 016c 10       		.byte	0x10
 5539 016d 0D       		.uleb128 0xd
 5540 016e 52030000 		.4byte	.LASF29
 5541 0172 01       		.byte	0x1
 5542 0173 3D       		.byte	0x3d
 5543 0174 6B000000 		.4byte	0x6b
 5544 0178 14       		.byte	0x14
 5545 0179 00       		.byte	0
 5546 017a 0B       		.uleb128 0xb
 5547 017b 51000000 		.4byte	.LASF30
 5548 017f 01       		.byte	0x1
 5549 0180 3E       		.byte	0x3e
 5550 0181 29010000 		.4byte	0x129
 5551 0185 0E       		.uleb128 0xe
 5552 0186 F5000000 		.4byte	.LASF32
 5553 018a 01       		.byte	0x1
 5554 018b BA01     		.2byte	0x1ba
 5555 018d 83000000 		.4byte	0x83
 5556 0191 00000000 		.4byte	.LFB1
 5557 0195 24000000 		.4byte	.LFE1-.LFB1
 5558 0199 01       		.uleb128 0x1
 5559 019a 9C       		.byte	0x9c
 5560 019b BE010000 		.4byte	0x1be
 5561 019f 0F       		.uleb128 0xf
 5562 01a0 76617200 		.ascii	"var\000"
 5563 01a4 01       		.byte	0x1
 5564 01a5 BA01     		.2byte	0x1ba
 5565 01a7 83000000 		.4byte	0x83
 5566 01ab 02       		.uleb128 0x2
 5567 01ac 91       		.byte	0x91
 5568 01ad 74       		.sleb128 -12
 5569 01ae 10       		.uleb128 0x10
 5570 01af E8020000 		.4byte	.LASF31
 5571 01b3 01       		.byte	0x1
 5572 01b4 BA01     		.2byte	0x1ba
 5573 01b6 83000000 		.4byte	0x83
 5574 01ba 02       		.uleb128 0x2
 5575 01bb 91       		.byte	0x91
 5576 01bc 70       		.sleb128 -16
 5577 01bd 00       		.byte	0
 5578 01be 11       		.uleb128 0x11
 5579 01bf E9030000 		.4byte	.LASF33
 5580 01c3 01       		.byte	0x1
 5581 01c4 D201     		.2byte	0x1d2
 5582 01c6 83000000 		.4byte	0x83
 5583 01ca 00000000 		.4byte	.LFB2
 5584 01ce 42000000 		.4byte	.LFE2-.LFB2
 5585 01d2 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 149


 5586 01d3 9C       		.byte	0x9c
 5587 01d4 F7010000 		.4byte	0x1f7
 5588 01d8 10       		.uleb128 0x10
 5589 01d9 D9010000 		.4byte	.LASF34
 5590 01dd 01       		.byte	0x1
 5591 01de D201     		.2byte	0x1d2
 5592 01e0 83000000 		.4byte	0x83
 5593 01e4 02       		.uleb128 0x2
 5594 01e5 91       		.byte	0x91
 5595 01e6 6C       		.sleb128 -20
 5596 01e7 12       		.uleb128 0x12
 5597 01e8 23000000 		.4byte	.LASF37
 5598 01ec 01       		.byte	0x1
 5599 01ed D401     		.2byte	0x1d4
 5600 01ef 83000000 		.4byte	0x83
 5601 01f3 02       		.uleb128 0x2
 5602 01f4 91       		.byte	0x91
 5603 01f5 74       		.sleb128 -12
 5604 01f6 00       		.byte	0
 5605 01f7 0E       		.uleb128 0xe
 5606 01f8 E9060000 		.4byte	.LASF35
 5607 01fc 01       		.byte	0x1
 5608 01fd F101     		.2byte	0x1f1
 5609 01ff 83000000 		.4byte	0x83
 5610 0203 00000000 		.4byte	.LFB3
 5611 0207 30000000 		.4byte	.LFE3-.LFB3
 5612 020b 01       		.uleb128 0x1
 5613 020c 9C       		.byte	0x9c
 5614 020d 30020000 		.4byte	0x230
 5615 0211 10       		.uleb128 0x10
 5616 0212 89060000 		.4byte	.LASF36
 5617 0216 01       		.byte	0x1
 5618 0217 F101     		.2byte	0x1f1
 5619 0219 83000000 		.4byte	0x83
 5620 021d 02       		.uleb128 0x2
 5621 021e 91       		.byte	0x91
 5622 021f 6C       		.sleb128 -20
 5623 0220 12       		.uleb128 0x12
 5624 0221 23000000 		.4byte	.LASF37
 5625 0225 01       		.byte	0x1
 5626 0226 F301     		.2byte	0x1f3
 5627 0228 83000000 		.4byte	0x83
 5628 022c 02       		.uleb128 0x2
 5629 022d 91       		.byte	0x91
 5630 022e 74       		.sleb128 -12
 5631 022f 00       		.byte	0
 5632 0230 0E       		.uleb128 0xe
 5633 0231 81010000 		.4byte	.LASF38
 5634 0235 01       		.byte	0x1
 5635 0236 0B02     		.2byte	0x20b
 5636 0238 83000000 		.4byte	0x83
 5637 023c 00000000 		.4byte	.LFB4
 5638 0240 36000000 		.4byte	.LFE4-.LFB4
 5639 0244 01       		.uleb128 0x1
 5640 0245 9C       		.byte	0x9c
 5641 0246 69020000 		.4byte	0x269
 5642 024a 10       		.uleb128 0x10
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 150


 5643 024b 89060000 		.4byte	.LASF36
 5644 024f 01       		.byte	0x1
 5645 0250 0B02     		.2byte	0x20b
 5646 0252 83000000 		.4byte	0x83
 5647 0256 02       		.uleb128 0x2
 5648 0257 91       		.byte	0x91
 5649 0258 6C       		.sleb128 -20
 5650 0259 12       		.uleb128 0x12
 5651 025a 23000000 		.4byte	.LASF37
 5652 025e 01       		.byte	0x1
 5653 025f 0D02     		.2byte	0x20d
 5654 0261 83000000 		.4byte	0x83
 5655 0265 02       		.uleb128 0x2
 5656 0266 91       		.byte	0x91
 5657 0267 74       		.sleb128 -12
 5658 0268 00       		.byte	0
 5659 0269 0E       		.uleb128 0xe
 5660 026a 4B050000 		.4byte	.LASF39
 5661 026e 01       		.byte	0x1
 5662 026f 2402     		.2byte	0x224
 5663 0271 83000000 		.4byte	0x83
 5664 0275 00000000 		.4byte	.LFB5
 5665 0279 36000000 		.4byte	.LFE5-.LFB5
 5666 027d 01       		.uleb128 0x1
 5667 027e 9C       		.byte	0x9c
 5668 027f A2020000 		.4byte	0x2a2
 5669 0283 10       		.uleb128 0x10
 5670 0284 89060000 		.4byte	.LASF36
 5671 0288 01       		.byte	0x1
 5672 0289 2402     		.2byte	0x224
 5673 028b 83000000 		.4byte	0x83
 5674 028f 02       		.uleb128 0x2
 5675 0290 91       		.byte	0x91
 5676 0291 6C       		.sleb128 -20
 5677 0292 12       		.uleb128 0x12
 5678 0293 23000000 		.4byte	.LASF37
 5679 0297 01       		.byte	0x1
 5680 0298 2602     		.2byte	0x226
 5681 029a 83000000 		.4byte	0x83
 5682 029e 02       		.uleb128 0x2
 5683 029f 91       		.byte	0x91
 5684 02a0 74       		.sleb128 -12
 5685 02a1 00       		.byte	0
 5686 02a2 11       		.uleb128 0x11
 5687 02a3 3D020000 		.4byte	.LASF40
 5688 02a7 01       		.byte	0x1
 5689 02a8 3F02     		.2byte	0x23f
 5690 02aa 83000000 		.4byte	0x83
 5691 02ae 00000000 		.4byte	.LFB6
 5692 02b2 20000000 		.4byte	.LFE6-.LFB6
 5693 02b6 01       		.uleb128 0x1
 5694 02b7 9C       		.byte	0x9c
 5695 02b8 CC020000 		.4byte	0x2cc
 5696 02bc 10       		.uleb128 0x10
 5697 02bd 89060000 		.4byte	.LASF36
 5698 02c1 01       		.byte	0x1
 5699 02c2 3F02     		.2byte	0x23f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 151


 5700 02c4 83000000 		.4byte	0x83
 5701 02c8 02       		.uleb128 0x2
 5702 02c9 91       		.byte	0x91
 5703 02ca 74       		.sleb128 -12
 5704 02cb 00       		.byte	0
 5705 02cc 0E       		.uleb128 0xe
 5706 02cd 38060000 		.4byte	.LASF41
 5707 02d1 01       		.byte	0x1
 5708 02d2 5302     		.2byte	0x253
 5709 02d4 83000000 		.4byte	0x83
 5710 02d8 00000000 		.4byte	.LFB7
 5711 02dc 36000000 		.4byte	.LFE7-.LFB7
 5712 02e0 01       		.uleb128 0x1
 5713 02e1 9C       		.byte	0x9c
 5714 02e2 05030000 		.4byte	0x305
 5715 02e6 10       		.uleb128 0x10
 5716 02e7 E4030000 		.4byte	.LASF21
 5717 02eb 01       		.byte	0x1
 5718 02ec 5302     		.2byte	0x253
 5719 02ee 83000000 		.4byte	0x83
 5720 02f2 02       		.uleb128 0x2
 5721 02f3 91       		.byte	0x91
 5722 02f4 6C       		.sleb128 -20
 5723 02f5 12       		.uleb128 0x12
 5724 02f6 23000000 		.4byte	.LASF37
 5725 02fa 01       		.byte	0x1
 5726 02fb 5502     		.2byte	0x255
 5727 02fd 83000000 		.4byte	0x83
 5728 0301 02       		.uleb128 0x2
 5729 0302 91       		.byte	0x91
 5730 0303 74       		.sleb128 -12
 5731 0304 00       		.byte	0
 5732 0305 0E       		.uleb128 0xe
 5733 0306 92010000 		.4byte	.LASF42
 5734 030a 01       		.byte	0x1
 5735 030b 6C02     		.2byte	0x26c
 5736 030d 83000000 		.4byte	0x83
 5737 0311 00000000 		.4byte	.LFB8
 5738 0315 36000000 		.4byte	.LFE8-.LFB8
 5739 0319 01       		.uleb128 0x1
 5740 031a 9C       		.byte	0x9c
 5741 031b 3E030000 		.4byte	0x33e
 5742 031f 10       		.uleb128 0x10
 5743 0320 E4030000 		.4byte	.LASF21
 5744 0324 01       		.byte	0x1
 5745 0325 6C02     		.2byte	0x26c
 5746 0327 83000000 		.4byte	0x83
 5747 032b 02       		.uleb128 0x2
 5748 032c 91       		.byte	0x91
 5749 032d 6C       		.sleb128 -20
 5750 032e 12       		.uleb128 0x12
 5751 032f 23000000 		.4byte	.LASF37
 5752 0333 01       		.byte	0x1
 5753 0334 6E02     		.2byte	0x26e
 5754 0336 83000000 		.4byte	0x83
 5755 033a 02       		.uleb128 0x2
 5756 033b 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 152


 5757 033c 74       		.sleb128 -12
 5758 033d 00       		.byte	0
 5759 033e 0E       		.uleb128 0xe
 5760 033f FA020000 		.4byte	.LASF43
 5761 0343 01       		.byte	0x1
 5762 0344 8502     		.2byte	0x285
 5763 0346 83000000 		.4byte	0x83
 5764 034a 00000000 		.4byte	.LFB9
 5765 034e 5C000000 		.4byte	.LFE9-.LFB9
 5766 0352 01       		.uleb128 0x1
 5767 0353 9C       		.byte	0x9c
 5768 0354 77030000 		.4byte	0x377
 5769 0358 10       		.uleb128 0x10
 5770 0359 E4030000 		.4byte	.LASF21
 5771 035d 01       		.byte	0x1
 5772 035e 8502     		.2byte	0x285
 5773 0360 83000000 		.4byte	0x83
 5774 0364 02       		.uleb128 0x2
 5775 0365 91       		.byte	0x91
 5776 0366 6C       		.sleb128 -20
 5777 0367 12       		.uleb128 0x12
 5778 0368 23000000 		.4byte	.LASF37
 5779 036c 01       		.byte	0x1
 5780 036d 8702     		.2byte	0x287
 5781 036f 83000000 		.4byte	0x83
 5782 0373 02       		.uleb128 0x2
 5783 0374 91       		.byte	0x91
 5784 0375 74       		.sleb128 -12
 5785 0376 00       		.byte	0
 5786 0377 11       		.uleb128 0x11
 5787 0378 D2040000 		.4byte	.LASF44
 5788 037c 01       		.byte	0x1
 5789 037d A202     		.2byte	0x2a2
 5790 037f 83000000 		.4byte	0x83
 5791 0383 00000000 		.4byte	.LFB10
 5792 0387 44000000 		.4byte	.LFE10-.LFB10
 5793 038b 01       		.uleb128 0x1
 5794 038c 9C       		.byte	0x9c
 5795 038d B0030000 		.4byte	0x3b0
 5796 0391 10       		.uleb128 0x10
 5797 0392 89060000 		.4byte	.LASF36
 5798 0396 01       		.byte	0x1
 5799 0397 A202     		.2byte	0x2a2
 5800 0399 83000000 		.4byte	0x83
 5801 039d 02       		.uleb128 0x2
 5802 039e 91       		.byte	0x91
 5803 039f 74       		.sleb128 -12
 5804 03a0 10       		.uleb128 0x10
 5805 03a1 5F020000 		.4byte	.LASF45
 5806 03a5 01       		.byte	0x1
 5807 03a6 A202     		.2byte	0x2a2
 5808 03a8 83000000 		.4byte	0x83
 5809 03ac 02       		.uleb128 0x2
 5810 03ad 91       		.byte	0x91
 5811 03ae 70       		.sleb128 -16
 5812 03af 00       		.byte	0
 5813 03b0 11       		.uleb128 0x11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 153


 5814 03b1 21090000 		.4byte	.LASF46
 5815 03b5 01       		.byte	0x1
 5816 03b6 BD02     		.2byte	0x2bd
 5817 03b8 83000000 		.4byte	0x83
 5818 03bc 00000000 		.4byte	.LFB11
 5819 03c0 48000000 		.4byte	.LFE11-.LFB11
 5820 03c4 01       		.uleb128 0x1
 5821 03c5 9C       		.byte	0x9c
 5822 03c6 E9030000 		.4byte	0x3e9
 5823 03ca 10       		.uleb128 0x10
 5824 03cb 89060000 		.4byte	.LASF36
 5825 03cf 01       		.byte	0x1
 5826 03d0 BD02     		.2byte	0x2bd
 5827 03d2 83000000 		.4byte	0x83
 5828 03d6 02       		.uleb128 0x2
 5829 03d7 91       		.byte	0x91
 5830 03d8 74       		.sleb128 -12
 5831 03d9 10       		.uleb128 0x10
 5832 03da 8D020000 		.4byte	.LASF47
 5833 03de 01       		.byte	0x1
 5834 03df BD02     		.2byte	0x2bd
 5835 03e1 83000000 		.4byte	0x83
 5836 03e5 02       		.uleb128 0x2
 5837 03e6 91       		.byte	0x91
 5838 03e7 70       		.sleb128 -16
 5839 03e8 00       		.byte	0
 5840 03e9 11       		.uleb128 0x11
 5841 03ea 96050000 		.4byte	.LASF48
 5842 03ee 01       		.byte	0x1
 5843 03ef D802     		.2byte	0x2d8
 5844 03f1 83000000 		.4byte	0x83
 5845 03f5 00000000 		.4byte	.LFB12
 5846 03f9 48000000 		.4byte	.LFE12-.LFB12
 5847 03fd 01       		.uleb128 0x1
 5848 03fe 9C       		.byte	0x9c
 5849 03ff 22040000 		.4byte	0x422
 5850 0403 10       		.uleb128 0x10
 5851 0404 89060000 		.4byte	.LASF36
 5852 0408 01       		.byte	0x1
 5853 0409 D802     		.2byte	0x2d8
 5854 040b 83000000 		.4byte	0x83
 5855 040f 02       		.uleb128 0x2
 5856 0410 91       		.byte	0x91
 5857 0411 74       		.sleb128 -12
 5858 0412 10       		.uleb128 0x10
 5859 0413 1F040000 		.4byte	.LASF49
 5860 0417 01       		.byte	0x1
 5861 0418 D802     		.2byte	0x2d8
 5862 041a 83000000 		.4byte	0x83
 5863 041e 02       		.uleb128 0x2
 5864 041f 91       		.byte	0x91
 5865 0420 70       		.sleb128 -16
 5866 0421 00       		.byte	0
 5867 0422 11       		.uleb128 0x11
 5868 0423 ED020000 		.4byte	.LASF50
 5869 0427 01       		.byte	0x1
 5870 0428 1203     		.2byte	0x312
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 154


 5871 042a 83000000 		.4byte	0x83
 5872 042e 00000000 		.4byte	.LFB14
 5873 0432 48000000 		.4byte	.LFE14-.LFB14
 5874 0436 01       		.uleb128 0x1
 5875 0437 9C       		.byte	0x9c
 5876 0438 5B040000 		.4byte	0x45b
 5877 043c 10       		.uleb128 0x10
 5878 043d 1A080000 		.4byte	.LASF51
 5879 0441 01       		.byte	0x1
 5880 0442 1203     		.2byte	0x312
 5881 0444 83000000 		.4byte	0x83
 5882 0448 02       		.uleb128 0x2
 5883 0449 91       		.byte	0x91
 5884 044a 74       		.sleb128 -12
 5885 044b 10       		.uleb128 0x10
 5886 044c B8030000 		.4byte	.LASF52
 5887 0450 01       		.byte	0x1
 5888 0451 1203     		.2byte	0x312
 5889 0453 83000000 		.4byte	0x83
 5890 0457 02       		.uleb128 0x2
 5891 0458 91       		.byte	0x91
 5892 0459 70       		.sleb128 -16
 5893 045a 00       		.byte	0
 5894 045b 11       		.uleb128 0x11
 5895 045c 83080000 		.4byte	.LASF53
 5896 0460 01       		.byte	0x1
 5897 0461 2D03     		.2byte	0x32d
 5898 0463 83000000 		.4byte	0x83
 5899 0467 00000000 		.4byte	.LFB15
 5900 046b 48000000 		.4byte	.LFE15-.LFB15
 5901 046f 01       		.uleb128 0x1
 5902 0470 9C       		.byte	0x9c
 5903 0471 94040000 		.4byte	0x494
 5904 0475 10       		.uleb128 0x10
 5905 0476 1A080000 		.4byte	.LASF51
 5906 047a 01       		.byte	0x1
 5907 047b 2D03     		.2byte	0x32d
 5908 047d 83000000 		.4byte	0x83
 5909 0481 02       		.uleb128 0x2
 5910 0482 91       		.byte	0x91
 5911 0483 74       		.sleb128 -12
 5912 0484 10       		.uleb128 0x10
 5913 0485 6C000000 		.4byte	.LASF54
 5914 0489 01       		.byte	0x1
 5915 048a 2D03     		.2byte	0x32d
 5916 048c 83000000 		.4byte	0x83
 5917 0490 02       		.uleb128 0x2
 5918 0491 91       		.byte	0x91
 5919 0492 70       		.sleb128 -16
 5920 0493 00       		.byte	0
 5921 0494 11       		.uleb128 0x11
 5922 0495 F2070000 		.4byte	.LASF55
 5923 0499 01       		.byte	0x1
 5924 049a 4803     		.2byte	0x348
 5925 049c 83000000 		.4byte	0x83
 5926 04a0 00000000 		.4byte	.LFB16
 5927 04a4 8C000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 155


 5928 04a8 01       		.uleb128 0x1
 5929 04a9 9C       		.byte	0x9c
 5930 04aa CD040000 		.4byte	0x4cd
 5931 04ae 10       		.uleb128 0x10
 5932 04af 1A080000 		.4byte	.LASF51
 5933 04b3 01       		.byte	0x1
 5934 04b4 4803     		.2byte	0x348
 5935 04b6 83000000 		.4byte	0x83
 5936 04ba 02       		.uleb128 0x2
 5937 04bb 91       		.byte	0x91
 5938 04bc 74       		.sleb128 -12
 5939 04bd 10       		.uleb128 0x10
 5940 04be DE020000 		.4byte	.LASF56
 5941 04c2 01       		.byte	0x1
 5942 04c3 4803     		.2byte	0x348
 5943 04c5 83000000 		.4byte	0x83
 5944 04c9 02       		.uleb128 0x2
 5945 04ca 91       		.byte	0x91
 5946 04cb 70       		.sleb128 -16
 5947 04cc 00       		.byte	0
 5948 04cd 0E       		.uleb128 0xe
 5949 04ce D2050000 		.4byte	.LASF57
 5950 04d2 01       		.byte	0x1
 5951 04d3 6803     		.2byte	0x368
 5952 04d5 83000000 		.4byte	0x83
 5953 04d9 00000000 		.4byte	.LFB17
 5954 04dd 1E000000 		.4byte	.LFE17-.LFB17
 5955 04e1 01       		.uleb128 0x1
 5956 04e2 9C       		.byte	0x9c
 5957 04e3 F7040000 		.4byte	0x4f7
 5958 04e7 10       		.uleb128 0x10
 5959 04e8 DA090000 		.4byte	.LASF58
 5960 04ec 01       		.byte	0x1
 5961 04ed 6803     		.2byte	0x368
 5962 04ef 83000000 		.4byte	0x83
 5963 04f3 02       		.uleb128 0x2
 5964 04f4 91       		.byte	0x91
 5965 04f5 74       		.sleb128 -12
 5966 04f6 00       		.byte	0
 5967 04f7 0E       		.uleb128 0xe
 5968 04f8 3D040000 		.4byte	.LASF59
 5969 04fc 01       		.byte	0x1
 5970 04fd 7D03     		.2byte	0x37d
 5971 04ff 83000000 		.4byte	0x83
 5972 0503 00000000 		.4byte	.LFB18
 5973 0507 1E000000 		.4byte	.LFE18-.LFB18
 5974 050b 01       		.uleb128 0x1
 5975 050c 9C       		.byte	0x9c
 5976 050d 21050000 		.4byte	0x521
 5977 0511 10       		.uleb128 0x10
 5978 0512 DA090000 		.4byte	.LASF58
 5979 0516 01       		.byte	0x1
 5980 0517 7D03     		.2byte	0x37d
 5981 0519 83000000 		.4byte	0x83
 5982 051d 02       		.uleb128 0x2
 5983 051e 91       		.byte	0x91
 5984 051f 74       		.sleb128 -12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 156


 5985 0520 00       		.byte	0
 5986 0521 11       		.uleb128 0x11
 5987 0522 5E040000 		.4byte	.LASF60
 5988 0526 01       		.byte	0x1
 5989 0527 9803     		.2byte	0x398
 5990 0529 83000000 		.4byte	0x83
 5991 052d 00000000 		.4byte	.LFB19
 5992 0531 5E000000 		.4byte	.LFE19-.LFB19
 5993 0535 01       		.uleb128 0x1
 5994 0536 9C       		.byte	0x9c
 5995 0537 96050000 		.4byte	0x596
 5996 053b 10       		.uleb128 0x10
 5997 053c 45060000 		.4byte	.LASF61
 5998 0540 01       		.byte	0x1
 5999 0541 9803     		.2byte	0x398
 6000 0543 83000000 		.4byte	0x83
 6001 0547 02       		.uleb128 0x2
 6002 0548 91       		.byte	0x91
 6003 0549 6C       		.sleb128 -20
 6004 054a 10       		.uleb128 0x10
 6005 054b 1F030000 		.4byte	.LASF62
 6006 054f 01       		.byte	0x1
 6007 0550 9803     		.2byte	0x398
 6008 0552 83000000 		.4byte	0x83
 6009 0556 02       		.uleb128 0x2
 6010 0557 91       		.byte	0x91
 6011 0558 68       		.sleb128 -24
 6012 0559 10       		.uleb128 0x10
 6013 055a 36020000 		.4byte	.LASF63
 6014 055e 01       		.byte	0x1
 6015 055f 9803     		.2byte	0x398
 6016 0561 83000000 		.4byte	0x83
 6017 0565 02       		.uleb128 0x2
 6018 0566 91       		.byte	0x91
 6019 0567 64       		.sleb128 -28
 6020 0568 10       		.uleb128 0x10
 6021 0569 47080000 		.4byte	.LASF64
 6022 056d 01       		.byte	0x1
 6023 056e 9803     		.2byte	0x398
 6024 0570 83000000 		.4byte	0x83
 6025 0574 02       		.uleb128 0x2
 6026 0575 91       		.byte	0x91
 6027 0576 60       		.sleb128 -32
 6028 0577 12       		.uleb128 0x12
 6029 0578 48010000 		.4byte	.LASF65
 6030 057c 01       		.byte	0x1
 6031 057d 9A03     		.2byte	0x39a
 6032 057f 83000000 		.4byte	0x83
 6033 0583 02       		.uleb128 0x2
 6034 0584 91       		.byte	0x91
 6035 0585 70       		.sleb128 -16
 6036 0586 12       		.uleb128 0x12
 6037 0587 99070000 		.4byte	.LASF66
 6038 058b 01       		.byte	0x1
 6039 058c 9B03     		.2byte	0x39b
 6040 058e 83000000 		.4byte	0x83
 6041 0592 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 157


 6042 0593 91       		.byte	0x91
 6043 0594 74       		.sleb128 -12
 6044 0595 00       		.byte	0
 6045 0596 0E       		.uleb128 0xe
 6046 0597 92080000 		.4byte	.LASF67
 6047 059b 01       		.byte	0x1
 6048 059c BC03     		.2byte	0x3bc
 6049 059e 83000000 		.4byte	0x83
 6050 05a2 00000000 		.4byte	.LFB20
 6051 05a6 1E000000 		.4byte	.LFE20-.LFB20
 6052 05aa 01       		.uleb128 0x1
 6053 05ab 9C       		.byte	0x9c
 6054 05ac C0050000 		.4byte	0x5c0
 6055 05b0 10       		.uleb128 0x10
 6056 05b1 1F030000 		.4byte	.LASF62
 6057 05b5 01       		.byte	0x1
 6058 05b6 BC03     		.2byte	0x3bc
 6059 05b8 83000000 		.4byte	0x83
 6060 05bc 02       		.uleb128 0x2
 6061 05bd 91       		.byte	0x91
 6062 05be 74       		.sleb128 -12
 6063 05bf 00       		.byte	0
 6064 05c0 0E       		.uleb128 0xe
 6065 05c1 A0070000 		.4byte	.LASF68
 6066 05c5 01       		.byte	0x1
 6067 05c6 D103     		.2byte	0x3d1
 6068 05c8 83000000 		.4byte	0x83
 6069 05cc 00000000 		.4byte	.LFB21
 6070 05d0 14000000 		.4byte	.LFE21-.LFB21
 6071 05d4 01       		.uleb128 0x1
 6072 05d5 9C       		.byte	0x9c
 6073 05d6 EA050000 		.4byte	0x5ea
 6074 05da 10       		.uleb128 0x10
 6075 05db 45060000 		.4byte	.LASF61
 6076 05df 01       		.byte	0x1
 6077 05e0 D103     		.2byte	0x3d1
 6078 05e2 83000000 		.4byte	0x83
 6079 05e6 02       		.uleb128 0x2
 6080 05e7 91       		.byte	0x91
 6081 05e8 74       		.sleb128 -12
 6082 05e9 00       		.byte	0
 6083 05ea 0E       		.uleb128 0xe
 6084 05eb F0050000 		.4byte	.LASF69
 6085 05ef 01       		.byte	0x1
 6086 05f0 0304     		.2byte	0x403
 6087 05f2 83000000 		.4byte	0x83
 6088 05f6 00000000 		.4byte	.LFB23
 6089 05fa 20000000 		.4byte	.LFE23-.LFB23
 6090 05fe 01       		.uleb128 0x1
 6091 05ff 9C       		.byte	0x9c
 6092 0600 14060000 		.4byte	0x614
 6093 0604 10       		.uleb128 0x10
 6094 0605 89060000 		.4byte	.LASF36
 6095 0609 01       		.byte	0x1
 6096 060a 0304     		.2byte	0x403
 6097 060c 83000000 		.4byte	0x83
 6098 0610 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 158


 6099 0611 91       		.byte	0x91
 6100 0612 74       		.sleb128 -12
 6101 0613 00       		.byte	0
 6102 0614 11       		.uleb128 0x11
 6103 0615 79020000 		.4byte	.LASF70
 6104 0619 01       		.byte	0x1
 6105 061a 2904     		.2byte	0x429
 6106 061c 83000000 		.4byte	0x83
 6107 0620 00000000 		.4byte	.LFB24
 6108 0624 A0000000 		.4byte	.LFE24-.LFB24
 6109 0628 01       		.uleb128 0x1
 6110 0629 9C       		.byte	0x9c
 6111 062a 89060000 		.4byte	0x689
 6112 062e 10       		.uleb128 0x10
 6113 062f 52030000 		.4byte	.LASF29
 6114 0633 01       		.byte	0x1
 6115 0634 2904     		.2byte	0x429
 6116 0636 83000000 		.4byte	0x83
 6117 063a 02       		.uleb128 0x2
 6118 063b 91       		.byte	0x91
 6119 063c 6C       		.sleb128 -20
 6120 063d 10       		.uleb128 0x10
 6121 063e 6A060000 		.4byte	.LASF71
 6122 0642 01       		.byte	0x1
 6123 0643 2904     		.2byte	0x429
 6124 0645 83000000 		.4byte	0x83
 6125 0649 02       		.uleb128 0x2
 6126 064a 91       		.byte	0x91
 6127 064b 68       		.sleb128 -24
 6128 064c 10       		.uleb128 0x10
 6129 064d EB050000 		.4byte	.LASF25
 6130 0651 01       		.byte	0x1
 6131 0652 2904     		.2byte	0x429
 6132 0654 83000000 		.4byte	0x83
 6133 0658 02       		.uleb128 0x2
 6134 0659 91       		.byte	0x91
 6135 065a 64       		.sleb128 -28
 6136 065b 0F       		.uleb128 0xf
 6137 065c 6D696E00 		.ascii	"min\000"
 6138 0660 01       		.byte	0x1
 6139 0661 2904     		.2byte	0x429
 6140 0663 83000000 		.4byte	0x83
 6141 0667 02       		.uleb128 0x2
 6142 0668 91       		.byte	0x91
 6143 0669 60       		.sleb128 -32
 6144 066a 0F       		.uleb128 0xf
 6145 066b 73656300 		.ascii	"sec\000"
 6146 066f 01       		.byte	0x1
 6147 0670 2904     		.2byte	0x429
 6148 0672 83000000 		.4byte	0x83
 6149 0676 02       		.uleb128 0x2
 6150 0677 91       		.byte	0x91
 6151 0678 00       		.sleb128 0
 6152 0679 12       		.uleb128 0x12
 6153 067a 23000000 		.4byte	.LASF37
 6154 067e 01       		.byte	0x1
 6155 067f 2B04     		.2byte	0x42b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 159


 6156 0681 83000000 		.4byte	0x83
 6157 0685 02       		.uleb128 0x2
 6158 0686 91       		.byte	0x91
 6159 0687 74       		.sleb128 -12
 6160 0688 00       		.byte	0
 6161 0689 11       		.uleb128 0x11
 6162 068a 35000000 		.4byte	.LASF72
 6163 068e 01       		.byte	0x1
 6164 068f 5204     		.2byte	0x452
 6165 0691 83000000 		.4byte	0x83
 6166 0695 00000000 		.4byte	.LFB25
 6167 0699 D6000000 		.4byte	.LFE25-.LFB25
 6168 069d 01       		.uleb128 0x1
 6169 069e 9C       		.byte	0x9c
 6170 069f EF060000 		.4byte	0x6ef
 6171 06a3 10       		.uleb128 0x10
 6172 06a4 32030000 		.4byte	.LASF28
 6173 06a8 01       		.byte	0x1
 6174 06a9 5204     		.2byte	0x452
 6175 06ab 83000000 		.4byte	0x83
 6176 06af 02       		.uleb128 0x2
 6177 06b0 91       		.byte	0x91
 6178 06b1 6C       		.sleb128 -20
 6179 06b2 0F       		.uleb128 0xf
 6180 06b3 64617900 		.ascii	"day\000"
 6181 06b7 01       		.byte	0x1
 6182 06b8 5204     		.2byte	0x452
 6183 06ba 83000000 		.4byte	0x83
 6184 06be 02       		.uleb128 0x2
 6185 06bf 91       		.byte	0x91
 6186 06c0 68       		.sleb128 -24
 6187 06c1 10       		.uleb128 0x10
 6188 06c2 D9010000 		.4byte	.LASF34
 6189 06c6 01       		.byte	0x1
 6190 06c7 5204     		.2byte	0x452
 6191 06c9 83000000 		.4byte	0x83
 6192 06cd 02       		.uleb128 0x2
 6193 06ce 91       		.byte	0x91
 6194 06cf 64       		.sleb128 -28
 6195 06d0 12       		.uleb128 0x12
 6196 06d1 23000000 		.4byte	.LASF37
 6197 06d5 01       		.byte	0x1
 6198 06d6 5404     		.2byte	0x454
 6199 06d8 83000000 		.4byte	0x83
 6200 06dc 02       		.uleb128 0x2
 6201 06dd 91       		.byte	0x91
 6202 06de 70       		.sleb128 -16
 6203 06df 12       		.uleb128 0x12
 6204 06e0 99070000 		.4byte	.LASF66
 6205 06e4 01       		.byte	0x1
 6206 06e5 5504     		.2byte	0x455
 6207 06e7 83000000 		.4byte	0x83
 6208 06eb 02       		.uleb128 0x2
 6209 06ec 91       		.byte	0x91
 6210 06ed 74       		.sleb128 -12
 6211 06ee 00       		.byte	0
 6212 06ef 11       		.uleb128 0x11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 160


 6213 06f0 04060000 		.4byte	.LASF73
 6214 06f4 01       		.byte	0x1
 6215 06f5 A404     		.2byte	0x4a4
 6216 06f7 83000000 		.4byte	0x83
 6217 06fb 00000000 		.4byte	.LFB26
 6218 06ff 88000000 		.4byte	.LFE26-.LFB26
 6219 0703 01       		.uleb128 0x1
 6220 0704 9C       		.byte	0x9c
 6221 0705 46070000 		.4byte	0x746
 6222 0709 0F       		.uleb128 0xf
 6223 070a 64617900 		.ascii	"day\000"
 6224 070e 01       		.byte	0x1
 6225 070f A404     		.2byte	0x4a4
 6226 0711 83000000 		.4byte	0x83
 6227 0715 02       		.uleb128 0x2
 6228 0716 91       		.byte	0x91
 6229 0717 64       		.sleb128 -28
 6230 0718 10       		.uleb128 0x10
 6231 0719 32030000 		.4byte	.LASF28
 6232 071d 01       		.byte	0x1
 6233 071e A404     		.2byte	0x4a4
 6234 0720 83000000 		.4byte	0x83
 6235 0724 02       		.uleb128 0x2
 6236 0725 91       		.byte	0x91
 6237 0726 60       		.sleb128 -32
 6238 0727 10       		.uleb128 0x10
 6239 0728 D9010000 		.4byte	.LASF34
 6240 072c 01       		.byte	0x1
 6241 072d A404     		.2byte	0x4a4
 6242 072f 83000000 		.4byte	0x83
 6243 0733 02       		.uleb128 0x2
 6244 0734 91       		.byte	0x91
 6245 0735 5C       		.sleb128 -36
 6246 0736 12       		.uleb128 0x12
 6247 0737 23000000 		.4byte	.LASF37
 6248 073b 01       		.byte	0x1
 6249 073c A604     		.2byte	0x4a6
 6250 073e 83000000 		.4byte	0x83
 6251 0742 02       		.uleb128 0x2
 6252 0743 91       		.byte	0x91
 6253 0744 6C       		.sleb128 -20
 6254 0745 00       		.byte	0
 6255 0746 13       		.uleb128 0x13
 6256 0747 BE050000 		.4byte	.LASF74
 6257 074b 02       		.byte	0x2
 6258 074c 5A       		.byte	0x5a
 6259 074d 00000000 		.4byte	.LFB27
 6260 0751 18000000 		.4byte	.LFE27-.LFB27
 6261 0755 01       		.uleb128 0x1
 6262 0756 9C       		.byte	0x9c
 6263 0757 14       		.uleb128 0x14
 6264 0758 2A000000 		.4byte	.LASF75
 6265 075c 02       		.byte	0x2
 6266 075d 71       		.byte	0x71
 6267 075e 00000000 		.4byte	.LFB28
 6268 0762 08000000 		.4byte	.LFE28-.LFB28
 6269 0766 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 161


 6270 0767 9C       		.byte	0x9c
 6271 0768 15       		.uleb128 0x15
 6272 0769 32040000 		.4byte	.LASF79
 6273 076d 02       		.byte	0x2
 6274 076e 8C       		.byte	0x8c
 6275 076f 00000000 		.4byte	.LFB29
 6276 0773 4C010000 		.4byte	.LFE29-.LFB29
 6277 0777 01       		.uleb128 0x1
 6278 0778 9C       		.byte	0x9c
 6279 0779 A8070000 		.4byte	0x7a8
 6280 077d 16       		.uleb128 0x16
 6281 077e 49000000 		.4byte	.LASF76
 6282 0782 02       		.byte	0x2
 6283 0783 8E       		.byte	0x8e
 6284 0784 83000000 		.4byte	0x83
 6285 0788 02       		.uleb128 0x2
 6286 0789 91       		.byte	0x91
 6287 078a 6C       		.sleb128 -20
 6288 078b 16       		.uleb128 0x16
 6289 078c 44090000 		.4byte	.LASF77
 6290 0790 02       		.byte	0x2
 6291 0791 8F       		.byte	0x8f
 6292 0792 83000000 		.4byte	0x83
 6293 0796 02       		.uleb128 0x2
 6294 0797 91       		.byte	0x91
 6295 0798 68       		.sleb128 -24
 6296 0799 16       		.uleb128 0x16
 6297 079a EB080000 		.4byte	.LASF78
 6298 079e 02       		.byte	0x2
 6299 079f 92       		.byte	0x92
 6300 07a0 7A010000 		.4byte	0x17a
 6301 07a4 02       		.uleb128 0x2
 6302 07a5 91       		.byte	0x91
 6303 07a6 50       		.sleb128 -48
 6304 07a7 00       		.byte	0
 6305 07a8 15       		.uleb128 0x15
 6306 07a9 55060000 		.4byte	.LASF80
 6307 07ad 02       		.byte	0x2
 6308 07ae E5       		.byte	0xe5
 6309 07af 00000000 		.4byte	.LFB30
 6310 07b3 38010000 		.4byte	.LFE30-.LFB30
 6311 07b7 01       		.uleb128 0x1
 6312 07b8 9C       		.byte	0x9c
 6313 07b9 04080000 		.4byte	0x804
 6314 07bd 17       		.uleb128 0x17
 6315 07be 89060000 		.4byte	.LASF36
 6316 07c2 02       		.byte	0x2
 6317 07c3 E5       		.byte	0xe5
 6318 07c4 83000000 		.4byte	0x83
 6319 07c8 02       		.uleb128 0x2
 6320 07c9 91       		.byte	0x91
 6321 07ca 54       		.sleb128 -44
 6322 07cb 17       		.uleb128 0x17
 6323 07cc 1A080000 		.4byte	.LASF51
 6324 07d0 02       		.byte	0x2
 6325 07d1 E5       		.byte	0xe5
 6326 07d2 83000000 		.4byte	0x83
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 162


 6327 07d6 02       		.uleb128 0x2
 6328 07d7 91       		.byte	0x91
 6329 07d8 50       		.sleb128 -48
 6330 07d9 16       		.uleb128 0x16
 6331 07da 09000000 		.4byte	.LASF81
 6332 07de 02       		.byte	0x2
 6333 07df E7       		.byte	0xe7
 6334 07e0 83000000 		.4byte	0x83
 6335 07e4 02       		.uleb128 0x2
 6336 07e5 91       		.byte	0x91
 6337 07e6 64       		.sleb128 -28
 6338 07e7 16       		.uleb128 0x16
 6339 07e8 EC000000 		.4byte	.LASF82
 6340 07ec 02       		.byte	0x2
 6341 07ed E8       		.byte	0xe8
 6342 07ee 83000000 		.4byte	0x83
 6343 07f2 02       		.uleb128 0x2
 6344 07f3 91       		.byte	0x91
 6345 07f4 60       		.sleb128 -32
 6346 07f5 16       		.uleb128 0x16
 6347 07f6 2A040000 		.4byte	.LASF83
 6348 07fa 02       		.byte	0x2
 6349 07fb E9       		.byte	0xe9
 6350 07fc 83000000 		.4byte	0x83
 6351 0800 02       		.uleb128 0x2
 6352 0801 91       		.byte	0x91
 6353 0802 5C       		.sleb128 -36
 6354 0803 00       		.byte	0
 6355 0804 18       		.uleb128 0x18
 6356 0805 D7060000 		.4byte	.LASF84
 6357 0809 02       		.byte	0x2
 6358 080a 1901     		.2byte	0x119
 6359 080c 00000000 		.4byte	.LFB31
 6360 0810 B8000000 		.4byte	.LFE31-.LFB31
 6361 0814 01       		.uleb128 0x1
 6362 0815 9C       		.byte	0x9c
 6363 0816 39080000 		.4byte	0x839
 6364 081a 10       		.uleb128 0x10
 6365 081b BD080000 		.4byte	.LASF85
 6366 081f 02       		.byte	0x2
 6367 0820 1901     		.2byte	0x119
 6368 0822 9D000000 		.4byte	0x9d
 6369 0826 02       		.uleb128 0x2
 6370 0827 91       		.byte	0x91
 6371 0828 58       		.sleb128 -40
 6372 0829 12       		.uleb128 0x12
 6373 082a E1090000 		.4byte	.LASF86
 6374 082e 02       		.byte	0x2
 6375 082f 1B01     		.2byte	0x11b
 6376 0831 1E010000 		.4byte	0x11e
 6377 0835 02       		.uleb128 0x2
 6378 0836 91       		.byte	0x91
 6379 0837 60       		.sleb128 -32
 6380 0838 00       		.byte	0
 6381 0839 19       		.uleb128 0x19
 6382 083a F8030000 		.4byte	.LASF90
 6383 083e 02       		.byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 163


 6384 083f 3E01     		.2byte	0x13e
 6385 0841 9D000000 		.4byte	0x9d
 6386 0845 00000000 		.4byte	.LFB32
 6387 0849 18000000 		.4byte	.LFE32-.LFB32
 6388 084d 01       		.uleb128 0x1
 6389 084e 9C       		.byte	0x9c
 6390 084f 1A       		.uleb128 0x1a
 6391 0850 C1030000 		.4byte	.LASF87
 6392 0854 02       		.byte	0x2
 6393 0855 5A01     		.2byte	0x15a
 6394 0857 00000000 		.4byte	.LFB33
 6395 085b 24000000 		.4byte	.LFE33-.LFB33
 6396 085f 01       		.uleb128 0x1
 6397 0860 9C       		.byte	0x9c
 6398 0861 84080000 		.4byte	0x884
 6399 0865 10       		.uleb128 0x10
 6400 0866 45050000 		.4byte	.LASF88
 6401 086a 02       		.byte	0x2
 6402 086b 5A01     		.2byte	0x15a
 6403 086d 83000000 		.4byte	0x83
 6404 0871 02       		.uleb128 0x2
 6405 0872 91       		.byte	0x91
 6406 0873 74       		.sleb128 -12
 6407 0874 10       		.uleb128 0x10
 6408 0875 27020000 		.4byte	.LASF89
 6409 0879 02       		.byte	0x2
 6410 087a 5A01     		.2byte	0x15a
 6411 087c 83000000 		.4byte	0x83
 6412 0880 02       		.uleb128 0x2
 6413 0881 91       		.byte	0x91
 6414 0882 70       		.sleb128 -16
 6415 0883 00       		.byte	0
 6416 0884 19       		.uleb128 0x19
 6417 0885 17060000 		.4byte	.LASF91
 6418 0889 02       		.byte	0x2
 6419 088a 6B01     		.2byte	0x16b
 6420 088c 83000000 		.4byte	0x83
 6421 0890 00000000 		.4byte	.LFB34
 6422 0894 14000000 		.4byte	.LFE34-.LFB34
 6423 0898 01       		.uleb128 0x1
 6424 0899 9C       		.byte	0x9c
 6425 089a 19       		.uleb128 0x19
 6426 089b BF040000 		.4byte	.LASF92
 6427 089f 02       		.byte	0x2
 6428 08a0 7C01     		.2byte	0x17c
 6429 08a2 83000000 		.4byte	0x83
 6430 08a6 00000000 		.4byte	.LFB35
 6431 08aa 14000000 		.4byte	.LFE35-.LFB35
 6432 08ae 01       		.uleb128 0x1
 6433 08af 9C       		.byte	0x9c
 6434 08b0 18       		.uleb128 0x18
 6435 08b1 77000000 		.4byte	.LASF93
 6436 08b5 02       		.byte	0x2
 6437 08b6 8C01     		.2byte	0x18c
 6438 08b8 00000000 		.4byte	.LFB36
 6439 08bc 3C000000 		.4byte	.LFE36-.LFB36
 6440 08c0 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 164


 6441 08c1 9C       		.byte	0x9c
 6442 08c2 D6080000 		.4byte	0x8d6
 6443 08c6 10       		.uleb128 0x10
 6444 08c7 00000000 		.4byte	.LASF94
 6445 08cb 02       		.byte	0x2
 6446 08cc 8C01     		.2byte	0x18c
 6447 08ce D6080000 		.4byte	0x8d6
 6448 08d2 02       		.uleb128 0x2
 6449 08d3 91       		.byte	0x91
 6450 08d4 6C       		.sleb128 -20
 6451 08d5 00       		.byte	0
 6452 08d6 06       		.uleb128 0x6
 6453 08d7 04       		.byte	0x4
 6454 08d8 1E010000 		.4byte	0x11e
 6455 08dc 1B       		.uleb128 0x1b
 6456 08dd 5A050000 		.4byte	.LASF95
 6457 08e1 02       		.byte	0x2
 6458 08e2 A301     		.2byte	0x1a3
 6459 08e4 83000000 		.4byte	0x83
 6460 08e8 00000000 		.4byte	.LFB37
 6461 08ec 44000000 		.4byte	.LFE37-.LFB37
 6462 08f0 01       		.uleb128 0x1
 6463 08f1 9C       		.byte	0x9c
 6464 08f2 1B       		.uleb128 0x1b
 6465 08f3 24080000 		.4byte	.LASF96
 6466 08f7 02       		.byte	0x2
 6467 08f8 BD01     		.2byte	0x1bd
 6468 08fa 83000000 		.4byte	0x83
 6469 08fe 00000000 		.4byte	.LFB38
 6470 0902 44000000 		.4byte	.LFE38-.LFB38
 6471 0906 01       		.uleb128 0x1
 6472 0907 9C       		.byte	0x9c
 6473 0908 18       		.uleb128 0x18
 6474 0909 E2040000 		.4byte	.LASF97
 6475 090d 02       		.byte	0x2
 6476 090e D901     		.2byte	0x1d9
 6477 0910 00000000 		.4byte	.LFB39
 6478 0914 40000000 		.4byte	.LFE39-.LFB39
 6479 0918 01       		.uleb128 0x1
 6480 0919 9C       		.byte	0x9c
 6481 091a 2E090000 		.4byte	0x92e
 6482 091e 10       		.uleb128 0x10
 6483 091f 240A0000 		.4byte	.LASF98
 6484 0923 02       		.byte	0x2
 6485 0924 D901     		.2byte	0x1d9
 6486 0926 2E090000 		.4byte	0x92e
 6487 092a 02       		.uleb128 0x2
 6488 092b 91       		.byte	0x91
 6489 092c 6C       		.sleb128 -20
 6490 092d 00       		.byte	0
 6491 092e 06       		.uleb128 0x6
 6492 092f 04       		.byte	0x4
 6493 0930 34090000 		.4byte	0x934
 6494 0934 1C       		.uleb128 0x1c
 6495 0935 1E010000 		.4byte	0x11e
 6496 0939 1A       		.uleb128 0x1a
 6497 093a 00080000 		.4byte	.LASF99
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 165


 6498 093e 02       		.byte	0x2
 6499 093f EC01     		.2byte	0x1ec
 6500 0941 00000000 		.4byte	.LFB40
 6501 0945 20000000 		.4byte	.LFE40-.LFB40
 6502 0949 01       		.uleb128 0x1
 6503 094a 9C       		.byte	0x9c
 6504 094b 5F090000 		.4byte	0x95f
 6505 094f 10       		.uleb128 0x10
 6506 0950 C5070000 		.4byte	.LASF100
 6507 0954 02       		.byte	0x2
 6508 0955 EC01     		.2byte	0x1ec
 6509 0957 D6080000 		.4byte	0x8d6
 6510 095b 02       		.uleb128 0x2
 6511 095c 91       		.byte	0x91
 6512 095d 6C       		.sleb128 -20
 6513 095e 00       		.byte	0
 6514 095f 18       		.uleb128 0x18
 6515 0960 ED090000 		.4byte	.LASF101
 6516 0964 02       		.byte	0x2
 6517 0965 1702     		.2byte	0x217
 6518 0967 00000000 		.4byte	.LFB41
 6519 096b 3C000000 		.4byte	.LFE41-.LFB41
 6520 096f 01       		.uleb128 0x1
 6521 0970 9C       		.byte	0x9c
 6522 0971 85090000 		.4byte	0x985
 6523 0975 10       		.uleb128 0x10
 6524 0976 E8020000 		.4byte	.LASF31
 6525 097a 02       		.byte	0x2
 6526 097b 1702     		.2byte	0x217
 6527 097d 83000000 		.4byte	0x83
 6528 0981 02       		.uleb128 0x2
 6529 0982 91       		.byte	0x91
 6530 0983 6C       		.sleb128 -20
 6531 0984 00       		.byte	0
 6532 0985 19       		.uleb128 0x19
 6533 0986 0E090000 		.4byte	.LASF102
 6534 098a 02       		.byte	0x2
 6535 098b 4902     		.2byte	0x249
 6536 098d 83000000 		.4byte	0x83
 6537 0991 00000000 		.4byte	.LFB42
 6538 0995 14000000 		.4byte	.LFE42-.LFB42
 6539 0999 01       		.uleb128 0x1
 6540 099a 9C       		.byte	0x9c
 6541 099b 19       		.uleb128 0x19
 6542 099c 99020000 		.4byte	.LASF103
 6543 09a0 02       		.byte	0x2
 6544 09a1 6002     		.2byte	0x260
 6545 09a3 83000000 		.4byte	0x83
 6546 09a7 00000000 		.4byte	.LFB43
 6547 09ab 20000000 		.4byte	.LFE43-.LFB43
 6548 09af 01       		.uleb128 0x1
 6549 09b0 9C       		.byte	0x9c
 6550 09b1 1D       		.uleb128 0x1d
 6551 09b2 10020000 		.4byte	.LASF104
 6552 09b6 02       		.byte	0x2
 6553 09b7 7402     		.2byte	0x274
 6554 09b9 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 166


 6555 09bd 24000000 		.4byte	.LFE44-.LFB44
 6556 09c1 01       		.uleb128 0x1
 6557 09c2 9C       		.byte	0x9c
 6558 09c3 1E       		.uleb128 0x1e
 6559 09c4 6D080000 		.4byte	.LASF107
 6560 09c8 02       		.byte	0x2
 6561 09c9 8B02     		.2byte	0x28b
 6562 09cb C3000000 		.4byte	0xc3
 6563 09cf 00000000 		.4byte	.LFB45
 6564 09d3 24000000 		.4byte	.LFE45-.LFB45
 6565 09d7 01       		.uleb128 0x1
 6566 09d8 9C       		.byte	0x9c
 6567 09d9 FC090000 		.4byte	0x9fc
 6568 09dd 10       		.uleb128 0x10
 6569 09de 6F040000 		.4byte	.LASF105
 6570 09e2 02       		.byte	0x2
 6571 09e3 8B02     		.2byte	0x28b
 6572 09e5 B5000000 		.4byte	0xb5
 6573 09e9 02       		.uleb128 0x2
 6574 09ea 91       		.byte	0x91
 6575 09eb 6C       		.sleb128 -20
 6576 09ec 12       		.uleb128 0x12
 6577 09ed C2010000 		.4byte	.LASF106
 6578 09f1 02       		.byte	0x2
 6579 09f2 8D02     		.2byte	0x28d
 6580 09f4 B5000000 		.4byte	0xb5
 6581 09f8 02       		.uleb128 0x2
 6582 09f9 91       		.byte	0x91
 6583 09fa 74       		.sleb128 -12
 6584 09fb 00       		.byte	0
 6585 09fc 1F       		.uleb128 0x1f
 6586 09fd C1060000 		.4byte	.LASF108
 6587 0a01 02       		.byte	0x2
 6588 0a02 A702     		.2byte	0x2a7
 6589 0a04 9D000000 		.4byte	0x9d
 6590 0a08 00000000 		.4byte	.LFB46
 6591 0a0c B4020000 		.4byte	.LFE46-.LFB46
 6592 0a10 01       		.uleb128 0x1
 6593 0a11 9C       		.byte	0x9c
 6594 0a12 800A0000 		.4byte	0xa80
 6595 0a16 10       		.uleb128 0x10
 6596 0a17 10000000 		.4byte	.LASF109
 6597 0a1b 02       		.byte	0x2
 6598 0a1c A702     		.2byte	0x2a7
 6599 0a1e 9D000000 		.4byte	0x9d
 6600 0a22 02       		.uleb128 0x2
 6601 0a23 91       		.byte	0x91
 6602 0a24 48       		.sleb128 -56
 6603 0a25 10       		.uleb128 0x10
 6604 0a26 47080000 		.4byte	.LASF64
 6605 0a2a 02       		.byte	0x2
 6606 0a2b A702     		.2byte	0x2a7
 6607 0a2d 6B000000 		.4byte	0x6b
 6608 0a31 02       		.uleb128 0x2
 6609 0a32 91       		.byte	0x91
 6610 0a33 47       		.sleb128 -57
 6611 0a34 12       		.uleb128 0x12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 167


 6612 0a35 D1010000 		.4byte	.LASF110
 6613 0a39 02       		.byte	0x2
 6614 0a3a A902     		.2byte	0x2a9
 6615 0a3c 83000000 		.4byte	0x83
 6616 0a40 02       		.uleb128 0x2
 6617 0a41 91       		.byte	0x91
 6618 0a42 64       		.sleb128 -28
 6619 0a43 12       		.uleb128 0x12
 6620 0a44 4D060000 		.4byte	.LASF111
 6621 0a48 02       		.byte	0x2
 6622 0a49 AA02     		.2byte	0x2aa
 6623 0a4b 83000000 		.4byte	0x83
 6624 0a4f 02       		.uleb128 0x2
 6625 0a50 91       		.byte	0x91
 6626 0a51 6C       		.sleb128 -20
 6627 0a52 12       		.uleb128 0x12
 6628 0a53 28030000 		.4byte	.LASF112
 6629 0a57 02       		.byte	0x2
 6630 0a58 AB02     		.2byte	0x2ab
 6631 0a5a 83000000 		.4byte	0x83
 6632 0a5e 02       		.uleb128 0x2
 6633 0a5f 91       		.byte	0x91
 6634 0a60 68       		.sleb128 -24
 6635 0a61 12       		.uleb128 0x12
 6636 0a62 48010000 		.4byte	.LASF65
 6637 0a66 02       		.byte	0x2
 6638 0a67 AC02     		.2byte	0x2ac
 6639 0a69 83000000 		.4byte	0x83
 6640 0a6d 02       		.uleb128 0x2
 6641 0a6e 91       		.byte	0x91
 6642 0a6f 60       		.sleb128 -32
 6643 0a70 12       		.uleb128 0x12
 6644 0a71 C6080000 		.4byte	.LASF113
 6645 0a75 02       		.byte	0x2
 6646 0a76 AD02     		.2byte	0x2ad
 6647 0a78 1E010000 		.4byte	0x11e
 6648 0a7c 02       		.uleb128 0x2
 6649 0a7d 91       		.byte	0x91
 6650 0a7e 50       		.sleb128 -48
 6651 0a7f 00       		.byte	0
 6652 0a80 1F       		.uleb128 0x1f
 6653 0a81 A4060000 		.4byte	.LASF114
 6654 0a85 02       		.byte	0x2
 6655 0a86 0A03     		.2byte	0x30a
 6656 0a88 9D000000 		.4byte	0x9d
 6657 0a8c 00000000 		.4byte	.LFB47
 6658 0a90 3C030000 		.4byte	.LFE47-.LFB47
 6659 0a94 01       		.uleb128 0x1
 6660 0a95 9C       		.byte	0x9c
 6661 0a96 220B0000 		.4byte	0xb22
 6662 0a9a 10       		.uleb128 0x10
 6663 0a9b 240A0000 		.4byte	.LASF98
 6664 0a9f 02       		.byte	0x2
 6665 0aa0 0A03     		.2byte	0x30a
 6666 0aa2 2E090000 		.4byte	0x92e
 6667 0aa6 02       		.uleb128 0x2
 6668 0aa7 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 168


 6669 0aa8 44       		.sleb128 -60
 6670 0aa9 10       		.uleb128 0x10
 6671 0aaa 47080000 		.4byte	.LASF64
 6672 0aae 02       		.byte	0x2
 6673 0aaf 0A03     		.2byte	0x30a
 6674 0ab1 6B000000 		.4byte	0x6b
 6675 0ab5 02       		.uleb128 0x2
 6676 0ab6 91       		.byte	0x91
 6677 0ab7 43       		.sleb128 -61
 6678 0ab8 12       		.uleb128 0x12
 6679 0ab9 B8010000 		.4byte	.LASF115
 6680 0abd 02       		.byte	0x2
 6681 0abe 0C03     		.2byte	0x30c
 6682 0ac0 83000000 		.4byte	0x83
 6683 0ac4 02       		.uleb128 0x2
 6684 0ac5 91       		.byte	0x91
 6685 0ac6 60       		.sleb128 -32
 6686 0ac7 12       		.uleb128 0x12
 6687 0ac8 2E0A0000 		.4byte	.LASF116
 6688 0acc 02       		.byte	0x2
 6689 0acd 0D03     		.2byte	0x30d
 6690 0acf 83000000 		.4byte	0x83
 6691 0ad3 02       		.uleb128 0x2
 6692 0ad4 91       		.byte	0x91
 6693 0ad5 6C       		.sleb128 -20
 6694 0ad6 12       		.uleb128 0x12
 6695 0ad7 28030000 		.4byte	.LASF112
 6696 0adb 02       		.byte	0x2
 6697 0adc 0E03     		.2byte	0x30e
 6698 0ade 83000000 		.4byte	0x83
 6699 0ae2 02       		.uleb128 0x2
 6700 0ae3 91       		.byte	0x91
 6701 0ae4 5C       		.sleb128 -36
 6702 0ae5 12       		.uleb128 0x12
 6703 0ae6 38030000 		.4byte	.LASF117
 6704 0aea 02       		.byte	0x2
 6705 0aeb 0F03     		.2byte	0x30f
 6706 0aed 83000000 		.4byte	0x83
 6707 0af1 02       		.uleb128 0x2
 6708 0af2 91       		.byte	0x91
 6709 0af3 68       		.sleb128 -24
 6710 0af4 12       		.uleb128 0x12
 6711 0af5 E7010000 		.4byte	.LASF118
 6712 0af9 02       		.byte	0x2
 6713 0afa 1003     		.2byte	0x310
 6714 0afc 83000000 		.4byte	0x83
 6715 0b00 02       		.uleb128 0x2
 6716 0b01 91       		.byte	0x91
 6717 0b02 64       		.sleb128 -28
 6718 0b03 12       		.uleb128 0x12
 6719 0b04 48010000 		.4byte	.LASF65
 6720 0b08 02       		.byte	0x2
 6721 0b09 1103     		.2byte	0x311
 6722 0b0b 83000000 		.4byte	0x83
 6723 0b0f 02       		.uleb128 0x2
 6724 0b10 91       		.byte	0x91
 6725 0b11 58       		.sleb128 -40
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 169


 6726 0b12 12       		.uleb128 0x12
 6727 0b13 C6080000 		.4byte	.LASF113
 6728 0b17 02       		.byte	0x2
 6729 0b18 1203     		.2byte	0x312
 6730 0b1a 1E010000 		.4byte	0x11e
 6731 0b1e 02       		.uleb128 0x2
 6732 0b1f 91       		.byte	0x91
 6733 0b20 48       		.sleb128 -56
 6734 0b21 00       		.byte	0
 6735 0b22 1F       		.uleb128 0x1f
 6736 0b23 96040000 		.4byte	.LASF119
 6737 0b27 02       		.byte	0x2
 6738 0b28 9B03     		.2byte	0x39b
 6739 0b2a 83000000 		.4byte	0x83
 6740 0b2e 00000000 		.4byte	.LFB48
 6741 0b32 80000000 		.4byte	.LFE48-.LFB48
 6742 0b36 01       		.uleb128 0x1
 6743 0b37 9C       		.byte	0x9c
 6744 0b38 5B0B0000 		.4byte	0xb5b
 6745 0b3c 12       		.uleb128 0x12
 6746 0b3d 2A040000 		.4byte	.LASF83
 6747 0b41 02       		.byte	0x2
 6748 0b42 9D03     		.2byte	0x39d
 6749 0b44 83000000 		.4byte	0x83
 6750 0b48 02       		.uleb128 0x2
 6751 0b49 91       		.byte	0x91
 6752 0b4a 74       		.sleb128 -12
 6753 0b4b 12       		.uleb128 0x12
 6754 0b4c 54080000 		.4byte	.LASF120
 6755 0b50 02       		.byte	0x2
 6756 0b51 9E03     		.2byte	0x39e
 6757 0b53 1E010000 		.4byte	0x11e
 6758 0b57 02       		.uleb128 0x2
 6759 0b58 91       		.byte	0x91
 6760 0b59 64       		.sleb128 -28
 6761 0b5a 00       		.byte	0
 6762 0b5b 18       		.uleb128 0x18
 6763 0b5c C8020000 		.4byte	.LASF121
 6764 0b60 02       		.byte	0x2
 6765 0b61 D303     		.2byte	0x3d3
 6766 0b63 00000000 		.4byte	.LFB49
 6767 0b67 B8000000 		.4byte	.LFE49-.LFB49
 6768 0b6b 01       		.uleb128 0x1
 6769 0b6c 9C       		.byte	0x9c
 6770 0b6d 900B0000 		.4byte	0xb90
 6771 0b71 10       		.uleb128 0x10
 6772 0b72 4B020000 		.4byte	.LASF122
 6773 0b76 02       		.byte	0x2
 6774 0b77 D303     		.2byte	0x3d3
 6775 0b79 900B0000 		.4byte	0xb90
 6776 0b7d 02       		.uleb128 0x2
 6777 0b7e 91       		.byte	0x91
 6778 0b7f 6C       		.sleb128 -20
 6779 0b80 10       		.uleb128 0x10
 6780 0b81 8C000000 		.4byte	.LASF123
 6781 0b85 02       		.byte	0x2
 6782 0b86 D403     		.2byte	0x3d4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 170


 6783 0b88 DA000000 		.4byte	0xda
 6784 0b8c 02       		.uleb128 0x2
 6785 0b8d 91       		.byte	0x91
 6786 0b8e 6B       		.sleb128 -21
 6787 0b8f 00       		.byte	0
 6788 0b90 06       		.uleb128 0x6
 6789 0b91 04       		.byte	0x4
 6790 0b92 960B0000 		.4byte	0xb96
 6791 0b96 1C       		.uleb128 0x1c
 6792 0b97 7A010000 		.4byte	0x17a
 6793 0b9b 18       		.uleb128 0x18
 6794 0b9c D3070000 		.4byte	.LASF124
 6795 0ba0 02       		.byte	0x2
 6796 0ba1 0504     		.2byte	0x405
 6797 0ba3 00000000 		.4byte	.LFB50
 6798 0ba7 B8000000 		.4byte	.LFE50-.LFB50
 6799 0bab 01       		.uleb128 0x1
 6800 0bac 9C       		.byte	0x9c
 6801 0bad D00B0000 		.4byte	0xbd0
 6802 0bb1 10       		.uleb128 0x10
 6803 0bb2 B9070000 		.4byte	.LASF125
 6804 0bb6 02       		.byte	0x2
 6805 0bb7 0504     		.2byte	0x405
 6806 0bb9 900B0000 		.4byte	0xb90
 6807 0bbd 02       		.uleb128 0x2
 6808 0bbe 91       		.byte	0x91
 6809 0bbf 6C       		.sleb128 -20
 6810 0bc0 10       		.uleb128 0x10
 6811 0bc1 8C000000 		.4byte	.LASF123
 6812 0bc5 02       		.byte	0x2
 6813 0bc6 0604     		.2byte	0x406
 6814 0bc8 DA000000 		.4byte	0xda
 6815 0bcc 02       		.uleb128 0x2
 6816 0bcd 91       		.byte	0x91
 6817 0bce 6B       		.sleb128 -21
 6818 0bcf 00       		.byte	0
 6819 0bd0 1F       		.uleb128 0x1f
 6820 0bd1 11050000 		.4byte	.LASF126
 6821 0bd5 02       		.byte	0x2
 6822 0bd6 2E04     		.2byte	0x42e
 6823 0bd8 9D000000 		.4byte	0x9d
 6824 0bdc 00000000 		.4byte	.LFB51
 6825 0be0 AC000000 		.4byte	.LFE51-.LFB51
 6826 0be4 01       		.uleb128 0x1
 6827 0be5 9C       		.byte	0x9c
 6828 0be6 360C0000 		.4byte	0xc36
 6829 0bea 10       		.uleb128 0x10
 6830 0beb 6B020000 		.4byte	.LASF127
 6831 0bef 02       		.byte	0x2
 6832 0bf0 2E04     		.2byte	0x42e
 6833 0bf2 900B0000 		.4byte	0xb90
 6834 0bf6 02       		.uleb128 0x2
 6835 0bf7 91       		.byte	0x91
 6836 0bf8 4C       		.sleb128 -52
 6837 0bf9 12       		.uleb128 0x12
 6838 0bfa 2A040000 		.4byte	.LASF83
 6839 0bfe 02       		.byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 171


 6840 0bff 3004     		.2byte	0x430
 6841 0c01 83000000 		.4byte	0x83
 6842 0c05 02       		.uleb128 0x2
 6843 0c06 91       		.byte	0x91
 6844 0c07 68       		.sleb128 -24
 6845 0c08 12       		.uleb128 0x12
 6846 0c09 49000000 		.4byte	.LASF76
 6847 0c0d 02       		.byte	0x2
 6848 0c0e 3104     		.2byte	0x431
 6849 0c10 83000000 		.4byte	0x83
 6850 0c14 02       		.uleb128 0x2
 6851 0c15 91       		.byte	0x91
 6852 0c16 6C       		.sleb128 -20
 6853 0c17 12       		.uleb128 0x12
 6854 0c18 28010000 		.4byte	.LASF128
 6855 0c1c 02       		.byte	0x2
 6856 0c1d 3204     		.2byte	0x432
 6857 0c1f 9D000000 		.4byte	0x9d
 6858 0c23 02       		.uleb128 0x2
 6859 0c24 91       		.byte	0x91
 6860 0c25 60       		.sleb128 -32
 6861 0c26 12       		.uleb128 0x12
 6862 0c27 54080000 		.4byte	.LASF120
 6863 0c2b 02       		.byte	0x2
 6864 0c2c 3404     		.2byte	0x434
 6865 0c2e 1E010000 		.4byte	0x11e
 6866 0c32 02       		.uleb128 0x2
 6867 0c33 91       		.byte	0x91
 6868 0c34 50       		.sleb128 -48
 6869 0c35 00       		.byte	0
 6870 0c36 1E       		.uleb128 0x1e
 6871 0c37 F4010000 		.4byte	.LASF129
 6872 0c3b 02       		.byte	0x2
 6873 0c3c 5E04     		.2byte	0x45e
 6874 0c3e 83000000 		.4byte	0x83
 6875 0c42 00000000 		.4byte	.LFB52
 6876 0c46 4E000000 		.4byte	.LFE52-.LFB52
 6877 0c4a 01       		.uleb128 0x1
 6878 0c4b 9C       		.byte	0x9c
 6879 0c4c 8B0C0000 		.4byte	0xc8b
 6880 0c50 10       		.uleb128 0x10
 6881 0c51 41010000 		.4byte	.LASF130
 6882 0c55 02       		.byte	0x2
 6883 0c56 5E04     		.2byte	0x45e
 6884 0c58 83000000 		.4byte	0x83
 6885 0c5c 02       		.uleb128 0x2
 6886 0c5d 91       		.byte	0x91
 6887 0c5e 64       		.sleb128 -28
 6888 0c5f 20       		.uleb128 0x20
 6889 0c60 6900     		.ascii	"i\000"
 6890 0c62 02       		.byte	0x2
 6891 0c63 6004     		.2byte	0x460
 6892 0c65 83000000 		.4byte	0x83
 6893 0c69 02       		.uleb128 0x2
 6894 0c6a 91       		.byte	0x91
 6895 0c6b 74       		.sleb128 -12
 6896 0c6c 12       		.uleb128 0x12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 172


 6897 0c6d ED070000 		.4byte	.LASF131
 6898 0c71 02       		.byte	0x2
 6899 0c72 6104     		.2byte	0x461
 6900 0c74 83000000 		.4byte	0x83
 6901 0c78 02       		.uleb128 0x2
 6902 0c79 91       		.byte	0x91
 6903 0c7a 70       		.sleb128 -16
 6904 0c7b 12       		.uleb128 0x12
 6905 0c7c 23000000 		.4byte	.LASF37
 6906 0c80 02       		.byte	0x2
 6907 0c81 6204     		.2byte	0x462
 6908 0c83 83000000 		.4byte	0x83
 6909 0c87 02       		.uleb128 0x2
 6910 0c88 91       		.byte	0x91
 6911 0c89 6C       		.sleb128 -20
 6912 0c8a 00       		.byte	0
 6913 0c8b 1F       		.uleb128 0x1f
 6914 0c8c 5D030000 		.4byte	.LASF132
 6915 0c90 02       		.byte	0x2
 6916 0c91 8404     		.2byte	0x484
 6917 0c93 83000000 		.4byte	0x83
 6918 0c97 00000000 		.4byte	.LFB53
 6919 0c9b 60000000 		.4byte	.LFE53-.LFB53
 6920 0c9f 01       		.uleb128 0x1
 6921 0ca0 9C       		.byte	0x9c
 6922 0ca1 E20C0000 		.4byte	0xce2
 6923 0ca5 10       		.uleb128 0x10
 6924 0ca6 74060000 		.4byte	.LASF133
 6925 0caa 02       		.byte	0x2
 6926 0cab 8404     		.2byte	0x484
 6927 0cad 83000000 		.4byte	0x83
 6928 0cb1 02       		.uleb128 0x2
 6929 0cb2 91       		.byte	0x91
 6930 0cb3 64       		.sleb128 -28
 6931 0cb4 12       		.uleb128 0x12
 6932 0cb5 73020000 		.4byte	.LASF134
 6933 0cb9 02       		.byte	0x2
 6934 0cba 8604     		.2byte	0x486
 6935 0cbc 83000000 		.4byte	0x83
 6936 0cc0 02       		.uleb128 0x2
 6937 0cc1 91       		.byte	0x91
 6938 0cc2 74       		.sleb128 -12
 6939 0cc3 12       		.uleb128 0x12
 6940 0cc4 99070000 		.4byte	.LASF66
 6941 0cc8 02       		.byte	0x2
 6942 0cc9 8704     		.2byte	0x487
 6943 0ccb 83000000 		.4byte	0x83
 6944 0ccf 02       		.uleb128 0x2
 6945 0cd0 91       		.byte	0x91
 6946 0cd1 70       		.sleb128 -16
 6947 0cd2 12       		.uleb128 0x12
 6948 0cd3 23000000 		.4byte	.LASF37
 6949 0cd7 02       		.byte	0x2
 6950 0cd8 8804     		.2byte	0x488
 6951 0cda 83000000 		.4byte	0x83
 6952 0cde 02       		.uleb128 0x2
 6953 0cdf 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 173


 6954 0ce0 6C       		.sleb128 -20
 6955 0ce1 00       		.byte	0
 6956 0ce2 18       		.uleb128 0x18
 6957 0ce3 60080000 		.4byte	.LASF135
 6958 0ce7 02       		.byte	0x2
 6959 0ce8 B704     		.2byte	0x4b7
 6960 0cea 00000000 		.4byte	.LFB54
 6961 0cee 70010000 		.4byte	.LFE54-.LFB54
 6962 0cf2 01       		.uleb128 0x1
 6963 0cf3 9C       		.byte	0x9c
 6964 0cf4 0B0D0000 		.4byte	0xd0b
 6965 0cf8 12       		.uleb128 0x12
 6966 0cf9 A5080000 		.4byte	.LASF136
 6967 0cfd 02       		.byte	0x2
 6968 0cfe B904     		.2byte	0x4b9
 6969 0d00 B0000000 		.4byte	0xb0
 6970 0d04 05       		.uleb128 0x5
 6971 0d05 03       		.byte	0x3
 6972 0d06 2C000000 		.4byte	RTC_1_currentTickNumber.5161
 6973 0d0a 00       		.byte	0
 6974 0d0b 1F       		.uleb128 0x1f
 6975 0d0c 32080000 		.4byte	.LASF137
 6976 0d10 02       		.byte	0x2
 6977 0d11 F204     		.2byte	0x4f2
 6978 0d13 9D000000 		.4byte	0x9d
 6979 0d17 00000000 		.4byte	.LFB55
 6980 0d1b 90010000 		.4byte	.LFE55-.LFB55
 6981 0d1f 01       		.uleb128 0x1
 6982 0d20 9C       		.byte	0x9c
 6983 0d21 8D0D0000 		.4byte	0xd8d
 6984 0d25 10       		.uleb128 0x10
 6985 0d26 1A080000 		.4byte	.LASF51
 6986 0d2a 02       		.byte	0x2
 6987 0d2b F204     		.2byte	0x4f2
 6988 0d2d 83000000 		.4byte	0x83
 6989 0d31 02       		.uleb128 0x2
 6990 0d32 91       		.byte	0x91
 6991 0d33 4C       		.sleb128 -52
 6992 0d34 10       		.uleb128 0x10
 6993 0d35 89060000 		.4byte	.LASF36
 6994 0d39 02       		.byte	0x2
 6995 0d3a F204     		.2byte	0x4f2
 6996 0d3c 83000000 		.4byte	0x83
 6997 0d40 02       		.uleb128 0x2
 6998 0d41 91       		.byte	0x91
 6999 0d42 48       		.sleb128 -56
 7000 0d43 20       		.uleb128 0x20
 7001 0d44 6900     		.ascii	"i\000"
 7002 0d46 02       		.byte	0x2
 7003 0d47 F404     		.2byte	0x4f4
 7004 0d49 83000000 		.4byte	0x83
 7005 0d4d 02       		.uleb128 0x2
 7006 0d4e 91       		.byte	0x91
 7007 0d4f 64       		.sleb128 -28
 7008 0d50 12       		.uleb128 0x12
 7009 0d51 2A040000 		.4byte	.LASF83
 7010 0d55 02       		.byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 174


 7011 0d56 F504     		.2byte	0x4f5
 7012 0d58 83000000 		.4byte	0x83
 7013 0d5c 02       		.uleb128 0x2
 7014 0d5d 91       		.byte	0x91
 7015 0d5e 54       		.sleb128 -44
 7016 0d5f 12       		.uleb128 0x12
 7017 0d60 EC000000 		.4byte	.LASF82
 7018 0d64 02       		.byte	0x2
 7019 0d65 F604     		.2byte	0x4f6
 7020 0d67 83000000 		.4byte	0x83
 7021 0d6b 02       		.uleb128 0x2
 7022 0d6c 91       		.byte	0x91
 7023 0d6d 50       		.sleb128 -48
 7024 0d6e 12       		.uleb128 0x12
 7025 0d6f 99070000 		.4byte	.LASF66
 7026 0d73 02       		.byte	0x2
 7027 0d74 F704     		.2byte	0x4f7
 7028 0d76 83000000 		.4byte	0x83
 7029 0d7a 02       		.uleb128 0x2
 7030 0d7b 91       		.byte	0x91
 7031 0d7c 60       		.sleb128 -32
 7032 0d7d 12       		.uleb128 0x12
 7033 0d7e BD080000 		.4byte	.LASF85
 7034 0d82 02       		.byte	0x2
 7035 0d83 F804     		.2byte	0x4f8
 7036 0d85 9D000000 		.4byte	0x9d
 7037 0d89 02       		.uleb128 0x2
 7038 0d8a 91       		.byte	0x91
 7039 0d8b 58       		.sleb128 -40
 7040 0d8c 00       		.byte	0
 7041 0d8d 18       		.uleb128 0x18
 7042 0d8e FC040000 		.4byte	.LASF138
 7043 0d92 02       		.byte	0x2
 7044 0d93 5505     		.2byte	0x555
 7045 0d95 00000000 		.4byte	.LFB56
 7046 0d99 AC020000 		.4byte	.LFE56-.LFB56
 7047 0d9d 01       		.uleb128 0x1
 7048 0d9e 9C       		.byte	0x9c
 7049 0d9f 3B0E0000 		.4byte	0xe3b
 7050 0da3 10       		.uleb128 0x10
 7051 0da4 00000000 		.4byte	.LASF94
 7052 0da8 02       		.byte	0x2
 7053 0da9 5505     		.2byte	0x555
 7054 0dab D6080000 		.4byte	0x8d6
 7055 0daf 02       		.uleb128 0x2
 7056 0db0 91       		.byte	0x91
 7057 0db1 44       		.sleb128 -60
 7058 0db2 10       		.uleb128 0x10
 7059 0db3 BD080000 		.4byte	.LASF85
 7060 0db7 02       		.byte	0x2
 7061 0db8 5505     		.2byte	0x555
 7062 0dba 9D000000 		.4byte	0x9d
 7063 0dbe 03       		.uleb128 0x3
 7064 0dbf 91       		.byte	0x91
 7065 0dc0 B87F     		.sleb128 -72
 7066 0dc2 10       		.uleb128 0x10
 7067 0dc3 52030000 		.4byte	.LASF29
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 175


 7068 0dc7 02       		.byte	0x2
 7069 0dc8 5505     		.2byte	0x555
 7070 0dca 83000000 		.4byte	0x83
 7071 0dce 02       		.uleb128 0x2
 7072 0dcf 91       		.byte	0x91
 7073 0dd0 00       		.sleb128 0
 7074 0dd1 12       		.uleb128 0x12
 7075 0dd2 91000000 		.4byte	.LASF139
 7076 0dd6 02       		.byte	0x2
 7077 0dd7 5705     		.2byte	0x557
 7078 0dd9 83000000 		.4byte	0x83
 7079 0ddd 02       		.uleb128 0x2
 7080 0dde 91       		.byte	0x91
 7081 0ddf 4C       		.sleb128 -52
 7082 0de0 12       		.uleb128 0x12
 7083 0de1 CA050000 		.4byte	.LASF140
 7084 0de5 02       		.byte	0x2
 7085 0de6 5805     		.2byte	0x558
 7086 0de8 83000000 		.4byte	0x83
 7087 0dec 02       		.uleb128 0x2
 7088 0ded 91       		.byte	0x91
 7089 0dee 64       		.sleb128 -28
 7090 0def 12       		.uleb128 0x12
 7091 0df0 34010000 		.4byte	.LASF141
 7092 0df4 02       		.byte	0x2
 7093 0df5 5905     		.2byte	0x559
 7094 0df7 83000000 		.4byte	0x83
 7095 0dfb 02       		.uleb128 0x2
 7096 0dfc 91       		.byte	0x91
 7097 0dfd 60       		.sleb128 -32
 7098 0dfe 12       		.uleb128 0x12
 7099 0dff 09000000 		.4byte	.LASF81
 7100 0e03 02       		.byte	0x2
 7101 0e04 5B05     		.2byte	0x55b
 7102 0e06 83000000 		.4byte	0x83
 7103 0e0a 02       		.uleb128 0x2
 7104 0e0b 91       		.byte	0x91
 7105 0e0c 50       		.sleb128 -48
 7106 0e0d 12       		.uleb128 0x12
 7107 0e0e EC000000 		.4byte	.LASF82
 7108 0e12 02       		.byte	0x2
 7109 0e13 5C05     		.2byte	0x55c
 7110 0e15 83000000 		.4byte	0x83
 7111 0e19 02       		.uleb128 0x2
 7112 0e1a 91       		.byte	0x91
 7113 0e1b 5C       		.sleb128 -36
 7114 0e1c 12       		.uleb128 0x12
 7115 0e1d 2A040000 		.4byte	.LASF83
 7116 0e21 02       		.byte	0x2
 7117 0e22 5D05     		.2byte	0x55d
 7118 0e24 83000000 		.4byte	0x83
 7119 0e28 02       		.uleb128 0x2
 7120 0e29 91       		.byte	0x91
 7121 0e2a 58       		.sleb128 -40
 7122 0e2b 12       		.uleb128 0x12
 7123 0e2c B2070000 		.4byte	.LASF142
 7124 0e30 02       		.byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 176


 7125 0e31 5F05     		.2byte	0x55f
 7126 0e33 83000000 		.4byte	0x83
 7127 0e37 02       		.uleb128 0x2
 7128 0e38 91       		.byte	0x91
 7129 0e39 54       		.sleb128 -44
 7130 0e3a 00       		.byte	0
 7131 0e3b 1F       		.uleb128 0x1f
 7132 0e3c 80040000 		.4byte	.LASF143
 7133 0e40 02       		.byte	0x2
 7134 0e41 DB05     		.2byte	0x5db
 7135 0e43 83000000 		.4byte	0x83
 7136 0e47 00000000 		.4byte	.LFB57
 7137 0e4b 82000000 		.4byte	.LFE57-.LFB57
 7138 0e4f 01       		.uleb128 0x1
 7139 0e50 9C       		.byte	0x9c
 7140 0e51 DD0E0000 		.4byte	0xedd
 7141 0e55 10       		.uleb128 0x10
 7142 0e56 A7040000 		.4byte	.LASF22
 7143 0e5a 02       		.byte	0x2
 7144 0e5b DB05     		.2byte	0x5db
 7145 0e5d 83000000 		.4byte	0x83
 7146 0e61 02       		.uleb128 0x2
 7147 0e62 91       		.byte	0x91
 7148 0e63 5C       		.sleb128 -36
 7149 0e64 10       		.uleb128 0x10
 7150 0e65 04010000 		.4byte	.LASF27
 7151 0e69 02       		.byte	0x2
 7152 0e6a DB05     		.2byte	0x5db
 7153 0e6c 83000000 		.4byte	0x83
 7154 0e70 02       		.uleb128 0x2
 7155 0e71 91       		.byte	0x91
 7156 0e72 58       		.sleb128 -40
 7157 0e73 10       		.uleb128 0x10
 7158 0e74 32030000 		.4byte	.LASF28
 7159 0e78 02       		.byte	0x2
 7160 0e79 DB05     		.2byte	0x5db
 7161 0e7b 83000000 		.4byte	0x83
 7162 0e7f 02       		.uleb128 0x2
 7163 0e80 91       		.byte	0x91
 7164 0e81 54       		.sleb128 -44
 7165 0e82 10       		.uleb128 0x10
 7166 0e83 D9010000 		.4byte	.LASF34
 7167 0e87 02       		.byte	0x2
 7168 0e88 DB05     		.2byte	0x5db
 7169 0e8a 83000000 		.4byte	0x83
 7170 0e8e 02       		.uleb128 0x2
 7171 0e8f 91       		.byte	0x91
 7172 0e90 50       		.sleb128 -48
 7173 0e91 12       		.uleb128 0x12
 7174 0e92 36020000 		.4byte	.LASF63
 7175 0e96 02       		.byte	0x2
 7176 0e97 DD05     		.2byte	0x5dd
 7177 0e99 83000000 		.4byte	0x83
 7178 0e9d 02       		.uleb128 0x2
 7179 0e9e 91       		.byte	0x91
 7180 0e9f 74       		.sleb128 -12
 7181 0ea0 12       		.uleb128 0x12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 177


 7182 0ea1 89030000 		.4byte	.LASF144
 7183 0ea5 02       		.byte	0x2
 7184 0ea6 DE05     		.2byte	0x5de
 7185 0ea8 83000000 		.4byte	0x83
 7186 0eac 02       		.uleb128 0x2
 7187 0ead 91       		.byte	0x91
 7188 0eae 70       		.sleb128 -16
 7189 0eaf 12       		.uleb128 0x12
 7190 0eb0 48010000 		.4byte	.LASF65
 7191 0eb4 02       		.byte	0x2
 7192 0eb5 DF05     		.2byte	0x5df
 7193 0eb7 83000000 		.4byte	0x83
 7194 0ebb 02       		.uleb128 0x2
 7195 0ebc 91       		.byte	0x91
 7196 0ebd 68       		.sleb128 -24
 7197 0ebe 12       		.uleb128 0x12
 7198 0ebf B1040000 		.4byte	.LASF145
 7199 0ec3 02       		.byte	0x2
 7200 0ec4 E005     		.2byte	0x5e0
 7201 0ec6 83000000 		.4byte	0x83
 7202 0eca 02       		.uleb128 0x2
 7203 0ecb 91       		.byte	0x91
 7204 0ecc 6C       		.sleb128 -20
 7205 0ecd 12       		.uleb128 0x12
 7206 0ece 23000000 		.4byte	.LASF37
 7207 0ed2 02       		.byte	0x2
 7208 0ed3 E205     		.2byte	0x5e2
 7209 0ed5 83000000 		.4byte	0x83
 7210 0ed9 02       		.uleb128 0x2
 7211 0eda 91       		.byte	0x91
 7212 0edb 64       		.sleb128 -28
 7213 0edc 00       		.byte	0
 7214 0edd 1F       		.uleb128 0x1f
 7215 0ede 32090000 		.4byte	.LASF146
 7216 0ee2 02       		.byte	0x2
 7217 0ee3 1606     		.2byte	0x616
 7218 0ee5 83000000 		.4byte	0x83
 7219 0ee9 00000000 		.4byte	.LFB58
 7220 0eed 3C000000 		.4byte	.LFE58-.LFB58
 7221 0ef1 01       		.uleb128 0x1
 7222 0ef2 9C       		.byte	0x9c
 7223 0ef3 250F0000 		.4byte	0xf25
 7224 0ef7 10       		.uleb128 0x10
 7225 0ef8 32030000 		.4byte	.LASF28
 7226 0efc 02       		.byte	0x2
 7227 0efd 1606     		.2byte	0x616
 7228 0eff 83000000 		.4byte	0x83
 7229 0f03 02       		.uleb128 0x2
 7230 0f04 91       		.byte	0x91
 7231 0f05 6C       		.sleb128 -20
 7232 0f06 10       		.uleb128 0x10
 7233 0f07 D9010000 		.4byte	.LASF34
 7234 0f0b 02       		.byte	0x2
 7235 0f0c 1606     		.2byte	0x616
 7236 0f0e 83000000 		.4byte	0x83
 7237 0f12 02       		.uleb128 0x2
 7238 0f13 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 178


 7239 0f14 68       		.sleb128 -24
 7240 0f15 12       		.uleb128 0x12
 7241 0f16 23000000 		.4byte	.LASF37
 7242 0f1a 02       		.byte	0x2
 7243 0f1b 1806     		.2byte	0x618
 7244 0f1d 83000000 		.4byte	0x83
 7245 0f21 02       		.uleb128 0x2
 7246 0f22 91       		.byte	0x91
 7247 0f23 74       		.sleb128 -12
 7248 0f24 00       		.byte	0
 7249 0f25 1F       		.uleb128 0x1f
 7250 0f26 9B000000 		.4byte	.LASF147
 7251 0f2a 02       		.byte	0x2
 7252 0f2b 4606     		.2byte	0x646
 7253 0f2d 83000000 		.4byte	0x83
 7254 0f31 00000000 		.4byte	.LFB59
 7255 0f35 3C000000 		.4byte	.LFE59-.LFB59
 7256 0f39 01       		.uleb128 0x1
 7257 0f3a 9C       		.byte	0x9c
 7258 0f3b 6D0F0000 		.4byte	0xf6d
 7259 0f3f 10       		.uleb128 0x10
 7260 0f40 32030000 		.4byte	.LASF28
 7261 0f44 02       		.byte	0x2
 7262 0f45 4606     		.2byte	0x646
 7263 0f47 83000000 		.4byte	0x83
 7264 0f4b 02       		.uleb128 0x2
 7265 0f4c 91       		.byte	0x91
 7266 0f4d 6C       		.sleb128 -20
 7267 0f4e 10       		.uleb128 0x10
 7268 0f4f D9010000 		.4byte	.LASF34
 7269 0f53 02       		.byte	0x2
 7270 0f54 4606     		.2byte	0x646
 7271 0f56 83000000 		.4byte	0x83
 7272 0f5a 02       		.uleb128 0x2
 7273 0f5b 91       		.byte	0x91
 7274 0f5c 68       		.sleb128 -24
 7275 0f5d 12       		.uleb128 0x12
 7276 0f5e 23000000 		.4byte	.LASF37
 7277 0f62 02       		.byte	0x2
 7278 0f63 4806     		.2byte	0x648
 7279 0f65 83000000 		.4byte	0x83
 7280 0f69 02       		.uleb128 0x2
 7281 0f6a 91       		.byte	0x91
 7282 0f6b 74       		.sleb128 -12
 7283 0f6c 00       		.byte	0
 7284 0f6d 16       		.uleb128 0x16
 7285 0f6e 7F050000 		.4byte	.LASF148
 7286 0f72 02       		.byte	0x2
 7287 0f73 17       		.byte	0x17
 7288 0f74 83000000 		.4byte	0x83
 7289 0f78 05       		.uleb128 0x5
 7290 0f79 03       		.byte	0x3
 7291 0f7a 00000000 		.4byte	RTC_1_updateTimePeriod
 7292 0f7e 16       		.uleb128 0x16
 7293 0f7f 000A0000 		.4byte	.LASF149
 7294 0f83 02       		.byte	0x2
 7295 0f84 18       		.byte	0x18
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 179


 7296 0f85 83000000 		.4byte	0x83
 7297 0f89 05       		.uleb128 0x5
 7298 0f8a 03       		.byte	0x3
 7299 0f8b 04000000 		.4byte	RTC_1_tickRefOneSec
 7300 0f8f 16       		.uleb128 0x16
 7301 0f90 C8000000 		.4byte	.LASF150
 7302 0f94 02       		.byte	0x2
 7303 0f95 1B       		.byte	0x1b
 7304 0f96 83000000 		.4byte	0x83
 7305 0f9a 05       		.uleb128 0x5
 7306 0f9b 03       		.byte	0x3
 7307 0f9c 08000000 		.4byte	RTC_1_dstTimeOffset
 7308 0fa0 16       		.uleb128 0x16
 7309 0fa1 08030000 		.4byte	.LASF151
 7310 0fa5 02       		.byte	0x2
 7311 0fa6 1D       		.byte	0x1d
 7312 0fa7 B10F0000 		.4byte	0xfb1
 7313 0fab 05       		.uleb128 0x5
 7314 0fac 03       		.byte	0x3
 7315 0fad 10000000 		.4byte	RTC_1_unixTimeDstStart
 7316 0fb1 05       		.uleb128 0x5
 7317 0fb2 9D000000 		.4byte	0x9d
 7318 0fb6 16       		.uleb128 0x16
 7319 0fb7 2F050000 		.4byte	.LASF152
 7320 0fbb 02       		.byte	0x2
 7321 0fbc 1E       		.byte	0x1e
 7322 0fbd B10F0000 		.4byte	0xfb1
 7323 0fc1 05       		.uleb128 0x5
 7324 0fc2 03       		.byte	0x3
 7325 0fc3 18000000 		.4byte	RTC_1_unixTimeDstStop
 7326 0fc7 16       		.uleb128 0x16
 7327 0fc8 70070000 		.4byte	.LASF153
 7328 0fcc 02       		.byte	0x2
 7329 0fcd 26       		.byte	0x26
 7330 0fce B10F0000 		.4byte	0xfb1
 7331 0fd2 05       		.uleb128 0x5
 7332 0fd3 03       		.byte	0x3
 7333 0fd4 20000000 		.4byte	RTC_1_unixTimeAlarm
 7334 0fd8 21       		.uleb128 0x21
 7335 0fd9 62070000 		.4byte	.LASF154
 7336 0fdd 02       		.byte	0x2
 7337 0fde 12       		.byte	0x12
 7338 0fdf 6B000000 		.4byte	0x6b
 7339 0fe3 05       		.uleb128 0x5
 7340 0fe4 03       		.byte	0x3
 7341 0fe5 00000000 		.4byte	RTC_1_initVar
 7342 0fe9 21       		.uleb128 0x21
 7343 0fea DC000000 		.4byte	.LASF155
 7344 0fee 02       		.byte	0x2
 7345 0fef 1A       		.byte	0x1a
 7346 0ff0 6B000000 		.4byte	0x6b
 7347 0ff4 05       		.uleb128 0x5
 7348 0ff5 03       		.byte	0x3
 7349 0ff6 00000000 		.4byte	RTC_1_dstStatus
 7350 0ffa 21       		.uleb128 0x21
 7351 0ffb 4F040000 		.4byte	.LASF156
 7352 0fff 02       		.byte	0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 180


 7353 1000 14       		.byte	0x14
 7354 1001 B10F0000 		.4byte	0xfb1
 7355 1005 05       		.uleb128 0x5
 7356 1006 03       		.byte	0x3
 7357 1007 00000000 		.4byte	RTC_1_unixTime
 7358 100b 21       		.uleb128 0x21
 7359 100c F9060000 		.4byte	.LASF157
 7360 1010 02       		.byte	0x2
 7361 1011 1F       		.byte	0x1f
 7362 1012 7A010000 		.4byte	0x17a
 7363 1016 05       		.uleb128 0x5
 7364 1017 03       		.byte	0x3
 7365 1018 00000000 		.4byte	RTC_1_dstStartTime
 7366 101c 21       		.uleb128 0x21
 7367 101d D2080000 		.4byte	.LASF158
 7368 1021 02       		.byte	0x2
 7369 1022 20       		.byte	0x20
 7370 1023 7A010000 		.4byte	0x17a
 7371 1027 05       		.uleb128 0x5
 7372 1028 03       		.byte	0x3
 7373 1029 00000000 		.4byte	RTC_1_dstStopTime
 7374 102d 21       		.uleb128 0x21
 7375 102e 73030000 		.4byte	.LASF159
 7376 1032 02       		.byte	0x2
 7377 1033 15       		.byte	0x15
 7378 1034 1E010000 		.4byte	0x11e
 7379 1038 05       		.uleb128 0x5
 7380 1039 03       		.byte	0x3
 7381 103a 00000000 		.4byte	RTC_1_currentTimeDate
 7382 103e 21       		.uleb128 0x21
 7383 103f 68050000 		.4byte	.LASF160
 7384 1043 02       		.byte	0x2
 7385 1044 27       		.byte	0x27
 7386 1045 1E010000 		.4byte	0x11e
 7387 1049 05       		.uleb128 0x5
 7388 104a 03       		.byte	0x3
 7389 104b 00000000 		.4byte	RTC_1_alarmCfgTimeDate
 7390 104f 21       		.uleb128 0x21
 7391 1050 B5020000 		.4byte	.LASF161
 7392 1054 02       		.byte	0x2
 7393 1055 25       		.byte	0x25
 7394 1056 83000000 		.4byte	0x83
 7395 105a 05       		.uleb128 0x5
 7396 105b 03       		.byte	0x3
 7397 105c 00000000 		.4byte	RTC_1_alarmCfgMask
 7398 1060 21       		.uleb128 0x21
 7399 1061 91030000 		.4byte	.LASF162
 7400 1065 02       		.byte	0x2
 7401 1066 23       		.byte	0x23
 7402 1067 83000000 		.4byte	0x83
 7403 106b 05       		.uleb128 0x5
 7404 106c 03       		.byte	0x3
 7405 106d 00000000 		.4byte	RTC_1_alarmCurStatus
 7406 1071 21       		.uleb128 0x21
 7407 1072 A1010000 		.4byte	.LASF163
 7408 1076 02       		.byte	0x2
 7409 1077 28       		.byte	0x28
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 181


 7410 1078 B5000000 		.4byte	0xb5
 7411 107c 05       		.uleb128 0x5
 7412 107d 03       		.byte	0x3
 7413 107e 00000000 		.4byte	RTC_1_alarmCallbackPtr
 7414 1082 22       		.uleb128 0x22
 7415 1083 77000000 		.4byte	0x77
 7416 1087 92100000 		.4byte	0x1092
 7417 108b 23       		.uleb128 0x23
 7418 108c BC000000 		.4byte	0xbc
 7419 1090 0B       		.byte	0xb
 7420 1091 00       		.byte	0
 7421 1092 21       		.uleb128 0x21
 7422 1093 A5050000 		.4byte	.LASF164
 7423 1097 02       		.byte	0x2
 7424 1098 2B       		.byte	0x2b
 7425 1099 A3100000 		.4byte	0x10a3
 7426 109d 05       		.uleb128 0x5
 7427 109e 03       		.byte	0x3
 7428 109f 00000000 		.4byte	RTC_1_daysBeforeMonthTbl
 7429 10a3 1C       		.uleb128 0x1c
 7430 10a4 82100000 		.4byte	0x1082
 7431 10a8 22       		.uleb128 0x22
 7432 10a9 6B000000 		.4byte	0x6b
 7433 10ad B8100000 		.4byte	0x10b8
 7434 10b1 23       		.uleb128 0x23
 7435 10b2 BC000000 		.4byte	0xbc
 7436 10b6 0B       		.byte	0xb
 7437 10b7 00       		.byte	0
 7438 10b8 21       		.uleb128 0x21
 7439 10b9 0A040000 		.4byte	.LASF165
 7440 10bd 02       		.byte	0x2
 7441 10be 39       		.byte	0x39
 7442 10bf C9100000 		.4byte	0x10c9
 7443 10c3 05       		.uleb128 0x5
 7444 10c4 03       		.byte	0x3
 7445 10c5 00000000 		.4byte	RTC_1_daysInMonthTbl
 7446 10c9 1C       		.uleb128 0x1c
 7447 10ca A8100000 		.4byte	0x10a8
 7448 10ce 00       		.byte	0
 7449              		.section	.debug_abbrev,"",%progbits
 7450              	.Ldebug_abbrev0:
 7451 0000 01       		.uleb128 0x1
 7452 0001 11       		.uleb128 0x11
 7453 0002 01       		.byte	0x1
 7454 0003 25       		.uleb128 0x25
 7455 0004 0E       		.uleb128 0xe
 7456 0005 13       		.uleb128 0x13
 7457 0006 0B       		.uleb128 0xb
 7458 0007 03       		.uleb128 0x3
 7459 0008 0E       		.uleb128 0xe
 7460 0009 1B       		.uleb128 0x1b
 7461 000a 0E       		.uleb128 0xe
 7462 000b 55       		.uleb128 0x55
 7463 000c 17       		.uleb128 0x17
 7464 000d 11       		.uleb128 0x11
 7465 000e 01       		.uleb128 0x1
 7466 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 182


 7467 0010 17       		.uleb128 0x17
 7468 0011 00       		.byte	0
 7469 0012 00       		.byte	0
 7470 0013 02       		.uleb128 0x2
 7471 0014 24       		.uleb128 0x24
 7472 0015 00       		.byte	0
 7473 0016 0B       		.uleb128 0xb
 7474 0017 0B       		.uleb128 0xb
 7475 0018 3E       		.uleb128 0x3e
 7476 0019 0B       		.uleb128 0xb
 7477 001a 03       		.uleb128 0x3
 7478 001b 0E       		.uleb128 0xe
 7479 001c 00       		.byte	0
 7480 001d 00       		.byte	0
 7481 001e 03       		.uleb128 0x3
 7482 001f 24       		.uleb128 0x24
 7483 0020 00       		.byte	0
 7484 0021 0B       		.uleb128 0xb
 7485 0022 0B       		.uleb128 0xb
 7486 0023 3E       		.uleb128 0x3e
 7487 0024 0B       		.uleb128 0xb
 7488 0025 03       		.uleb128 0x3
 7489 0026 08       		.uleb128 0x8
 7490 0027 00       		.byte	0
 7491 0028 00       		.byte	0
 7492 0029 04       		.uleb128 0x4
 7493 002a 16       		.uleb128 0x16
 7494 002b 00       		.byte	0
 7495 002c 03       		.uleb128 0x3
 7496 002d 0E       		.uleb128 0xe
 7497 002e 3A       		.uleb128 0x3a
 7498 002f 0B       		.uleb128 0xb
 7499 0030 3B       		.uleb128 0x3b
 7500 0031 05       		.uleb128 0x5
 7501 0032 49       		.uleb128 0x49
 7502 0033 13       		.uleb128 0x13
 7503 0034 00       		.byte	0
 7504 0035 00       		.byte	0
 7505 0036 05       		.uleb128 0x5
 7506 0037 35       		.uleb128 0x35
 7507 0038 00       		.byte	0
 7508 0039 49       		.uleb128 0x49
 7509 003a 13       		.uleb128 0x13
 7510 003b 00       		.byte	0
 7511 003c 00       		.byte	0
 7512 003d 06       		.uleb128 0x6
 7513 003e 0F       		.uleb128 0xf
 7514 003f 00       		.byte	0
 7515 0040 0B       		.uleb128 0xb
 7516 0041 0B       		.uleb128 0xb
 7517 0042 49       		.uleb128 0x49
 7518 0043 13       		.uleb128 0x13
 7519 0044 00       		.byte	0
 7520 0045 00       		.byte	0
 7521 0046 07       		.uleb128 0x7
 7522 0047 15       		.uleb128 0x15
 7523 0048 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 183


 7524 0049 27       		.uleb128 0x27
 7525 004a 19       		.uleb128 0x19
 7526 004b 00       		.byte	0
 7527 004c 00       		.byte	0
 7528 004d 08       		.uleb128 0x8
 7529 004e 0F       		.uleb128 0xf
 7530 004f 00       		.byte	0
 7531 0050 0B       		.uleb128 0xb
 7532 0051 0B       		.uleb128 0xb
 7533 0052 00       		.byte	0
 7534 0053 00       		.byte	0
 7535 0054 09       		.uleb128 0x9
 7536 0055 04       		.uleb128 0x4
 7537 0056 01       		.byte	0x1
 7538 0057 0B       		.uleb128 0xb
 7539 0058 0B       		.uleb128 0xb
 7540 0059 3A       		.uleb128 0x3a
 7541 005a 0B       		.uleb128 0xb
 7542 005b 3B       		.uleb128 0x3b
 7543 005c 0B       		.uleb128 0xb
 7544 005d 01       		.uleb128 0x1
 7545 005e 13       		.uleb128 0x13
 7546 005f 00       		.byte	0
 7547 0060 00       		.byte	0
 7548 0061 0A       		.uleb128 0xa
 7549 0062 28       		.uleb128 0x28
 7550 0063 00       		.byte	0
 7551 0064 03       		.uleb128 0x3
 7552 0065 0E       		.uleb128 0xe
 7553 0066 1C       		.uleb128 0x1c
 7554 0067 0D       		.uleb128 0xd
 7555 0068 00       		.byte	0
 7556 0069 00       		.byte	0
 7557 006a 0B       		.uleb128 0xb
 7558 006b 16       		.uleb128 0x16
 7559 006c 00       		.byte	0
 7560 006d 03       		.uleb128 0x3
 7561 006e 0E       		.uleb128 0xe
 7562 006f 3A       		.uleb128 0x3a
 7563 0070 0B       		.uleb128 0xb
 7564 0071 3B       		.uleb128 0x3b
 7565 0072 0B       		.uleb128 0xb
 7566 0073 49       		.uleb128 0x49
 7567 0074 13       		.uleb128 0x13
 7568 0075 00       		.byte	0
 7569 0076 00       		.byte	0
 7570 0077 0C       		.uleb128 0xc
 7571 0078 13       		.uleb128 0x13
 7572 0079 01       		.byte	0x1
 7573 007a 0B       		.uleb128 0xb
 7574 007b 0B       		.uleb128 0xb
 7575 007c 3A       		.uleb128 0x3a
 7576 007d 0B       		.uleb128 0xb
 7577 007e 3B       		.uleb128 0x3b
 7578 007f 0B       		.uleb128 0xb
 7579 0080 01       		.uleb128 0x1
 7580 0081 13       		.uleb128 0x13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 184


 7581 0082 00       		.byte	0
 7582 0083 00       		.byte	0
 7583 0084 0D       		.uleb128 0xd
 7584 0085 0D       		.uleb128 0xd
 7585 0086 00       		.byte	0
 7586 0087 03       		.uleb128 0x3
 7587 0088 0E       		.uleb128 0xe
 7588 0089 3A       		.uleb128 0x3a
 7589 008a 0B       		.uleb128 0xb
 7590 008b 3B       		.uleb128 0x3b
 7591 008c 0B       		.uleb128 0xb
 7592 008d 49       		.uleb128 0x49
 7593 008e 13       		.uleb128 0x13
 7594 008f 38       		.uleb128 0x38
 7595 0090 0B       		.uleb128 0xb
 7596 0091 00       		.byte	0
 7597 0092 00       		.byte	0
 7598 0093 0E       		.uleb128 0xe
 7599 0094 2E       		.uleb128 0x2e
 7600 0095 01       		.byte	0x1
 7601 0096 03       		.uleb128 0x3
 7602 0097 0E       		.uleb128 0xe
 7603 0098 3A       		.uleb128 0x3a
 7604 0099 0B       		.uleb128 0xb
 7605 009a 3B       		.uleb128 0x3b
 7606 009b 05       		.uleb128 0x5
 7607 009c 27       		.uleb128 0x27
 7608 009d 19       		.uleb128 0x19
 7609 009e 49       		.uleb128 0x49
 7610 009f 13       		.uleb128 0x13
 7611 00a0 11       		.uleb128 0x11
 7612 00a1 01       		.uleb128 0x1
 7613 00a2 12       		.uleb128 0x12
 7614 00a3 06       		.uleb128 0x6
 7615 00a4 40       		.uleb128 0x40
 7616 00a5 18       		.uleb128 0x18
 7617 00a6 9742     		.uleb128 0x2117
 7618 00a8 19       		.uleb128 0x19
 7619 00a9 01       		.uleb128 0x1
 7620 00aa 13       		.uleb128 0x13
 7621 00ab 00       		.byte	0
 7622 00ac 00       		.byte	0
 7623 00ad 0F       		.uleb128 0xf
 7624 00ae 05       		.uleb128 0x5
 7625 00af 00       		.byte	0
 7626 00b0 03       		.uleb128 0x3
 7627 00b1 08       		.uleb128 0x8
 7628 00b2 3A       		.uleb128 0x3a
 7629 00b3 0B       		.uleb128 0xb
 7630 00b4 3B       		.uleb128 0x3b
 7631 00b5 05       		.uleb128 0x5
 7632 00b6 49       		.uleb128 0x49
 7633 00b7 13       		.uleb128 0x13
 7634 00b8 02       		.uleb128 0x2
 7635 00b9 18       		.uleb128 0x18
 7636 00ba 00       		.byte	0
 7637 00bb 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 185


 7638 00bc 10       		.uleb128 0x10
 7639 00bd 05       		.uleb128 0x5
 7640 00be 00       		.byte	0
 7641 00bf 03       		.uleb128 0x3
 7642 00c0 0E       		.uleb128 0xe
 7643 00c1 3A       		.uleb128 0x3a
 7644 00c2 0B       		.uleb128 0xb
 7645 00c3 3B       		.uleb128 0x3b
 7646 00c4 05       		.uleb128 0x5
 7647 00c5 49       		.uleb128 0x49
 7648 00c6 13       		.uleb128 0x13
 7649 00c7 02       		.uleb128 0x2
 7650 00c8 18       		.uleb128 0x18
 7651 00c9 00       		.byte	0
 7652 00ca 00       		.byte	0
 7653 00cb 11       		.uleb128 0x11
 7654 00cc 2E       		.uleb128 0x2e
 7655 00cd 01       		.byte	0x1
 7656 00ce 03       		.uleb128 0x3
 7657 00cf 0E       		.uleb128 0xe
 7658 00d0 3A       		.uleb128 0x3a
 7659 00d1 0B       		.uleb128 0xb
 7660 00d2 3B       		.uleb128 0x3b
 7661 00d3 05       		.uleb128 0x5
 7662 00d4 27       		.uleb128 0x27
 7663 00d5 19       		.uleb128 0x19
 7664 00d6 49       		.uleb128 0x49
 7665 00d7 13       		.uleb128 0x13
 7666 00d8 11       		.uleb128 0x11
 7667 00d9 01       		.uleb128 0x1
 7668 00da 12       		.uleb128 0x12
 7669 00db 06       		.uleb128 0x6
 7670 00dc 40       		.uleb128 0x40
 7671 00dd 18       		.uleb128 0x18
 7672 00de 9642     		.uleb128 0x2116
 7673 00e0 19       		.uleb128 0x19
 7674 00e1 01       		.uleb128 0x1
 7675 00e2 13       		.uleb128 0x13
 7676 00e3 00       		.byte	0
 7677 00e4 00       		.byte	0
 7678 00e5 12       		.uleb128 0x12
 7679 00e6 34       		.uleb128 0x34
 7680 00e7 00       		.byte	0
 7681 00e8 03       		.uleb128 0x3
 7682 00e9 0E       		.uleb128 0xe
 7683 00ea 3A       		.uleb128 0x3a
 7684 00eb 0B       		.uleb128 0xb
 7685 00ec 3B       		.uleb128 0x3b
 7686 00ed 05       		.uleb128 0x5
 7687 00ee 49       		.uleb128 0x49
 7688 00ef 13       		.uleb128 0x13
 7689 00f0 02       		.uleb128 0x2
 7690 00f1 18       		.uleb128 0x18
 7691 00f2 00       		.byte	0
 7692 00f3 00       		.byte	0
 7693 00f4 13       		.uleb128 0x13
 7694 00f5 2E       		.uleb128 0x2e
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 186


 7695 00f6 00       		.byte	0
 7696 00f7 3F       		.uleb128 0x3f
 7697 00f8 19       		.uleb128 0x19
 7698 00f9 03       		.uleb128 0x3
 7699 00fa 0E       		.uleb128 0xe
 7700 00fb 3A       		.uleb128 0x3a
 7701 00fc 0B       		.uleb128 0xb
 7702 00fd 3B       		.uleb128 0x3b
 7703 00fe 0B       		.uleb128 0xb
 7704 00ff 27       		.uleb128 0x27
 7705 0100 19       		.uleb128 0x19
 7706 0101 11       		.uleb128 0x11
 7707 0102 01       		.uleb128 0x1
 7708 0103 12       		.uleb128 0x12
 7709 0104 06       		.uleb128 0x6
 7710 0105 40       		.uleb128 0x40
 7711 0106 18       		.uleb128 0x18
 7712 0107 9642     		.uleb128 0x2116
 7713 0109 19       		.uleb128 0x19
 7714 010a 00       		.byte	0
 7715 010b 00       		.byte	0
 7716 010c 14       		.uleb128 0x14
 7717 010d 2E       		.uleb128 0x2e
 7718 010e 00       		.byte	0
 7719 010f 3F       		.uleb128 0x3f
 7720 0110 19       		.uleb128 0x19
 7721 0111 03       		.uleb128 0x3
 7722 0112 0E       		.uleb128 0xe
 7723 0113 3A       		.uleb128 0x3a
 7724 0114 0B       		.uleb128 0xb
 7725 0115 3B       		.uleb128 0x3b
 7726 0116 0B       		.uleb128 0xb
 7727 0117 27       		.uleb128 0x27
 7728 0118 19       		.uleb128 0x19
 7729 0119 11       		.uleb128 0x11
 7730 011a 01       		.uleb128 0x1
 7731 011b 12       		.uleb128 0x12
 7732 011c 06       		.uleb128 0x6
 7733 011d 40       		.uleb128 0x40
 7734 011e 18       		.uleb128 0x18
 7735 011f 9742     		.uleb128 0x2117
 7736 0121 19       		.uleb128 0x19
 7737 0122 00       		.byte	0
 7738 0123 00       		.byte	0
 7739 0124 15       		.uleb128 0x15
 7740 0125 2E       		.uleb128 0x2e
 7741 0126 01       		.byte	0x1
 7742 0127 3F       		.uleb128 0x3f
 7743 0128 19       		.uleb128 0x19
 7744 0129 03       		.uleb128 0x3
 7745 012a 0E       		.uleb128 0xe
 7746 012b 3A       		.uleb128 0x3a
 7747 012c 0B       		.uleb128 0xb
 7748 012d 3B       		.uleb128 0x3b
 7749 012e 0B       		.uleb128 0xb
 7750 012f 27       		.uleb128 0x27
 7751 0130 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 187


 7752 0131 11       		.uleb128 0x11
 7753 0132 01       		.uleb128 0x1
 7754 0133 12       		.uleb128 0x12
 7755 0134 06       		.uleb128 0x6
 7756 0135 40       		.uleb128 0x40
 7757 0136 18       		.uleb128 0x18
 7758 0137 9642     		.uleb128 0x2116
 7759 0139 19       		.uleb128 0x19
 7760 013a 01       		.uleb128 0x1
 7761 013b 13       		.uleb128 0x13
 7762 013c 00       		.byte	0
 7763 013d 00       		.byte	0
 7764 013e 16       		.uleb128 0x16
 7765 013f 34       		.uleb128 0x34
 7766 0140 00       		.byte	0
 7767 0141 03       		.uleb128 0x3
 7768 0142 0E       		.uleb128 0xe
 7769 0143 3A       		.uleb128 0x3a
 7770 0144 0B       		.uleb128 0xb
 7771 0145 3B       		.uleb128 0x3b
 7772 0146 0B       		.uleb128 0xb
 7773 0147 49       		.uleb128 0x49
 7774 0148 13       		.uleb128 0x13
 7775 0149 02       		.uleb128 0x2
 7776 014a 18       		.uleb128 0x18
 7777 014b 00       		.byte	0
 7778 014c 00       		.byte	0
 7779 014d 17       		.uleb128 0x17
 7780 014e 05       		.uleb128 0x5
 7781 014f 00       		.byte	0
 7782 0150 03       		.uleb128 0x3
 7783 0151 0E       		.uleb128 0xe
 7784 0152 3A       		.uleb128 0x3a
 7785 0153 0B       		.uleb128 0xb
 7786 0154 3B       		.uleb128 0x3b
 7787 0155 0B       		.uleb128 0xb
 7788 0156 49       		.uleb128 0x49
 7789 0157 13       		.uleb128 0x13
 7790 0158 02       		.uleb128 0x2
 7791 0159 18       		.uleb128 0x18
 7792 015a 00       		.byte	0
 7793 015b 00       		.byte	0
 7794 015c 18       		.uleb128 0x18
 7795 015d 2E       		.uleb128 0x2e
 7796 015e 01       		.byte	0x1
 7797 015f 3F       		.uleb128 0x3f
 7798 0160 19       		.uleb128 0x19
 7799 0161 03       		.uleb128 0x3
 7800 0162 0E       		.uleb128 0xe
 7801 0163 3A       		.uleb128 0x3a
 7802 0164 0B       		.uleb128 0xb
 7803 0165 3B       		.uleb128 0x3b
 7804 0166 05       		.uleb128 0x5
 7805 0167 27       		.uleb128 0x27
 7806 0168 19       		.uleb128 0x19
 7807 0169 11       		.uleb128 0x11
 7808 016a 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 188


 7809 016b 12       		.uleb128 0x12
 7810 016c 06       		.uleb128 0x6
 7811 016d 40       		.uleb128 0x40
 7812 016e 18       		.uleb128 0x18
 7813 016f 9642     		.uleb128 0x2116
 7814 0171 19       		.uleb128 0x19
 7815 0172 01       		.uleb128 0x1
 7816 0173 13       		.uleb128 0x13
 7817 0174 00       		.byte	0
 7818 0175 00       		.byte	0
 7819 0176 19       		.uleb128 0x19
 7820 0177 2E       		.uleb128 0x2e
 7821 0178 00       		.byte	0
 7822 0179 3F       		.uleb128 0x3f
 7823 017a 19       		.uleb128 0x19
 7824 017b 03       		.uleb128 0x3
 7825 017c 0E       		.uleb128 0xe
 7826 017d 3A       		.uleb128 0x3a
 7827 017e 0B       		.uleb128 0xb
 7828 017f 3B       		.uleb128 0x3b
 7829 0180 05       		.uleb128 0x5
 7830 0181 27       		.uleb128 0x27
 7831 0182 19       		.uleb128 0x19
 7832 0183 49       		.uleb128 0x49
 7833 0184 13       		.uleb128 0x13
 7834 0185 11       		.uleb128 0x11
 7835 0186 01       		.uleb128 0x1
 7836 0187 12       		.uleb128 0x12
 7837 0188 06       		.uleb128 0x6
 7838 0189 40       		.uleb128 0x40
 7839 018a 18       		.uleb128 0x18
 7840 018b 9742     		.uleb128 0x2117
 7841 018d 19       		.uleb128 0x19
 7842 018e 00       		.byte	0
 7843 018f 00       		.byte	0
 7844 0190 1A       		.uleb128 0x1a
 7845 0191 2E       		.uleb128 0x2e
 7846 0192 01       		.byte	0x1
 7847 0193 3F       		.uleb128 0x3f
 7848 0194 19       		.uleb128 0x19
 7849 0195 03       		.uleb128 0x3
 7850 0196 0E       		.uleb128 0xe
 7851 0197 3A       		.uleb128 0x3a
 7852 0198 0B       		.uleb128 0xb
 7853 0199 3B       		.uleb128 0x3b
 7854 019a 05       		.uleb128 0x5
 7855 019b 27       		.uleb128 0x27
 7856 019c 19       		.uleb128 0x19
 7857 019d 11       		.uleb128 0x11
 7858 019e 01       		.uleb128 0x1
 7859 019f 12       		.uleb128 0x12
 7860 01a0 06       		.uleb128 0x6
 7861 01a1 40       		.uleb128 0x40
 7862 01a2 18       		.uleb128 0x18
 7863 01a3 9742     		.uleb128 0x2117
 7864 01a5 19       		.uleb128 0x19
 7865 01a6 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 189


 7866 01a7 13       		.uleb128 0x13
 7867 01a8 00       		.byte	0
 7868 01a9 00       		.byte	0
 7869 01aa 1B       		.uleb128 0x1b
 7870 01ab 2E       		.uleb128 0x2e
 7871 01ac 00       		.byte	0
 7872 01ad 3F       		.uleb128 0x3f
 7873 01ae 19       		.uleb128 0x19
 7874 01af 03       		.uleb128 0x3
 7875 01b0 0E       		.uleb128 0xe
 7876 01b1 3A       		.uleb128 0x3a
 7877 01b2 0B       		.uleb128 0xb
 7878 01b3 3B       		.uleb128 0x3b
 7879 01b4 05       		.uleb128 0x5
 7880 01b5 27       		.uleb128 0x27
 7881 01b6 19       		.uleb128 0x19
 7882 01b7 49       		.uleb128 0x49
 7883 01b8 13       		.uleb128 0x13
 7884 01b9 11       		.uleb128 0x11
 7885 01ba 01       		.uleb128 0x1
 7886 01bb 12       		.uleb128 0x12
 7887 01bc 06       		.uleb128 0x6
 7888 01bd 40       		.uleb128 0x40
 7889 01be 18       		.uleb128 0x18
 7890 01bf 9642     		.uleb128 0x2116
 7891 01c1 19       		.uleb128 0x19
 7892 01c2 00       		.byte	0
 7893 01c3 00       		.byte	0
 7894 01c4 1C       		.uleb128 0x1c
 7895 01c5 26       		.uleb128 0x26
 7896 01c6 00       		.byte	0
 7897 01c7 49       		.uleb128 0x49
 7898 01c8 13       		.uleb128 0x13
 7899 01c9 00       		.byte	0
 7900 01ca 00       		.byte	0
 7901 01cb 1D       		.uleb128 0x1d
 7902 01cc 2E       		.uleb128 0x2e
 7903 01cd 00       		.byte	0
 7904 01ce 3F       		.uleb128 0x3f
 7905 01cf 19       		.uleb128 0x19
 7906 01d0 03       		.uleb128 0x3
 7907 01d1 0E       		.uleb128 0xe
 7908 01d2 3A       		.uleb128 0x3a
 7909 01d3 0B       		.uleb128 0xb
 7910 01d4 3B       		.uleb128 0x3b
 7911 01d5 05       		.uleb128 0x5
 7912 01d6 27       		.uleb128 0x27
 7913 01d7 19       		.uleb128 0x19
 7914 01d8 11       		.uleb128 0x11
 7915 01d9 01       		.uleb128 0x1
 7916 01da 12       		.uleb128 0x12
 7917 01db 06       		.uleb128 0x6
 7918 01dc 40       		.uleb128 0x40
 7919 01dd 18       		.uleb128 0x18
 7920 01de 9742     		.uleb128 0x2117
 7921 01e0 19       		.uleb128 0x19
 7922 01e1 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 190


 7923 01e2 00       		.byte	0
 7924 01e3 1E       		.uleb128 0x1e
 7925 01e4 2E       		.uleb128 0x2e
 7926 01e5 01       		.byte	0x1
 7927 01e6 3F       		.uleb128 0x3f
 7928 01e7 19       		.uleb128 0x19
 7929 01e8 03       		.uleb128 0x3
 7930 01e9 0E       		.uleb128 0xe
 7931 01ea 3A       		.uleb128 0x3a
 7932 01eb 0B       		.uleb128 0xb
 7933 01ec 3B       		.uleb128 0x3b
 7934 01ed 05       		.uleb128 0x5
 7935 01ee 27       		.uleb128 0x27
 7936 01ef 19       		.uleb128 0x19
 7937 01f0 49       		.uleb128 0x49
 7938 01f1 13       		.uleb128 0x13
 7939 01f2 11       		.uleb128 0x11
 7940 01f3 01       		.uleb128 0x1
 7941 01f4 12       		.uleb128 0x12
 7942 01f5 06       		.uleb128 0x6
 7943 01f6 40       		.uleb128 0x40
 7944 01f7 18       		.uleb128 0x18
 7945 01f8 9742     		.uleb128 0x2117
 7946 01fa 19       		.uleb128 0x19
 7947 01fb 01       		.uleb128 0x1
 7948 01fc 13       		.uleb128 0x13
 7949 01fd 00       		.byte	0
 7950 01fe 00       		.byte	0
 7951 01ff 1F       		.uleb128 0x1f
 7952 0200 2E       		.uleb128 0x2e
 7953 0201 01       		.byte	0x1
 7954 0202 3F       		.uleb128 0x3f
 7955 0203 19       		.uleb128 0x19
 7956 0204 03       		.uleb128 0x3
 7957 0205 0E       		.uleb128 0xe
 7958 0206 3A       		.uleb128 0x3a
 7959 0207 0B       		.uleb128 0xb
 7960 0208 3B       		.uleb128 0x3b
 7961 0209 05       		.uleb128 0x5
 7962 020a 27       		.uleb128 0x27
 7963 020b 19       		.uleb128 0x19
 7964 020c 49       		.uleb128 0x49
 7965 020d 13       		.uleb128 0x13
 7966 020e 11       		.uleb128 0x11
 7967 020f 01       		.uleb128 0x1
 7968 0210 12       		.uleb128 0x12
 7969 0211 06       		.uleb128 0x6
 7970 0212 40       		.uleb128 0x40
 7971 0213 18       		.uleb128 0x18
 7972 0214 9642     		.uleb128 0x2116
 7973 0216 19       		.uleb128 0x19
 7974 0217 01       		.uleb128 0x1
 7975 0218 13       		.uleb128 0x13
 7976 0219 00       		.byte	0
 7977 021a 00       		.byte	0
 7978 021b 20       		.uleb128 0x20
 7979 021c 34       		.uleb128 0x34
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 191


 7980 021d 00       		.byte	0
 7981 021e 03       		.uleb128 0x3
 7982 021f 08       		.uleb128 0x8
 7983 0220 3A       		.uleb128 0x3a
 7984 0221 0B       		.uleb128 0xb
 7985 0222 3B       		.uleb128 0x3b
 7986 0223 05       		.uleb128 0x5
 7987 0224 49       		.uleb128 0x49
 7988 0225 13       		.uleb128 0x13
 7989 0226 02       		.uleb128 0x2
 7990 0227 18       		.uleb128 0x18
 7991 0228 00       		.byte	0
 7992 0229 00       		.byte	0
 7993 022a 21       		.uleb128 0x21
 7994 022b 34       		.uleb128 0x34
 7995 022c 00       		.byte	0
 7996 022d 03       		.uleb128 0x3
 7997 022e 0E       		.uleb128 0xe
 7998 022f 3A       		.uleb128 0x3a
 7999 0230 0B       		.uleb128 0xb
 8000 0231 3B       		.uleb128 0x3b
 8001 0232 0B       		.uleb128 0xb
 8002 0233 49       		.uleb128 0x49
 8003 0234 13       		.uleb128 0x13
 8004 0235 3F       		.uleb128 0x3f
 8005 0236 19       		.uleb128 0x19
 8006 0237 02       		.uleb128 0x2
 8007 0238 18       		.uleb128 0x18
 8008 0239 00       		.byte	0
 8009 023a 00       		.byte	0
 8010 023b 22       		.uleb128 0x22
 8011 023c 01       		.uleb128 0x1
 8012 023d 01       		.byte	0x1
 8013 023e 49       		.uleb128 0x49
 8014 023f 13       		.uleb128 0x13
 8015 0240 01       		.uleb128 0x1
 8016 0241 13       		.uleb128 0x13
 8017 0242 00       		.byte	0
 8018 0243 00       		.byte	0
 8019 0244 23       		.uleb128 0x23
 8020 0245 21       		.uleb128 0x21
 8021 0246 00       		.byte	0
 8022 0247 49       		.uleb128 0x49
 8023 0248 13       		.uleb128 0x13
 8024 0249 2F       		.uleb128 0x2f
 8025 024a 0B       		.uleb128 0xb
 8026 024b 00       		.byte	0
 8027 024c 00       		.byte	0
 8028 024d 00       		.byte	0
 8029              		.section	.debug_aranges,"",%progbits
 8030 0000 DC010000 		.4byte	0x1dc
 8031 0004 0200     		.2byte	0x2
 8032 0006 00000000 		.4byte	.Ldebug_info0
 8033 000a 04       		.byte	0x4
 8034 000b 00       		.byte	0
 8035 000c 0000     		.2byte	0
 8036 000e 0000     		.2byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 192


 8037 0010 00000000 		.4byte	.LFB1
 8038 0014 24000000 		.4byte	.LFE1-.LFB1
 8039 0018 00000000 		.4byte	.LFB2
 8040 001c 42000000 		.4byte	.LFE2-.LFB2
 8041 0020 00000000 		.4byte	.LFB3
 8042 0024 30000000 		.4byte	.LFE3-.LFB3
 8043 0028 00000000 		.4byte	.LFB4
 8044 002c 36000000 		.4byte	.LFE4-.LFB4
 8045 0030 00000000 		.4byte	.LFB5
 8046 0034 36000000 		.4byte	.LFE5-.LFB5
 8047 0038 00000000 		.4byte	.LFB6
 8048 003c 20000000 		.4byte	.LFE6-.LFB6
 8049 0040 00000000 		.4byte	.LFB7
 8050 0044 36000000 		.4byte	.LFE7-.LFB7
 8051 0048 00000000 		.4byte	.LFB8
 8052 004c 36000000 		.4byte	.LFE8-.LFB8
 8053 0050 00000000 		.4byte	.LFB9
 8054 0054 5C000000 		.4byte	.LFE9-.LFB9
 8055 0058 00000000 		.4byte	.LFB10
 8056 005c 44000000 		.4byte	.LFE10-.LFB10
 8057 0060 00000000 		.4byte	.LFB11
 8058 0064 48000000 		.4byte	.LFE11-.LFB11
 8059 0068 00000000 		.4byte	.LFB12
 8060 006c 48000000 		.4byte	.LFE12-.LFB12
 8061 0070 00000000 		.4byte	.LFB14
 8062 0074 48000000 		.4byte	.LFE14-.LFB14
 8063 0078 00000000 		.4byte	.LFB15
 8064 007c 48000000 		.4byte	.LFE15-.LFB15
 8065 0080 00000000 		.4byte	.LFB16
 8066 0084 8C000000 		.4byte	.LFE16-.LFB16
 8067 0088 00000000 		.4byte	.LFB17
 8068 008c 1E000000 		.4byte	.LFE17-.LFB17
 8069 0090 00000000 		.4byte	.LFB18
 8070 0094 1E000000 		.4byte	.LFE18-.LFB18
 8071 0098 00000000 		.4byte	.LFB19
 8072 009c 5E000000 		.4byte	.LFE19-.LFB19
 8073 00a0 00000000 		.4byte	.LFB20
 8074 00a4 1E000000 		.4byte	.LFE20-.LFB20
 8075 00a8 00000000 		.4byte	.LFB21
 8076 00ac 14000000 		.4byte	.LFE21-.LFB21
 8077 00b0 00000000 		.4byte	.LFB23
 8078 00b4 20000000 		.4byte	.LFE23-.LFB23
 8079 00b8 00000000 		.4byte	.LFB24
 8080 00bc A0000000 		.4byte	.LFE24-.LFB24
 8081 00c0 00000000 		.4byte	.LFB25
 8082 00c4 D6000000 		.4byte	.LFE25-.LFB25
 8083 00c8 00000000 		.4byte	.LFB26
 8084 00cc 88000000 		.4byte	.LFE26-.LFB26
 8085 00d0 00000000 		.4byte	.LFB27
 8086 00d4 18000000 		.4byte	.LFE27-.LFB27
 8087 00d8 00000000 		.4byte	.LFB28
 8088 00dc 08000000 		.4byte	.LFE28-.LFB28
 8089 00e0 00000000 		.4byte	.LFB29
 8090 00e4 4C010000 		.4byte	.LFE29-.LFB29
 8091 00e8 00000000 		.4byte	.LFB30
 8092 00ec 38010000 		.4byte	.LFE30-.LFB30
 8093 00f0 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 193


 8094 00f4 B8000000 		.4byte	.LFE31-.LFB31
 8095 00f8 00000000 		.4byte	.LFB32
 8096 00fc 18000000 		.4byte	.LFE32-.LFB32
 8097 0100 00000000 		.4byte	.LFB33
 8098 0104 24000000 		.4byte	.LFE33-.LFB33
 8099 0108 00000000 		.4byte	.LFB34
 8100 010c 14000000 		.4byte	.LFE34-.LFB34
 8101 0110 00000000 		.4byte	.LFB35
 8102 0114 14000000 		.4byte	.LFE35-.LFB35
 8103 0118 00000000 		.4byte	.LFB36
 8104 011c 3C000000 		.4byte	.LFE36-.LFB36
 8105 0120 00000000 		.4byte	.LFB37
 8106 0124 44000000 		.4byte	.LFE37-.LFB37
 8107 0128 00000000 		.4byte	.LFB38
 8108 012c 44000000 		.4byte	.LFE38-.LFB38
 8109 0130 00000000 		.4byte	.LFB39
 8110 0134 40000000 		.4byte	.LFE39-.LFB39
 8111 0138 00000000 		.4byte	.LFB40
 8112 013c 20000000 		.4byte	.LFE40-.LFB40
 8113 0140 00000000 		.4byte	.LFB41
 8114 0144 3C000000 		.4byte	.LFE41-.LFB41
 8115 0148 00000000 		.4byte	.LFB42
 8116 014c 14000000 		.4byte	.LFE42-.LFB42
 8117 0150 00000000 		.4byte	.LFB43
 8118 0154 20000000 		.4byte	.LFE43-.LFB43
 8119 0158 00000000 		.4byte	.LFB44
 8120 015c 24000000 		.4byte	.LFE44-.LFB44
 8121 0160 00000000 		.4byte	.LFB45
 8122 0164 24000000 		.4byte	.LFE45-.LFB45
 8123 0168 00000000 		.4byte	.LFB46
 8124 016c B4020000 		.4byte	.LFE46-.LFB46
 8125 0170 00000000 		.4byte	.LFB47
 8126 0174 3C030000 		.4byte	.LFE47-.LFB47
 8127 0178 00000000 		.4byte	.LFB48
 8128 017c 80000000 		.4byte	.LFE48-.LFB48
 8129 0180 00000000 		.4byte	.LFB49
 8130 0184 B8000000 		.4byte	.LFE49-.LFB49
 8131 0188 00000000 		.4byte	.LFB50
 8132 018c B8000000 		.4byte	.LFE50-.LFB50
 8133 0190 00000000 		.4byte	.LFB51
 8134 0194 AC000000 		.4byte	.LFE51-.LFB51
 8135 0198 00000000 		.4byte	.LFB52
 8136 019c 4E000000 		.4byte	.LFE52-.LFB52
 8137 01a0 00000000 		.4byte	.LFB53
 8138 01a4 60000000 		.4byte	.LFE53-.LFB53
 8139 01a8 00000000 		.4byte	.LFB54
 8140 01ac 70010000 		.4byte	.LFE54-.LFB54
 8141 01b0 00000000 		.4byte	.LFB55
 8142 01b4 90010000 		.4byte	.LFE55-.LFB55
 8143 01b8 00000000 		.4byte	.LFB56
 8144 01bc AC020000 		.4byte	.LFE56-.LFB56
 8145 01c0 00000000 		.4byte	.LFB57
 8146 01c4 82000000 		.4byte	.LFE57-.LFB57
 8147 01c8 00000000 		.4byte	.LFB58
 8148 01cc 3C000000 		.4byte	.LFE58-.LFB58
 8149 01d0 00000000 		.4byte	.LFB59
 8150 01d4 3C000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 194


 8151 01d8 00000000 		.4byte	0
 8152 01dc 00000000 		.4byte	0
 8153              		.section	.debug_ranges,"",%progbits
 8154              	.Ldebug_ranges0:
 8155 0000 00000000 		.4byte	.LFB1
 8156 0004 24000000 		.4byte	.LFE1
 8157 0008 00000000 		.4byte	.LFB2
 8158 000c 42000000 		.4byte	.LFE2
 8159 0010 00000000 		.4byte	.LFB3
 8160 0014 30000000 		.4byte	.LFE3
 8161 0018 00000000 		.4byte	.LFB4
 8162 001c 36000000 		.4byte	.LFE4
 8163 0020 00000000 		.4byte	.LFB5
 8164 0024 36000000 		.4byte	.LFE5
 8165 0028 00000000 		.4byte	.LFB6
 8166 002c 20000000 		.4byte	.LFE6
 8167 0030 00000000 		.4byte	.LFB7
 8168 0034 36000000 		.4byte	.LFE7
 8169 0038 00000000 		.4byte	.LFB8
 8170 003c 36000000 		.4byte	.LFE8
 8171 0040 00000000 		.4byte	.LFB9
 8172 0044 5C000000 		.4byte	.LFE9
 8173 0048 00000000 		.4byte	.LFB10
 8174 004c 44000000 		.4byte	.LFE10
 8175 0050 00000000 		.4byte	.LFB11
 8176 0054 48000000 		.4byte	.LFE11
 8177 0058 00000000 		.4byte	.LFB12
 8178 005c 48000000 		.4byte	.LFE12
 8179 0060 00000000 		.4byte	.LFB14
 8180 0064 48000000 		.4byte	.LFE14
 8181 0068 00000000 		.4byte	.LFB15
 8182 006c 48000000 		.4byte	.LFE15
 8183 0070 00000000 		.4byte	.LFB16
 8184 0074 8C000000 		.4byte	.LFE16
 8185 0078 00000000 		.4byte	.LFB17
 8186 007c 1E000000 		.4byte	.LFE17
 8187 0080 00000000 		.4byte	.LFB18
 8188 0084 1E000000 		.4byte	.LFE18
 8189 0088 00000000 		.4byte	.LFB19
 8190 008c 5E000000 		.4byte	.LFE19
 8191 0090 00000000 		.4byte	.LFB20
 8192 0094 1E000000 		.4byte	.LFE20
 8193 0098 00000000 		.4byte	.LFB21
 8194 009c 14000000 		.4byte	.LFE21
 8195 00a0 00000000 		.4byte	.LFB23
 8196 00a4 20000000 		.4byte	.LFE23
 8197 00a8 00000000 		.4byte	.LFB24
 8198 00ac A0000000 		.4byte	.LFE24
 8199 00b0 00000000 		.4byte	.LFB25
 8200 00b4 D6000000 		.4byte	.LFE25
 8201 00b8 00000000 		.4byte	.LFB26
 8202 00bc 88000000 		.4byte	.LFE26
 8203 00c0 00000000 		.4byte	.LFB27
 8204 00c4 18000000 		.4byte	.LFE27
 8205 00c8 00000000 		.4byte	.LFB28
 8206 00cc 08000000 		.4byte	.LFE28
 8207 00d0 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 195


 8208 00d4 4C010000 		.4byte	.LFE29
 8209 00d8 00000000 		.4byte	.LFB30
 8210 00dc 38010000 		.4byte	.LFE30
 8211 00e0 00000000 		.4byte	.LFB31
 8212 00e4 B8000000 		.4byte	.LFE31
 8213 00e8 00000000 		.4byte	.LFB32
 8214 00ec 18000000 		.4byte	.LFE32
 8215 00f0 00000000 		.4byte	.LFB33
 8216 00f4 24000000 		.4byte	.LFE33
 8217 00f8 00000000 		.4byte	.LFB34
 8218 00fc 14000000 		.4byte	.LFE34
 8219 0100 00000000 		.4byte	.LFB35
 8220 0104 14000000 		.4byte	.LFE35
 8221 0108 00000000 		.4byte	.LFB36
 8222 010c 3C000000 		.4byte	.LFE36
 8223 0110 00000000 		.4byte	.LFB37
 8224 0114 44000000 		.4byte	.LFE37
 8225 0118 00000000 		.4byte	.LFB38
 8226 011c 44000000 		.4byte	.LFE38
 8227 0120 00000000 		.4byte	.LFB39
 8228 0124 40000000 		.4byte	.LFE39
 8229 0128 00000000 		.4byte	.LFB40
 8230 012c 20000000 		.4byte	.LFE40
 8231 0130 00000000 		.4byte	.LFB41
 8232 0134 3C000000 		.4byte	.LFE41
 8233 0138 00000000 		.4byte	.LFB42
 8234 013c 14000000 		.4byte	.LFE42
 8235 0140 00000000 		.4byte	.LFB43
 8236 0144 20000000 		.4byte	.LFE43
 8237 0148 00000000 		.4byte	.LFB44
 8238 014c 24000000 		.4byte	.LFE44
 8239 0150 00000000 		.4byte	.LFB45
 8240 0154 24000000 		.4byte	.LFE45
 8241 0158 00000000 		.4byte	.LFB46
 8242 015c B4020000 		.4byte	.LFE46
 8243 0160 00000000 		.4byte	.LFB47
 8244 0164 3C030000 		.4byte	.LFE47
 8245 0168 00000000 		.4byte	.LFB48
 8246 016c 80000000 		.4byte	.LFE48
 8247 0170 00000000 		.4byte	.LFB49
 8248 0174 B8000000 		.4byte	.LFE49
 8249 0178 00000000 		.4byte	.LFB50
 8250 017c B8000000 		.4byte	.LFE50
 8251 0180 00000000 		.4byte	.LFB51
 8252 0184 AC000000 		.4byte	.LFE51
 8253 0188 00000000 		.4byte	.LFB52
 8254 018c 4E000000 		.4byte	.LFE52
 8255 0190 00000000 		.4byte	.LFB53
 8256 0194 60000000 		.4byte	.LFE53
 8257 0198 00000000 		.4byte	.LFB54
 8258 019c 70010000 		.4byte	.LFE54
 8259 01a0 00000000 		.4byte	.LFB55
 8260 01a4 90010000 		.4byte	.LFE55
 8261 01a8 00000000 		.4byte	.LFB56
 8262 01ac AC020000 		.4byte	.LFE56
 8263 01b0 00000000 		.4byte	.LFB57
 8264 01b4 82000000 		.4byte	.LFE57
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 196


 8265 01b8 00000000 		.4byte	.LFB58
 8266 01bc 3C000000 		.4byte	.LFE58
 8267 01c0 00000000 		.4byte	.LFB59
 8268 01c4 3C000000 		.4byte	.LFE59
 8269 01c8 00000000 		.4byte	0
 8270 01cc 00000000 		.4byte	0
 8271              		.section	.debug_line,"",%progbits
 8272              	.Ldebug_line0:
 8273 0000 76090000 		.section	.debug_str,"MS",%progbits,1
 8273      02004D00 
 8273      00000201 
 8273      FB0E0D00 
 8273      01010101 
 8274              	.LASF94:
 8275 0000 64617465 		.ascii	"dateTime\000"
 8275      54696D65 
 8275      00
 8276              	.LASF81:
 8277 0009 746D7044 		.ascii	"tmpDay\000"
 8277      617900
 8278              	.LASF109:
 8279 0010 63757255 		.ascii	"curUnixTime\000"
 8279      6E697854 
 8279      696D6500 
 8280              	.LASF10:
 8281 001c 75696E74 		.ascii	"uint16\000"
 8281      313600
 8282              	.LASF37:
 8283 0023 72657456 		.ascii	"retVal\000"
 8283      616C00
 8284              	.LASF75:
 8285 002a 5254435F 		.ascii	"RTC_1_Stop\000"
 8285      315F5374 
 8285      6F7000
 8286              	.LASF72:
 8287 0035 5254435F 		.ascii	"RTC_1_ConstructDate\000"
 8287      315F436F 
 8287      6E737472 
 8287      75637444 
 8287      61746500 
 8288              	.LASF76:
 8289 0049 746D7044 		.ascii	"tmpDate\000"
 8289      61746500 
 8290              	.LASF30:
 8291 0051 5254435F 		.ascii	"RTC_1_DST_TIME\000"
 8291      315F4453 
 8291      545F5449 
 8291      4D4500
 8292              	.LASF0:
 8293 0060 7369676E 		.ascii	"signed char\000"
 8293      65642063 
 8293      68617200 
 8294              	.LASF54:
 8295 006c 696E7075 		.ascii	"inputMonth\000"
 8295      744D6F6E 
 8295      746800
 8296              	.LASF93:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 197


 8297 0077 5254435F 		.ascii	"RTC_1_GetDateAndTime\000"
 8297      315F4765 
 8297      74446174 
 8297      65416E64 
 8297      54696D65 
 8298              	.LASF123:
 8299 008c 74797065 		.ascii	"type\000"
 8299      00
 8300              	.LASF139:
 8301 0091 746D704D 		.ascii	"tmpMinute\000"
 8301      696E7574 
 8301      6500
 8302              	.LASF147:
 8303 009b 5254435F 		.ascii	"RTC_1_DaysBeforeMonth\000"
 8303      315F4461 
 8303      79734265 
 8303      666F7265 
 8303      4D6F6E74 
 8304              	.LASF7:
 8305 00b1 6C6F6E67 		.ascii	"long long unsigned int\000"
 8305      206C6F6E 
 8305      6720756E 
 8305      7369676E 
 8305      65642069 
 8306              	.LASF150:
 8307 00c8 5254435F 		.ascii	"RTC_1_dstTimeOffset\000"
 8307      315F6473 
 8307      7454696D 
 8307      654F6666 
 8307      73657400 
 8308              	.LASF155:
 8309 00dc 5254435F 		.ascii	"RTC_1_dstStatus\000"
 8309      315F6473 
 8309      74537461 
 8309      74757300 
 8310              	.LASF82:
 8311 00ec 746D704D 		.ascii	"tmpMonth\000"
 8311      6F6E7468 
 8311      00
 8312              	.LASF32:
 8313 00f5 5254435F 		.ascii	"RTC_1_IsBitSet\000"
 8313      315F4973 
 8313      42697453 
 8313      657400
 8314              	.LASF27:
 8315 0104 7765656B 		.ascii	"weekOfMonth\000"
 8315      4F664D6F 
 8315      6E746800 
 8316              	.LASF19:
 8317 0110 5254435F 		.ascii	"RTC_1_DST_DATETYPE_ENUM\000"
 8317      315F4453 
 8317      545F4441 
 8317      54455459 
 8317      50455F45 
 8318              	.LASF128:
 8319 0128 64737455 		.ascii	"dstUnixTime\000"
 8319      6E697854 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 198


 8319      696D6500 
 8320              	.LASF141:
 8321 0134 746D7041 		.ascii	"tmpAmPmState\000"
 8321      6D506D53 
 8321      74617465 
 8321      00
 8322              	.LASF130:
 8323 0141 6263644E 		.ascii	"bcdNum\000"
 8323      756D00
 8324              	.LASF65:
 8325 0148 64617973 		.ascii	"daysInMonth\000"
 8325      496E4D6F 
 8325      6E746800 
 8326              	.LASF6:
 8327 0154 6C6F6E67 		.ascii	"long long int\000"
 8327      206C6F6E 
 8327      6720696E 
 8327      7400
 8328              	.LASF167:
 8329 0162 47656E65 		.ascii	"Generated_Source\\PSoC4\\RTC_1.c\000"
 8329      72617465 
 8329      645F536F 
 8329      75726365 
 8329      5C50536F 
 8330              	.LASF38:
 8331 0181 5254435F 		.ascii	"RTC_1_GetMinutes\000"
 8331      315F4765 
 8331      744D696E 
 8331      75746573 
 8331      00
 8332              	.LASF42:
 8333 0192 5254435F 		.ascii	"RTC_1_GetMonth\000"
 8333      315F4765 
 8333      744D6F6E 
 8333      746800
 8334              	.LASF163:
 8335 01a1 5254435F 		.ascii	"RTC_1_alarmCallbackPtr\000"
 8335      315F616C 
 8335      61726D43 
 8335      616C6C62 
 8335      61636B50 
 8336              	.LASF115:
 8337 01b8 746D7043 		.ascii	"tmpCurVal\000"
 8337      75725661 
 8337      6C00
 8338              	.LASF106:
 8339 01c2 746D7043 		.ascii	"tmpCallbackPtr\000"
 8339      616C6C62 
 8339      61636B50 
 8339      747200
 8340              	.LASF110:
 8341 01d1 70726576 		.ascii	"prevVal\000"
 8341      56616C00 
 8342              	.LASF34:
 8343 01d9 79656172 		.ascii	"year\000"
 8343      00
 8344              	.LASF4:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 199


 8345 01de 6C6F6E67 		.ascii	"long int\000"
 8345      20696E74 
 8345      00
 8346              	.LASF118:
 8347 01e7 746D7041 		.ascii	"tmpAlarmTime\000"
 8347      6C61726D 
 8347      54696D65 
 8347      00
 8348              	.LASF129:
 8349 01f4 5254435F 		.ascii	"RTC_1_ConvertBCDToDec\000"
 8349      315F436F 
 8349      6E766572 
 8349      74424344 
 8349      546F4465 
 8350              	.LASF9:
 8351 020a 75696E74 		.ascii	"uint8\000"
 8351      3800
 8352              	.LASF104:
 8353 0210 5254435F 		.ascii	"RTC_1_ClearAlarmStatus\000"
 8353      315F436C 
 8353      65617241 
 8353      6C61726D 
 8353      53746174 
 8354              	.LASF89:
 8355 0227 7265664F 		.ascii	"refOneSecTicks\000"
 8355      6E655365 
 8355      63546963 
 8355      6B7300
 8356              	.LASF63:
 8357 0236 63757244 		.ascii	"curDay\000"
 8357      617900
 8358              	.LASF40:
 8359 023d 5254435F 		.ascii	"RTC_1_GetAmPm\000"
 8359      315F4765 
 8359      74416D50 
 8359      6D00
 8360              	.LASF122:
 8361 024b 64737453 		.ascii	"dstStartTime\000"
 8361      74617274 
 8361      54696D65 
 8361      00
 8362              	.LASF13:
 8363 0258 646F7562 		.ascii	"double\000"
 8363      6C6500
 8364              	.LASF45:
 8365 025f 696E7075 		.ascii	"inputSecond\000"
 8365      74536563 
 8365      6F6E6400 
 8366              	.LASF127:
 8367 026b 64737454 		.ascii	"dstTime\000"
 8367      696D6500 
 8368              	.LASF134:
 8369 0273 73686966 		.ascii	"shift\000"
 8369      7400
 8370              	.LASF70:
 8371 0279 5254435F 		.ascii	"RTC_1_ConstructTime\000"
 8371      315F436F 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 200


 8371      6E737472 
 8371      75637454 
 8371      696D6500 
 8372              	.LASF47:
 8373 028d 696E7075 		.ascii	"inputMinute\000"
 8373      744D696E 
 8373      75746500 
 8374              	.LASF103:
 8375 0299 5254435F 		.ascii	"RTC_1_GetAlarmStatus\000"
 8375      315F4765 
 8375      74416C61 
 8375      726D5374 
 8375      61747573 
 8376              	.LASF11:
 8377 02ae 75696E74 		.ascii	"uint32\000"
 8377      333200
 8378              	.LASF161:
 8379 02b5 5254435F 		.ascii	"RTC_1_alarmCfgMask\000"
 8379      315F616C 
 8379      61726D43 
 8379      66674D61 
 8379      736B00
 8380              	.LASF121:
 8381 02c8 5254435F 		.ascii	"RTC_1_SetDSTStartTime\000"
 8381      315F5365 
 8381      74445354 
 8381      53746172 
 8381      7454696D 
 8382              	.LASF56:
 8383 02de 696E7075 		.ascii	"inputYear\000"
 8383      74596561 
 8383      7200
 8384              	.LASF31:
 8385 02e8 6D61736B 		.ascii	"mask\000"
 8385      00
 8386              	.LASF50:
 8387 02ed 5254435F 		.ascii	"RTC_1_SetDay\000"
 8387      315F5365 
 8387      74446179 
 8387      00
 8388              	.LASF43:
 8389 02fa 5254435F 		.ascii	"RTC_1_GetYear\000"
 8389      315F4765 
 8389      74596561 
 8389      7200
 8390              	.LASF151:
 8391 0308 5254435F 		.ascii	"RTC_1_unixTimeDstStart\000"
 8391      315F756E 
 8391      69785469 
 8391      6D654473 
 8391      74537461 
 8392              	.LASF62:
 8393 031f 6375724D 		.ascii	"curMonth\000"
 8393      6F6E7468 
 8393      00
 8394              	.LASF112:
 8395 0328 63617272 		.ascii	"carryFlag\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 201


 8395      79466C61 
 8395      6700
 8396              	.LASF28:
 8397 0332 6D6F6E74 		.ascii	"month\000"
 8397      6800
 8398              	.LASF117:
 8399 0338 746D7041 		.ascii	"tmpAlarmDate\000"
 8399      6C61726D 
 8399      44617465 
 8399      00
 8400              	.LASF8:
 8401 0345 756E7369 		.ascii	"unsigned int\000"
 8401      676E6564 
 8401      20696E74 
 8401      00
 8402              	.LASF29:
 8403 0352 74696D65 		.ascii	"timeFormat\000"
 8403      466F726D 
 8403      617400
 8404              	.LASF132:
 8405 035d 5254435F 		.ascii	"RTC_1_ConvertDecToBCD\000"
 8405      315F436F 
 8405      6E766572 
 8405      74446563 
 8405      546F4243 
 8406              	.LASF159:
 8407 0373 5254435F 		.ascii	"RTC_1_currentTimeDate\000"
 8407      315F6375 
 8407      7272656E 
 8407      7454696D 
 8407      65446174 
 8408              	.LASF144:
 8409 0389 63757257 		.ascii	"curWeek\000"
 8409      65656B00 
 8410              	.LASF162:
 8411 0391 5254435F 		.ascii	"RTC_1_alarmCurStatus\000"
 8411      315F616C 
 8411      61726D43 
 8411      75725374 
 8411      61747573 
 8412              	.LASF5:
 8413 03a6 6C6F6E67 		.ascii	"long unsigned int\000"
 8413      20756E73 
 8413      69676E65 
 8413      6420696E 
 8413      7400
 8414              	.LASF52:
 8415 03b8 696E7075 		.ascii	"inputDay\000"
 8415      74446179 
 8415      00
 8416              	.LASF87:
 8417 03c1 5254435F 		.ascii	"RTC_1_SetPeriod\000"
 8417      315F5365 
 8417      74506572 
 8417      696F6400 
 8418              	.LASF3:
 8419 03d1 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 202


 8419      7420756E 
 8419      7369676E 
 8419      65642069 
 8419      6E7400
 8420              	.LASF21:
 8421 03e4 64617465 		.ascii	"date\000"
 8421      00
 8422              	.LASF33:
 8423 03e9 5254435F 		.ascii	"RTC_1_LeapYear\000"
 8423      315F4C65 
 8423      61705965 
 8423      617200
 8424              	.LASF90:
 8425 03f8 5254435F 		.ascii	"RTC_1_GetUnixTime\000"
 8425      315F4765 
 8425      74556E69 
 8425      7854696D 
 8425      6500
 8426              	.LASF165:
 8427 040a 5254435F 		.ascii	"RTC_1_daysInMonthTbl\000"
 8427      315F6461 
 8427      7973496E 
 8427      4D6F6E74 
 8427      6854626C 
 8428              	.LASF49:
 8429 041f 696E7075 		.ascii	"inputHours\000"
 8429      74486F75 
 8429      727300
 8430              	.LASF83:
 8431 042a 746D7059 		.ascii	"tmpYear\000"
 8431      65617200 
 8432              	.LASF79:
 8433 0432 5254435F 		.ascii	"RTC_1_Init\000"
 8433      315F496E 
 8433      697400
 8434              	.LASF59:
 8435 043d 5254435F 		.ascii	"RTC_1_GetNextHour\000"
 8435      315F4765 
 8435      744E6578 
 8435      74486F75 
 8435      7200
 8436              	.LASF156:
 8437 044f 5254435F 		.ascii	"RTC_1_unixTime\000"
 8437      315F756E 
 8437      69785469 
 8437      6D6500
 8438              	.LASF60:
 8439 045e 5254435F 		.ascii	"RTC_1_GetNextDay\000"
 8439      315F4765 
 8439      744E6578 
 8439      74446179 
 8439      00
 8440              	.LASF105:
 8441 046f 43616C6C 		.ascii	"CallbackFunction\000"
 8441      6261636B 
 8441      46756E63 
 8441      74696F6E 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 203


 8441      00
 8442              	.LASF143:
 8443 0480 5254435F 		.ascii	"RTC_1_RelativeToFixed\000"
 8443      315F5265 
 8443      6C617469 
 8443      7665546F 
 8443      46697865 
 8444              	.LASF119:
 8445 0496 5254435F 		.ascii	"RTC_1_ReadStatus\000"
 8445      315F5265 
 8445      61645374 
 8445      61747573 
 8445      00
 8446              	.LASF22:
 8447 04a7 6461794F 		.ascii	"dayOfWeek\000"
 8447      66576565 
 8447      6B00
 8448              	.LASF145:
 8449 04b1 6461794F 		.ascii	"dayOfMonthTmp\000"
 8449      664D6F6E 
 8449      7468546D 
 8449      7000
 8450              	.LASF92:
 8451 04bf 5254435F 		.ascii	"RTC_1_GetRefOneSec\000"
 8451      315F4765 
 8451      74526566 
 8451      4F6E6553 
 8451      656300
 8452              	.LASF44:
 8453 04d2 5254435F 		.ascii	"RTC_1_SetSecond\000"
 8453      315F5365 
 8453      74536563 
 8453      6F6E6400 
 8454              	.LASF97:
 8455 04e2 5254435F 		.ascii	"RTC_1_SetAlarmDateAndTime\000"
 8455      315F5365 
 8455      74416C61 
 8455      726D4461 
 8455      7465416E 
 8456              	.LASF138:
 8457 04fc 5254435F 		.ascii	"RTC_1_UnixToDateTime\000"
 8457      315F556E 
 8457      6978546F 
 8457      44617465 
 8457      54696D65 
 8458              	.LASF126:
 8459 0511 5254435F 		.ascii	"RTC_1_GetDstUnixTime\000"
 8459      315F4765 
 8459      74447374 
 8459      556E6978 
 8459      54696D65 
 8460              	.LASF16:
 8461 0526 73697A65 		.ascii	"sizetype\000"
 8461      74797065 
 8461      00
 8462              	.LASF152:
 8463 052f 5254435F 		.ascii	"RTC_1_unixTimeDstStop\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 204


 8463      315F756E 
 8463      69785469 
 8463      6D654473 
 8463      7453746F 
 8464              	.LASF88:
 8465 0545 7469636B 		.ascii	"ticks\000"
 8465      7300
 8466              	.LASF39:
 8467 054b 5254435F 		.ascii	"RTC_1_GetHours\000"
 8467      315F4765 
 8467      74486F75 
 8467      727300
 8468              	.LASF95:
 8469 055a 5254435F 		.ascii	"RTC_1_GetTime\000"
 8469      315F4765 
 8469      7454696D 
 8469      6500
 8470              	.LASF160:
 8471 0568 5254435F 		.ascii	"RTC_1_alarmCfgTimeDate\000"
 8471      315F616C 
 8471      61726D43 
 8471      66675469 
 8471      6D654461 
 8472              	.LASF148:
 8473 057f 5254435F 		.ascii	"RTC_1_updateTimePeriod\000"
 8473      315F7570 
 8473      64617465 
 8473      54696D65 
 8473      50657269 
 8474              	.LASF48:
 8475 0596 5254435F 		.ascii	"RTC_1_SetHours\000"
 8475      315F5365 
 8475      74486F75 
 8475      727300
 8476              	.LASF164:
 8477 05a5 5254435F 		.ascii	"RTC_1_daysBeforeMonthTbl\000"
 8477      315F6461 
 8477      79734265 
 8477      666F7265 
 8477      4D6F6E74 
 8478              	.LASF74:
 8479 05be 5254435F 		.ascii	"RTC_1_Start\000"
 8479      315F5374 
 8479      61727400 
 8480              	.LASF140:
 8481 05ca 746D7048 		.ascii	"tmpHour\000"
 8481      6F757200 
 8482              	.LASF57:
 8483 05d2 5254435F 		.ascii	"RTC_1_GetNextMinSec\000"
 8483      315F4765 
 8483      744E6578 
 8483      744D696E 
 8483      53656300 
 8484              	.LASF20:
 8485 05e6 74696D65 		.ascii	"time\000"
 8485      00
 8486              	.LASF25:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 205


 8487 05eb 686F7572 		.ascii	"hour\000"
 8487      00
 8488              	.LASF69:
 8489 05f0 5254435F 		.ascii	"RTC_1_GetTimeFormat\000"
 8489      315F4765 
 8489      7454696D 
 8489      65466F72 
 8489      6D617400 
 8490              	.LASF73:
 8491 0604 5254435F 		.ascii	"RTC_1_GetDayOfWeek\000"
 8491      315F4765 
 8491      74446179 
 8491      4F665765 
 8491      656B00
 8492              	.LASF91:
 8493 0617 5254435F 		.ascii	"RTC_1_GetPeriod\000"
 8493      315F4765 
 8493      74506572 
 8493      696F6400 
 8494              	.LASF12:
 8495 0627 666C6F61 		.ascii	"float\000"
 8495      7400
 8496              	.LASF26:
 8497 062d 6461794F 		.ascii	"dayOfMonth\000"
 8497      664D6F6E 
 8497      746800
 8498              	.LASF41:
 8499 0638 5254435F 		.ascii	"RTC_1_GetDay\000"
 8499      315F4765 
 8499      74446179 
 8499      00
 8500              	.LASF61:
 8501 0645 63757259 		.ascii	"curYear\000"
 8501      65617200 
 8502              	.LASF111:
 8503 064d 6E657874 		.ascii	"nextVal\000"
 8503      56616C00 
 8504              	.LASF80:
 8505 0655 5254435F 		.ascii	"RTC_1_SetDateAndTime\000"
 8505      315F5365 
 8505      74446174 
 8505      65416E64 
 8505      54696D65 
 8506              	.LASF71:
 8507 066a 73746174 		.ascii	"stateAmPm\000"
 8507      65416D50 
 8507      6D00
 8508              	.LASF133:
 8509 0674 6465634E 		.ascii	"decNum\000"
 8509      756D00
 8510              	.LASF1:
 8511 067b 756E7369 		.ascii	"unsigned char\000"
 8511      676E6564 
 8511      20636861 
 8511      7200
 8512              	.LASF36:
 8513 0689 696E7075 		.ascii	"inputTime\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 206


 8513      7454696D 
 8513      6500
 8514              	.LASF14:
 8515 0693 75696E74 		.ascii	"uint64\000"
 8515      363400
 8516              	.LASF2:
 8517 069a 73686F72 		.ascii	"short int\000"
 8517      7420696E 
 8517      7400
 8518              	.LASF114:
 8519 06a4 5254435F 		.ascii	"RTC_1_ConstructUnixAlarmTime\000"
 8519      315F436F 
 8519      6E737472 
 8519      75637455 
 8519      6E697841 
 8520              	.LASF108:
 8521 06c1 5254435F 		.ascii	"RTC_1_GetNexAlarmTime\000"
 8521      315F4765 
 8521      744E6578 
 8521      416C6172 
 8521      6D54696D 
 8522              	.LASF84:
 8523 06d7 5254435F 		.ascii	"RTC_1_SetUnixTime\000"
 8523      315F5365 
 8523      74556E69 
 8523      7854696D 
 8523      6500
 8524              	.LASF35:
 8525 06e9 5254435F 		.ascii	"RTC_1_GetSecond\000"
 8525      315F4765 
 8525      74536563 
 8525      6F6E6400 
 8526              	.LASF157:
 8527 06f9 5254435F 		.ascii	"RTC_1_dstStartTime\000"
 8527      315F6473 
 8527      74537461 
 8527      72745469 
 8527      6D6500
 8528              	.LASF168:
 8529 070c 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 8529      73657273 
 8529      5C676C65 
 8529      6E6E5C4F 
 8529      6E654472 
 8530 073a 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 8530      69737475 
 8530      72655F53 
 8530      656E736F 
 8530      725C4D6F 
 8531              	.LASF154:
 8532 0762 5254435F 		.ascii	"RTC_1_initVar\000"
 8532      315F696E 
 8532      69745661 
 8532      7200
 8533              	.LASF153:
 8534 0770 5254435F 		.ascii	"RTC_1_unixTimeAlarm\000"
 8534      315F756E 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 207


 8534      69785469 
 8534      6D65416C 
 8534      61726D00 
 8535              	.LASF18:
 8536 0784 5254435F 		.ascii	"RTC_1_DST_DATE_FIXED\000"
 8536      315F4453 
 8536      545F4441 
 8536      54455F46 
 8536      49584544 
 8537              	.LASF66:
 8538 0799 746D7056 		.ascii	"tmpVal\000"
 8538      616C00
 8539              	.LASF68:
 8540 07a0 5254435F 		.ascii	"RTC_1_GetNextYear\000"
 8540      315F4765 
 8540      744E6578 
 8540      74596561 
 8540      7200
 8541              	.LASF142:
 8542 07b2 746D7056 		.ascii	"tmpVar\000"
 8542      617200
 8543              	.LASF125:
 8544 07b9 64737453 		.ascii	"dstStopTime\000"
 8544      746F7054 
 8544      696D6500 
 8545              	.LASF100:
 8546 07c5 616C6172 		.ascii	"alarmTimeDate\000"
 8546      6D54696D 
 8546      65446174 
 8546      6500
 8547              	.LASF124:
 8548 07d3 5254435F 		.ascii	"RTC_1_SetDSTStopTime\000"
 8548      315F5365 
 8548      74445354 
 8548      53746F70 
 8548      54696D65 
 8549              	.LASF15:
 8550 07e8 63686172 		.ascii	"char\000"
 8550      00
 8551              	.LASF131:
 8552 07ed 6D756C74 		.ascii	"mult\000"
 8552      00
 8553              	.LASF55:
 8554 07f2 5254435F 		.ascii	"RTC_1_SetYear\000"
 8554      315F5365 
 8554      74596561 
 8554      7200
 8555              	.LASF99:
 8556 0800 5254435F 		.ascii	"RTC_1_GetAlarmDateAndTime\000"
 8556      315F4765 
 8556      74416C61 
 8556      726D4461 
 8556      7465416E 
 8557              	.LASF51:
 8558 081a 696E7075 		.ascii	"inputDate\000"
 8558      74446174 
 8558      6500
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 208


 8559              	.LASF96:
 8560 0824 5254435F 		.ascii	"RTC_1_GetDate\000"
 8560      315F4765 
 8560      74446174 
 8560      6500
 8561              	.LASF137:
 8562 0832 5254435F 		.ascii	"RTC_1_DateTimeToUnix\000"
 8562      315F4461 
 8562      74655469 
 8562      6D65546F 
 8562      556E6978 
 8563              	.LASF64:
 8564 0847 616C6172 		.ascii	"alarmCfgMask\000"
 8564      6D436667 
 8564      4D61736B 
 8564      00
 8565              	.LASF120:
 8566 0854 746D7054 		.ascii	"tmpTimeDate\000"
 8566      696D6544 
 8566      61746500 
 8567              	.LASF135:
 8568 0860 5254435F 		.ascii	"RTC_1_Update\000"
 8568      315F5570 
 8568      64617465 
 8568      00
 8569              	.LASF107:
 8570 086d 5254435F 		.ascii	"RTC_1_SetAlarmHandler\000"
 8570      315F5365 
 8570      74416C61 
 8570      726D4861 
 8570      6E646C65 
 8571              	.LASF53:
 8572 0883 5254435F 		.ascii	"RTC_1_SetMonth\000"
 8572      315F5365 
 8572      744D6F6E 
 8572      746800
 8573              	.LASF67:
 8574 0892 5254435F 		.ascii	"RTC_1_GetNextMonth\000"
 8574      315F4765 
 8574      744E6578 
 8574      744D6F6E 
 8574      746800
 8575              	.LASF136:
 8576 08a5 5254435F 		.ascii	"RTC_1_currentTickNumber\000"
 8576      315F6375 
 8576      7272656E 
 8576      74546963 
 8576      6B4E756D 
 8577              	.LASF85:
 8578 08bd 756E6978 		.ascii	"unixTime\000"
 8578      54696D65 
 8578      00
 8579              	.LASF113:
 8580 08c6 63757244 		.ascii	"curDateTime\000"
 8580      61746554 
 8580      696D6500 
 8581              	.LASF158:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 209


 8582 08d2 5254435F 		.ascii	"RTC_1_dstStopTime\000"
 8582      315F6473 
 8582      7453746F 
 8582      7054696D 
 8582      6500
 8583              	.LASF23:
 8584 08e4 73746174 		.ascii	"status\000"
 8584      757300
 8585              	.LASF78:
 8586 08eb 64737454 		.ascii	"dstTimeTmp\000"
 8586      696D6554 
 8586      6D7000
 8587              	.LASF17:
 8588 08f6 5254435F 		.ascii	"RTC_1_DST_DATE_RELATIVE\000"
 8588      315F4453 
 8588      545F4441 
 8588      54455F52 
 8588      454C4154 
 8589              	.LASF102:
 8590 090e 5254435F 		.ascii	"RTC_1_GetAlarmMask\000"
 8590      315F4765 
 8590      74416C61 
 8590      726D4D61 
 8590      736B00
 8591              	.LASF46:
 8592 0921 5254435F 		.ascii	"RTC_1_SetMinutes\000"
 8592      315F5365 
 8592      744D696E 
 8592      75746573 
 8592      00
 8593              	.LASF146:
 8594 0932 5254435F 		.ascii	"RTC_1_DaysInMonth\000"
 8594      315F4461 
 8594      7973496E 
 8594      4D6F6E74 
 8594      6800
 8595              	.LASF77:
 8596 0944 746D7054 		.ascii	"tmpTime\000"
 8596      696D6500 
 8597              	.LASF166:
 8598 094c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8598      4320342E 
 8598      392E3320 
 8598      32303135 
 8598      30333033 
 8599 097f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 8599      20726576 
 8599      6973696F 
 8599      6E203232 
 8599      31323230 
 8600 09b2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8600      66756E63 
 8600      74696F6E 
 8600      2D736563 
 8600      74696F6E 
 8601              	.LASF58:
 8602 09da 63757256 		.ascii	"curVal\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccyne4aP.s 			page 210


 8602      616C00
 8603              	.LASF86:
 8604 09e1 746D7044 		.ascii	"tmpDateTime\000"
 8604      61746554 
 8604      696D6500 
 8605              	.LASF101:
 8606 09ed 5254435F 		.ascii	"RTC_1_SetAlarmMask\000"
 8606      315F5365 
 8606      74416C61 
 8606      726D4D61 
 8606      736B00
 8607              	.LASF149:
 8608 0a00 5254435F 		.ascii	"RTC_1_tickRefOneSec\000"
 8608      315F7469 
 8608      636B5265 
 8608      664F6E65 
 8608      53656300 
 8609              	.LASF24:
 8610 0a14 5254435F 		.ascii	"RTC_1_DATE_TIME\000"
 8610      315F4441 
 8610      54455F54 
 8610      494D4500 
 8611              	.LASF98:
 8612 0a24 616C6172 		.ascii	"alarmTime\000"
 8612      6D54696D 
 8612      6500
 8613              	.LASF116:
 8614 0a2e 746D704E 		.ascii	"tmpNextVal\000"
 8614      65787456 
 8614      616C00
 8615              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
