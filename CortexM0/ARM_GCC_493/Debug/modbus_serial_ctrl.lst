ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"modbus_serial_ctrl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.get_modbus_address,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	get_modbus_address, %function
  22              	get_modbus_address:
  23              	.LFB62:
  24              		.file 1 "rtu_modbus\\process_modbus_message.h"
   1:rtu_modbus/process_modbus_message.h **** 
   2:rtu_modbus/process_modbus_message.h **** /*
   3:rtu_modbus/process_modbus_message.h **** **
   4:rtu_modbus/process_modbus_message.h **** ** File: process_modbus_message.h
   5:rtu_modbus/process_modbus_message.h **** **
   6:rtu_modbus/process_modbus_message.h **** **/
   7:rtu_modbus/process_modbus_message.h **** 
   8:rtu_modbus/process_modbus_message.h **** #ifndef _PROCESS_MODBUS_MESSAGE_H_
   9:rtu_modbus/process_modbus_message.h **** #define _PROCESS_MODBUS_MESSAGE_H_
  10:rtu_modbus/process_modbus_message.h ****     
  11:rtu_modbus/process_modbus_message.h **** #include <project.h>
  12:rtu_modbus/process_modbus_message.h **** 
  13:rtu_modbus/process_modbus_message.h ****     
  14:rtu_modbus/process_modbus_message.h **** #define MODBUS_REGISTER_LENGTH 256
  15:rtu_modbus/process_modbus_message.h **** 
  16:rtu_modbus/process_modbus_message.h **** /*
  17:rtu_modbus/process_modbus_message.h **** **
  18:rtu_modbus/process_modbus_message.h **** ** Modbus Register Definitions
  19:rtu_modbus/process_modbus_message.h **** **
  20:rtu_modbus/process_modbus_message.h **** */ 
  21:rtu_modbus/process_modbus_message.h **** 
  22:rtu_modbus/process_modbus_message.h **** 
  23:rtu_modbus/process_modbus_message.h ****     
  24:rtu_modbus/process_modbus_message.h **** // System Definitions
  25:rtu_modbus/process_modbus_message.h ****     
  26:rtu_modbus/process_modbus_message.h **** #define MOD_UNIT_ID                     0
  27:rtu_modbus/process_modbus_message.h **** 
  28:rtu_modbus/process_modbus_message.h **** #define MOD_RTU_WATCH_DOG_FLAG          1
  29:rtu_modbus/process_modbus_message.h **** #define MOD_CONTROLLER_WATCH_DOG_FLAG   2
  30:rtu_modbus/process_modbus_message.h **** #define MOD_COMMISSIONING_FLAG          3
  31:rtu_modbus/process_modbus_message.h **** #define MOD_POWER_UP_EVENT              4
  32:rtu_modbus/process_modbus_message.h **** #define MOD_RESET_REASON                5
  33:rtu_modbus/process_modbus_message.h **** #define MOD_MINUTE_ROLLOVER             6
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 2


  34:rtu_modbus/process_modbus_message.h **** 
  35:rtu_modbus/process_modbus_message.h **** // contains 4 modbus registers 64 bit.
  36:rtu_modbus/process_modbus_message.h **** #define MOD_RTU_UNIX_TIME               8
  37:rtu_modbus/process_modbus_message.h **** 
  38:rtu_modbus/process_modbus_message.h **** 
  39:rtu_modbus/process_modbus_message.h **** #define ONE_WIRE_DEVICE_FOUND              13  
  40:rtu_modbus/process_modbus_message.h **** #define NEW_MOISTURE_DATA_FLAG             14
  41:rtu_modbus/process_modbus_message.h **** #define AIR_HUMIDITY_FLOAT                 15        
  42:rtu_modbus/process_modbus_message.h **** #define AIR_TEMP_FLOAT                     17
  43:rtu_modbus/process_modbus_message.h **** #define MOISTURE_SOIL_TEMP_FLOAT           19
  44:rtu_modbus/process_modbus_message.h **** #define RESISTOR_FLOAT                     21
  45:rtu_modbus/process_modbus_message.h **** #define CAPACITANCE_SENSOR_MASK            23
  46:rtu_modbus/process_modbus_message.h ****   
  47:rtu_modbus/process_modbus_message.h ****     
  48:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_1_FLOAT         30
  49:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_2_FLOAT         32
  50:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_3_FLOAT         34
  51:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_4_FLOAT         36
  52:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_5_FLOAT         38
  53:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_6_FLOAT         40
  54:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_7_FLOAT         42
  55:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_8_FLOAT         44   
  56:rtu_modbus/process_modbus_message.h **** 
  57:rtu_modbus/process_modbus_message.h ****     
  58:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_1_FLOAT         70
  59:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_2_FLOAT         72
  60:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_3_FLOAT         74
  61:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_4_FLOAT         76
  62:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_5_FLOAT         78
  63:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_6_FLOAT         80
  64:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_7_FLOAT         82
  65:rtu_modbus/process_modbus_message.h **** #define CAPACITIVE_SENSOR_8_FLOAT         84   
  66:rtu_modbus/process_modbus_message.h **** 
  67:rtu_modbus/process_modbus_message.h ****     
  68:rtu_modbus/process_modbus_message.h ****     
  69:rtu_modbus/process_modbus_message.h **** 
  70:rtu_modbus/process_modbus_message.h **** // CONFIGURATION DATA
  71:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_1_CONFIGURATION    110
  72:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_2_CONFIGURATION    111
  73:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_3_CONFIGURATION    112 
  74:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_4_CONFIGURATION    113
  75:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_5_CONFIGURATION    114
  76:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_6_CONFIGURATION    115
  77:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_7_CONFIGURATION    116
  78:rtu_modbus/process_modbus_message.h **** #define RESISTIVE_SENSOR_8_CONFIGURATION    117
  79:rtu_modbus/process_modbus_message.h **** 
  80:rtu_modbus/process_modbus_message.h **** 
  81:rtu_modbus/process_modbus_message.h ****     
  82:rtu_modbus/process_modbus_message.h **** 
  83:rtu_modbus/process_modbus_message.h **** 
  84:rtu_modbus/process_modbus_message.h **** 
  85:rtu_modbus/process_modbus_message.h **** #define MODBUS_ARRAY_LENGTH  sizeof( modbus_address_data)/sizeof(modbus_address_data)
  86:rtu_modbus/process_modbus_message.h **** 
  87:rtu_modbus/process_modbus_message.h **** 
  88:rtu_modbus/process_modbus_message.h **** extern uint16 modbus_address_data[2];
  89:rtu_modbus/process_modbus_message.h **** 
  90:rtu_modbus/process_modbus_message.h **** static inline uint16 get_modbus_address( void )
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 3


  91:rtu_modbus/process_modbus_message.h **** {
  25              		.loc 1 91 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 00AF     		add	r7, sp, #0
  32              		.cfi_def_cfa_register 7
  92:rtu_modbus/process_modbus_message.h ****     return modbus_address_data[0];
  33              		.loc 1 92 0
  34 0004 024B     		ldr	r3, .L3
  35 0006 1B88     		ldrh	r3, [r3]
  93:rtu_modbus/process_modbus_message.h **** }
  36              		.loc 1 93 0
  37 0008 181C     		mov	r0, r3
  38 000a BD46     		mov	sp, r7
  39              		@ sp needed
  40 000c 80BD     		pop	{r7, pc}
  41              	.L4:
  42 000e C046     		.align	2
  43              	.L3:
  44 0010 00000000 		.word	modbus_address_data
  45              		.cfi_endproc
  46              	.LFE62:
  47              		.size	get_modbus_address, .-get_modbus_address
  48              		.section	.text.get_commissioning_address,"ax",%progbits
  49              		.align	2
  50              		.code	16
  51              		.thumb_func
  52              		.type	get_commissioning_address, %function
  53              	get_commissioning_address:
  54              	.LFB63:
  94:rtu_modbus/process_modbus_message.h **** 
  95:rtu_modbus/process_modbus_message.h **** static inline uint16 get_commissioning_address( void )
  96:rtu_modbus/process_modbus_message.h **** {
  55              		.loc 1 96 0
  56              		.cfi_startproc
  57 0000 80B5     		push	{r7, lr}
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
  97:rtu_modbus/process_modbus_message.h ****     return modbus_address_data[1];
  63              		.loc 1 97 0
  64 0004 024B     		ldr	r3, .L7
  65 0006 5B88     		ldrh	r3, [r3, #2]
  98:rtu_modbus/process_modbus_message.h **** }
  66              		.loc 1 98 0
  67 0008 181C     		mov	r0, r3
  68 000a BD46     		mov	sp, r7
  69              		@ sp needed
  70 000c 80BD     		pop	{r7, pc}
  71              	.L8:
  72 000e C046     		.align	2
  73              	.L7:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 4


  74 0010 00000000 		.word	modbus_address_data
  75              		.cfi_endproc
  76              	.LFE63:
  77              		.size	get_commissioning_address, .-get_commissioning_address
  78              		.bss
  79              		.align	2
  80              	uart_timer_state:
  81 0000 00000000 		.space	4
  82              		.align	2
  83              	uart_rx_state:
  84 0004 00000000 		.space	4
  85              		.align	2
  86              	uart_tx_state:
  87 0008 00000000 		.space	4
  88              		.align	2
  89              	rx_interval_count:
  90 000c 00000000 		.space	4
  91              		.align	1
  92              	modbus_address:
  93 0010 0000     		.space	2
  94 0012 0000     		.align	2
  95              	modbus_rx_index:
  96 0014 00000000 		.space	4
  97              		.align	2
  98              	modbus_in_buffer:
  99 0018 00000000 		.space	256
  99      00000000 
  99      00000000 
  99      00000000 
  99      00000000 
 100              		.align	2
 101              	modbus_tx_index:
 102 0118 00000000 		.space	4
 103              		.align	2
 104              	modbus_tx_message_count:
 105 011c 00000000 		.space	4
 106              		.align	2
 107              	modbus_out_buffer:
 108 0120 00000000 		.space	256
 108      00000000 
 108      00000000 
 108      00000000 
 108      00000000 
 109              		.align	2
 110              	read_status_value:
 111 0220 00000000 		.space	4
 112              		.section	.text.empty_rx_uart,"ax",%progbits
 113              		.align	2
 114              		.code	16
 115              		.thumb_func
 116              		.type	empty_rx_uart, %function
 117              	empty_rx_uart:
 118              	.LFB64:
 119              		.file 2 "rtu_modbus\\modbus_serial_ctrl.c"
   1:rtu_modbus/modbus_serial_ctrl.c **** /*
   2:rtu_modbus/modbus_serial_ctrl.c **** ** File: modbus_srial_ctrl.c
   3:rtu_modbus/modbus_serial_ctrl.c **** **
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 5


   4:rtu_modbus/modbus_serial_ctrl.c **** **
   5:rtu_modbus/modbus_serial_ctrl.c **** */
   6:rtu_modbus/modbus_serial_ctrl.c **** 
   7:rtu_modbus/modbus_serial_ctrl.c **** #include <project.h>
   8:rtu_modbus/modbus_serial_ctrl.c **** #include "modbus_serial_ctrl.h"
   9:rtu_modbus/modbus_serial_ctrl.c **** #include "process_modbus_message.h"
  10:rtu_modbus/modbus_serial_ctrl.c **** #include "cf_events.h"
  11:rtu_modbus/modbus_serial_ctrl.c **** #include "cf_status_bit.h"
  12:rtu_modbus/modbus_serial_ctrl.c **** 
  13:rtu_modbus/modbus_serial_ctrl.c **** 
  14:rtu_modbus/modbus_serial_ctrl.c **** 
  15:rtu_modbus/modbus_serial_ctrl.c **** #define UART_RX_IDLE           0
  16:rtu_modbus/modbus_serial_ctrl.c **** #define UART_RX_ACTIVE_RECEIVE 1
  17:rtu_modbus/modbus_serial_ctrl.c **** #define UART_RX_BAD_ADDRESS    2
  18:rtu_modbus/modbus_serial_ctrl.c **** #define UART_RX_DUMP_STATE     3
  19:rtu_modbus/modbus_serial_ctrl.c **** 
  20:rtu_modbus/modbus_serial_ctrl.c **** #define UART_TX_STATE_IDLE              0
  21:rtu_modbus/modbus_serial_ctrl.c **** #define UART_TX_STATE_TRANSMITTING      1
  22:rtu_modbus/modbus_serial_ctrl.c **** #define UART_TX_STATE_WAIT_FOR_EOT      2
  23:rtu_modbus/modbus_serial_ctrl.c **** 
  24:rtu_modbus/modbus_serial_ctrl.c **** 
  25:rtu_modbus/modbus_serial_ctrl.c **** #define UART_TIMER_IDLE 0
  26:rtu_modbus/modbus_serial_ctrl.c **** #define UART_TIMER_BAD_ADDRESS 1
  27:rtu_modbus/modbus_serial_ctrl.c **** #define UART_TIMER_RX  2
  28:rtu_modbus/modbus_serial_ctrl.c **** 
  29:rtu_modbus/modbus_serial_ctrl.c **** #define RX_FIFO_SIZE 16
  30:rtu_modbus/modbus_serial_ctrl.c **** #define TX_FIFO_SIZE 16
  31:rtu_modbus/modbus_serial_ctrl.c **** #define MODBUS_BUFFER_SIZE 256
  32:rtu_modbus/modbus_serial_ctrl.c **** 
  33:rtu_modbus/modbus_serial_ctrl.c **** static int uart_timer_state;
  34:rtu_modbus/modbus_serial_ctrl.c **** static int uart_rx_state;
  35:rtu_modbus/modbus_serial_ctrl.c **** static int uart_tx_state;
  36:rtu_modbus/modbus_serial_ctrl.c **** // process_rtu_message waits on CF_USB_RTU_EVENT event sent by rx interrupt handler
  37:rtu_modbus/modbus_serial_ctrl.c **** 
  38:rtu_modbus/modbus_serial_ctrl.c **** static int rx_interval_count;
  39:rtu_modbus/modbus_serial_ctrl.c **** 
  40:rtu_modbus/modbus_serial_ctrl.c **** 
  41:rtu_modbus/modbus_serial_ctrl.c **** static uint16 modbus_address;
  42:rtu_modbus/modbus_serial_ctrl.c **** static int modbus_rx_index;
  43:rtu_modbus/modbus_serial_ctrl.c **** static uint8 modbus_in_buffer[MODBUS_BUFFER_SIZE];
  44:rtu_modbus/modbus_serial_ctrl.c **** 
  45:rtu_modbus/modbus_serial_ctrl.c **** static int modbus_tx_index;
  46:rtu_modbus/modbus_serial_ctrl.c **** static int modbus_tx_message_count;
  47:rtu_modbus/modbus_serial_ctrl.c **** static uint8 modbus_out_buffer[MODBUS_BUFFER_SIZE];
  48:rtu_modbus/modbus_serial_ctrl.c **** 
  49:rtu_modbus/modbus_serial_ctrl.c **** static void init_rx_state( void );
  50:rtu_modbus/modbus_serial_ctrl.c **** static void init_processing_state( void );
  51:rtu_modbus/modbus_serial_ctrl.c **** static void init_tx_state( int tx_count );
  52:rtu_modbus/modbus_serial_ctrl.c **** static void abort_rx_state( void );
  53:rtu_modbus/modbus_serial_ctrl.c **** static volatile int read_status_value;
  54:rtu_modbus/modbus_serial_ctrl.c **** 
  55:rtu_modbus/modbus_serial_ctrl.c **** static inline int empty_rx_uart( void )
  56:rtu_modbus/modbus_serial_ctrl.c **** {
 120              		.loc 2 56 0
 121              		.cfi_startproc
 122 0000 90B5     		push	{r4, r7, lr}
 123              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 6


 124              		.cfi_offset 4, -12
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 83B0     		sub	sp, sp, #12
 128              		.cfi_def_cfa_offset 24
 129 0004 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
  57:rtu_modbus/modbus_serial_ctrl.c ****     int i;
  58:rtu_modbus/modbus_serial_ctrl.c ****     int return_value;
  59:rtu_modbus/modbus_serial_ctrl.c ****     
  60:rtu_modbus/modbus_serial_ctrl.c ****     return_value = 0;
 131              		.loc 2 60 0
 132 0006 0023     		mov	r3, #0
 133 0008 3B60     		str	r3, [r7]
  61:rtu_modbus/modbus_serial_ctrl.c ****     for( i = 0; i < RX_FIFO_SIZE; i++ )
 134              		.loc 2 61 0
 135 000a 0023     		mov	r3, #0
 136 000c 7B60     		str	r3, [r7, #4]
 137 000e 26E0     		b	.L10
 138              	.L13:
  62:rtu_modbus/modbus_serial_ctrl.c ****     {
  63:rtu_modbus/modbus_serial_ctrl.c ****         read_status_value = UART_1_ReadRxStatus();
 139              		.loc 2 63 0
 140 0010 FFF7FEFF 		bl	UART_1_ReadRxStatus
 141 0014 031C     		mov	r3, r0
 142 0016 1A1C     		mov	r2, r3
 143 0018 154B     		ldr	r3, .L15
 144 001a 1A60     		str	r2, [r3]
  64:rtu_modbus/modbus_serial_ctrl.c ****         if(  read_status_value & UART_1_RX_STS_FIFO_NOTEMPTY )
 145              		.loc 2 64 0
 146 001c 144B     		ldr	r3, .L15
 147 001e 1B68     		ldr	r3, [r3]
 148 0020 2022     		mov	r2, #32
 149 0022 1340     		and	r3, r2
 150 0024 18D0     		beq	.L11
  65:rtu_modbus/modbus_serial_ctrl.c ****         {
  66:rtu_modbus/modbus_serial_ctrl.c ****             return_value += 1;
 151              		.loc 2 66 0
 152 0026 3B68     		ldr	r3, [r7]
 153 0028 0133     		add	r3, r3, #1
 154 002a 3B60     		str	r3, [r7]
  67:rtu_modbus/modbus_serial_ctrl.c ****             modbus_in_buffer[ modbus_rx_index ] = UART_1_ReadRxData();
 155              		.loc 2 67 0
 156 002c 114B     		ldr	r3, .L15+4
 157 002e 1C68     		ldr	r4, [r3]
 158 0030 FFF7FEFF 		bl	UART_1_ReadRxData
 159 0034 031C     		mov	r3, r0
 160 0036 1A1C     		mov	r2, r3
 161 0038 0F4B     		ldr	r3, .L15+8
 162 003a 1A55     		strb	r2, [r3, r4]
  68:rtu_modbus/modbus_serial_ctrl.c ****             if( modbus_rx_index > MODBUS_BUFFER_SIZE )
 163              		.loc 2 68 0
 164 003c 0D4B     		ldr	r3, .L15+4
 165 003e 1A68     		ldr	r2, [r3]
 166 0040 8023     		mov	r3, #128
 167 0042 5B00     		lsl	r3, r3, #1
 168 0044 9A42     		cmp	r2, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 7


 169 0046 02DD     		ble	.L12
  69:rtu_modbus/modbus_serial_ctrl.c ****             {
  70:rtu_modbus/modbus_serial_ctrl.c ****                 abort_rx_state();
 170              		.loc 2 70 0
 171 0048 FFF7FEFF 		bl	abort_rx_state
 172 004c 04E0     		b	.L11
 173              	.L12:
  71:rtu_modbus/modbus_serial_ctrl.c ****             }
  72:rtu_modbus/modbus_serial_ctrl.c ****             else
  73:rtu_modbus/modbus_serial_ctrl.c ****             {
  74:rtu_modbus/modbus_serial_ctrl.c ****                 modbus_rx_index += 1;
 174              		.loc 2 74 0
 175 004e 094B     		ldr	r3, .L15+4
 176 0050 1B68     		ldr	r3, [r3]
 177 0052 5A1C     		add	r2, r3, #1
 178 0054 074B     		ldr	r3, .L15+4
 179 0056 1A60     		str	r2, [r3]
 180              	.L11:
  61:rtu_modbus/modbus_serial_ctrl.c ****     {
 181              		.loc 2 61 0 discriminator 2
 182 0058 7B68     		ldr	r3, [r7, #4]
 183 005a 0133     		add	r3, r3, #1
 184 005c 7B60     		str	r3, [r7, #4]
 185              	.L10:
  61:rtu_modbus/modbus_serial_ctrl.c ****     {
 186              		.loc 2 61 0 is_stmt 0 discriminator 1
 187 005e 7B68     		ldr	r3, [r7, #4]
 188 0060 0F2B     		cmp	r3, #15
 189 0062 D5DD     		ble	.L13
  75:rtu_modbus/modbus_serial_ctrl.c ****             }
  76:rtu_modbus/modbus_serial_ctrl.c ****         
  77:rtu_modbus/modbus_serial_ctrl.c ****         }
  78:rtu_modbus/modbus_serial_ctrl.c ****     }
  79:rtu_modbus/modbus_serial_ctrl.c ****     return return_value;
 190              		.loc 2 79 0 is_stmt 1
 191 0064 3B68     		ldr	r3, [r7]
  80:rtu_modbus/modbus_serial_ctrl.c **** }
 192              		.loc 2 80 0
 193 0066 181C     		mov	r0, r3
 194 0068 BD46     		mov	sp, r7
 195 006a 03B0     		add	sp, sp, #12
 196              		@ sp needed
 197 006c 90BD     		pop	{r4, r7, pc}
 198              	.L16:
 199 006e C046     		.align	2
 200              	.L15:
 201 0070 20020000 		.word	read_status_value
 202 0074 14000000 		.word	modbus_rx_index
 203 0078 18000000 		.word	modbus_in_buffer
 204              		.cfi_endproc
 205              	.LFE64:
 206              		.size	empty_rx_uart, .-empty_rx_uart
 207              		.section	.text.dump_rx_uart,"ax",%progbits
 208              		.align	2
 209              		.code	16
 210              		.thumb_func
 211              		.type	dump_rx_uart, %function
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 8


 212              	dump_rx_uart:
 213              	.LFB65:
  81:rtu_modbus/modbus_serial_ctrl.c **** 
  82:rtu_modbus/modbus_serial_ctrl.c **** static inline void dump_rx_uart( void )
  83:rtu_modbus/modbus_serial_ctrl.c **** {
 214              		.loc 2 83 0
 215              		.cfi_startproc
 216 0000 80B5     		push	{r7, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 82B0     		sub	sp, sp, #8
 221              		.cfi_def_cfa_offset 16
 222 0004 00AF     		add	r7, sp, #0
 223              		.cfi_def_cfa_register 7
  84:rtu_modbus/modbus_serial_ctrl.c ****     int i;
  85:rtu_modbus/modbus_serial_ctrl.c ****    
  86:rtu_modbus/modbus_serial_ctrl.c ****     for( i = 0; i < RX_FIFO_SIZE; i++ )
 224              		.loc 2 86 0
 225 0006 0023     		mov	r3, #0
 226 0008 7B60     		str	r3, [r7, #4]
 227 000a 11E0     		b	.L18
 228              	.L22:
  87:rtu_modbus/modbus_serial_ctrl.c ****     {
  88:rtu_modbus/modbus_serial_ctrl.c ****         read_status_value = UART_1_ReadRxStatus();
 229              		.loc 2 88 0
 230 000c FFF7FEFF 		bl	UART_1_ReadRxStatus
 231 0010 031C     		mov	r3, r0
 232 0012 1A1C     		mov	r2, r3
 233 0014 094B     		ldr	r3, .L24
 234 0016 1A60     		str	r2, [r3]
  89:rtu_modbus/modbus_serial_ctrl.c ****         if(  read_status_value & UART_1_RX_STS_FIFO_NOTEMPTY )
 235              		.loc 2 89 0
 236 0018 084B     		ldr	r3, .L24
 237 001a 1B68     		ldr	r3, [r3]
 238 001c 2022     		mov	r2, #32
 239 001e 1340     		and	r3, r2
 240 0020 02D0     		beq	.L19
  90:rtu_modbus/modbus_serial_ctrl.c ****         {
  91:rtu_modbus/modbus_serial_ctrl.c ****              UART_1_ReadRxData();
 241              		.loc 2 91 0
 242 0022 FFF7FEFF 		bl	UART_1_ReadRxData
 243 0026 00E0     		b	.L23
 244              	.L19:
  92:rtu_modbus/modbus_serial_ctrl.c ****          
  93:rtu_modbus/modbus_serial_ctrl.c ****         }
  94:rtu_modbus/modbus_serial_ctrl.c ****         else
  95:rtu_modbus/modbus_serial_ctrl.c ****         {
  96:rtu_modbus/modbus_serial_ctrl.c ****             break;
 245              		.loc 2 96 0
 246 0028 05E0     		b	.L17
 247              	.L23:
  86:rtu_modbus/modbus_serial_ctrl.c ****     {
 248              		.loc 2 86 0 discriminator 2
 249 002a 7B68     		ldr	r3, [r7, #4]
 250 002c 0133     		add	r3, r3, #1
 251 002e 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 9


 252              	.L18:
  86:rtu_modbus/modbus_serial_ctrl.c ****     {
 253              		.loc 2 86 0 is_stmt 0 discriminator 1
 254 0030 7B68     		ldr	r3, [r7, #4]
 255 0032 0F2B     		cmp	r3, #15
 256 0034 EADD     		ble	.L22
 257              	.L17:
  97:rtu_modbus/modbus_serial_ctrl.c ****         }
  98:rtu_modbus/modbus_serial_ctrl.c ****     }
  99:rtu_modbus/modbus_serial_ctrl.c ****     
 100:rtu_modbus/modbus_serial_ctrl.c **** }
 258              		.loc 2 100 0 is_stmt 1
 259 0036 BD46     		mov	sp, r7
 260 0038 02B0     		add	sp, sp, #8
 261              		@ sp needed
 262 003a 80BD     		pop	{r7, pc}
 263              	.L25:
 264              		.align	2
 265              	.L24:
 266 003c 20020000 		.word	read_status_value
 267              		.cfi_endproc
 268              	.LFE65:
 269              		.size	dump_rx_uart, .-dump_rx_uart
 270              		.section	.text.check_modbus_address,"ax",%progbits
 271              		.align	2
 272              		.code	16
 273              		.thumb_func
 274              		.type	check_modbus_address, %function
 275              	check_modbus_address:
 276              	.LFB66:
 101:rtu_modbus/modbus_serial_ctrl.c **** 
 102:rtu_modbus/modbus_serial_ctrl.c **** static inline int check_modbus_address( void )
 103:rtu_modbus/modbus_serial_ctrl.c **** {
 277              		.loc 2 103 0
 278              		.cfi_startproc
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 104:rtu_modbus/modbus_serial_ctrl.c ****     int return_value;
 105:rtu_modbus/modbus_serial_ctrl.c ****     if( modbus_in_buffer[0] == modbus_address )
 287              		.loc 2 105 0
 288 0006 084B     		ldr	r3, .L30
 289 0008 1B78     		ldrb	r3, [r3]
 290 000a 9AB2     		uxth	r2, r3
 291 000c 074B     		ldr	r3, .L30+4
 292 000e 1B88     		ldrh	r3, [r3]
 293 0010 9A42     		cmp	r2, r3
 294 0012 02D1     		bne	.L27
 106:rtu_modbus/modbus_serial_ctrl.c ****     {
 107:rtu_modbus/modbus_serial_ctrl.c ****         return_value = 1;
 295              		.loc 2 107 0
 296 0014 0123     		mov	r3, #1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 10


 297 0016 7B60     		str	r3, [r7, #4]
 298 0018 01E0     		b	.L28
 299              	.L27:
 108:rtu_modbus/modbus_serial_ctrl.c ****     }
 109:rtu_modbus/modbus_serial_ctrl.c ****     else
 110:rtu_modbus/modbus_serial_ctrl.c ****     {
 111:rtu_modbus/modbus_serial_ctrl.c ****         return_value = 0;
 300              		.loc 2 111 0
 301 001a 0023     		mov	r3, #0
 302 001c 7B60     		str	r3, [r7, #4]
 303              	.L28:
 112:rtu_modbus/modbus_serial_ctrl.c ****     }
 113:rtu_modbus/modbus_serial_ctrl.c ****     return return_value;
 304              		.loc 2 113 0
 305 001e 7B68     		ldr	r3, [r7, #4]
 114:rtu_modbus/modbus_serial_ctrl.c ****     
 115:rtu_modbus/modbus_serial_ctrl.c **** }
 306              		.loc 2 115 0
 307 0020 181C     		mov	r0, r3
 308 0022 BD46     		mov	sp, r7
 309 0024 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0026 80BD     		pop	{r7, pc}
 312              	.L31:
 313              		.align	2
 314              	.L30:
 315 0028 18000000 		.word	modbus_in_buffer
 316 002c 10000000 		.word	modbus_address
 317              		.cfi_endproc
 318              	.LFE66:
 319              		.size	check_modbus_address, .-check_modbus_address
 320              		.section	.text.rx_interrupt,"ax",%progbits
 321              		.align	2
 322              		.global	rx_interrupt
 323              		.code	16
 324              		.thumb_func
 325              		.type	rx_interrupt, %function
 326              	rx_interrupt:
 327              	.LFB67:
 116:rtu_modbus/modbus_serial_ctrl.c **** 
 117:rtu_modbus/modbus_serial_ctrl.c **** 
 118:rtu_modbus/modbus_serial_ctrl.c **** CY_ISR_PROTO( rx_interrupt )
 119:rtu_modbus/modbus_serial_ctrl.c **** {
 328              		.loc 2 119 0
 329              		.cfi_startproc
 330 0000 80B5     		push	{r7, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 120:rtu_modbus/modbus_serial_ctrl.c ****    
 121:rtu_modbus/modbus_serial_ctrl.c ****     switch( uart_rx_state )
 336              		.loc 2 121 0
 337 0004 1E4B     		ldr	r3, .L41
 338 0006 1B68     		ldr	r3, [r3]
 339 0008 012B     		cmp	r3, #1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 11


 340 000a 24D0     		beq	.L34
 341 000c 02DC     		bgt	.L35
 342 000e 002B     		cmp	r3, #0
 343 0010 05D0     		beq	.L36
 344 0012 32E0     		b	.L32
 345              	.L35:
 346 0014 022B     		cmp	r3, #2
 347 0016 24D0     		beq	.L37
 348 0018 032B     		cmp	r3, #3
 349 001a 2BD0     		beq	.L38
 350 001c 2DE0     		b	.L32
 351              	.L36:
 122:rtu_modbus/modbus_serial_ctrl.c ****     {
 123:rtu_modbus/modbus_serial_ctrl.c ****         case UART_RX_IDLE:
 124:rtu_modbus/modbus_serial_ctrl.c ****            rx_interval_count = empty_rx_uart();
 352              		.loc 2 124 0
 353 001e FFF7FEFF 		bl	empty_rx_uart
 354 0022 021C     		mov	r2, r0
 355 0024 174B     		ldr	r3, .L41+4
 356 0026 1A60     		str	r2, [r3]
 125:rtu_modbus/modbus_serial_ctrl.c ****            if( rx_interval_count > 0 )
 357              		.loc 2 125 0
 358 0028 164B     		ldr	r3, .L41+4
 359 002a 1B68     		ldr	r3, [r3]
 360 002c 002B     		cmp	r3, #0
 361 002e 11DD     		ble	.L39
 126:rtu_modbus/modbus_serial_ctrl.c ****            {
 127:rtu_modbus/modbus_serial_ctrl.c ****               
 128:rtu_modbus/modbus_serial_ctrl.c ****               if( check_modbus_address() > 0 )
 362              		.loc 2 128 0
 363 0030 FFF7FEFF 		bl	check_modbus_address
 364 0034 031E     		sub	r3, r0, #0
 365 0036 06DD     		ble	.L40
 129:rtu_modbus/modbus_serial_ctrl.c ****               {
 130:rtu_modbus/modbus_serial_ctrl.c ****                  uart_rx_state     = UART_RX_ACTIVE_RECEIVE;
 366              		.loc 2 130 0
 367 0038 114B     		ldr	r3, .L41
 368 003a 0122     		mov	r2, #1
 369 003c 1A60     		str	r2, [r3]
 131:rtu_modbus/modbus_serial_ctrl.c ****                  uart_timer_state  = UART_TIMER_RX;
 370              		.loc 2 131 0
 371 003e 124B     		ldr	r3, .L41+8
 372 0040 0222     		mov	r2, #2
 373 0042 1A60     		str	r2, [r3]
 374 0044 06E0     		b	.L39
 375              	.L40:
 132:rtu_modbus/modbus_serial_ctrl.c ****               }
 133:rtu_modbus/modbus_serial_ctrl.c ****               else
 134:rtu_modbus/modbus_serial_ctrl.c ****               {
 135:rtu_modbus/modbus_serial_ctrl.c ****                 uart_rx_state = UART_RX_BAD_ADDRESS;
 376              		.loc 2 135 0
 377 0046 0E4B     		ldr	r3, .L41
 378 0048 0222     		mov	r2, #2
 379 004a 1A60     		str	r2, [r3]
 136:rtu_modbus/modbus_serial_ctrl.c ****                 uart_timer_state = UART_TIMER_BAD_ADDRESS;
 380              		.loc 2 136 0
 381 004c 0E4B     		ldr	r3, .L41+8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 12


 382 004e 0122     		mov	r2, #1
 383 0050 1A60     		str	r2, [r3]
 137:rtu_modbus/modbus_serial_ctrl.c ****                
 138:rtu_modbus/modbus_serial_ctrl.c ****               }
 139:rtu_modbus/modbus_serial_ctrl.c ****            }     
 140:rtu_modbus/modbus_serial_ctrl.c ****            break;
 384              		.loc 2 140 0
 385 0052 12E0     		b	.L32
 386              	.L39:
 387 0054 11E0     		b	.L32
 388              	.L34:
 141:rtu_modbus/modbus_serial_ctrl.c ****         
 142:rtu_modbus/modbus_serial_ctrl.c ****         case UART_RX_ACTIVE_RECEIVE:
 143:rtu_modbus/modbus_serial_ctrl.c ****             rx_interval_count = empty_rx_uart();
 389              		.loc 2 143 0
 390 0056 FFF7FEFF 		bl	empty_rx_uart
 391 005a 021C     		mov	r2, r0
 392 005c 094B     		ldr	r3, .L41+4
 393 005e 1A60     		str	r2, [r3]
 144:rtu_modbus/modbus_serial_ctrl.c ****             break;
 394              		.loc 2 144 0
 395 0060 0BE0     		b	.L32
 396              	.L37:
 145:rtu_modbus/modbus_serial_ctrl.c ****         
 146:rtu_modbus/modbus_serial_ctrl.c ****         case UART_RX_BAD_ADDRESS:
 147:rtu_modbus/modbus_serial_ctrl.c ****             rx_interval_count = empty_rx_uart();
 397              		.loc 2 147 0
 398 0062 FFF7FEFF 		bl	empty_rx_uart
 399 0066 021C     		mov	r2, r0
 400 0068 064B     		ldr	r3, .L41+4
 401 006a 1A60     		str	r2, [r3]
 148:rtu_modbus/modbus_serial_ctrl.c ****             
 149:rtu_modbus/modbus_serial_ctrl.c ****             modbus_rx_index = 0;
 402              		.loc 2 149 0
 403 006c 074B     		ldr	r3, .L41+12
 404 006e 0022     		mov	r2, #0
 405 0070 1A60     		str	r2, [r3]
 150:rtu_modbus/modbus_serial_ctrl.c ****             break;
 406              		.loc 2 150 0
 407 0072 02E0     		b	.L32
 408              	.L38:
 151:rtu_modbus/modbus_serial_ctrl.c ****             
 152:rtu_modbus/modbus_serial_ctrl.c ****        case UART_RX_DUMP_STATE:
 153:rtu_modbus/modbus_serial_ctrl.c ****             dump_rx_uart();
 409              		.loc 2 153 0
 410 0074 FFF7FEFF 		bl	dump_rx_uart
 154:rtu_modbus/modbus_serial_ctrl.c ****             break;
 411              		.loc 2 154 0
 412 0078 C046     		mov	r8, r8
 413              	.L32:
 155:rtu_modbus/modbus_serial_ctrl.c ****             
 156:rtu_modbus/modbus_serial_ctrl.c ****     }
 157:rtu_modbus/modbus_serial_ctrl.c **** 
 158:rtu_modbus/modbus_serial_ctrl.c ****     
 159:rtu_modbus/modbus_serial_ctrl.c **** }
 414              		.loc 2 159 0
 415 007a BD46     		mov	sp, r7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 13


 416              		@ sp needed
 417 007c 80BD     		pop	{r7, pc}
 418              	.L42:
 419 007e C046     		.align	2
 420              	.L41:
 421 0080 04000000 		.word	uart_rx_state
 422 0084 0C000000 		.word	rx_interval_count
 423 0088 00000000 		.word	uart_timer_state
 424 008c 14000000 		.word	modbus_rx_index
 425              		.cfi_endproc
 426              	.LFE67:
 427              		.size	rx_interrupt, .-rx_interrupt
 428              		.section	.text.fill_transmitter,"ax",%progbits
 429              		.align	2
 430              		.code	16
 431              		.thumb_func
 432              		.type	fill_transmitter, %function
 433              	fill_transmitter:
 434              	.LFB68:
 160:rtu_modbus/modbus_serial_ctrl.c **** 
 161:rtu_modbus/modbus_serial_ctrl.c **** static inline int fill_transmitter( void )
 162:rtu_modbus/modbus_serial_ctrl.c **** { 
 435              		.loc 2 162 0
 436              		.cfi_startproc
 437 0000 80B5     		push	{r7, lr}
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 7, -8
 440              		.cfi_offset 14, -4
 441 0002 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 163:rtu_modbus/modbus_serial_ctrl.c ****     while( ( UART_1_ReadTxStatus() & UART_1_TX_STS_FIFO_NOT_FULL ) && ( modbus_tx_message_count > 0
 443              		.loc 2 163 0
 444 0004 10E0     		b	.L44
 445              	.L46:
 164:rtu_modbus/modbus_serial_ctrl.c ****     {
 165:rtu_modbus/modbus_serial_ctrl.c ****         UART_1_WriteTxData(modbus_out_buffer[modbus_tx_index]);
 446              		.loc 2 165 0
 447 0006 104B     		ldr	r3, .L48
 448 0008 1B68     		ldr	r3, [r3]
 449 000a 104A     		ldr	r2, .L48+4
 450 000c D35C     		ldrb	r3, [r2, r3]
 451 000e 181C     		mov	r0, r3
 452 0010 FFF7FEFF 		bl	UART_1_WriteTxData
 166:rtu_modbus/modbus_serial_ctrl.c ****         modbus_tx_index +=1;
 453              		.loc 2 166 0
 454 0014 0C4B     		ldr	r3, .L48
 455 0016 1B68     		ldr	r3, [r3]
 456 0018 5A1C     		add	r2, r3, #1
 457 001a 0B4B     		ldr	r3, .L48
 458 001c 1A60     		str	r2, [r3]
 167:rtu_modbus/modbus_serial_ctrl.c ****         modbus_tx_message_count -= 1;
 459              		.loc 2 167 0
 460 001e 0C4B     		ldr	r3, .L48+8
 461 0020 1B68     		ldr	r3, [r3]
 462 0022 5A1E     		sub	r2, r3, #1
 463 0024 0A4B     		ldr	r3, .L48+8
 464 0026 1A60     		str	r2, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 14


 465              	.L44:
 163:rtu_modbus/modbus_serial_ctrl.c ****     {
 466              		.loc 2 163 0
 467 0028 FFF7FEFF 		bl	UART_1_ReadTxStatus
 468 002c 031C     		mov	r3, r0
 469 002e 1A1C     		mov	r2, r3
 470 0030 0823     		mov	r3, #8
 471 0032 1340     		and	r3, r2
 472 0034 03D0     		beq	.L45
 163:rtu_modbus/modbus_serial_ctrl.c ****     {
 473              		.loc 2 163 0 is_stmt 0 discriminator 1
 474 0036 064B     		ldr	r3, .L48+8
 475 0038 1B68     		ldr	r3, [r3]
 476 003a 002B     		cmp	r3, #0
 477 003c E3DC     		bgt	.L46
 478              	.L45:
 168:rtu_modbus/modbus_serial_ctrl.c ****     }
 169:rtu_modbus/modbus_serial_ctrl.c ****     return modbus_tx_message_count;
 479              		.loc 2 169 0 is_stmt 1
 480 003e 044B     		ldr	r3, .L48+8
 481 0040 1B68     		ldr	r3, [r3]
 170:rtu_modbus/modbus_serial_ctrl.c **** }
 482              		.loc 2 170 0
 483 0042 181C     		mov	r0, r3
 484 0044 BD46     		mov	sp, r7
 485              		@ sp needed
 486 0046 80BD     		pop	{r7, pc}
 487              	.L49:
 488              		.align	2
 489              	.L48:
 490 0048 18010000 		.word	modbus_tx_index
 491 004c 20010000 		.word	modbus_out_buffer
 492 0050 1C010000 		.word	modbus_tx_message_count
 493              		.cfi_endproc
 494              	.LFE68:
 495              		.size	fill_transmitter, .-fill_transmitter
 496              		.section	.text.tx_interrupt,"ax",%progbits
 497              		.align	2
 498              		.global	tx_interrupt
 499              		.code	16
 500              		.thumb_func
 501              		.type	tx_interrupt, %function
 502              	tx_interrupt:
 503              	.LFB69:
 171:rtu_modbus/modbus_serial_ctrl.c **** 
 172:rtu_modbus/modbus_serial_ctrl.c **** CY_ISR_PROTO( tx_interrupt )
 173:rtu_modbus/modbus_serial_ctrl.c **** {
 504              		.loc 2 173 0
 505              		.cfi_startproc
 506 0000 80B5     		push	{r7, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 7, -8
 509              		.cfi_offset 14, -4
 510 0002 82B0     		sub	sp, sp, #8
 511              		.cfi_def_cfa_offset 16
 512 0004 00AF     		add	r7, sp, #0
 513              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 15


 174:rtu_modbus/modbus_serial_ctrl.c ****     int status;
 175:rtu_modbus/modbus_serial_ctrl.c ****     switch( uart_tx_state )
 514              		.loc 2 175 0
 515 0006 154B     		ldr	r3, .L56
 516 0008 1B68     		ldr	r3, [r3]
 517 000a 012B     		cmp	r3, #1
 518 000c 07D0     		beq	.L52
 519 000e 022B     		cmp	r3, #2
 520 0010 17D0     		beq	.L53
 521 0012 002B     		cmp	r3, #0
 522 0014 1FD1     		bne	.L50
 176:rtu_modbus/modbus_serial_ctrl.c ****     {
 177:rtu_modbus/modbus_serial_ctrl.c ****         case UART_TX_STATE_IDLE:
 178:rtu_modbus/modbus_serial_ctrl.c ****             UART_1_SetTxInterruptMode( 0   );
 523              		.loc 2 178 0
 524 0016 0020     		mov	r0, #0
 525 0018 FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 179:rtu_modbus/modbus_serial_ctrl.c ****             break;
 526              		.loc 2 179 0
 527 001c 1BE0     		b	.L50
 528              	.L52:
 180:rtu_modbus/modbus_serial_ctrl.c ****         
 181:rtu_modbus/modbus_serial_ctrl.c ****         case UART_TX_STATE_TRANSMITTING:
 182:rtu_modbus/modbus_serial_ctrl.c ****             status = fill_transmitter();
 529              		.loc 2 182 0
 530 001e FFF7FEFF 		bl	fill_transmitter
 531 0022 031C     		mov	r3, r0
 532 0024 7B60     		str	r3, [r7, #4]
 183:rtu_modbus/modbus_serial_ctrl.c ****             if( status == 0 )
 533              		.loc 2 183 0
 534 0026 7B68     		ldr	r3, [r7, #4]
 535 0028 002B     		cmp	r3, #0
 536 002a 09D1     		bne	.L55
 184:rtu_modbus/modbus_serial_ctrl.c ****             {
 185:rtu_modbus/modbus_serial_ctrl.c ****                 uart_tx_state = UART_TX_STATE_WAIT_FOR_EOT;
 537              		.loc 2 185 0
 538 002c 0B4B     		ldr	r3, .L56
 539 002e 0222     		mov	r2, #2
 540 0030 1A60     		str	r2, [r3]
 186:rtu_modbus/modbus_serial_ctrl.c ****                  UART_1_SetTxInterruptMode( UART_1_TX_STS_COMPLETE   );
 541              		.loc 2 186 0
 542 0032 0120     		mov	r0, #1
 543 0034 FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 187:rtu_modbus/modbus_serial_ctrl.c ****                 UART_1_SetTxInterruptMode(UART_1_TX_STS_COMPLETE );
 544              		.loc 2 187 0
 545 0038 0120     		mov	r0, #1
 546 003a FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 188:rtu_modbus/modbus_serial_ctrl.c ****             }
 189:rtu_modbus/modbus_serial_ctrl.c ****             break;
 547              		.loc 2 189 0
 548 003e 0AE0     		b	.L50
 549              	.L55:
 550 0040 09E0     		b	.L50
 551              	.L53:
 190:rtu_modbus/modbus_serial_ctrl.c ****         
 191:rtu_modbus/modbus_serial_ctrl.c ****         case UART_TX_STATE_WAIT_FOR_EOT:
 192:rtu_modbus/modbus_serial_ctrl.c ****               UART_1_Stop();
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 16


 552              		.loc 2 192 0
 553 0042 FFF7FEFF 		bl	UART_1_Stop
 193:rtu_modbus/modbus_serial_ctrl.c ****               UART_1_Start();
 554              		.loc 2 193 0
 555 0046 FFF7FEFF 		bl	UART_1_Start
 194:rtu_modbus/modbus_serial_ctrl.c ****              UART_1_SetTxInterruptMode( 0   );
 556              		.loc 2 194 0
 557 004a 0020     		mov	r0, #0
 558 004c FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 195:rtu_modbus/modbus_serial_ctrl.c ****               init_rx_state();
 559              		.loc 2 195 0
 560 0050 FFF7FEFF 		bl	init_rx_state
 196:rtu_modbus/modbus_serial_ctrl.c ****               break;
 561              		.loc 2 196 0
 562 0054 C046     		mov	r8, r8
 563              	.L50:
 197:rtu_modbus/modbus_serial_ctrl.c ****     }
 198:rtu_modbus/modbus_serial_ctrl.c **** }
 564              		.loc 2 198 0
 565 0056 BD46     		mov	sp, r7
 566 0058 02B0     		add	sp, sp, #8
 567              		@ sp needed
 568 005a 80BD     		pop	{r7, pc}
 569              	.L57:
 570              		.align	2
 571              	.L56:
 572 005c 08000000 		.word	uart_tx_state
 573              		.cfi_endproc
 574              	.LFE69:
 575              		.size	tx_interrupt, .-tx_interrupt
 576              		.section	.text.modbus_timer_interrupt,"ax",%progbits
 577              		.align	2
 578              		.global	modbus_timer_interrupt
 579              		.code	16
 580              		.thumb_func
 581              		.type	modbus_timer_interrupt, %function
 582              	modbus_timer_interrupt:
 583              	.LFB70:
 199:rtu_modbus/modbus_serial_ctrl.c **** 
 200:rtu_modbus/modbus_serial_ctrl.c **** void modbus_timer_interrupt( void )
 201:rtu_modbus/modbus_serial_ctrl.c **** {
 584              		.loc 2 201 0
 585              		.cfi_startproc
 586 0000 80B5     		push	{r7, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 00AF     		add	r7, sp, #0
 591              		.cfi_def_cfa_register 7
 202:rtu_modbus/modbus_serial_ctrl.c ****     
 203:rtu_modbus/modbus_serial_ctrl.c ****     switch( uart_timer_state )
 592              		.loc 2 203 0
 593 0004 0F4B     		ldr	r3, .L67
 594 0006 1B68     		ldr	r3, [r3]
 595 0008 012B     		cmp	r3, #1
 596 000a 02D0     		beq	.L60
 597 000c 022B     		cmp	r3, #2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 17


 598 000e 0BD0     		beq	.L61
 204:rtu_modbus/modbus_serial_ctrl.c ****     {
 205:rtu_modbus/modbus_serial_ctrl.c ****        case UART_TIMER_IDLE:
 206:rtu_modbus/modbus_serial_ctrl.c ****            break; 
 599              		.loc 2 206 0
 600 0010 15E0     		b	.L58
 601              	.L60:
 207:rtu_modbus/modbus_serial_ctrl.c ****         
 208:rtu_modbus/modbus_serial_ctrl.c ****        case UART_TIMER_BAD_ADDRESS:  // wait for link to become idle and then reenable modbus rx
 209:rtu_modbus/modbus_serial_ctrl.c ****             if( rx_interval_count == 0 )
 602              		.loc 2 209 0
 603 0012 0D4B     		ldr	r3, .L67+4
 604 0014 1B68     		ldr	r3, [r3]
 605 0016 002B     		cmp	r3, #0
 606 0018 02D1     		bne	.L63
 210:rtu_modbus/modbus_serial_ctrl.c ****             {
 211:rtu_modbus/modbus_serial_ctrl.c ****                 init_rx_state();
 607              		.loc 2 211 0
 608 001a FFF7FEFF 		bl	init_rx_state
 212:rtu_modbus/modbus_serial_ctrl.c ****             }
 213:rtu_modbus/modbus_serial_ctrl.c ****             else
 214:rtu_modbus/modbus_serial_ctrl.c ****             {
 215:rtu_modbus/modbus_serial_ctrl.c ****                 rx_interval_count = 0;
 216:rtu_modbus/modbus_serial_ctrl.c ****             }
 217:rtu_modbus/modbus_serial_ctrl.c ****             break;
 609              		.loc 2 217 0
 610 001e 0EE0     		b	.L58
 611              	.L63:
 215:rtu_modbus/modbus_serial_ctrl.c ****             }
 612              		.loc 2 215 0
 613 0020 094B     		ldr	r3, .L67+4
 614 0022 0022     		mov	r2, #0
 615 0024 1A60     		str	r2, [r3]
 616              		.loc 2 217 0
 617 0026 0AE0     		b	.L58
 618              	.L61:
 218:rtu_modbus/modbus_serial_ctrl.c ****             
 219:rtu_modbus/modbus_serial_ctrl.c ****        case UART_TIMER_RX:
 220:rtu_modbus/modbus_serial_ctrl.c ****             if( rx_interval_count == 0 )
 619              		.loc 2 220 0
 620 0028 074B     		ldr	r3, .L67+4
 621 002a 1B68     		ldr	r3, [r3]
 622 002c 002B     		cmp	r3, #0
 623 002e 02D1     		bne	.L65
 221:rtu_modbus/modbus_serial_ctrl.c ****             {
 222:rtu_modbus/modbus_serial_ctrl.c ****                 init_processing_state();
 624              		.loc 2 222 0
 625 0030 FFF7FEFF 		bl	init_processing_state
 626 0034 02E0     		b	.L66
 627              	.L65:
 223:rtu_modbus/modbus_serial_ctrl.c ****             }
 224:rtu_modbus/modbus_serial_ctrl.c ****             else
 225:rtu_modbus/modbus_serial_ctrl.c ****             {
 226:rtu_modbus/modbus_serial_ctrl.c ****                 rx_interval_count = 0;
 628              		.loc 2 226 0
 629 0036 044B     		ldr	r3, .L67+4
 630 0038 0022     		mov	r2, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 18


 631 003a 1A60     		str	r2, [r3]
 632              	.L66:
 227:rtu_modbus/modbus_serial_ctrl.c ****             }
 228:rtu_modbus/modbus_serial_ctrl.c ****             break;
 633              		.loc 2 228 0
 634 003c C046     		mov	r8, r8
 635              	.L58:
 229:rtu_modbus/modbus_serial_ctrl.c ****     }
 230:rtu_modbus/modbus_serial_ctrl.c **** }
 636              		.loc 2 230 0
 637 003e BD46     		mov	sp, r7
 638              		@ sp needed
 639 0040 80BD     		pop	{r7, pc}
 640              	.L68:
 641 0042 C046     		.align	2
 642              	.L67:
 643 0044 00000000 		.word	uart_timer_state
 644 0048 0C000000 		.word	rx_interval_count
 645              		.cfi_endproc
 646              	.LFE70:
 647              		.size	modbus_timer_interrupt, .-modbus_timer_interrupt
 648              		.section	.text.abort_rx_state,"ax",%progbits
 649              		.align	2
 650              		.code	16
 651              		.thumb_func
 652              		.type	abort_rx_state, %function
 653              	abort_rx_state:
 654              	.LFB71:
 231:rtu_modbus/modbus_serial_ctrl.c **** 
 232:rtu_modbus/modbus_serial_ctrl.c **** static inline void abort_rx_state( void )
 233:rtu_modbus/modbus_serial_ctrl.c **** {
 655              		.loc 2 233 0
 656              		.cfi_startproc
 657 0000 80B5     		push	{r7, lr}
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 00AF     		add	r7, sp, #0
 662              		.cfi_def_cfa_register 7
 234:rtu_modbus/modbus_serial_ctrl.c ****      uart_rx_state     =  UART_RX_BAD_ADDRESS;
 663              		.loc 2 234 0
 664 0004 064B     		ldr	r3, .L70
 665 0006 0222     		mov	r2, #2
 666 0008 1A60     		str	r2, [r3]
 235:rtu_modbus/modbus_serial_ctrl.c ****      uart_timer_state  =  UART_RX_IDLE;
 667              		.loc 2 235 0
 668 000a 064B     		ldr	r3, .L70+4
 669 000c 0022     		mov	r2, #0
 670 000e 1A60     		str	r2, [r3]
 236:rtu_modbus/modbus_serial_ctrl.c ****      modbus_rx_index   = 0;
 671              		.loc 2 236 0
 672 0010 054B     		ldr	r3, .L70+8
 673 0012 0022     		mov	r2, #0
 674 0014 1A60     		str	r2, [r3]
 237:rtu_modbus/modbus_serial_ctrl.c ****      uart_tx_state     =  UART_TX_STATE_IDLE;
 675              		.loc 2 237 0
 676 0016 054B     		ldr	r3, .L70+12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 19


 677 0018 0022     		mov	r2, #0
 678 001a 1A60     		str	r2, [r3]
 238:rtu_modbus/modbus_serial_ctrl.c **** }
 679              		.loc 2 238 0
 680 001c BD46     		mov	sp, r7
 681              		@ sp needed
 682 001e 80BD     		pop	{r7, pc}
 683              	.L71:
 684              		.align	2
 685              	.L70:
 686 0020 04000000 		.word	uart_rx_state
 687 0024 00000000 		.word	uart_timer_state
 688 0028 14000000 		.word	modbus_rx_index
 689 002c 08000000 		.word	uart_tx_state
 690              		.cfi_endproc
 691              	.LFE71:
 692              		.size	abort_rx_state, .-abort_rx_state
 693              		.section	.text.init_rx_state,"ax",%progbits
 694              		.align	2
 695              		.code	16
 696              		.thumb_func
 697              		.type	init_rx_state, %function
 698              	init_rx_state:
 699              	.LFB72:
 239:rtu_modbus/modbus_serial_ctrl.c **** 
 240:rtu_modbus/modbus_serial_ctrl.c **** static inline void init_rx_state( void )
 241:rtu_modbus/modbus_serial_ctrl.c **** {
 700              		.loc 2 241 0
 701              		.cfi_startproc
 702 0000 80B5     		push	{r7, lr}
 703              		.cfi_def_cfa_offset 8
 704              		.cfi_offset 7, -8
 705              		.cfi_offset 14, -4
 706 0002 00AF     		add	r7, sp, #0
 707              		.cfi_def_cfa_register 7
 242:rtu_modbus/modbus_serial_ctrl.c ****     
 243:rtu_modbus/modbus_serial_ctrl.c ****    rx_interval_count  = 0;
 708              		.loc 2 243 0
 709 0004 0A4B     		ldr	r3, .L73
 710 0006 0022     		mov	r2, #0
 711 0008 1A60     		str	r2, [r3]
 244:rtu_modbus/modbus_serial_ctrl.c ****    modbus_rx_index    = 0;
 712              		.loc 2 244 0
 713 000a 0A4B     		ldr	r3, .L73+4
 714 000c 0022     		mov	r2, #0
 715 000e 1A60     		str	r2, [r3]
 245:rtu_modbus/modbus_serial_ctrl.c ****    uart_rx_state      =  UART_RX_IDLE;
 716              		.loc 2 245 0
 717 0010 094B     		ldr	r3, .L73+8
 718 0012 0022     		mov	r2, #0
 719 0014 1A60     		str	r2, [r3]
 246:rtu_modbus/modbus_serial_ctrl.c ****    uart_timer_state   =  UART_TIMER_IDLE;
 720              		.loc 2 246 0
 721 0016 094B     		ldr	r3, .L73+12
 722 0018 0022     		mov	r2, #0
 723 001a 1A60     		str	r2, [r3]
 247:rtu_modbus/modbus_serial_ctrl.c ****    uart_tx_state      =  UART_TX_STATE_IDLE;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 20


 724              		.loc 2 247 0
 725 001c 084B     		ldr	r3, .L73+16
 726 001e 0022     		mov	r2, #0
 727 0020 1A60     		str	r2, [r3]
 248:rtu_modbus/modbus_serial_ctrl.c ****    UART_1_SetTxInterruptMode(  0 );
 728              		.loc 2 248 0
 729 0022 0020     		mov	r0, #0
 730 0024 FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 249:rtu_modbus/modbus_serial_ctrl.c ****    UART_1_ClearTxBuffer(); 
 731              		.loc 2 249 0
 732 0028 FFF7FEFF 		bl	UART_1_ClearTxBuffer
 250:rtu_modbus/modbus_serial_ctrl.c ****   
 251:rtu_modbus/modbus_serial_ctrl.c ****    
 252:rtu_modbus/modbus_serial_ctrl.c **** }
 733              		.loc 2 252 0
 734 002c BD46     		mov	sp, r7
 735              		@ sp needed
 736 002e 80BD     		pop	{r7, pc}
 737              	.L74:
 738              		.align	2
 739              	.L73:
 740 0030 0C000000 		.word	rx_interval_count
 741 0034 14000000 		.word	modbus_rx_index
 742 0038 04000000 		.word	uart_rx_state
 743 003c 00000000 		.word	uart_timer_state
 744 0040 08000000 		.word	uart_tx_state
 745              		.cfi_endproc
 746              	.LFE72:
 747              		.size	init_rx_state, .-init_rx_state
 748              		.section	.text.init_processing_state,"ax",%progbits
 749              		.align	2
 750              		.code	16
 751              		.thumb_func
 752              		.type	init_processing_state, %function
 753              	init_processing_state:
 754              	.LFB73:
 253:rtu_modbus/modbus_serial_ctrl.c **** 
 254:rtu_modbus/modbus_serial_ctrl.c **** static inline void init_processing_state( void )
 255:rtu_modbus/modbus_serial_ctrl.c **** {
 755              		.loc 2 255 0
 756              		.cfi_startproc
 757 0000 80B5     		push	{r7, lr}
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
 256:rtu_modbus/modbus_serial_ctrl.c ****     cf_set_interrupt_status_bit( CF_PROCESS_MODBUS );
 763              		.loc 2 256 0
 764 0004 0220     		mov	r0, #2
 765 0006 FFF7FEFF 		bl	cf_set_interrupt_status_bit
 257:rtu_modbus/modbus_serial_ctrl.c ****     uart_rx_state      =  UART_RX_DUMP_STATE;
 766              		.loc 2 257 0
 767 000a 044B     		ldr	r3, .L76
 768 000c 0322     		mov	r2, #3
 769 000e 1A60     		str	r2, [r3]
 258:rtu_modbus/modbus_serial_ctrl.c ****     uart_timer_state   = UART_TIMER_IDLE;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 21


 770              		.loc 2 258 0
 771 0010 034B     		ldr	r3, .L76+4
 772 0012 0022     		mov	r2, #0
 773 0014 1A60     		str	r2, [r3]
 259:rtu_modbus/modbus_serial_ctrl.c **** }
 774              		.loc 2 259 0
 775 0016 BD46     		mov	sp, r7
 776              		@ sp needed
 777 0018 80BD     		pop	{r7, pc}
 778              	.L77:
 779 001a C046     		.align	2
 780              	.L76:
 781 001c 04000000 		.word	uart_rx_state
 782 0020 00000000 		.word	uart_timer_state
 783              		.cfi_endproc
 784              	.LFE73:
 785              		.size	init_processing_state, .-init_processing_state
 786              		.section	.text.init_tx_state,"ax",%progbits
 787              		.align	2
 788              		.code	16
 789              		.thumb_func
 790              		.type	init_tx_state, %function
 791              	init_tx_state:
 792              	.LFB74:
 260:rtu_modbus/modbus_serial_ctrl.c **** 
 261:rtu_modbus/modbus_serial_ctrl.c **** 
 262:rtu_modbus/modbus_serial_ctrl.c **** static inline void init_tx_state( int out_count )
 263:rtu_modbus/modbus_serial_ctrl.c **** {
 793              		.loc 2 263 0
 794              		.cfi_startproc
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 82B0     		sub	sp, sp, #8
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]
 264:rtu_modbus/modbus_serial_ctrl.c ****    if( out_count > 200)
 804              		.loc 2 264 0
 805 0008 7B68     		ldr	r3, [r7, #4]
 806 000a C82B     		cmp	r3, #200
 807 000c 02DD     		ble	.L79
 265:rtu_modbus/modbus_serial_ctrl.c ****    {
 266:rtu_modbus/modbus_serial_ctrl.c ****      CYASSERT(0);  // this should not happen
 808              		.loc 2 266 0 discriminator 1
 809 000e 0020     		mov	r0, #0
 810 0010 FFF7FEFF 		bl	CyHalt
 811              	.L79:
 267:rtu_modbus/modbus_serial_ctrl.c ****    }
 268:rtu_modbus/modbus_serial_ctrl.c ****    modbus_tx_index  = 0;
 812              		.loc 2 268 0
 813 0014 094B     		ldr	r3, .L80
 814 0016 0022     		mov	r2, #0
 815 0018 1A60     		str	r2, [r3]
 269:rtu_modbus/modbus_serial_ctrl.c ****    modbus_tx_message_count = out_count;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 22


 816              		.loc 2 269 0
 817 001a 094B     		ldr	r3, .L80+4
 818 001c 7A68     		ldr	r2, [r7, #4]
 819 001e 1A60     		str	r2, [r3]
 270:rtu_modbus/modbus_serial_ctrl.c ****    uart_timer_state   = UART_TIMER_IDLE;
 820              		.loc 2 270 0
 821 0020 084B     		ldr	r3, .L80+8
 822 0022 0022     		mov	r2, #0
 823 0024 1A60     		str	r2, [r3]
 271:rtu_modbus/modbus_serial_ctrl.c ****    uart_tx_state     =  UART_TX_STATE_TRANSMITTING;
 824              		.loc 2 271 0
 825 0026 084B     		ldr	r3, .L80+12
 826 0028 0122     		mov	r2, #1
 827 002a 1A60     		str	r2, [r3]
 272:rtu_modbus/modbus_serial_ctrl.c ****    UART_1_SetTxInterruptMode(  UART_1_TX_STS_FIFO_NOT_FULL  );
 828              		.loc 2 272 0
 829 002c 0820     		mov	r0, #8
 830 002e FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 273:rtu_modbus/modbus_serial_ctrl.c ****    
 274:rtu_modbus/modbus_serial_ctrl.c ****    fill_transmitter();
 831              		.loc 2 274 0
 832 0032 FFF7FEFF 		bl	fill_transmitter
 275:rtu_modbus/modbus_serial_ctrl.c **** }
 833              		.loc 2 275 0
 834 0036 BD46     		mov	sp, r7
 835 0038 02B0     		add	sp, sp, #8
 836              		@ sp needed
 837 003a 80BD     		pop	{r7, pc}
 838              	.L81:
 839              		.align	2
 840              	.L80:
 841 003c 18010000 		.word	modbus_tx_index
 842 0040 1C010000 		.word	modbus_tx_message_count
 843 0044 00000000 		.word	uart_timer_state
 844 0048 08000000 		.word	uart_tx_state
 845              		.cfi_endproc
 846              	.LFE74:
 847              		.size	init_tx_state, .-init_tx_state
 848              		.section	.text.initialize_modbus_rtu,"ax",%progbits
 849              		.align	2
 850              		.global	initialize_modbus_rtu
 851              		.code	16
 852              		.thumb_func
 853              		.type	initialize_modbus_rtu, %function
 854              	initialize_modbus_rtu:
 855              	.LFB75:
 276:rtu_modbus/modbus_serial_ctrl.c **** 
 277:rtu_modbus/modbus_serial_ctrl.c **** 
 278:rtu_modbus/modbus_serial_ctrl.c **** 
 279:rtu_modbus/modbus_serial_ctrl.c **** int initialize_modbus_rtu(void)
 280:rtu_modbus/modbus_serial_ctrl.c **** {
 856              		.loc 2 280 0
 857              		.cfi_startproc
 858 0000 80B5     		push	{r7, lr}
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 7, -8
 861              		.cfi_offset 14, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 23


 862 0002 00AF     		add	r7, sp, #0
 863              		.cfi_def_cfa_register 7
 281:rtu_modbus/modbus_serial_ctrl.c ****     uart_timer_state = UART_TIMER_IDLE;
 864              		.loc 2 281 0
 865 0004 124B     		ldr	r3, .L84
 866 0006 0022     		mov	r2, #0
 867 0008 1A60     		str	r2, [r3]
 282:rtu_modbus/modbus_serial_ctrl.c ****     uart_rx_state    = UART_RX_IDLE;
 868              		.loc 2 282 0
 869 000a 124B     		ldr	r3, .L84+4
 870 000c 0022     		mov	r2, #0
 871 000e 1A60     		str	r2, [r3]
 283:rtu_modbus/modbus_serial_ctrl.c ****     uart_timer_state = UART_TIMER_IDLE;
 872              		.loc 2 283 0
 873 0010 0F4B     		ldr	r3, .L84
 874 0012 0022     		mov	r2, #0
 875 0014 1A60     		str	r2, [r3]
 284:rtu_modbus/modbus_serial_ctrl.c ****     UART_1_Start();
 876              		.loc 2 284 0
 877 0016 FFF7FEFF 		bl	UART_1_Start
 285:rtu_modbus/modbus_serial_ctrl.c ****     UART_1_SetRxInterruptMode(UART_1_RX_STS_FIFO_NOTEMPTY );
 878              		.loc 2 285 0
 879 001a 2020     		mov	r0, #32
 880 001c FFF7FEFF 		bl	UART_1_SetRxInterruptMode
 286:rtu_modbus/modbus_serial_ctrl.c ****  
 287:rtu_modbus/modbus_serial_ctrl.c **** 
 288:rtu_modbus/modbus_serial_ctrl.c ****     modbus_rx_interrupt_StartEx(rx_interrupt); 
 881              		.loc 2 288 0
 882 0020 0D4B     		ldr	r3, .L84+8
 883 0022 181C     		mov	r0, r3
 884 0024 FFF7FEFF 		bl	modbus_rx_interrupt_StartEx
 289:rtu_modbus/modbus_serial_ctrl.c ****     UART_1_SetTxInterruptMode(  0 );
 885              		.loc 2 289 0
 886 0028 0020     		mov	r0, #0
 887 002a FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 290:rtu_modbus/modbus_serial_ctrl.c ****     modbus_tx_interrupt_StartEx(tx_interrupt); 
 888              		.loc 2 290 0
 889 002e 0B4B     		ldr	r3, .L84+12
 890 0030 181C     		mov	r0, r3
 891 0032 FFF7FEFF 		bl	modbus_tx_interrupt_StartEx
 291:rtu_modbus/modbus_serial_ctrl.c ****   
 292:rtu_modbus/modbus_serial_ctrl.c ****  
 293:rtu_modbus/modbus_serial_ctrl.c ****     // find modbus address
 294:rtu_modbus/modbus_serial_ctrl.c ****     modbus_address = get_modbus_address();
 892              		.loc 2 294 0
 893 0036 FFF7FEFF 		bl	get_modbus_address
 894 003a 031C     		mov	r3, r0
 895 003c 1A1C     		mov	r2, r3
 896 003e 084B     		ldr	r3, .L84+16
 897 0040 1A80     		strh	r2, [r3]
 295:rtu_modbus/modbus_serial_ctrl.c **** 
 296:rtu_modbus/modbus_serial_ctrl.c ****     init_rx_state();
 898              		.loc 2 296 0
 899 0042 FFF7FEFF 		bl	init_rx_state
 297:rtu_modbus/modbus_serial_ctrl.c ****       
 298:rtu_modbus/modbus_serial_ctrl.c ****     return CF_DISABLE; // TBD Right now
 900              		.loc 2 298 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 24


 901 0046 0223     		mov	r3, #2
 299:rtu_modbus/modbus_serial_ctrl.c **** }
 902              		.loc 2 299 0
 903 0048 181C     		mov	r0, r3
 904 004a BD46     		mov	sp, r7
 905              		@ sp needed
 906 004c 80BD     		pop	{r7, pc}
 907              	.L85:
 908 004e C046     		.align	2
 909              	.L84:
 910 0050 00000000 		.word	uart_timer_state
 911 0054 04000000 		.word	uart_rx_state
 912 0058 00000000 		.word	rx_interrupt
 913 005c 00000000 		.word	tx_interrupt
 914 0060 10000000 		.word	modbus_address
 915              		.cfi_endproc
 916              	.LFE75:
 917              		.size	initialize_modbus_rtu, .-initialize_modbus_rtu
 918              		.section	.text.process_rx_modbus_rtu_message,"ax",%progbits
 919              		.align	2
 920              		.global	process_rx_modbus_rtu_message
 921              		.code	16
 922              		.thumb_func
 923              		.type	process_rx_modbus_rtu_message, %function
 924              	process_rx_modbus_rtu_message:
 925              	.LFB76:
 300:rtu_modbus/modbus_serial_ctrl.c **** 
 301:rtu_modbus/modbus_serial_ctrl.c **** int process_rx_modbus_rtu_message(void )
 302:rtu_modbus/modbus_serial_ctrl.c **** {
 926              		.loc 2 302 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 82B0     		sub	sp, sp, #8
 933              		.cfi_def_cfa_offset 16
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 303:rtu_modbus/modbus_serial_ctrl.c ****     int out_count;
 304:rtu_modbus/modbus_serial_ctrl.c ****     
 305:rtu_modbus/modbus_serial_ctrl.c ****     out_count =  process_modbus_message( modbus_rx_index, &modbus_in_buffer[0], sizeof(modbus_out_b
 936              		.loc 2 305 0
 937 0006 0C4B     		ldr	r3, .L90
 938 0008 1868     		ldr	r0, [r3]
 939 000a 0C49     		ldr	r1, .L90+4
 940 000c 8023     		mov	r3, #128
 941 000e 5A00     		lsl	r2, r3, #1
 942 0010 0B4B     		ldr	r3, .L90+8
 943 0012 FFF7FEFF 		bl	process_modbus_message
 944 0016 031C     		mov	r3, r0
 945 0018 7B60     		str	r3, [r7, #4]
 306:rtu_modbus/modbus_serial_ctrl.c ****                            
 307:rtu_modbus/modbus_serial_ctrl.c ****     
 308:rtu_modbus/modbus_serial_ctrl.c ****     if( out_count > 0 )
 946              		.loc 2 308 0
 947 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 25


 948 001c 002B     		cmp	r3, #0
 949 001e 04DD     		ble	.L87
 309:rtu_modbus/modbus_serial_ctrl.c ****     {
 310:rtu_modbus/modbus_serial_ctrl.c ****         init_tx_state( out_count );
 950              		.loc 2 310 0
 951 0020 7B68     		ldr	r3, [r7, #4]
 952 0022 181C     		mov	r0, r3
 953 0024 FFF7FEFF 		bl	init_tx_state
 954 0028 01E0     		b	.L88
 955              	.L87:
 311:rtu_modbus/modbus_serial_ctrl.c ****     }
 312:rtu_modbus/modbus_serial_ctrl.c ****     else
 313:rtu_modbus/modbus_serial_ctrl.c ****     {
 314:rtu_modbus/modbus_serial_ctrl.c ****         init_rx_state();
 956              		.loc 2 314 0
 957 002a FFF7FEFF 		bl	init_rx_state
 958              	.L88:
 315:rtu_modbus/modbus_serial_ctrl.c ****     }
 316:rtu_modbus/modbus_serial_ctrl.c ****     return CF_TERMINATE; // TBD Right now
 959              		.loc 2 316 0
 960 002e 0423     		mov	r3, #4
 317:rtu_modbus/modbus_serial_ctrl.c **** }
 961              		.loc 2 317 0
 962 0030 181C     		mov	r0, r3
 963 0032 BD46     		mov	sp, r7
 964 0034 02B0     		add	sp, sp, #8
 965              		@ sp needed
 966 0036 80BD     		pop	{r7, pc}
 967              	.L91:
 968              		.align	2
 969              	.L90:
 970 0038 14000000 		.word	modbus_rx_index
 971 003c 18000000 		.word	modbus_in_buffer
 972 0040 20010000 		.word	modbus_out_buffer
 973              		.cfi_endproc
 974              	.LFE76:
 975              		.size	process_rx_modbus_rtu_message, .-process_rx_modbus_rtu_message
 976              		.section	.text.set_normal_modbus_address,"ax",%progbits
 977              		.align	2
 978              		.global	set_normal_modbus_address
 979              		.code	16
 980              		.thumb_func
 981              		.type	set_normal_modbus_address, %function
 982              	set_normal_modbus_address:
 983              	.LFB77:
 318:rtu_modbus/modbus_serial_ctrl.c **** 
 319:rtu_modbus/modbus_serial_ctrl.c **** 
 320:rtu_modbus/modbus_serial_ctrl.c **** 
 321:rtu_modbus/modbus_serial_ctrl.c **** 
 322:rtu_modbus/modbus_serial_ctrl.c **** int set_normal_modbus_address(unsigned link_id, unsigned param_1,
 323:rtu_modbus/modbus_serial_ctrl.c ****   unsigned param_2, unsigned param_3, unsigned event, unsigned data)
 324:rtu_modbus/modbus_serial_ctrl.c **** {
 984              		.loc 2 324 0
 985              		.cfi_startproc
 986 0000 80B5     		push	{r7, lr}
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 26


 989              		.cfi_offset 14, -4
 990 0002 86B0     		sub	sp, sp, #24
 991              		.cfi_def_cfa_offset 32
 992 0004 00AF     		add	r7, sp, #0
 993              		.cfi_def_cfa_register 7
 994 0006 F860     		str	r0, [r7, #12]
 995 0008 B960     		str	r1, [r7, #8]
 996 000a 7A60     		str	r2, [r7, #4]
 997 000c 3B60     		str	r3, [r7]
 325:rtu_modbus/modbus_serial_ctrl.c ****       uint16 temp;
 326:rtu_modbus/modbus_serial_ctrl.c ****       temp = 0;
 998              		.loc 2 326 0
 999 000e 1623     		mov	r3, #22
 1000 0010 FB18     		add	r3, r7, r3
 1001 0012 0022     		mov	r2, #0
 1002 0014 1A80     		strh	r2, [r3]
 327:rtu_modbus/modbus_serial_ctrl.c ****     
 328:rtu_modbus/modbus_serial_ctrl.c ****       store_modbus_data_registers( MOD_COMMISSIONING_FLAG, 1 , &temp );
 1003              		.loc 2 328 0
 1004 0016 1623     		mov	r3, #22
 1005 0018 FB18     		add	r3, r7, r3
 1006 001a 0320     		mov	r0, #3
 1007 001c 0121     		mov	r1, #1
 1008 001e 1A1C     		mov	r2, r3
 1009 0020 FFF7FEFF 		bl	store_modbus_data_registers
 329:rtu_modbus/modbus_serial_ctrl.c ****       modbus_address = get_modbus_address();
 1010              		.loc 2 329 0
 1011 0024 FFF7FEFF 		bl	get_modbus_address
 1012 0028 031C     		mov	r3, r0
 1013 002a 1A1C     		mov	r2, r3
 1014 002c 034B     		ldr	r3, .L94
 1015 002e 1A80     		strh	r2, [r3]
 330:rtu_modbus/modbus_serial_ctrl.c ****       return 0;
 1016              		.loc 2 330 0
 1017 0030 0023     		mov	r3, #0
 331:rtu_modbus/modbus_serial_ctrl.c **** }
 1018              		.loc 2 331 0
 1019 0032 181C     		mov	r0, r3
 1020 0034 BD46     		mov	sp, r7
 1021 0036 06B0     		add	sp, sp, #24
 1022              		@ sp needed
 1023 0038 80BD     		pop	{r7, pc}
 1024              	.L95:
 1025 003a C046     		.align	2
 1026              	.L94:
 1027 003c 10000000 		.word	modbus_address
 1028              		.cfi_endproc
 1029              	.LFE77:
 1030              		.size	set_normal_modbus_address, .-set_normal_modbus_address
 1031              		.section	.text.set_commissiong_address,"ax",%progbits
 1032              		.align	2
 1033              		.global	set_commissiong_address
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	set_commissiong_address, %function
 1037              	set_commissiong_address:
 1038              	.LFB78:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 27


 332:rtu_modbus/modbus_serial_ctrl.c **** 
 333:rtu_modbus/modbus_serial_ctrl.c **** int set_commissiong_address(unsigned link_id, unsigned param_1,
 334:rtu_modbus/modbus_serial_ctrl.c ****   unsigned param_2, unsigned param_3, unsigned event, unsigned data)
 335:rtu_modbus/modbus_serial_ctrl.c **** {
 1039              		.loc 2 335 0
 1040              		.cfi_startproc
 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 86B0     		sub	sp, sp, #24
 1046              		.cfi_def_cfa_offset 32
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 1049 0006 F860     		str	r0, [r7, #12]
 1050 0008 B960     		str	r1, [r7, #8]
 1051 000a 7A60     		str	r2, [r7, #4]
 1052 000c 3B60     		str	r3, [r7]
 336:rtu_modbus/modbus_serial_ctrl.c ****       uint16 temp;
 337:rtu_modbus/modbus_serial_ctrl.c ****       temp = 1;
 1053              		.loc 2 337 0
 1054 000e 1623     		mov	r3, #22
 1055 0010 FB18     		add	r3, r7, r3
 1056 0012 0122     		mov	r2, #1
 1057 0014 1A80     		strh	r2, [r3]
 338:rtu_modbus/modbus_serial_ctrl.c ****     
 339:rtu_modbus/modbus_serial_ctrl.c ****        store_modbus_data_registers( MOD_COMMISSIONING_FLAG, 1 , &temp );
 1058              		.loc 2 339 0
 1059 0016 1623     		mov	r3, #22
 1060 0018 FB18     		add	r3, r7, r3
 1061 001a 0320     		mov	r0, #3
 1062 001c 0121     		mov	r1, #1
 1063 001e 1A1C     		mov	r2, r3
 1064 0020 FFF7FEFF 		bl	store_modbus_data_registers
 340:rtu_modbus/modbus_serial_ctrl.c ****        modbus_address = get_commissioning_address();
 1065              		.loc 2 340 0
 1066 0024 FFF7FEFF 		bl	get_commissioning_address
 1067 0028 031C     		mov	r3, r0
 1068 002a 1A1C     		mov	r2, r3
 1069 002c 034B     		ldr	r3, .L98
 1070 002e 1A80     		strh	r2, [r3]
 341:rtu_modbus/modbus_serial_ctrl.c ****       
 342:rtu_modbus/modbus_serial_ctrl.c ****       return 0;
 1071              		.loc 2 342 0
 1072 0030 0023     		mov	r3, #0
 343:rtu_modbus/modbus_serial_ctrl.c **** }...
 1073              		.loc 2 343 0
 1074 0032 181C     		mov	r0, r3
 1075 0034 BD46     		mov	sp, r7
 1076 0036 06B0     		add	sp, sp, #24
 1077              		@ sp needed
 1078 0038 80BD     		pop	{r7, pc}
 1079              	.L99:
 1080 003a C046     		.align	2
 1081              	.L98:
 1082 003c 10000000 		.word	modbus_address
 1083              		.cfi_endproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 28


 1084              	.LFE78:
 1085              		.size	set_commissiong_address, .-set_commissiong_address
 1086              		.text
 1087              	.Letext0:
 1088              		.file 3 "Generated_Source\\PSoC4/cytypes.h"
 1089              		.section	.debug_info,"",%progbits
 1090              	.Ldebug_info0:
 1091 0000 37040000 		.4byte	0x437
 1092 0004 0400     		.2byte	0x4
 1093 0006 00000000 		.4byte	.Ldebug_abbrev0
 1094 000a 04       		.byte	0x4
 1095 000b 01       		.uleb128 0x1
 1096 000c 00020000 		.4byte	.LASF52
 1097 0010 01       		.byte	0x1
 1098 0011 69030000 		.4byte	.LASF53
 1099 0015 A5030000 		.4byte	.LASF54
 1100 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1101 001d 00000000 		.4byte	0
 1102 0021 00000000 		.4byte	.Ldebug_line0
 1103 0025 02       		.uleb128 0x2
 1104 0026 01       		.byte	0x1
 1105 0027 06       		.byte	0x6
 1106 0028 FB030000 		.4byte	.LASF0
 1107 002c 02       		.uleb128 0x2
 1108 002d 01       		.byte	0x1
 1109 002e 08       		.byte	0x8
 1110 002f 06010000 		.4byte	.LASF1
 1111 0033 02       		.uleb128 0x2
 1112 0034 02       		.byte	0x2
 1113 0035 05       		.byte	0x5
 1114 0036 59030000 		.4byte	.LASF2
 1115 003a 02       		.uleb128 0x2
 1116 003b 02       		.byte	0x2
 1117 003c 07       		.byte	0x7
 1118 003d 17030000 		.4byte	.LASF3
 1119 0041 02       		.uleb128 0x2
 1120 0042 04       		.byte	0x4
 1121 0043 05       		.byte	0x5
 1122 0044 97030000 		.4byte	.LASF4
 1123 0048 02       		.uleb128 0x2
 1124 0049 04       		.byte	0x4
 1125 004a 07       		.byte	0x7
 1126 004b E8020000 		.4byte	.LASF5
 1127 004f 02       		.uleb128 0x2
 1128 0050 08       		.byte	0x8
 1129 0051 05       		.byte	0x5
 1130 0052 2A030000 		.4byte	.LASF6
 1131 0056 02       		.uleb128 0x2
 1132 0057 08       		.byte	0x8
 1133 0058 07       		.byte	0x7
 1134 0059 9B020000 		.4byte	.LASF7
 1135 005d 03       		.uleb128 0x3
 1136 005e 04       		.byte	0x4
 1137 005f 05       		.byte	0x5
 1138 0060 696E7400 		.ascii	"int\000"
 1139 0064 02       		.uleb128 0x2
 1140 0065 04       		.byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 29


 1141 0066 07       		.byte	0x7
 1142 0067 8E020000 		.4byte	.LASF8
 1143 006b 04       		.uleb128 0x4
 1144 006c 63030000 		.4byte	.LASF9
 1145 0070 03       		.byte	0x3
 1146 0071 9801     		.2byte	0x198
 1147 0073 2C000000 		.4byte	0x2c
 1148 0077 04       		.uleb128 0x4
 1149 0078 DE010000 		.4byte	.LASF10
 1150 007c 03       		.byte	0x3
 1151 007d 9901     		.2byte	0x199
 1152 007f 3A000000 		.4byte	0x3a
 1153 0083 04       		.uleb128 0x4
 1154 0084 F3010000 		.4byte	.LASF11
 1155 0088 03       		.byte	0x3
 1156 0089 9A01     		.2byte	0x19a
 1157 008b 48000000 		.4byte	0x48
 1158 008f 02       		.uleb128 0x2
 1159 0090 04       		.byte	0x4
 1160 0091 04       		.byte	0x4
 1161 0092 E1000000 		.4byte	.LASF12
 1162 0096 02       		.uleb128 0x2
 1163 0097 08       		.byte	0x8
 1164 0098 04       		.byte	0x4
 1165 0099 B1000000 		.4byte	.LASF13
 1166 009d 02       		.uleb128 0x2
 1167 009e 01       		.byte	0x1
 1168 009f 08       		.byte	0x8
 1169 00a0 A0030000 		.4byte	.LASF14
 1170 00a4 02       		.uleb128 0x2
 1171 00a5 04       		.byte	0x4
 1172 00a6 07       		.byte	0x7
 1173 00a7 0E030000 		.4byte	.LASF15
 1174 00ab 05       		.uleb128 0x5
 1175 00ac 07040000 		.4byte	.LASF16
 1176 00b0 01       		.byte	0x1
 1177 00b1 5A       		.byte	0x5a
 1178 00b2 77000000 		.4byte	0x77
 1179 00b6 00000000 		.4byte	.LFB62
 1180 00ba 14000000 		.4byte	.LFE62-.LFB62
 1181 00be 01       		.uleb128 0x1
 1182 00bf 9C       		.byte	0x9c
 1183 00c0 05       		.uleb128 0x5
 1184 00c1 53000000 		.4byte	.LASF17
 1185 00c5 01       		.byte	0x1
 1186 00c6 5F       		.byte	0x5f
 1187 00c7 77000000 		.4byte	0x77
 1188 00cb 00000000 		.4byte	.LFB63
 1189 00cf 14000000 		.4byte	.LFE63-.LFB63
 1190 00d3 01       		.uleb128 0x1
 1191 00d4 9C       		.byte	0x9c
 1192 00d5 06       		.uleb128 0x6
 1193 00d6 B8000000 		.4byte	.LASF19
 1194 00da 02       		.byte	0x2
 1195 00db 37       		.byte	0x37
 1196 00dc 5D000000 		.4byte	0x5d
 1197 00e0 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 30


 1198 00e4 7C000000 		.4byte	.LFE64-.LFB64
 1199 00e8 01       		.uleb128 0x1
 1200 00e9 9C       		.byte	0x9c
 1201 00ea 09010000 		.4byte	0x109
 1202 00ee 07       		.uleb128 0x7
 1203 00ef 6900     		.ascii	"i\000"
 1204 00f1 02       		.byte	0x2
 1205 00f2 39       		.byte	0x39
 1206 00f3 5D000000 		.4byte	0x5d
 1207 00f7 02       		.uleb128 0x2
 1208 00f8 91       		.byte	0x91
 1209 00f9 6C       		.sleb128 -20
 1210 00fa 08       		.uleb128 0x8
 1211 00fb D4000000 		.4byte	.LASF18
 1212 00ff 02       		.byte	0x2
 1213 0100 3A       		.byte	0x3a
 1214 0101 5D000000 		.4byte	0x5d
 1215 0105 02       		.uleb128 0x2
 1216 0106 91       		.byte	0x91
 1217 0107 68       		.sleb128 -24
 1218 0108 00       		.byte	0
 1219 0109 09       		.uleb128 0x9
 1220 010a 58010000 		.4byte	.LASF28
 1221 010e 02       		.byte	0x2
 1222 010f 52       		.byte	0x52
 1223 0110 00000000 		.4byte	.LFB65
 1224 0114 40000000 		.4byte	.LFE65-.LFB65
 1225 0118 01       		.uleb128 0x1
 1226 0119 9C       		.byte	0x9c
 1227 011a 2B010000 		.4byte	0x12b
 1228 011e 07       		.uleb128 0x7
 1229 011f 6900     		.ascii	"i\000"
 1230 0121 02       		.byte	0x2
 1231 0122 54       		.byte	0x54
 1232 0123 5D000000 		.4byte	0x5d
 1233 0127 02       		.uleb128 0x2
 1234 0128 91       		.byte	0x91
 1235 0129 74       		.sleb128 -12
 1236 012a 00       		.byte	0
 1237 012b 0A       		.uleb128 0xa
 1238 012c 6D000000 		.4byte	.LASF20
 1239 0130 02       		.byte	0x2
 1240 0131 66       		.byte	0x66
 1241 0132 5D000000 		.4byte	0x5d
 1242 0136 00000000 		.4byte	.LFB66
 1243 013a 30000000 		.4byte	.LFE66-.LFB66
 1244 013e 01       		.uleb128 0x1
 1245 013f 9C       		.byte	0x9c
 1246 0140 53010000 		.4byte	0x153
 1247 0144 08       		.uleb128 0x8
 1248 0145 D4000000 		.4byte	.LASF18
 1249 0149 02       		.byte	0x2
 1250 014a 68       		.byte	0x68
 1251 014b 5D000000 		.4byte	0x5d
 1252 014f 02       		.uleb128 0x2
 1253 0150 91       		.byte	0x91
 1254 0151 74       		.sleb128 -12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 31


 1255 0152 00       		.byte	0
 1256 0153 0B       		.uleb128 0xb
 1257 0154 9A000000 		.4byte	.LASF23
 1258 0158 02       		.byte	0x2
 1259 0159 76       		.byte	0x76
 1260 015a 00000000 		.4byte	.LFB67
 1261 015e 90000000 		.4byte	.LFE67-.LFB67
 1262 0162 01       		.uleb128 0x1
 1263 0163 9C       		.byte	0x9c
 1264 0164 0C       		.uleb128 0xc
 1265 0165 42000000 		.4byte	.LASF21
 1266 0169 02       		.byte	0x2
 1267 016a A1       		.byte	0xa1
 1268 016b 5D000000 		.4byte	0x5d
 1269 016f 00000000 		.4byte	.LFB68
 1270 0173 54000000 		.4byte	.LFE68-.LFB68
 1271 0177 01       		.uleb128 0x1
 1272 0178 9C       		.byte	0x9c
 1273 0179 0D       		.uleb128 0xd
 1274 017a 00000000 		.4byte	.LASF55
 1275 017e 02       		.byte	0x2
 1276 017f AC       		.byte	0xac
 1277 0180 00000000 		.4byte	.LFB69
 1278 0184 60000000 		.4byte	.LFE69-.LFB69
 1279 0188 01       		.uleb128 0x1
 1280 0189 9C       		.byte	0x9c
 1281 018a 9D010000 		.4byte	0x19d
 1282 018e 08       		.uleb128 0x8
 1283 018f 3B000000 		.4byte	.LASF22
 1284 0193 02       		.byte	0x2
 1285 0194 AE       		.byte	0xae
 1286 0195 5D000000 		.4byte	0x5d
 1287 0199 02       		.uleb128 0x2
 1288 019a 91       		.byte	0x91
 1289 019b 74       		.sleb128 -12
 1290 019c 00       		.byte	0
 1291 019d 0B       		.uleb128 0xb
 1292 019e 86010000 		.4byte	.LASF24
 1293 01a2 02       		.byte	0x2
 1294 01a3 C8       		.byte	0xc8
 1295 01a4 00000000 		.4byte	.LFB70
 1296 01a8 4C000000 		.4byte	.LFE70-.LFB70
 1297 01ac 01       		.uleb128 0x1
 1298 01ad 9C       		.byte	0x9c
 1299 01ae 0E       		.uleb128 0xe
 1300 01af 4A030000 		.4byte	.LASF25
 1301 01b3 02       		.byte	0x2
 1302 01b4 E8       		.byte	0xe8
 1303 01b5 00000000 		.4byte	.LFB71
 1304 01b9 30000000 		.4byte	.LFE71-.LFB71
 1305 01bd 01       		.uleb128 0x1
 1306 01be 9C       		.byte	0x9c
 1307 01bf 0F       		.uleb128 0xf
 1308 01c0 C6000000 		.4byte	.LASF26
 1309 01c4 02       		.byte	0x2
 1310 01c5 F0       		.byte	0xf0
 1311 01c6 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 32


 1312 01ca 44000000 		.4byte	.LFE72-.LFB72
 1313 01ce 01       		.uleb128 0x1
 1314 01cf 9C       		.byte	0x9c
 1315 01d0 0F       		.uleb128 0xf
 1316 01d1 3D010000 		.4byte	.LASF27
 1317 01d5 02       		.byte	0x2
 1318 01d6 FE       		.byte	0xfe
 1319 01d7 00000000 		.4byte	.LFB73
 1320 01db 24000000 		.4byte	.LFE73-.LFB73
 1321 01df 01       		.uleb128 0x1
 1322 01e0 9C       		.byte	0x9c
 1323 01e1 10       		.uleb128 0x10
 1324 01e2 DA020000 		.4byte	.LASF29
 1325 01e6 02       		.byte	0x2
 1326 01e7 0601     		.2byte	0x106
 1327 01e9 00000000 		.4byte	.LFB74
 1328 01ed 4C000000 		.4byte	.LFE74-.LFB74
 1329 01f1 01       		.uleb128 0x1
 1330 01f2 9C       		.byte	0x9c
 1331 01f3 07020000 		.4byte	0x207
 1332 01f7 11       		.uleb128 0x11
 1333 01f8 A7000000 		.4byte	.LASF30
 1334 01fc 02       		.byte	0x2
 1335 01fd 0601     		.2byte	0x106
 1336 01ff 5D000000 		.4byte	0x5d
 1337 0203 02       		.uleb128 0x2
 1338 0204 91       		.byte	0x91
 1339 0205 74       		.sleb128 -12
 1340 0206 00       		.byte	0
 1341 0207 12       		.uleb128 0x12
 1342 0208 B2020000 		.4byte	.LASF56
 1343 020c 02       		.byte	0x2
 1344 020d 1701     		.2byte	0x117
 1345 020f 5D000000 		.4byte	0x5d
 1346 0213 00000000 		.4byte	.LFB75
 1347 0217 64000000 		.4byte	.LFE75-.LFB75
 1348 021b 01       		.uleb128 0x1
 1349 021c 9C       		.byte	0x9c
 1350 021d 13       		.uleb128 0x13
 1351 021e 0D000000 		.4byte	.LASF31
 1352 0222 02       		.byte	0x2
 1353 0223 2D01     		.2byte	0x12d
 1354 0225 5D000000 		.4byte	0x5d
 1355 0229 00000000 		.4byte	.LFB76
 1356 022d 44000000 		.4byte	.LFE76-.LFB76
 1357 0231 01       		.uleb128 0x1
 1358 0232 9C       		.byte	0x9c
 1359 0233 47020000 		.4byte	0x247
 1360 0237 14       		.uleb128 0x14
 1361 0238 A7000000 		.4byte	.LASF30
 1362 023c 02       		.byte	0x2
 1363 023d 2F01     		.2byte	0x12f
 1364 023f 5D000000 		.4byte	0x5d
 1365 0243 02       		.uleb128 0x2
 1366 0244 91       		.byte	0x91
 1367 0245 74       		.sleb128 -12
 1368 0246 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 33


 1369 0247 13       		.uleb128 0x13
 1370 0248 EC000000 		.4byte	.LASF32
 1371 024c 02       		.byte	0x2
 1372 024d 4201     		.2byte	0x142
 1373 024f 5D000000 		.4byte	0x5d
 1374 0253 00000000 		.4byte	.LFB77
 1375 0257 40000000 		.4byte	.LFE77-.LFB77
 1376 025b 01       		.uleb128 0x1
 1377 025c 9C       		.byte	0x9c
 1378 025d CB020000 		.4byte	0x2cb
 1379 0261 11       		.uleb128 0x11
 1380 0262 D6010000 		.4byte	.LASF33
 1381 0266 02       		.byte	0x2
 1382 0267 4201     		.2byte	0x142
 1383 0269 64000000 		.4byte	0x64
 1384 026d 02       		.uleb128 0x2
 1385 026e 91       		.byte	0x91
 1386 026f 6C       		.sleb128 -20
 1387 0270 11       		.uleb128 0x11
 1388 0271 AF010000 		.4byte	.LASF34
 1389 0275 02       		.byte	0x2
 1390 0276 4201     		.2byte	0x142
 1391 0278 64000000 		.4byte	0x64
 1392 027c 02       		.uleb128 0x2
 1393 027d 91       		.byte	0x91
 1394 027e 68       		.sleb128 -24
 1395 027f 11       		.uleb128 0x11
 1396 0280 B7010000 		.4byte	.LASF35
 1397 0284 02       		.byte	0x2
 1398 0285 4301     		.2byte	0x143
 1399 0287 64000000 		.4byte	0x64
 1400 028b 02       		.uleb128 0x2
 1401 028c 91       		.byte	0x91
 1402 028d 64       		.sleb128 -28
 1403 028e 11       		.uleb128 0x11
 1404 028f BF010000 		.4byte	.LASF36
 1405 0293 02       		.byte	0x2
 1406 0294 4301     		.2byte	0x143
 1407 0296 64000000 		.4byte	0x64
 1408 029a 02       		.uleb128 0x2
 1409 029b 91       		.byte	0x91
 1410 029c 60       		.sleb128 -32
 1411 029d 11       		.uleb128 0x11
 1412 029e FA010000 		.4byte	.LASF37
 1413 02a2 02       		.byte	0x2
 1414 02a3 4301     		.2byte	0x143
 1415 02a5 64000000 		.4byte	0x64
 1416 02a9 02       		.uleb128 0x2
 1417 02aa 91       		.byte	0x91
 1418 02ab 00       		.sleb128 0
 1419 02ac 11       		.uleb128 0x11
 1420 02ad E7000000 		.4byte	.LASF38
 1421 02b1 02       		.byte	0x2
 1422 02b2 4301     		.2byte	0x143
 1423 02b4 64000000 		.4byte	0x64
 1424 02b8 02       		.uleb128 0x2
 1425 02b9 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 34


 1426 02ba 04       		.sleb128 4
 1427 02bb 14       		.uleb128 0x14
 1428 02bc 53010000 		.4byte	.LASF39
 1429 02c0 02       		.byte	0x2
 1430 02c1 4501     		.2byte	0x145
 1431 02c3 77000000 		.4byte	0x77
 1432 02c7 02       		.uleb128 0x2
 1433 02c8 91       		.byte	0x91
 1434 02c9 76       		.sleb128 -10
 1435 02ca 00       		.byte	0
 1436 02cb 13       		.uleb128 0x13
 1437 02cc 82000000 		.4byte	.LASF40
 1438 02d0 02       		.byte	0x2
 1439 02d1 4D01     		.2byte	0x14d
 1440 02d3 5D000000 		.4byte	0x5d
 1441 02d7 00000000 		.4byte	.LFB78
 1442 02db 40000000 		.4byte	.LFE78-.LFB78
 1443 02df 01       		.uleb128 0x1
 1444 02e0 9C       		.byte	0x9c
 1445 02e1 4F030000 		.4byte	0x34f
 1446 02e5 11       		.uleb128 0x11
 1447 02e6 D6010000 		.4byte	.LASF33
 1448 02ea 02       		.byte	0x2
 1449 02eb 4D01     		.2byte	0x14d
 1450 02ed 64000000 		.4byte	0x64
 1451 02f1 02       		.uleb128 0x2
 1452 02f2 91       		.byte	0x91
 1453 02f3 6C       		.sleb128 -20
 1454 02f4 11       		.uleb128 0x11
 1455 02f5 AF010000 		.4byte	.LASF34
 1456 02f9 02       		.byte	0x2
 1457 02fa 4D01     		.2byte	0x14d
 1458 02fc 64000000 		.4byte	0x64
 1459 0300 02       		.uleb128 0x2
 1460 0301 91       		.byte	0x91
 1461 0302 68       		.sleb128 -24
 1462 0303 11       		.uleb128 0x11
 1463 0304 B7010000 		.4byte	.LASF35
 1464 0308 02       		.byte	0x2
 1465 0309 4E01     		.2byte	0x14e
 1466 030b 64000000 		.4byte	0x64
 1467 030f 02       		.uleb128 0x2
 1468 0310 91       		.byte	0x91
 1469 0311 64       		.sleb128 -28
 1470 0312 11       		.uleb128 0x11
 1471 0313 BF010000 		.4byte	.LASF36
 1472 0317 02       		.byte	0x2
 1473 0318 4E01     		.2byte	0x14e
 1474 031a 64000000 		.4byte	0x64
 1475 031e 02       		.uleb128 0x2
 1476 031f 91       		.byte	0x91
 1477 0320 60       		.sleb128 -32
 1478 0321 11       		.uleb128 0x11
 1479 0322 FA010000 		.4byte	.LASF37
 1480 0326 02       		.byte	0x2
 1481 0327 4E01     		.2byte	0x14e
 1482 0329 64000000 		.4byte	0x64
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 35


 1483 032d 02       		.uleb128 0x2
 1484 032e 91       		.byte	0x91
 1485 032f 00       		.sleb128 0
 1486 0330 11       		.uleb128 0x11
 1487 0331 E7000000 		.4byte	.LASF38
 1488 0335 02       		.byte	0x2
 1489 0336 4E01     		.2byte	0x14e
 1490 0338 64000000 		.4byte	0x64
 1491 033c 02       		.uleb128 0x2
 1492 033d 91       		.byte	0x91
 1493 033e 04       		.sleb128 4
 1494 033f 14       		.uleb128 0x14
 1495 0340 53010000 		.4byte	.LASF39
 1496 0344 02       		.byte	0x2
 1497 0345 5001     		.2byte	0x150
 1498 0347 77000000 		.4byte	0x77
 1499 034b 02       		.uleb128 0x2
 1500 034c 91       		.byte	0x91
 1501 034d 76       		.sleb128 -10
 1502 034e 00       		.byte	0
 1503 034f 08       		.uleb128 0x8
 1504 0350 75010000 		.4byte	.LASF41
 1505 0354 02       		.byte	0x2
 1506 0355 21       		.byte	0x21
 1507 0356 5D000000 		.4byte	0x5d
 1508 035a 05       		.uleb128 0x5
 1509 035b 03       		.byte	0x3
 1510 035c 00000000 		.4byte	uart_timer_state
 1511 0360 08       		.uleb128 0x8
 1512 0361 89030000 		.4byte	.LASF42
 1513 0365 02       		.byte	0x2
 1514 0366 22       		.byte	0x22
 1515 0367 5D000000 		.4byte	0x5d
 1516 036b 05       		.uleb128 0x5
 1517 036c 03       		.byte	0x3
 1518 036d 04000000 		.4byte	uart_rx_state
 1519 0371 08       		.uleb128 0x8
 1520 0372 E5010000 		.4byte	.LASF43
 1521 0376 02       		.byte	0x2
 1522 0377 23       		.byte	0x23
 1523 0378 5D000000 		.4byte	0x5d
 1524 037c 05       		.uleb128 0x5
 1525 037d 03       		.byte	0x3
 1526 037e 08000000 		.4byte	uart_tx_state
 1527 0382 08       		.uleb128 0x8
 1528 0383 38030000 		.4byte	.LASF44
 1529 0387 02       		.byte	0x2
 1530 0388 26       		.byte	0x26
 1531 0389 5D000000 		.4byte	0x5d
 1532 038d 05       		.uleb128 0x5
 1533 038e 03       		.byte	0x3
 1534 038f 0C000000 		.4byte	rx_interval_count
 1535 0393 08       		.uleb128 0x8
 1536 0394 C7010000 		.4byte	.LASF45
 1537 0398 02       		.byte	0x2
 1538 0399 29       		.byte	0x29
 1539 039a 77000000 		.4byte	0x77
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 36


 1540 039e 05       		.uleb128 0x5
 1541 039f 03       		.byte	0x3
 1542 03a0 10000000 		.4byte	modbus_address
 1543 03a4 08       		.uleb128 0x8
 1544 03a5 65010000 		.4byte	.LASF46
 1545 03a9 02       		.byte	0x2
 1546 03aa 2A       		.byte	0x2a
 1547 03ab 5D000000 		.4byte	0x5d
 1548 03af 05       		.uleb128 0x5
 1549 03b0 03       		.byte	0x3
 1550 03b1 14000000 		.4byte	modbus_rx_index
 1551 03b5 15       		.uleb128 0x15
 1552 03b6 6B000000 		.4byte	0x6b
 1553 03ba C5030000 		.4byte	0x3c5
 1554 03be 16       		.uleb128 0x16
 1555 03bf A4000000 		.4byte	0xa4
 1556 03c3 FF       		.byte	0xff
 1557 03c4 00       		.byte	0
 1558 03c5 08       		.uleb128 0x8
 1559 03c6 2C010000 		.4byte	.LASF47
 1560 03ca 02       		.byte	0x2
 1561 03cb 2B       		.byte	0x2b
 1562 03cc B5030000 		.4byte	0x3b5
 1563 03d0 05       		.uleb128 0x5
 1564 03d1 03       		.byte	0x3
 1565 03d2 18000000 		.4byte	modbus_in_buffer
 1566 03d6 08       		.uleb128 0x8
 1567 03d7 2B000000 		.4byte	.LASF48
 1568 03db 02       		.byte	0x2
 1569 03dc 2D       		.byte	0x2d
 1570 03dd 5D000000 		.4byte	0x5d
 1571 03e1 05       		.uleb128 0x5
 1572 03e2 03       		.byte	0x3
 1573 03e3 18010000 		.4byte	modbus_tx_index
 1574 03e7 08       		.uleb128 0x8
 1575 03e8 14010000 		.4byte	.LASF49
 1576 03ec 02       		.byte	0x2
 1577 03ed 2E       		.byte	0x2e
 1578 03ee 5D000000 		.4byte	0x5d
 1579 03f2 05       		.uleb128 0x5
 1580 03f3 03       		.byte	0x3
 1581 03f4 1C010000 		.4byte	modbus_tx_message_count
 1582 03f8 08       		.uleb128 0x8
 1583 03f9 9D010000 		.4byte	.LASF50
 1584 03fd 02       		.byte	0x2
 1585 03fe 2F       		.byte	0x2f
 1586 03ff B5030000 		.4byte	0x3b5
 1587 0403 05       		.uleb128 0x5
 1588 0404 03       		.byte	0x3
 1589 0405 20010000 		.4byte	modbus_out_buffer
 1590 0409 08       		.uleb128 0x8
 1591 040a C8020000 		.4byte	.LASF51
 1592 040e 02       		.byte	0x2
 1593 040f 35       		.byte	0x35
 1594 0410 1A040000 		.4byte	0x41a
 1595 0414 05       		.uleb128 0x5
 1596 0415 03       		.byte	0x3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 37


 1597 0416 20020000 		.4byte	read_status_value
 1598 041a 17       		.uleb128 0x17
 1599 041b 5D000000 		.4byte	0x5d
 1600 041f 15       		.uleb128 0x15
 1601 0420 77000000 		.4byte	0x77
 1602 0424 2F040000 		.4byte	0x42f
 1603 0428 16       		.uleb128 0x16
 1604 0429 A4000000 		.4byte	0xa4
 1605 042d 01       		.byte	0x1
 1606 042e 00       		.byte	0
 1607 042f 18       		.uleb128 0x18
 1608 0430 FA020000 		.4byte	.LASF57
 1609 0434 01       		.byte	0x1
 1610 0435 58       		.byte	0x58
 1611 0436 1F040000 		.4byte	0x41f
 1612 043a 00       		.byte	0
 1613              		.section	.debug_abbrev,"",%progbits
 1614              	.Ldebug_abbrev0:
 1615 0000 01       		.uleb128 0x1
 1616 0001 11       		.uleb128 0x11
 1617 0002 01       		.byte	0x1
 1618 0003 25       		.uleb128 0x25
 1619 0004 0E       		.uleb128 0xe
 1620 0005 13       		.uleb128 0x13
 1621 0006 0B       		.uleb128 0xb
 1622 0007 03       		.uleb128 0x3
 1623 0008 0E       		.uleb128 0xe
 1624 0009 1B       		.uleb128 0x1b
 1625 000a 0E       		.uleb128 0xe
 1626 000b 55       		.uleb128 0x55
 1627 000c 17       		.uleb128 0x17
 1628 000d 11       		.uleb128 0x11
 1629 000e 01       		.uleb128 0x1
 1630 000f 10       		.uleb128 0x10
 1631 0010 17       		.uleb128 0x17
 1632 0011 00       		.byte	0
 1633 0012 00       		.byte	0
 1634 0013 02       		.uleb128 0x2
 1635 0014 24       		.uleb128 0x24
 1636 0015 00       		.byte	0
 1637 0016 0B       		.uleb128 0xb
 1638 0017 0B       		.uleb128 0xb
 1639 0018 3E       		.uleb128 0x3e
 1640 0019 0B       		.uleb128 0xb
 1641 001a 03       		.uleb128 0x3
 1642 001b 0E       		.uleb128 0xe
 1643 001c 00       		.byte	0
 1644 001d 00       		.byte	0
 1645 001e 03       		.uleb128 0x3
 1646 001f 24       		.uleb128 0x24
 1647 0020 00       		.byte	0
 1648 0021 0B       		.uleb128 0xb
 1649 0022 0B       		.uleb128 0xb
 1650 0023 3E       		.uleb128 0x3e
 1651 0024 0B       		.uleb128 0xb
 1652 0025 03       		.uleb128 0x3
 1653 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 38


 1654 0027 00       		.byte	0
 1655 0028 00       		.byte	0
 1656 0029 04       		.uleb128 0x4
 1657 002a 16       		.uleb128 0x16
 1658 002b 00       		.byte	0
 1659 002c 03       		.uleb128 0x3
 1660 002d 0E       		.uleb128 0xe
 1661 002e 3A       		.uleb128 0x3a
 1662 002f 0B       		.uleb128 0xb
 1663 0030 3B       		.uleb128 0x3b
 1664 0031 05       		.uleb128 0x5
 1665 0032 49       		.uleb128 0x49
 1666 0033 13       		.uleb128 0x13
 1667 0034 00       		.byte	0
 1668 0035 00       		.byte	0
 1669 0036 05       		.uleb128 0x5
 1670 0037 2E       		.uleb128 0x2e
 1671 0038 00       		.byte	0
 1672 0039 03       		.uleb128 0x3
 1673 003a 0E       		.uleb128 0xe
 1674 003b 3A       		.uleb128 0x3a
 1675 003c 0B       		.uleb128 0xb
 1676 003d 3B       		.uleb128 0x3b
 1677 003e 0B       		.uleb128 0xb
 1678 003f 27       		.uleb128 0x27
 1679 0040 19       		.uleb128 0x19
 1680 0041 49       		.uleb128 0x49
 1681 0042 13       		.uleb128 0x13
 1682 0043 11       		.uleb128 0x11
 1683 0044 01       		.uleb128 0x1
 1684 0045 12       		.uleb128 0x12
 1685 0046 06       		.uleb128 0x6
 1686 0047 40       		.uleb128 0x40
 1687 0048 18       		.uleb128 0x18
 1688 0049 9742     		.uleb128 0x2117
 1689 004b 19       		.uleb128 0x19
 1690 004c 00       		.byte	0
 1691 004d 00       		.byte	0
 1692 004e 06       		.uleb128 0x6
 1693 004f 2E       		.uleb128 0x2e
 1694 0050 01       		.byte	0x1
 1695 0051 03       		.uleb128 0x3
 1696 0052 0E       		.uleb128 0xe
 1697 0053 3A       		.uleb128 0x3a
 1698 0054 0B       		.uleb128 0xb
 1699 0055 3B       		.uleb128 0x3b
 1700 0056 0B       		.uleb128 0xb
 1701 0057 27       		.uleb128 0x27
 1702 0058 19       		.uleb128 0x19
 1703 0059 49       		.uleb128 0x49
 1704 005a 13       		.uleb128 0x13
 1705 005b 11       		.uleb128 0x11
 1706 005c 01       		.uleb128 0x1
 1707 005d 12       		.uleb128 0x12
 1708 005e 06       		.uleb128 0x6
 1709 005f 40       		.uleb128 0x40
 1710 0060 18       		.uleb128 0x18
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 39


 1711 0061 9642     		.uleb128 0x2116
 1712 0063 19       		.uleb128 0x19
 1713 0064 01       		.uleb128 0x1
 1714 0065 13       		.uleb128 0x13
 1715 0066 00       		.byte	0
 1716 0067 00       		.byte	0
 1717 0068 07       		.uleb128 0x7
 1718 0069 34       		.uleb128 0x34
 1719 006a 00       		.byte	0
 1720 006b 03       		.uleb128 0x3
 1721 006c 08       		.uleb128 0x8
 1722 006d 3A       		.uleb128 0x3a
 1723 006e 0B       		.uleb128 0xb
 1724 006f 3B       		.uleb128 0x3b
 1725 0070 0B       		.uleb128 0xb
 1726 0071 49       		.uleb128 0x49
 1727 0072 13       		.uleb128 0x13
 1728 0073 02       		.uleb128 0x2
 1729 0074 18       		.uleb128 0x18
 1730 0075 00       		.byte	0
 1731 0076 00       		.byte	0
 1732 0077 08       		.uleb128 0x8
 1733 0078 34       		.uleb128 0x34
 1734 0079 00       		.byte	0
 1735 007a 03       		.uleb128 0x3
 1736 007b 0E       		.uleb128 0xe
 1737 007c 3A       		.uleb128 0x3a
 1738 007d 0B       		.uleb128 0xb
 1739 007e 3B       		.uleb128 0x3b
 1740 007f 0B       		.uleb128 0xb
 1741 0080 49       		.uleb128 0x49
 1742 0081 13       		.uleb128 0x13
 1743 0082 02       		.uleb128 0x2
 1744 0083 18       		.uleb128 0x18
 1745 0084 00       		.byte	0
 1746 0085 00       		.byte	0
 1747 0086 09       		.uleb128 0x9
 1748 0087 2E       		.uleb128 0x2e
 1749 0088 01       		.byte	0x1
 1750 0089 03       		.uleb128 0x3
 1751 008a 0E       		.uleb128 0xe
 1752 008b 3A       		.uleb128 0x3a
 1753 008c 0B       		.uleb128 0xb
 1754 008d 3B       		.uleb128 0x3b
 1755 008e 0B       		.uleb128 0xb
 1756 008f 27       		.uleb128 0x27
 1757 0090 19       		.uleb128 0x19
 1758 0091 11       		.uleb128 0x11
 1759 0092 01       		.uleb128 0x1
 1760 0093 12       		.uleb128 0x12
 1761 0094 06       		.uleb128 0x6
 1762 0095 40       		.uleb128 0x40
 1763 0096 18       		.uleb128 0x18
 1764 0097 9642     		.uleb128 0x2116
 1765 0099 19       		.uleb128 0x19
 1766 009a 01       		.uleb128 0x1
 1767 009b 13       		.uleb128 0x13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 40


 1768 009c 00       		.byte	0
 1769 009d 00       		.byte	0
 1770 009e 0A       		.uleb128 0xa
 1771 009f 2E       		.uleb128 0x2e
 1772 00a0 01       		.byte	0x1
 1773 00a1 03       		.uleb128 0x3
 1774 00a2 0E       		.uleb128 0xe
 1775 00a3 3A       		.uleb128 0x3a
 1776 00a4 0B       		.uleb128 0xb
 1777 00a5 3B       		.uleb128 0x3b
 1778 00a6 0B       		.uleb128 0xb
 1779 00a7 27       		.uleb128 0x27
 1780 00a8 19       		.uleb128 0x19
 1781 00a9 49       		.uleb128 0x49
 1782 00aa 13       		.uleb128 0x13
 1783 00ab 11       		.uleb128 0x11
 1784 00ac 01       		.uleb128 0x1
 1785 00ad 12       		.uleb128 0x12
 1786 00ae 06       		.uleb128 0x6
 1787 00af 40       		.uleb128 0x40
 1788 00b0 18       		.uleb128 0x18
 1789 00b1 9742     		.uleb128 0x2117
 1790 00b3 19       		.uleb128 0x19
 1791 00b4 01       		.uleb128 0x1
 1792 00b5 13       		.uleb128 0x13
 1793 00b6 00       		.byte	0
 1794 00b7 00       		.byte	0
 1795 00b8 0B       		.uleb128 0xb
 1796 00b9 2E       		.uleb128 0x2e
 1797 00ba 00       		.byte	0
 1798 00bb 3F       		.uleb128 0x3f
 1799 00bc 19       		.uleb128 0x19
 1800 00bd 03       		.uleb128 0x3
 1801 00be 0E       		.uleb128 0xe
 1802 00bf 3A       		.uleb128 0x3a
 1803 00c0 0B       		.uleb128 0xb
 1804 00c1 3B       		.uleb128 0x3b
 1805 00c2 0B       		.uleb128 0xb
 1806 00c3 27       		.uleb128 0x27
 1807 00c4 19       		.uleb128 0x19
 1808 00c5 11       		.uleb128 0x11
 1809 00c6 01       		.uleb128 0x1
 1810 00c7 12       		.uleb128 0x12
 1811 00c8 06       		.uleb128 0x6
 1812 00c9 40       		.uleb128 0x40
 1813 00ca 18       		.uleb128 0x18
 1814 00cb 9642     		.uleb128 0x2116
 1815 00cd 19       		.uleb128 0x19
 1816 00ce 00       		.byte	0
 1817 00cf 00       		.byte	0
 1818 00d0 0C       		.uleb128 0xc
 1819 00d1 2E       		.uleb128 0x2e
 1820 00d2 00       		.byte	0
 1821 00d3 03       		.uleb128 0x3
 1822 00d4 0E       		.uleb128 0xe
 1823 00d5 3A       		.uleb128 0x3a
 1824 00d6 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 41


 1825 00d7 3B       		.uleb128 0x3b
 1826 00d8 0B       		.uleb128 0xb
 1827 00d9 27       		.uleb128 0x27
 1828 00da 19       		.uleb128 0x19
 1829 00db 49       		.uleb128 0x49
 1830 00dc 13       		.uleb128 0x13
 1831 00dd 11       		.uleb128 0x11
 1832 00de 01       		.uleb128 0x1
 1833 00df 12       		.uleb128 0x12
 1834 00e0 06       		.uleb128 0x6
 1835 00e1 40       		.uleb128 0x40
 1836 00e2 18       		.uleb128 0x18
 1837 00e3 9642     		.uleb128 0x2116
 1838 00e5 19       		.uleb128 0x19
 1839 00e6 00       		.byte	0
 1840 00e7 00       		.byte	0
 1841 00e8 0D       		.uleb128 0xd
 1842 00e9 2E       		.uleb128 0x2e
 1843 00ea 01       		.byte	0x1
 1844 00eb 3F       		.uleb128 0x3f
 1845 00ec 19       		.uleb128 0x19
 1846 00ed 03       		.uleb128 0x3
 1847 00ee 0E       		.uleb128 0xe
 1848 00ef 3A       		.uleb128 0x3a
 1849 00f0 0B       		.uleb128 0xb
 1850 00f1 3B       		.uleb128 0x3b
 1851 00f2 0B       		.uleb128 0xb
 1852 00f3 27       		.uleb128 0x27
 1853 00f4 19       		.uleb128 0x19
 1854 00f5 11       		.uleb128 0x11
 1855 00f6 01       		.uleb128 0x1
 1856 00f7 12       		.uleb128 0x12
 1857 00f8 06       		.uleb128 0x6
 1858 00f9 40       		.uleb128 0x40
 1859 00fa 18       		.uleb128 0x18
 1860 00fb 9642     		.uleb128 0x2116
 1861 00fd 19       		.uleb128 0x19
 1862 00fe 01       		.uleb128 0x1
 1863 00ff 13       		.uleb128 0x13
 1864 0100 00       		.byte	0
 1865 0101 00       		.byte	0
 1866 0102 0E       		.uleb128 0xe
 1867 0103 2E       		.uleb128 0x2e
 1868 0104 00       		.byte	0
 1869 0105 03       		.uleb128 0x3
 1870 0106 0E       		.uleb128 0xe
 1871 0107 3A       		.uleb128 0x3a
 1872 0108 0B       		.uleb128 0xb
 1873 0109 3B       		.uleb128 0x3b
 1874 010a 0B       		.uleb128 0xb
 1875 010b 27       		.uleb128 0x27
 1876 010c 19       		.uleb128 0x19
 1877 010d 11       		.uleb128 0x11
 1878 010e 01       		.uleb128 0x1
 1879 010f 12       		.uleb128 0x12
 1880 0110 06       		.uleb128 0x6
 1881 0111 40       		.uleb128 0x40
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 42


 1882 0112 18       		.uleb128 0x18
 1883 0113 9742     		.uleb128 0x2117
 1884 0115 19       		.uleb128 0x19
 1885 0116 00       		.byte	0
 1886 0117 00       		.byte	0
 1887 0118 0F       		.uleb128 0xf
 1888 0119 2E       		.uleb128 0x2e
 1889 011a 00       		.byte	0
 1890 011b 03       		.uleb128 0x3
 1891 011c 0E       		.uleb128 0xe
 1892 011d 3A       		.uleb128 0x3a
 1893 011e 0B       		.uleb128 0xb
 1894 011f 3B       		.uleb128 0x3b
 1895 0120 0B       		.uleb128 0xb
 1896 0121 27       		.uleb128 0x27
 1897 0122 19       		.uleb128 0x19
 1898 0123 11       		.uleb128 0x11
 1899 0124 01       		.uleb128 0x1
 1900 0125 12       		.uleb128 0x12
 1901 0126 06       		.uleb128 0x6
 1902 0127 40       		.uleb128 0x40
 1903 0128 18       		.uleb128 0x18
 1904 0129 9642     		.uleb128 0x2116
 1905 012b 19       		.uleb128 0x19
 1906 012c 00       		.byte	0
 1907 012d 00       		.byte	0
 1908 012e 10       		.uleb128 0x10
 1909 012f 2E       		.uleb128 0x2e
 1910 0130 01       		.byte	0x1
 1911 0131 03       		.uleb128 0x3
 1912 0132 0E       		.uleb128 0xe
 1913 0133 3A       		.uleb128 0x3a
 1914 0134 0B       		.uleb128 0xb
 1915 0135 3B       		.uleb128 0x3b
 1916 0136 05       		.uleb128 0x5
 1917 0137 27       		.uleb128 0x27
 1918 0138 19       		.uleb128 0x19
 1919 0139 11       		.uleb128 0x11
 1920 013a 01       		.uleb128 0x1
 1921 013b 12       		.uleb128 0x12
 1922 013c 06       		.uleb128 0x6
 1923 013d 40       		.uleb128 0x40
 1924 013e 18       		.uleb128 0x18
 1925 013f 9642     		.uleb128 0x2116
 1926 0141 19       		.uleb128 0x19
 1927 0142 01       		.uleb128 0x1
 1928 0143 13       		.uleb128 0x13
 1929 0144 00       		.byte	0
 1930 0145 00       		.byte	0
 1931 0146 11       		.uleb128 0x11
 1932 0147 05       		.uleb128 0x5
 1933 0148 00       		.byte	0
 1934 0149 03       		.uleb128 0x3
 1935 014a 0E       		.uleb128 0xe
 1936 014b 3A       		.uleb128 0x3a
 1937 014c 0B       		.uleb128 0xb
 1938 014d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 43


 1939 014e 05       		.uleb128 0x5
 1940 014f 49       		.uleb128 0x49
 1941 0150 13       		.uleb128 0x13
 1942 0151 02       		.uleb128 0x2
 1943 0152 18       		.uleb128 0x18
 1944 0153 00       		.byte	0
 1945 0154 00       		.byte	0
 1946 0155 12       		.uleb128 0x12
 1947 0156 2E       		.uleb128 0x2e
 1948 0157 00       		.byte	0
 1949 0158 3F       		.uleb128 0x3f
 1950 0159 19       		.uleb128 0x19
 1951 015a 03       		.uleb128 0x3
 1952 015b 0E       		.uleb128 0xe
 1953 015c 3A       		.uleb128 0x3a
 1954 015d 0B       		.uleb128 0xb
 1955 015e 3B       		.uleb128 0x3b
 1956 015f 05       		.uleb128 0x5
 1957 0160 27       		.uleb128 0x27
 1958 0161 19       		.uleb128 0x19
 1959 0162 49       		.uleb128 0x49
 1960 0163 13       		.uleb128 0x13
 1961 0164 11       		.uleb128 0x11
 1962 0165 01       		.uleb128 0x1
 1963 0166 12       		.uleb128 0x12
 1964 0167 06       		.uleb128 0x6
 1965 0168 40       		.uleb128 0x40
 1966 0169 18       		.uleb128 0x18
 1967 016a 9642     		.uleb128 0x2116
 1968 016c 19       		.uleb128 0x19
 1969 016d 00       		.byte	0
 1970 016e 00       		.byte	0
 1971 016f 13       		.uleb128 0x13
 1972 0170 2E       		.uleb128 0x2e
 1973 0171 01       		.byte	0x1
 1974 0172 3F       		.uleb128 0x3f
 1975 0173 19       		.uleb128 0x19
 1976 0174 03       		.uleb128 0x3
 1977 0175 0E       		.uleb128 0xe
 1978 0176 3A       		.uleb128 0x3a
 1979 0177 0B       		.uleb128 0xb
 1980 0178 3B       		.uleb128 0x3b
 1981 0179 05       		.uleb128 0x5
 1982 017a 27       		.uleb128 0x27
 1983 017b 19       		.uleb128 0x19
 1984 017c 49       		.uleb128 0x49
 1985 017d 13       		.uleb128 0x13
 1986 017e 11       		.uleb128 0x11
 1987 017f 01       		.uleb128 0x1
 1988 0180 12       		.uleb128 0x12
 1989 0181 06       		.uleb128 0x6
 1990 0182 40       		.uleb128 0x40
 1991 0183 18       		.uleb128 0x18
 1992 0184 9642     		.uleb128 0x2116
 1993 0186 19       		.uleb128 0x19
 1994 0187 01       		.uleb128 0x1
 1995 0188 13       		.uleb128 0x13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 44


 1996 0189 00       		.byte	0
 1997 018a 00       		.byte	0
 1998 018b 14       		.uleb128 0x14
 1999 018c 34       		.uleb128 0x34
 2000 018d 00       		.byte	0
 2001 018e 03       		.uleb128 0x3
 2002 018f 0E       		.uleb128 0xe
 2003 0190 3A       		.uleb128 0x3a
 2004 0191 0B       		.uleb128 0xb
 2005 0192 3B       		.uleb128 0x3b
 2006 0193 05       		.uleb128 0x5
 2007 0194 49       		.uleb128 0x49
 2008 0195 13       		.uleb128 0x13
 2009 0196 02       		.uleb128 0x2
 2010 0197 18       		.uleb128 0x18
 2011 0198 00       		.byte	0
 2012 0199 00       		.byte	0
 2013 019a 15       		.uleb128 0x15
 2014 019b 01       		.uleb128 0x1
 2015 019c 01       		.byte	0x1
 2016 019d 49       		.uleb128 0x49
 2017 019e 13       		.uleb128 0x13
 2018 019f 01       		.uleb128 0x1
 2019 01a0 13       		.uleb128 0x13
 2020 01a1 00       		.byte	0
 2021 01a2 00       		.byte	0
 2022 01a3 16       		.uleb128 0x16
 2023 01a4 21       		.uleb128 0x21
 2024 01a5 00       		.byte	0
 2025 01a6 49       		.uleb128 0x49
 2026 01a7 13       		.uleb128 0x13
 2027 01a8 2F       		.uleb128 0x2f
 2028 01a9 0B       		.uleb128 0xb
 2029 01aa 00       		.byte	0
 2030 01ab 00       		.byte	0
 2031 01ac 17       		.uleb128 0x17
 2032 01ad 35       		.uleb128 0x35
 2033 01ae 00       		.byte	0
 2034 01af 49       		.uleb128 0x49
 2035 01b0 13       		.uleb128 0x13
 2036 01b1 00       		.byte	0
 2037 01b2 00       		.byte	0
 2038 01b3 18       		.uleb128 0x18
 2039 01b4 34       		.uleb128 0x34
 2040 01b5 00       		.byte	0
 2041 01b6 03       		.uleb128 0x3
 2042 01b7 0E       		.uleb128 0xe
 2043 01b8 3A       		.uleb128 0x3a
 2044 01b9 0B       		.uleb128 0xb
 2045 01ba 3B       		.uleb128 0x3b
 2046 01bb 0B       		.uleb128 0xb
 2047 01bc 49       		.uleb128 0x49
 2048 01bd 13       		.uleb128 0x13
 2049 01be 3F       		.uleb128 0x3f
 2050 01bf 19       		.uleb128 0x19
 2051 01c0 3C       		.uleb128 0x3c
 2052 01c1 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 45


 2053 01c2 00       		.byte	0
 2054 01c3 00       		.byte	0
 2055 01c4 00       		.byte	0
 2056              		.section	.debug_aranges,"",%progbits
 2057 0000 9C000000 		.4byte	0x9c
 2058 0004 0200     		.2byte	0x2
 2059 0006 00000000 		.4byte	.Ldebug_info0
 2060 000a 04       		.byte	0x4
 2061 000b 00       		.byte	0
 2062 000c 0000     		.2byte	0
 2063 000e 0000     		.2byte	0
 2064 0010 00000000 		.4byte	.LFB62
 2065 0014 14000000 		.4byte	.LFE62-.LFB62
 2066 0018 00000000 		.4byte	.LFB63
 2067 001c 14000000 		.4byte	.LFE63-.LFB63
 2068 0020 00000000 		.4byte	.LFB64
 2069 0024 7C000000 		.4byte	.LFE64-.LFB64
 2070 0028 00000000 		.4byte	.LFB65
 2071 002c 40000000 		.4byte	.LFE65-.LFB65
 2072 0030 00000000 		.4byte	.LFB66
 2073 0034 30000000 		.4byte	.LFE66-.LFB66
 2074 0038 00000000 		.4byte	.LFB67
 2075 003c 90000000 		.4byte	.LFE67-.LFB67
 2076 0040 00000000 		.4byte	.LFB68
 2077 0044 54000000 		.4byte	.LFE68-.LFB68
 2078 0048 00000000 		.4byte	.LFB69
 2079 004c 60000000 		.4byte	.LFE69-.LFB69
 2080 0050 00000000 		.4byte	.LFB70
 2081 0054 4C000000 		.4byte	.LFE70-.LFB70
 2082 0058 00000000 		.4byte	.LFB71
 2083 005c 30000000 		.4byte	.LFE71-.LFB71
 2084 0060 00000000 		.4byte	.LFB72
 2085 0064 44000000 		.4byte	.LFE72-.LFB72
 2086 0068 00000000 		.4byte	.LFB73
 2087 006c 24000000 		.4byte	.LFE73-.LFB73
 2088 0070 00000000 		.4byte	.LFB74
 2089 0074 4C000000 		.4byte	.LFE74-.LFB74
 2090 0078 00000000 		.4byte	.LFB75
 2091 007c 64000000 		.4byte	.LFE75-.LFB75
 2092 0080 00000000 		.4byte	.LFB76
 2093 0084 44000000 		.4byte	.LFE76-.LFB76
 2094 0088 00000000 		.4byte	.LFB77
 2095 008c 40000000 		.4byte	.LFE77-.LFB77
 2096 0090 00000000 		.4byte	.LFB78
 2097 0094 40000000 		.4byte	.LFE78-.LFB78
 2098 0098 00000000 		.4byte	0
 2099 009c 00000000 		.4byte	0
 2100              		.section	.debug_ranges,"",%progbits
 2101              	.Ldebug_ranges0:
 2102 0000 00000000 		.4byte	.LFB62
 2103 0004 14000000 		.4byte	.LFE62
 2104 0008 00000000 		.4byte	.LFB63
 2105 000c 14000000 		.4byte	.LFE63
 2106 0010 00000000 		.4byte	.LFB64
 2107 0014 7C000000 		.4byte	.LFE64
 2108 0018 00000000 		.4byte	.LFB65
 2109 001c 40000000 		.4byte	.LFE65
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 46


 2110 0020 00000000 		.4byte	.LFB66
 2111 0024 30000000 		.4byte	.LFE66
 2112 0028 00000000 		.4byte	.LFB67
 2113 002c 90000000 		.4byte	.LFE67
 2114 0030 00000000 		.4byte	.LFB68
 2115 0034 54000000 		.4byte	.LFE68
 2116 0038 00000000 		.4byte	.LFB69
 2117 003c 60000000 		.4byte	.LFE69
 2118 0040 00000000 		.4byte	.LFB70
 2119 0044 4C000000 		.4byte	.LFE70
 2120 0048 00000000 		.4byte	.LFB71
 2121 004c 30000000 		.4byte	.LFE71
 2122 0050 00000000 		.4byte	.LFB72
 2123 0054 44000000 		.4byte	.LFE72
 2124 0058 00000000 		.4byte	.LFB73
 2125 005c 24000000 		.4byte	.LFE73
 2126 0060 00000000 		.4byte	.LFB74
 2127 0064 4C000000 		.4byte	.LFE74
 2128 0068 00000000 		.4byte	.LFB75
 2129 006c 64000000 		.4byte	.LFE75
 2130 0070 00000000 		.4byte	.LFB76
 2131 0074 44000000 		.4byte	.LFE76
 2132 0078 00000000 		.4byte	.LFB77
 2133 007c 40000000 		.4byte	.LFE77
 2134 0080 00000000 		.4byte	.LFB78
 2135 0084 40000000 		.4byte	.LFE78
 2136 0088 00000000 		.4byte	0
 2137 008c 00000000 		.4byte	0
 2138              		.section	.debug_line,"",%progbits
 2139              	.Ldebug_line0:
 2140 0000 57020000 		.section	.debug_str,"MS",%progbits,1
 2140      02007600 
 2140      00000201 
 2140      FB0E0D00 
 2140      01010101 
 2141              	.LASF55:
 2142 0000 74785F69 		.ascii	"tx_interrupt\000"
 2142      6E746572 
 2142      72757074 
 2142      00
 2143              	.LASF31:
 2144 000d 70726F63 		.ascii	"process_rx_modbus_rtu_message\000"
 2144      6573735F 
 2144      72785F6D 
 2144      6F646275 
 2144      735F7274 
 2145              	.LASF48:
 2146 002b 6D6F6462 		.ascii	"modbus_tx_index\000"
 2146      75735F74 
 2146      785F696E 
 2146      64657800 
 2147              	.LASF22:
 2148 003b 73746174 		.ascii	"status\000"
 2148      757300
 2149              	.LASF21:
 2150 0042 66696C6C 		.ascii	"fill_transmitter\000"
 2150      5F747261 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 47


 2150      6E736D69 
 2150      74746572 
 2150      00
 2151              	.LASF17:
 2152 0053 6765745F 		.ascii	"get_commissioning_address\000"
 2152      636F6D6D 
 2152      69737369 
 2152      6F6E696E 
 2152      675F6164 
 2153              	.LASF20:
 2154 006d 63686563 		.ascii	"check_modbus_address\000"
 2154      6B5F6D6F 
 2154      64627573 
 2154      5F616464 
 2154      72657373 
 2155              	.LASF40:
 2156 0082 7365745F 		.ascii	"set_commissiong_address\000"
 2156      636F6D6D 
 2156      69737369 
 2156      6F6E675F 
 2156      61646472 
 2157              	.LASF23:
 2158 009a 72785F69 		.ascii	"rx_interrupt\000"
 2158      6E746572 
 2158      72757074 
 2158      00
 2159              	.LASF30:
 2160 00a7 6F75745F 		.ascii	"out_count\000"
 2160      636F756E 
 2160      7400
 2161              	.LASF13:
 2162 00b1 646F7562 		.ascii	"double\000"
 2162      6C6500
 2163              	.LASF19:
 2164 00b8 656D7074 		.ascii	"empty_rx_uart\000"
 2164      795F7278 
 2164      5F756172 
 2164      7400
 2165              	.LASF26:
 2166 00c6 696E6974 		.ascii	"init_rx_state\000"
 2166      5F72785F 
 2166      73746174 
 2166      6500
 2167              	.LASF18:
 2168 00d4 72657475 		.ascii	"return_value\000"
 2168      726E5F76 
 2168      616C7565 
 2168      00
 2169              	.LASF12:
 2170 00e1 666C6F61 		.ascii	"float\000"
 2170      7400
 2171              	.LASF38:
 2172 00e7 64617461 		.ascii	"data\000"
 2172      00
 2173              	.LASF32:
 2174 00ec 7365745F 		.ascii	"set_normal_modbus_address\000"
 2174      6E6F726D 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 48


 2174      616C5F6D 
 2174      6F646275 
 2174      735F6164 
 2175              	.LASF1:
 2176 0106 756E7369 		.ascii	"unsigned char\000"
 2176      676E6564 
 2176      20636861 
 2176      7200
 2177              	.LASF49:
 2178 0114 6D6F6462 		.ascii	"modbus_tx_message_count\000"
 2178      75735F74 
 2178      785F6D65 
 2178      73736167 
 2178      655F636F 
 2179              	.LASF47:
 2180 012c 6D6F6462 		.ascii	"modbus_in_buffer\000"
 2180      75735F69 
 2180      6E5F6275 
 2180      66666572 
 2180      00
 2181              	.LASF27:
 2182 013d 696E6974 		.ascii	"init_processing_state\000"
 2182      5F70726F 
 2182      63657373 
 2182      696E675F 
 2182      73746174 
 2183              	.LASF39:
 2184 0153 74656D70 		.ascii	"temp\000"
 2184      00
 2185              	.LASF28:
 2186 0158 64756D70 		.ascii	"dump_rx_uart\000"
 2186      5F72785F 
 2186      75617274 
 2186      00
 2187              	.LASF46:
 2188 0165 6D6F6462 		.ascii	"modbus_rx_index\000"
 2188      75735F72 
 2188      785F696E 
 2188      64657800 
 2189              	.LASF41:
 2190 0175 75617274 		.ascii	"uart_timer_state\000"
 2190      5F74696D 
 2190      65725F73 
 2190      74617465 
 2190      00
 2191              	.LASF24:
 2192 0186 6D6F6462 		.ascii	"modbus_timer_interrupt\000"
 2192      75735F74 
 2192      696D6572 
 2192      5F696E74 
 2192      65727275 
 2193              	.LASF50:
 2194 019d 6D6F6462 		.ascii	"modbus_out_buffer\000"
 2194      75735F6F 
 2194      75745F62 
 2194      75666665 
 2194      7200
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 49


 2195              	.LASF34:
 2196 01af 70617261 		.ascii	"param_1\000"
 2196      6D5F3100 
 2197              	.LASF35:
 2198 01b7 70617261 		.ascii	"param_2\000"
 2198      6D5F3200 
 2199              	.LASF36:
 2200 01bf 70617261 		.ascii	"param_3\000"
 2200      6D5F3300 
 2201              	.LASF45:
 2202 01c7 6D6F6462 		.ascii	"modbus_address\000"
 2202      75735F61 
 2202      64647265 
 2202      737300
 2203              	.LASF33:
 2204 01d6 6C696E6B 		.ascii	"link_id\000"
 2204      5F696400 
 2205              	.LASF10:
 2206 01de 75696E74 		.ascii	"uint16\000"
 2206      313600
 2207              	.LASF43:
 2208 01e5 75617274 		.ascii	"uart_tx_state\000"
 2208      5F74785F 
 2208      73746174 
 2208      6500
 2209              	.LASF11:
 2210 01f3 75696E74 		.ascii	"uint32\000"
 2210      333200
 2211              	.LASF37:
 2212 01fa 6576656E 		.ascii	"event\000"
 2212      7400
 2213              	.LASF52:
 2214 0200 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2214      4320342E 
 2214      392E3320 
 2214      32303135 
 2214      30333033 
 2215 0233 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2215      20726576 
 2215      6973696F 
 2215      6E203232 
 2215      31323230 
 2216 0266 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2216      66756E63 
 2216      74696F6E 
 2216      2D736563 
 2216      74696F6E 
 2217              	.LASF8:
 2218 028e 756E7369 		.ascii	"unsigned int\000"
 2218      676E6564 
 2218      20696E74 
 2218      00
 2219              	.LASF7:
 2220 029b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2220      206C6F6E 
 2220      6720756E 
 2220      7369676E 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 50


 2220      65642069 
 2221              	.LASF56:
 2222 02b2 696E6974 		.ascii	"initialize_modbus_rtu\000"
 2222      69616C69 
 2222      7A655F6D 
 2222      6F646275 
 2222      735F7274 
 2223              	.LASF51:
 2224 02c8 72656164 		.ascii	"read_status_value\000"
 2224      5F737461 
 2224      7475735F 
 2224      76616C75 
 2224      6500
 2225              	.LASF29:
 2226 02da 696E6974 		.ascii	"init_tx_state\000"
 2226      5F74785F 
 2226      73746174 
 2226      6500
 2227              	.LASF5:
 2228 02e8 6C6F6E67 		.ascii	"long unsigned int\000"
 2228      20756E73 
 2228      69676E65 
 2228      6420696E 
 2228      7400
 2229              	.LASF57:
 2230 02fa 6D6F6462 		.ascii	"modbus_address_data\000"
 2230      75735F61 
 2230      64647265 
 2230      73735F64 
 2230      61746100 
 2231              	.LASF15:
 2232 030e 73697A65 		.ascii	"sizetype\000"
 2232      74797065 
 2232      00
 2233              	.LASF3:
 2234 0317 73686F72 		.ascii	"short unsigned int\000"
 2234      7420756E 
 2234      7369676E 
 2234      65642069 
 2234      6E7400
 2235              	.LASF6:
 2236 032a 6C6F6E67 		.ascii	"long long int\000"
 2236      206C6F6E 
 2236      6720696E 
 2236      7400
 2237              	.LASF44:
 2238 0338 72785F69 		.ascii	"rx_interval_count\000"
 2238      6E746572 
 2238      76616C5F 
 2238      636F756E 
 2238      7400
 2239              	.LASF25:
 2240 034a 61626F72 		.ascii	"abort_rx_state\000"
 2240      745F7278 
 2240      5F737461 
 2240      746500
 2241              	.LASF2:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccE19zph.s 			page 51


 2242 0359 73686F72 		.ascii	"short int\000"
 2242      7420696E 
 2242      7400
 2243              	.LASF9:
 2244 0363 75696E74 		.ascii	"uint8\000"
 2244      3800
 2245              	.LASF53:
 2246 0369 7274755F 		.ascii	"rtu_modbus\\modbus_serial_ctrl.c\000"
 2246      6D6F6462 
 2246      75735C6D 
 2246      6F646275 
 2246      735F7365 
 2247              	.LASF42:
 2248 0389 75617274 		.ascii	"uart_rx_state\000"
 2248      5F72785F 
 2248      73746174 
 2248      6500
 2249              	.LASF4:
 2250 0397 6C6F6E67 		.ascii	"long int\000"
 2250      20696E74 
 2250      00
 2251              	.LASF14:
 2252 03a0 63686172 		.ascii	"char\000"
 2252      00
 2253              	.LASF54:
 2254 03a5 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor_4"
 2254      73657273 
 2254      5C676C65 
 2254      6E6E5C4F 
 2254      6E654472 
 2255 03d3 6D5C4D6F 		.ascii	"m\\Moisture_Sensor\\Moisture_Sensor.cydsn\000"
 2255      69737475 
 2255      72655F53 
 2255      656E736F 
 2255      725C4D6F 
 2256              	.LASF0:
 2257 03fb 7369676E 		.ascii	"signed char\000"
 2257      65642063 
 2257      68617200 
 2258              	.LASF16:
 2259 0407 6765745F 		.ascii	"get_modbus_address\000"
 2259      6D6F6462 
 2259      75735F61 
 2259      64647265 
 2259      737300
 2260              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
